// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* onvif.h
   Generated by wsdl2h 2.8.22 from event.wsdl display.wsdl deviceio.wsdl imaging.wsdl ptz.wsdl receiver.wsdl recording.wsdl search.wsdl remotediscovery.wsdl replay.wsdl analytics.wsdl analyticsdevice.wsdl actionengine.wsdl accesscontrol.wsdl doorcontrol.wsdl advancedsecurity.wsdl accessrules.wsdl credential.wsdl schedule.wsdl and typemap.dat
   2015-07-31 01:38:54 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2015 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on onvif.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "wsdd10.h"	// wsdd10 = <http://schemas.xmlsoap.org/ws/2005/04/discovery>
#import "xop.h"	// xop = <http://www.w3.org/2004/08/xop/include>
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

tev = "http://www.onvif.org/ver10/events/wsdl"
wsrfrw = "http://docs.oasis-open.org/wsrf/rw-2"
wsrfr = "http://docs.oasis-open.org/wsrf/r-2"
wsrfbf = "http://docs.oasis-open.org/wsrf/bf-2"
wsnt = "http://docs.oasis-open.org/wsn/b-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"
tls = "http://www.onvif.org/ver10/display/wsdl"
tt = "http://www.onvif.org/ver10/schema"
tmd = "http://www.onvif.org/ver10/deviceIO/wsdl"
trt = "http://www.onvif.org/ver10/media/wsdl"
tds = "http://www.onvif.org/ver10/device/wsdl"
timg = "http://www.onvif.org/ver20/imaging/wsdl"
tptz = "http://www.onvif.org/ver20/ptz/wsdl"
trv = "http://www.onvif.org/ver10/receiver/wsdl"
trc = "http://www.onvif.org/ver10/recording/wsdl"
tse = "http://www.onvif.org/ver10/search/wsdl"
tdn = "http://www.onvif.org/ver10/network/wsdl"
trp = "http://www.onvif.org/ver10/replay/wsdl"
tan = "http://www.onvif.org/ver20/analytics/wsdl"
tad = "http://www.onvif.org/ver10/analyticsdevice/wsdl"
ns1 = "http://www.onvif.org/ver10/actionengine/wsdl"
ns2 = "http://www.onvif.org/ver10/accesscontrol/wsdl"
ns3 = "http://www.onvif.org/ver10/pacs"
ns4 = "http://www.onvif.org/ver10/doorcontrol/wsdl"
ns5 = "http://www.onvif.org/ver10/advancedsecurity/wsdl"
ns6 = "http://www.onvif.org/ver10/accessrules/wsdl"
ns7 = "http://www.onvif.org/ver10/credential/wsdl"
ns8 = "http://www.onvif.org/ver10/schedule/wsdl"

*/

#define SOAP_NAMESPACE_OF_tev	"http://www.onvif.org/ver10/events/wsdl"
//gsoap tev   schema namespace:	http://www.onvif.org/ver10/events/wsdl
//gsoap tev   schema elementForm:	qualified
//gsoap tev   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfrw	"http://docs.oasis-open.org/wsrf/rw-2"
//gsoap wsrfrw schema namespace:	http://docs.oasis-open.org/wsrf/rw-2
//gsoap wsrfrw schema elementForm:	qualified
//gsoap wsrfrw schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfr	"http://docs.oasis-open.org/wsrf/r-2"
//gsoap wsrfr schema namespace:	http://docs.oasis-open.org/wsrf/r-2
//gsoap wsrfr schema elementForm:	qualified
//gsoap wsrfr schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsnt	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnt  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnt  schema elementForm:	qualified
//gsoap wsnt  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tls	"http://www.onvif.org/ver10/display/wsdl"
//gsoap tls   schema namespace:	http://www.onvif.org/ver10/display/wsdl
//gsoap tls   schema elementForm:	qualified
//gsoap tls   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tt	"http://www.onvif.org/ver10/schema"
//gsoap tt    schema namespace:	http://www.onvif.org/ver10/schema
//gsoap tt    schema elementForm:	qualified
//gsoap tt    schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tmd	"http://www.onvif.org/ver10/deviceIO/wsdl"
//gsoap tmd   schema namespace:	http://www.onvif.org/ver10/deviceIO/wsdl
//gsoap tmd   schema elementForm:	qualified
//gsoap tmd   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_trt	"http://www.onvif.org/ver10/media/wsdl"
//gsoap trt   schema namespace:	http://www.onvif.org/ver10/media/wsdl
//gsoap trt   schema elementForm:	qualified
//gsoap trt   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tds	"http://www.onvif.org/ver10/device/wsdl"
//gsoap tds   schema namespace:	http://www.onvif.org/ver10/device/wsdl
//gsoap tds   schema elementForm:	qualified
//gsoap tds   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_timg	"http://www.onvif.org/ver20/imaging/wsdl"
//gsoap timg  schema namespace:	http://www.onvif.org/ver20/imaging/wsdl
//gsoap timg  schema elementForm:	qualified
//gsoap timg  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tptz	"http://www.onvif.org/ver20/ptz/wsdl"
//gsoap tptz  schema namespace:	http://www.onvif.org/ver20/ptz/wsdl
//gsoap tptz  schema elementForm:	qualified
//gsoap tptz  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_trv	"http://www.onvif.org/ver10/receiver/wsdl"
//gsoap trv   schema namespace:	http://www.onvif.org/ver10/receiver/wsdl
//gsoap trv   schema elementForm:	qualified
//gsoap trv   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_trc	"http://www.onvif.org/ver10/recording/wsdl"
//gsoap trc   schema namespace:	http://www.onvif.org/ver10/recording/wsdl
//gsoap trc   schema elementForm:	qualified
//gsoap trc   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tse	"http://www.onvif.org/ver10/search/wsdl"
//gsoap tse   schema namespace:	http://www.onvif.org/ver10/search/wsdl
//gsoap tse   schema elementForm:	qualified
//gsoap tse   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tdn	"http://www.onvif.org/ver10/network/wsdl"
//gsoap tdn   schema namespace:	http://www.onvif.org/ver10/network/wsdl
//gsoap tdn   schema elementForm:	qualified
//gsoap tdn   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_trp	"http://www.onvif.org/ver10/replay/wsdl"
//gsoap trp   schema namespace:	http://www.onvif.org/ver10/replay/wsdl
//gsoap trp   schema elementForm:	qualified
//gsoap trp   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tan	"http://www.onvif.org/ver20/analytics/wsdl"
//gsoap tan   schema namespace:	http://www.onvif.org/ver20/analytics/wsdl
//gsoap tan   schema elementForm:	qualified
//gsoap tan   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tad	"http://www.onvif.org/ver10/analyticsdevice/wsdl"
//gsoap tad   schema namespace:	http://www.onvif.org/ver10/analyticsdevice/wsdl
//gsoap tad   schema elementForm:	qualified
//gsoap tad   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns1	"http://www.onvif.org/ver10/actionengine/wsdl"
//gsoap ns1   schema namespace:	http://www.onvif.org/ver10/actionengine/wsdl
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns2	"http://www.onvif.org/ver10/accesscontrol/wsdl"
//gsoap ns2   schema namespace:	http://www.onvif.org/ver10/accesscontrol/wsdl
//gsoap ns2   schema elementForm:	qualified
//gsoap ns2   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns3	"http://www.onvif.org/ver10/pacs"
//gsoap ns3   schema namespace:	http://www.onvif.org/ver10/pacs
//gsoap ns3   schema elementForm:	qualified
//gsoap ns3   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns4	"http://www.onvif.org/ver10/doorcontrol/wsdl"
//gsoap ns4   schema namespace:	http://www.onvif.org/ver10/doorcontrol/wsdl
//gsoap ns4   schema elementForm:	qualified
//gsoap ns4   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns5	"http://www.onvif.org/ver10/advancedsecurity/wsdl"
//gsoap ns5   schema namespace:	http://www.onvif.org/ver10/advancedsecurity/wsdl
//gsoap ns5   schema elementForm:	qualified
//gsoap ns5   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns6	"http://www.onvif.org/ver10/accessrules/wsdl"
//gsoap ns6   schema namespace:	http://www.onvif.org/ver10/accessrules/wsdl
//gsoap ns6   schema elementForm:	qualified
//gsoap ns6   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns7	"http://www.onvif.org/ver10/credential/wsdl"
//gsoap ns7   schema namespace:	http://www.onvif.org/ver10/credential/wsdl
//gsoap ns7   schema elementForm:	qualified
//gsoap ns7   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns8	"http://www.onvif.org/ver10/schedule/wsdl"
//gsoap ns8   schema namespace:	http://www.onvif.org/ver10/schedule/wsdl
//gsoap ns8   schema elementForm:	qualified
//gsoap ns8   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD type "SOAP-ENV:Envelope".
struct SOAP_ENV__Envelope { struct SOAP_ENV__Header *SOAP_ENV__Header; _XML SOAP_ENV__Body; };

/// Built-in XSD type "xs:base64Binary".
struct xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: non-NULL for DIMEM/MIME/MTOM XOP attachments only
};

/// Built-in XSD type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };

/// Built-in XSD type "xs:duration".
#import "custom/duration.h"

/// Built-in XSD type "xs:hexBinary".
struct xsd__hexBinary { unsigned char *__ptr; int __size; };

// Imported XSD type ""http://www.w3.org/2005/08/addressing":EndpointReferenceType" defined by wsa5__EndpointReferenceType.
/// Primitive built-in type "xs:ID".
typedef char* xsd__ID;

/// Primitive built-in type "xs:NCName".
typedef char* xsd__NCName;

/// Primitive built-in type "xs:anySimpleType".
typedef char* xsd__anySimpleType;

/// Primitive built-in type "xs:anyURI".
typedef char* xsd__anyURI;

/// Primitive built-in type "xs:integer".
typedef char* xsd__integer;

/// Primitive built-in type "xs:nonNegativeInteger".
typedef char* xsd__nonNegativeInteger;

/// Primitive built-in type "xs:positiveInteger".
typedef char* xsd__positiveInteger;

/// Primitive built-in type "xs:time".
typedef char* xsd__time;

/// Primitive built-in type "xs:token".
typedef char* xsd__token;

// Imported element ""http://www.w3.org/2004/08/xop/include":Include" declared as _xop__Include.
/// Built-in attribute "xml:lang".
typedef char* _xml__lang;



/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Union of values from member types "xsd:dateTime xsd:duration".
typedef char* wsnt__AbsoluteOrRelativeTimeType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/display/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":IntAttrList is a simpleType containing a whitespace separated list of xs:int.
///
typedef char* tt__IntAttrList;

/// @brief "http://www.onvif.org/ver10/schema":FloatAttrList is a simpleType containing a whitespace separated list of xs:float.
///
typedef char* tt__FloatAttrList;

/// @brief "http://www.onvif.org/ver10/schema":StringAttrList is a simpleType containing a whitespace separated list of xs:string.
///
typedef char* tt__StringAttrList;

/// @brief "http://www.onvif.org/ver10/schema":ReferenceTokenList is a simpleType containing a whitespace separated list of "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef char* tt__ReferenceTokenList;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":DelayTimes is a simpleType containing a whitespace separated list of xs:float.
///
typedef char* tmd__DelayTimes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/media/wsdl":EncodingTypes is a simpleType containing a whitespace separated list of xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.
/// </BLOCKQUOTE></PRE>
typedef char* trt__EncodingTypes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes is a simpleType containing a whitespace separated list of xs:int.
///
typedef char* tds__EAPMethodTypes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/recording/wsdl                                *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/recording/wsdl":EncodingTypes is a simpleType containing a whitespace separated list of xs:string.
///
typedef char* trc__EncodingTypes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/replay/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/analyticsdevice/wsdl                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/actionengine/wsdl                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/accesscontrol/wsdl                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/pacs                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/doorcontrol/wsdl                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/advancedsecurity/wsdl                         *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":RSAKeyLengths is a simpleType containing a whitespace separated list of xs:nonNegativeInteger.
///
/// <PRE><BLOCKQUOTE>
///   A list of RSA key lenghts in bits.
/// </BLOCKQUOTE></PRE>
typedef char* ns5__RSAKeyLengths;

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":X509Versions is a simpleType containing a whitespace separated list of xs:int.
///
/// <PRE><BLOCKQUOTE>
///   A list of X.509 versions.
/// </BLOCKQUOTE></PRE>
typedef char* ns5__X509Versions;

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":TLSVersions is a simpleType containing a whitespace separated list of xs:string.
///
/// <PRE><BLOCKQUOTE>
///   A list of TLS versions.
/// </BLOCKQUOTE></PRE>
typedef char* ns5__TLSVersions;

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":PasswordBasedEncryptionAlgorithms is a simpleType containing a whitespace separated list of xs:string.
///
/// <PRE><BLOCKQUOTE>
///   A list of password based encryption algorithms.
/// </BLOCKQUOTE></PRE>
typedef char* ns5__PasswordBasedEncryptionAlgorithms;

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":PasswordBasedMACAlgorithms is a simpleType containing a whitespace separated list of xs:string.
///
/// <PRE><BLOCKQUOTE>
///   A list of password based MAC algorithms.
/// </BLOCKQUOTE></PRE>
typedef char* ns5__PasswordBasedMACAlgorithms;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/accessrules/wsdl                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/credential/wsdl                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schedule/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is a simpleType restriction of XSD type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   TopicPathExpression ::= TopicPath ( '|' TopicPath )* TopicPath ::= RootTopic ChildTopicExpression* RootTopic ::= NamespacePrefix? ('//')? (NCName | '*') NamespacePrefix ::= NCName ':' ChildTopicExpression ::= '/' '/'? (QName | NCName | '*'| '.')
/// </BLOCKQUOTE></PRE>
/// Content pattern is "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*".
typedef xsd__token wstop__FullTopicExpression "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*";

/// @brief "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is a simpleType restriction of XSD type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   ConcreteTopicPath ::= RootTopic ChildTopic* RootTopic ::= QName ChildTopic ::= '/' (QName | NCName)
/// </BLOCKQUOTE></PRE>
/// Content pattern is "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*".
typedef xsd__token wstop__ConcreteTopicExpression "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*";

/// @brief "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is a simpleType restriction of XSD type xs:QName.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   RootTopic ::= QName
/// </BLOCKQUOTE></PRE>
typedef _QName wstop__SimpleTopicExpression;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/display/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier for a physical or logical resource.
///   Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class.
///   Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
typedef char* tt__ReferenceToken:64;

/// @brief "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
typedef char* tt__Name:64;

/// @brief "http://www.onvif.org/ver10/schema":RotateMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RotateMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RotateMode
{
	tt__RotateMode__OFF,	///< xs:string value="OFF"
	tt__RotateMode__ON,	///< xs:string value="ON"
	tt__RotateMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoding is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__VideoEncoding__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__VideoEncoding
{
	tt__VideoEncoding__JPEG,	///< xs:string value="JPEG"
	tt__VideoEncoding__MPEG4,	///< xs:string value="MPEG4"
	tt__VideoEncoding__H264,	///< xs:string value="H264"
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Profile is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Mpeg4Profile__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Mpeg4Profile
{
	tt__Mpeg4Profile__SP,	///< xs:string value="SP"
	tt__Mpeg4Profile__ASP,	///< xs:string value="ASP"
};

/// @brief "http://www.onvif.org/ver10/schema":H264Profile is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__H264Profile__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__H264Profile
{
	tt__H264Profile__Baseline,	///< xs:string value="Baseline"
	tt__H264Profile__Main,	///< xs:string value="Main"
	tt__H264Profile__Extended,	///< xs:string value="Extended"
	tt__H264Profile__High,	///< xs:string value="High"
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoding is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__AudioEncoding__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__AudioEncoding
{
	tt__AudioEncoding__G711,	///< xs:string value="G711"
	tt__AudioEncoding__G726,	///< xs:string value="G726"
	tt__AudioEncoding__AAC,	///< xs:string value="AAC"
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataCompressionType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__MetadataCompressionType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__MetadataCompressionType
{
	tt__MetadataCompressionType__None,	///< xs:string value="None"
	tt__MetadataCompressionType__GZIP,	///< xs:string value="GZIP"
	tt__MetadataCompressionType__EXI,	///< xs:string value="EXI"
};

/// @brief "http://www.onvif.org/ver10/schema":StreamType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__StreamType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__StreamType
{
	tt__StreamType__RTP_Unicast,	///< xs:string value="RTP-Unicast"
	tt__StreamType__RTP_Multicast,	///< xs:string value="RTP-Multicast"
};

/// @brief "http://www.onvif.org/ver10/schema":TransportProtocol is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__TransportProtocol__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__TransportProtocol
{
	tt__TransportProtocol__UDP,	///< xs:string value="UDP"
	tt__TransportProtocol__TCP,	///< xs:string value="TCP"
	tt__TransportProtocol__RTSP,	///< xs:string value="RTSP"
	tt__TransportProtocol__HTTP,	///< xs:string value="HTTP"
};

/// @brief "http://www.onvif.org/ver10/schema":ScopeDefinition is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ScopeDefinition__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ScopeDefinition
{
	tt__ScopeDefinition__Fixed,	///< xs:string value="Fixed"
	tt__ScopeDefinition__Configurable,	///< xs:string value="Configurable"
};

/// @brief "http://www.onvif.org/ver10/schema":DiscoveryMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__DiscoveryMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__DiscoveryMode
{
	tt__DiscoveryMode__Discoverable,	///< xs:string value="Discoverable"
	tt__DiscoveryMode__NonDiscoverable,	///< xs:string value="NonDiscoverable"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority is a simpleType restriction of XSD type xs:integer.
///
/// Value range is [0..31].
typedef xsd__integer tt__NetworkInterfaceConfigPriority;

/// @brief "http://www.onvif.org/ver10/schema":Duplex is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Duplex__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Duplex
{
	tt__Duplex__Full,	///< xs:string value="Full"
	tt__Duplex__Half,	///< xs:string value="Half"
};

/// @brief "http://www.onvif.org/ver10/schema":IANA-IfTypes is a simpleType restriction of XSD type xs:int.
///
/// <PRE><BLOCKQUOTE>
///   For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.
/// </BLOCKQUOTE></PRE>
typedef int tt__IANA_IfTypes;

/// @brief "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IPv6DHCPConfiguration__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IPv6DHCPConfiguration
{
	tt__IPv6DHCPConfiguration__Auto,	///< xs:string value="Auto"
	tt__IPv6DHCPConfiguration__Stateful,	///< xs:string value="Stateful"
	tt__IPv6DHCPConfiguration__Stateless,	///< xs:string value="Stateless"
	tt__IPv6DHCPConfiguration__Off,	///< xs:string value="Off"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkProtocolType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__NetworkProtocolType
{
	tt__NetworkProtocolType__HTTP,	///< xs:string value="HTTP"
	tt__NetworkProtocolType__HTTPS,	///< xs:string value="HTTPS"
	tt__NetworkProtocolType__RTSP,	///< xs:string value="RTSP"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkHostType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__NetworkHostType
{
	tt__NetworkHostType__IPv4,	///< xs:string value="IPv4"
	tt__NetworkHostType__IPv6,	///< xs:string value="IPv6"
	tt__NetworkHostType__DNS,	///< xs:string value="DNS"
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Address is a simpleType restriction of XSD type xs:token.
///
typedef xsd__token tt__IPv4Address;

/// @brief "http://www.onvif.org/ver10/schema":IPv6Address is a simpleType restriction of XSD type xs:token.
///
typedef xsd__token tt__IPv6Address;

/// @brief "http://www.onvif.org/ver10/schema":HwAddress is a simpleType restriction of XSD type xs:token.
///
typedef xsd__token tt__HwAddress;

/// @brief "http://www.onvif.org/ver10/schema":IPType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IPType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IPType
{
	tt__IPType__IPv4,	///< xs:string value="IPv4"
	tt__IPType__IPv6,	///< xs:string value="IPv6"
};

/// @brief "http://www.onvif.org/ver10/schema":DNSName is a simpleType restriction of XSD type xs:token.
///
typedef xsd__token tt__DNSName;

/// @brief "http://www.onvif.org/ver10/schema":Domain is a simpleType restriction of XSD type xs:token.
///
typedef xsd__token tt__Domain;

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IPAddressFilterType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IPAddressFilterType
{
	tt__IPAddressFilterType__Allow,	///< xs:string value="Allow"
	tt__IPAddressFilterType__Deny,	///< xs:string value="Deny"
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__DynamicDNSType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__DynamicDNSType
{
	tt__DynamicDNSType__NoUpdate,	///< xs:string value="NoUpdate"
	tt__DynamicDNSType__ClientUpdates,	///< xs:string value="ClientUpdates"
	tt__DynamicDNSType__ServerUpdates,	///< xs:string value="ServerUpdates"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SSIDType is a simpleType restriction of XSD type xs:hexBinary.
///
/// Length of this string is 1..32.
typedef struct xsd__hexBinary tt__Dot11SSIDType 1:32;

/// @brief "http://www.onvif.org/ver10/schema":Dot11StationMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11StationMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11StationMode
{
	tt__Dot11StationMode__Ad_hoc,	///< xs:string value="Ad-hoc"
	tt__Dot11StationMode__Infrastructure,	///< xs:string value="Infrastructure"
	tt__Dot11StationMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SecurityMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11SecurityMode
{
	tt__Dot11SecurityMode__None,	///< xs:string value="None"
	tt__Dot11SecurityMode__WEP,	///< xs:string value="WEP"
	tt__Dot11SecurityMode__PSK,	///< xs:string value="PSK"
	tt__Dot11SecurityMode__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11SecurityMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Cipher is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11Cipher__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11Cipher
{
	tt__Dot11Cipher__CCMP,	///< xs:string value="CCMP"
	tt__Dot11Cipher__TKIP,	///< xs:string value="TKIP"
	tt__Dot11Cipher__Any,	///< xs:string value="Any"
	tt__Dot11Cipher__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSK is a simpleType restriction of XSD type xs:hexBinary.
///
/// Length of this string is 32.
typedef struct xsd__hexBinary tt__Dot11PSK;

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase is a simpleType restriction of XSD type xs:string.
///
/// Content pattern is "[ -~]{8,63}".
typedef char* tt__Dot11PSKPassphrase "[ -~]{8,63}";

/// @brief "http://www.onvif.org/ver10/schema":Dot11SignalStrength is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SignalStrength__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11SignalStrength
{
	tt__Dot11SignalStrength__None,	///< xs:string value="None"
	tt__Dot11SignalStrength__Very_x0020Bad,	///< xs:string value="Very Bad"
	tt__Dot11SignalStrength__Bad,	///< xs:string value="Bad"
	tt__Dot11SignalStrength__Good,	///< xs:string value="Good"
	tt__Dot11SignalStrength__Very_x0020Good,	///< xs:string value="Very Good"
	tt__Dot11SignalStrength__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AuthAndMangementSuite is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11AuthAndMangementSuite__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11AuthAndMangementSuite
{
	tt__Dot11AuthAndMangementSuite__None,	///< xs:string value="None"
	tt__Dot11AuthAndMangementSuite__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11AuthAndMangementSuite__PSK,	///< xs:string value="PSK"
	tt__Dot11AuthAndMangementSuite__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilityCategory is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__CapabilityCategory__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__CapabilityCategory
{
	tt__CapabilityCategory__All,	///< xs:string value="All"
	tt__CapabilityCategory__Analytics,	///< xs:string value="Analytics"
	tt__CapabilityCategory__Device,	///< xs:string value="Device"
	tt__CapabilityCategory__Events,	///< xs:string value="Events"
	tt__CapabilityCategory__Imaging,	///< xs:string value="Imaging"
	tt__CapabilityCategory__Media,	///< xs:string value="Media"
	tt__CapabilityCategory__PTZ,	///< xs:string value="PTZ"
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available system log modes.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__SystemLogType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SystemLogType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a system log is requested.
/// </BLOCKQUOTE></PRE>
	tt__SystemLogType__System,	///< xs:string value="System"
/// <PRE><BLOCKQUOTE>
///   Indicates that a access log is requested.
/// </BLOCKQUOTE></PRE>
	tt__SystemLogType__Access,	///< xs:string value="Access"
};

/// @brief "http://www.onvif.org/ver10/schema":FactoryDefaultType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available factory default modes.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__FactoryDefaultType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__FactoryDefaultType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a hard factory default is requested.
/// </BLOCKQUOTE></PRE>
	tt__FactoryDefaultType__Hard,	///< xs:string value="Hard"
/// <PRE><BLOCKQUOTE>
///   Indicates that a soft factory default is requested.
/// </BLOCKQUOTE></PRE>
	tt__FactoryDefaultType__Soft,	///< xs:string value="Soft"
};

/// @brief "http://www.onvif.org/ver10/schema":SetDateTimeType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__SetDateTimeType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SetDateTimeType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set manually.
/// </BLOCKQUOTE></PRE>
	tt__SetDateTimeType__Manual,	///< xs:string value="Manual"
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set through NTP
/// </BLOCKQUOTE></PRE>
	tt__SetDateTimeType__NTP,	///< xs:string value="NTP"
};

/// @brief "http://www.onvif.org/ver10/schema":UserLevel is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__UserLevel__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__UserLevel
{
	tt__UserLevel__Administrator,	///< xs:string value="Administrator"
	tt__UserLevel__Operator,	///< xs:string value="Operator"
	tt__UserLevel__User,	///< xs:string value="User"
	tt__UserLevel__Anonymous,	///< xs:string value="Anonymous"
	tt__UserLevel__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayLogicalState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayLogicalState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RelayLogicalState
{
	tt__RelayLogicalState__active,	///< xs:string value="active"
	tt__RelayLogicalState__inactive,	///< xs:string value="inactive"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayIdleState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayIdleState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RelayIdleState
{
	tt__RelayIdleState__closed,	///< xs:string value="closed"
	tt__RelayIdleState__open,	///< xs:string value="open"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RelayMode
{
	tt__RelayMode__Monostable,	///< xs:string value="Monostable"
	tt__RelayMode__Bistable,	///< xs:string value="Bistable"
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__EFlipMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__EFlipMode
{
	tt__EFlipMode__OFF,	///< xs:string value="OFF"
	tt__EFlipMode__ON,	///< xs:string value="ON"
	tt__EFlipMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ReverseMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ReverseMode
{
	tt__ReverseMode__OFF,	///< xs:string value="OFF"
	tt__ReverseMode__ON,	///< xs:string value="ON"
	tt__ReverseMode__AUTO,	///< xs:string value="AUTO"
	tt__ReverseMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":AuxiliaryData is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..128.
typedef char* tt__AuxiliaryData:128;

/// @brief "http://www.onvif.org/ver10/schema":MoveStatus is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__MoveStatus__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__MoveStatus
{
	tt__MoveStatus__IDLE,	///< xs:string value="IDLE"
	tt__MoveStatus__MOVING,	///< xs:string value="MOVING"
	tt__MoveStatus__UNKNOWN,	///< xs:string value="UNKNOWN"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PTZPresetTourState
{
	tt__PTZPresetTourState__Idle,	///< xs:string value="Idle"
	tt__PTZPresetTourState__Touring,	///< xs:string value="Touring"
	tt__PTZPresetTourState__Paused,	///< xs:string value="Paused"
	tt__PTZPresetTourState__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourDirection is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourDirection__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PTZPresetTourDirection
{
	tt__PTZPresetTourDirection__Forward,	///< xs:string value="Forward"
	tt__PTZPresetTourDirection__Backward,	///< xs:string value="Backward"
	tt__PTZPresetTourDirection__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOperation is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourOperation__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PTZPresetTourOperation
{
	tt__PTZPresetTourOperation__Start,	///< xs:string value="Start"
	tt__PTZPresetTourOperation__Stop,	///< xs:string value="Stop"
	tt__PTZPresetTourOperation__Pause,	///< xs:string value="Pause"
	tt__PTZPresetTourOperation__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":AutoFocusMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__AutoFocusMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__AutoFocusMode
{
	tt__AutoFocusMode__AUTO,	///< xs:string value="AUTO"
	tt__AutoFocusMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__WideDynamicMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__WideDynamicMode
{
	tt__WideDynamicMode__OFF,	///< xs:string value="OFF"
	tt__WideDynamicMode__ON,	///< xs:string value="ON"
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationMode is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available backlight compenstation modes.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__BacklightCompensationMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__BacklightCompensationMode
{
/// <PRE><BLOCKQUOTE>
///   Backlight compensation is disabled.
/// </BLOCKQUOTE></PRE>
	tt__BacklightCompensationMode__OFF,	///< xs:string value="OFF"
/// <PRE><BLOCKQUOTE>
///   Backlight compensation is enabled.
/// </BLOCKQUOTE></PRE>
	tt__BacklightCompensationMode__ON,	///< xs:string value="ON"
};

/// @brief "http://www.onvif.org/ver10/schema":ExposurePriority is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ExposurePriority__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ExposurePriority
{
	tt__ExposurePriority__LowNoise,	///< xs:string value="LowNoise"
	tt__ExposurePriority__FrameRate,	///< xs:string value="FrameRate"
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ExposureMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ExposureMode
{
	tt__ExposureMode__AUTO,	///< xs:string value="AUTO"
	tt__ExposureMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":Enabled is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Enabled__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Enabled
{
	tt__Enabled__ENABLED,	///< xs:string value="ENABLED"
	tt__Enabled__DISABLED,	///< xs:string value="DISABLED"
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__WhiteBalanceMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__WhiteBalanceMode
{
	tt__WhiteBalanceMode__AUTO,	///< xs:string value="AUTO"
	tt__WhiteBalanceMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IrCutFilterMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IrCutFilterMode
{
	tt__IrCutFilterMode__ON,	///< xs:string value="ON"
	tt__IrCutFilterMode__OFF,	///< xs:string value="OFF"
	tt__IrCutFilterMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ImageStabilizationMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ImageStabilizationMode
{
	tt__ImageStabilizationMode__OFF,	///< xs:string value="OFF"
	tt__ImageStabilizationMode__ON,	///< xs:string value="ON"
	tt__ImageStabilizationMode__AUTO,	///< xs:string value="AUTO"
	tt__ImageStabilizationMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoBoundaryType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IrCutFilterAutoBoundaryType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IrCutFilterAutoBoundaryType
{
	tt__IrCutFilterAutoBoundaryType__Common,	///< xs:string value="Common"
	tt__IrCutFilterAutoBoundaryType__ToOn,	///< xs:string value="ToOn"
	tt__IrCutFilterAutoBoundaryType__ToOff,	///< xs:string value="ToOff"
	tt__IrCutFilterAutoBoundaryType__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ToneCompensationMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ToneCompensationMode
{
	tt__ToneCompensationMode__OFF,	///< xs:string value="OFF"
	tt__ToneCompensationMode__ON,	///< xs:string value="ON"
	tt__ToneCompensationMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__DefoggingMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__DefoggingMode
{
	tt__DefoggingMode__OFF,	///< xs:string value="OFF"
	tt__DefoggingMode__ON,	///< xs:string value="ON"
	tt__DefoggingMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":TopicNamespaceLocation is a simpleType restriction of XSD type xs:anyURI.
///
typedef xsd__anyURI tt__TopicNamespaceLocation;

/// @brief "http://www.onvif.org/ver10/schema":PropertyOperation is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PropertyOperation__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PropertyOperation
{
	tt__PropertyOperation__Initialized,	///< xs:string value="Initialized"
	tt__PropertyOperation__Deleted,	///< xs:string value="Deleted"
	tt__PropertyOperation__Changed,	///< xs:string value="Changed"
};

/// @brief "http://www.onvif.org/ver10/schema":Direction is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Direction__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Direction
{
	tt__Direction__Left,	///< xs:string value="Left"
	tt__Direction__Right,	///< xs:string value="Right"
	tt__Direction__Any,	///< xs:string value="Any"
};

/// @brief "http://www.onvif.org/ver10/schema":ClassType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ClassType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ClassType
{
	tt__ClassType__Animal,	///< xs:string value="Animal"
	tt__ClassType__Face,	///< xs:string value="Face"
	tt__ClassType__Human,	///< xs:string value="Human"
	tt__ClassType__Vehical,	///< xs:string value="Vehical"
	tt__ClassType__Other,	///< xs:string value="Other"
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverMode is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Specifies a receiver connection mode.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__ReceiverMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ReceiverMode
{
/// <PRE><BLOCKQUOTE>
///   The receiver connects on demand, as required by consumers of the media streams.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__AutoConnect,	///< xs:string value="AutoConnect"
/// <PRE><BLOCKQUOTE>
///   The receiver attempts to maintain a persistent connection to the configured endpoint.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__AlwaysConnect,	///< xs:string value="AlwaysConnect"
/// <PRE><BLOCKQUOTE>
///   The receiver does not attempt to connect.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__NeverConnect,	///< xs:string value="NeverConnect"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverState is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Specifies the current connection state of the receiver.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__ReceiverState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ReceiverState
{
/// <PRE><BLOCKQUOTE>
///   The receiver is not connected.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__NotConnected,	///< xs:string value="NotConnected"
/// <PRE><BLOCKQUOTE>
///   The receiver is attempting to connect.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__Connecting,	///< xs:string value="Connecting"
/// <PRE><BLOCKQUOTE>
///   The receiver is connected.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__Connected,	///< xs:string value="Connected"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":Description is a simpleType restriction of XSD type xs:string.
///
typedef char* tt__Description;

/// @brief "http://www.onvif.org/ver10/schema":XPathExpression is a simpleType restriction of XSD type xs:string.
///
typedef char* tt__XPathExpression;

/// @brief "http://www.onvif.org/ver10/schema":SearchState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__SearchState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SearchState
{
/// <PRE><BLOCKQUOTE>
///   The search is queued and not yet started.
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Queued,	///< xs:string value="Queued"
/// <PRE><BLOCKQUOTE>
///   The search is underway and not yet completed.
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Searching,	///< xs:string value="Searching"
/// <PRE><BLOCKQUOTE>
///   The search has been completed and no new results will be found.
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Completed,	///< xs:string value="Completed"
/// <PRE><BLOCKQUOTE>
///   The state of the search is unknown. (This is not a valid response from GetSearchState.)
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingStatus is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RecordingStatus__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RecordingStatus
{
	tt__RecordingStatus__Initiated,	///< xs:string value="Initiated"
	tt__RecordingStatus__Recording,	///< xs:string value="Recording"
	tt__RecordingStatus__Stopped,	///< xs:string value="Stopped"
	tt__RecordingStatus__Removing,	///< xs:string value="Removing"
	tt__RecordingStatus__Removed,	///< xs:string value="Removed"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__RecordingStatus__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":TrackType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__TrackType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__TrackType
{
	tt__TrackType__Video,	///< xs:string value="Video"
	tt__TrackType__Audio,	///< xs:string value="Audio"
	tt__TrackType__Metadata,	///< xs:string value="Metadata"
/// <PRE><BLOCKQUOTE>
///   Placeholder for future extension.
/// </BLOCKQUOTE></PRE>
	tt__TrackType__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobMode is a simpleType restriction of XSD type xs:string.
///
typedef char* tt__RecordingJobMode;

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobState is a simpleType restriction of XSD type xs:string.
///
typedef char* tt__RecordingJobState;

/// @brief "http://www.onvif.org/ver10/schema":ModeOfOperation is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ModeOfOperation__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ModeOfOperation
{
	tt__ModeOfOperation__Idle,	///< xs:string value="Idle"
	tt__ModeOfOperation__Active,	///< xs:string value="Active"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__ModeOfOperation__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   AudioClassType acceptable values are;
///   gun_shot, scream, glass_breaking, tire_screech
/// </BLOCKQUOTE></PRE>
typedef char* tt__AudioClassType;

/// @brief "http://www.onvif.org/ver10/schema":OSDType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__OSDType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__OSDType
{
	tt__OSDType__Text,	///< xs:string value="Text"
	tt__OSDType__Image,	///< xs:string value="Image"
	tt__OSDType__Extended,	///< xs:string value="Extended"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   The type of serial port.Generic can be signaled as a vendor specific serial port type.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tmd__SerialPortType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tmd__SerialPortType
{
	tmd__SerialPortType__RS232,	///< xs:string value="RS232"
	tmd__SerialPortType__RS422HalfDuplex,	///< xs:string value="RS422HalfDuplex"
	tmd__SerialPortType__RS422FullDuplex,	///< xs:string value="RS422FullDuplex"
	tmd__SerialPortType__RS485HalfDuplex,	///< xs:string value="RS485HalfDuplex"
	tmd__SerialPortType__RS485FullDuplex,	///< xs:string value="RS485FullDuplex"
	tmd__SerialPortType__Generic,	///< xs:string value="Generic"
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBit is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   The parity for the data error detection.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tmd__ParityBit__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tmd__ParityBit
{
	tmd__ParityBit__None,	///< xs:string value="None"
	tmd__ParityBit__Even,	///< xs:string value="Even"
	tmd__ParityBit__Odd,	///< xs:string value="Odd"
	tmd__ParityBit__Mark,	///< xs:string value="Mark"
	tmd__ParityBit__Space,	///< xs:string value="Space"
	tmd__ParityBit__Extended,	///< xs:string value="Extended"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tds__StorageType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tds__StorageType
{
/// <PRE><BLOCKQUOTE>
///   NFS protocol
/// </BLOCKQUOTE></PRE>
	tds__StorageType__NFS,	///< xs:string value="NFS"
/// <PRE><BLOCKQUOTE>
///   CIFS protocol
/// </BLOCKQUOTE></PRE>
	tds__StorageType__CIFS,	///< xs:string value="CIFS"
/// <PRE><BLOCKQUOTE>
///   CDMI protocol
/// </BLOCKQUOTE></PRE>
	tds__StorageType__CDMI,	///< xs:string value="CDMI"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/recording/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/replay/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/analyticsdevice/wsdl                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/actionengine/wsdl                             *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":AddressFormatType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "ns1__AddressFormatType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__AddressFormatType
{
	ns1__AddressFormatType__hostname,	///< xs:string value="hostname"
	ns1__AddressFormatType__ipv4,	///< xs:string value="ipv4"
	ns1__AddressFormatType__ipv6,	///< xs:string value="ipv6"
	ns1__AddressFormatType__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":EMailAuthenticationMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "ns1__EMailAuthenticationMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__EMailAuthenticationMode
{
	ns1__EMailAuthenticationMode__none,	///< xs:string value="none"
	ns1__EMailAuthenticationMode__SMTP,	///< xs:string value="SMTP"
	ns1__EMailAuthenticationMode__POPSMTP,	///< xs:string value="POPSMTP"
	ns1__EMailAuthenticationMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":HttpProtocolType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "ns1__HttpProtocolType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__HttpProtocolType
{
	ns1__HttpProtocolType__http,	///< xs:string value="http"
	ns1__HttpProtocolType__https,	///< xs:string value="https"
	ns1__HttpProtocolType__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":HttpAuthenticationMethodType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "ns1__HttpAuthenticationMethodType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__HttpAuthenticationMethodType
{
	ns1__HttpAuthenticationMethodType__none,	///< xs:string value="none"
	ns1__HttpAuthenticationMethodType__MD5Digest,	///< xs:string value="MD5Digest"
	ns1__HttpAuthenticationMethodType__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":FileSuffixType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "ns1__FileSuffixType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__FileSuffixType
{
	ns1__FileSuffixType__none,	///< xs:string value="none"
	ns1__FileSuffixType__sequence,	///< xs:string value="sequence"
	ns1__FileSuffixType__dateTime,	///< xs:string value="dateTime"
	ns1__FileSuffixType__Extended,	///< xs:string value="Extended"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/accesscontrol/wsdl                            *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":Decision is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   The Decision enumeration represents a choice of two available options for an access request:
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "ns2__Decision__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns2__Decision
{
/// <PRE><BLOCKQUOTE>
///   The decision is to grant access.
/// </BLOCKQUOTE></PRE>
	ns2__Decision__Granted,	///< xs:string value="Granted"
/// <PRE><BLOCKQUOTE>
///   The decision is to deny access.
/// </BLOCKQUOTE></PRE>
	ns2__Decision__Denied,	///< xs:string value="Denied"
};

/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":DenyReason is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Non-normative enum that describes the various reasons for denying access.
///   The following strings shall be used for the reason field:
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "ns2__DenyReason__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns2__DenyReason
{
/// <PRE><BLOCKQUOTE>
///   The device shall provide the following event, whenever a valid credential is not enabled or has been disabled (e.g., due to credential being lost etc.) to prevent unauthorized entry.
/// </BLOCKQUOTE></PRE>
	ns2__DenyReason__CredentialNotEnabled,	///< xs:string value="CredentialNotEnabled"
/// <PRE><BLOCKQUOTE>
///   The device shall provide the following event, whenever a valid credential is presented though it is not active yet;: e.g, the credential was presented before the start date.
/// </BLOCKQUOTE></PRE>
	ns2__DenyReason__CredentialNotActive,	///< xs:string value="CredentialNotActive"
/// <PRE><BLOCKQUOTE>
///   The device shall provide the following event, whenever a valid credential was presented after its expiry date.
/// </BLOCKQUOTE></PRE>
	ns2__DenyReason__CredentialExpired,	///< xs:string value="CredentialExpired"
/// <PRE><BLOCKQUOTE>
///   The device shall provide the following event, whenever an entered PIN code does not match the credential.
/// </BLOCKQUOTE></PRE>
	ns2__DenyReason__InvalidPIN,	///< xs:string value="InvalidPIN"
/// <PRE><BLOCKQUOTE>
///   The device shall provide the following event, whenever a valid credential is denied access to the requested AccessPoint because the credential is not permitted at the moment.
/// </BLOCKQUOTE></PRE>
	ns2__DenyReason__NotPermittedAtThisTime,	///< xs:string value="NotPermittedAtThisTime"
/// <PRE><BLOCKQUOTE>
///   The device shall provide the following event, whenever the presented credential is not authorized.
/// </BLOCKQUOTE></PRE>
	ns2__DenyReason__Unauthorized,	///< xs:string value="Unauthorized"
/// <PRE><BLOCKQUOTE>
///   The device shall provide the following event, whenever the request is denied and no other specific event matches it or is supported by the service.
/// </BLOCKQUOTE></PRE>
	ns2__DenyReason__Other,	///< xs:string value="Other"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/pacs                                          *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/pacs":ReferenceToken is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Type used to reference logical and physical entities.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
typedef char* ns3__ReferenceToken 0:64;

/// @brief "http://www.onvif.org/ver10/pacs":Name is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Type used for names of logical and physical entities.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
typedef char* ns3__Name 0:64;

/// @brief "http://www.onvif.org/ver10/pacs":Description is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Description is optional and the maximum length is device specific.
///   If the length is more than maximum length, it is silently chopped to the maximum length
///   supported by the device/service (which may be 0).
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..1024.
typedef char* ns3__Description 0:1024;

/// @brief "http://www.onvif.org/ver10/pacs":PositiveInteger is a simpleType restriction of XSD type xs:unsignedInt.
///
/// <PRE><BLOCKQUOTE>
///   Type used to represent the numbers from 1 ,2 , 3,...
/// </BLOCKQUOTE></PRE>
/// Value range is [1..].
typedef unsigned int ns3__PositiveInteger 1;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/doorcontrol/wsdl                              *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorPhysicalState is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   The physical state of a Door.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "ns4__DoorPhysicalState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns4__DoorPhysicalState
{
/// <PRE><BLOCKQUOTE>
///   Value is currently unknown (possibly due to initialization or monitors not giving a conclusive result).
/// </BLOCKQUOTE></PRE>
	ns4__DoorPhysicalState__Unknown,	///< xs:string value="Unknown"
/// <PRE><BLOCKQUOTE>
///   Door is open.
/// </BLOCKQUOTE></PRE>
	ns4__DoorPhysicalState__Open,	///< xs:string value="Open"
/// <PRE><BLOCKQUOTE>
///   Door is closed.
/// </BLOCKQUOTE></PRE>
	ns4__DoorPhysicalState__Closed,	///< xs:string value="Closed"
/// <PRE><BLOCKQUOTE>
///   Door monitor fault is detected.
/// </BLOCKQUOTE></PRE>
	ns4__DoorPhysicalState__Fault,	///< xs:string value="Fault"
};

/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":LockPhysicalState is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   The physical state of a Lock (including Double Lock).
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "ns4__LockPhysicalState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns4__LockPhysicalState
{
/// <PRE><BLOCKQUOTE>
///   Value is currently not known.
/// </BLOCKQUOTE></PRE>
	ns4__LockPhysicalState__Unknown,	///< xs:string value="Unknown"
/// <PRE><BLOCKQUOTE>
///   Lock is activated.
/// </BLOCKQUOTE></PRE>
	ns4__LockPhysicalState__Locked,	///< xs:string value="Locked"
/// <PRE><BLOCKQUOTE>
///   Lock is not activated.
/// </BLOCKQUOTE></PRE>
	ns4__LockPhysicalState__Unlocked,	///< xs:string value="Unlocked"
/// <PRE><BLOCKQUOTE>
///   Lock fault is detected.
/// </BLOCKQUOTE></PRE>
	ns4__LockPhysicalState__Fault,	///< xs:string value="Fault"
};

/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorAlarmState is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Describes the state of a Door with regard to alarms.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "ns4__DoorAlarmState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns4__DoorAlarmState
{
/// <PRE><BLOCKQUOTE>
///   No alarm.
/// </BLOCKQUOTE></PRE>
	ns4__DoorAlarmState__Normal,	///< xs:string value="Normal"
/// <PRE><BLOCKQUOTE>
///   Door is forced open.
/// </BLOCKQUOTE></PRE>
	ns4__DoorAlarmState__DoorForcedOpen,	///< xs:string value="DoorForcedOpen"
/// <PRE><BLOCKQUOTE>
///   Door is held open too long.
/// </BLOCKQUOTE></PRE>
	ns4__DoorAlarmState__DoorOpenTooLong,	///< xs:string value="DoorOpenTooLong"
};

/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorTamperState is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Describes the state of a Tamper detector.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "ns4__DoorTamperState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns4__DoorTamperState
{
/// <PRE><BLOCKQUOTE>
///   Value is currently not known.
/// </BLOCKQUOTE></PRE>
	ns4__DoorTamperState__Unknown,	///< xs:string value="Unknown"
/// <PRE><BLOCKQUOTE>
///   No tampering is detected.
/// </BLOCKQUOTE></PRE>
	ns4__DoorTamperState__NotInTamper,	///< xs:string value="NotInTamper"
/// <PRE><BLOCKQUOTE>
///   Tampering is detected.
/// </BLOCKQUOTE></PRE>
	ns4__DoorTamperState__TamperDetected,	///< xs:string value="TamperDetected"
};

/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorFaultState is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Describes the state of a Door fault.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "ns4__DoorFaultState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns4__DoorFaultState
{
/// <PRE><BLOCKQUOTE>
///   Fault state is unknown.
/// </BLOCKQUOTE></PRE>
	ns4__DoorFaultState__Unknown,	///< xs:string value="Unknown"
/// <PRE><BLOCKQUOTE>
///   No fault is detected.
/// </BLOCKQUOTE></PRE>
	ns4__DoorFaultState__NotInFault,	///< xs:string value="NotInFault"
/// <PRE><BLOCKQUOTE>
///   Fault is detected.
/// </BLOCKQUOTE></PRE>
	ns4__DoorFaultState__FaultDetected,	///< xs:string value="FaultDetected"
};

/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorMode is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   DoorMode parameters describe current Door mode from a logical perspective.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "ns4__DoorMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns4__DoorMode
{
/// <PRE><BLOCKQUOTE>
///   The Door is in an Unknown state.
/// </BLOCKQUOTE></PRE>
	ns4__DoorMode__Unknown,	///< xs:string value="Unknown"
/// <PRE><BLOCKQUOTE>
///   The Door is in a Locked state. In this mode the device shall provide momentary access using the AccessDoor method if supported by the Door instance.
/// </BLOCKQUOTE></PRE>
	ns4__DoorMode__Locked,	///< xs:string value="Locked"
/// <PRE><BLOCKQUOTE>
///   The Door is in an Unlocked (Permanent Access) state. Alarms related to door timing operations such as open too long or forced are masked in this mode.
/// </BLOCKQUOTE></PRE>
	ns4__DoorMode__Unlocked,	///< xs:string value="Unlocked"
/// <PRE><BLOCKQUOTE>
///   The Door is in an Accessed state (momentary/temporary access). Alarms related to timing operations such as "door forced" are masked in this mode.
/// </BLOCKQUOTE></PRE>
	ns4__DoorMode__Accessed,	///< xs:string value="Accessed"
/// <PRE><BLOCKQUOTE>
///   The Door is in a Blocked state (Door is locked, and AccessDoor requests are ignored, i.e., it is not possible for door to go to Accessed state).
/// </BLOCKQUOTE></PRE>
	ns4__DoorMode__Blocked,	///< xs:string value="Blocked"
/// <PRE><BLOCKQUOTE>
///   The Door is in a LockedDown state (Door is locked) until released using the LockDownReleaseDoor command. AccessDoor, LockDoor, UnlockDoor, BlockDoor and LockOpenDoor requests are ignored, i.e., it is not possible for door to go to Accessed, Locked, Unlocked, Blocked or LockedOpen state.
/// </BLOCKQUOTE></PRE>
	ns4__DoorMode__LockedDown,	///< xs:string value="LockedDown"
/// <PRE><BLOCKQUOTE>
///   The Door is in a LockedOpen state (Door is unlocked) until released using the LockOpenReleaseDoor command. AccessDoor, LockDoor, UnlockDoor, BlockDoor and LockDownDoor requests are ignored, i.e., it is not possible for door to go to Accessed, Locked, Unlocked, Blocked or LockedDown state.
/// </BLOCKQUOTE></PRE>
	ns4__DoorMode__LockedOpen,	///< xs:string value="LockedOpen"
/// <PRE><BLOCKQUOTE>
///   The Door is in a Double Locked state - for doors with multiple locks. If the door does not have any DoubleLock, this shall be treated as a normal Locked mode. When changing to an Unlocked mode from the DoubleLocked mode, the door may first go to Locked state before unlocking.
/// </BLOCKQUOTE></PRE>
	ns4__DoorMode__DoubleLocked,	///< xs:string value="DoubleLocked"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/advancedsecurity/wsdl                         *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeyID is a simpleType restriction of XSD type xs:NCName.
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier for keys in the keystore.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
typedef xsd__NCName ns5__KeyID:64;

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificateID is a simpleType restriction of XSD type xs:NCName.
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier for certificates in the keystore.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
typedef xsd__NCName ns5__CertificateID:64;

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificationPathID is a simpleType restriction of XSD type xs:NCName.
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier for certification paths in the keystore.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
typedef xsd__NCName ns5__CertificationPathID:64;

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":PassphraseID is a simpleType restriction of XSD type xs:NCName.
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier for passphrases in the keystore.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
typedef xsd__NCName ns5__PassphraseID:64;

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeyStatus is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   The status of a key in the keystore.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "ns5__KeyStatus__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns5__KeyStatus
{
/// <PRE><BLOCKQUOTE>
///   Key is ready for use
/// </BLOCKQUOTE></PRE>
	ns5__KeyStatus__ok,	///< xs:string value="ok"
/// <PRE><BLOCKQUOTE>
///   Key is being generated
/// </BLOCKQUOTE></PRE>
	ns5__KeyStatus__generating,	///< xs:string value="generating"
/// <PRE><BLOCKQUOTE>
///   Key has not been successfully generated and cannot be used.
/// </BLOCKQUOTE></PRE>
	ns5__KeyStatus__corrupt,	///< xs:string value="corrupt"
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DotDecimalOID is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   An object identifier (OID) in dot-decimal form as specified in RFC4512.
/// </BLOCKQUOTE></PRE>
/// Content pattern is "[0-9]+(.[0-9]+)*".
typedef char* ns5__DotDecimalOID "[0-9]+(.[0-9]+)*";

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DNAttributeType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   The distinguished name attribute type encoded as specified in RFC 4514.
/// </BLOCKQUOTE></PRE>
typedef char* ns5__DNAttributeType;

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DNAttributeValue is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   The distinguished name attribute values are encoded in UTF-8 or in hexadecimal form as specified in RFC 4514.
/// </BLOCKQUOTE></PRE>
typedef char* ns5__DNAttributeValue;

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":Base64DERencodedASN1Value is a simpleType restriction of XSD type xs:base64Binary.
///
/// <PRE><BLOCKQUOTE>
///   A base64-encoded ASN.1 value.
/// </BLOCKQUOTE></PRE>
typedef struct xsd__base64Binary ns5__Base64DERencodedASN1Value;

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CRLID is a simpleType restriction of XSD type xs:ID.
///
typedef xsd__ID ns5__CRLID;

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertPathValidationPolicyID is a simpleType restriction of XSD type xs:ID.
///
typedef xsd__ID ns5__CertPathValidationPolicyID;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/accessrules/wsdl                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/credential/wsdl                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schedule/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":ReceiverReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__ReceiverReference;

/// @brief "http://www.onvif.org/ver10/schema":RecordingReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__RecordingReference;

/// @brief "http://www.onvif.org/ver10/schema":TrackReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__TrackReference;

/// @brief "http://www.onvif.org/ver10/schema":JobToken is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__JobToken;

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__RecordingJobReference;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/recording/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/replay/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/analyticsdevice/wsdl                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/actionengine/wsdl                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/accesscontrol/wsdl                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/pacs                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/doorcontrol/wsdl                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/advancedsecurity/wsdl                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/accessrules/wsdl                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/credential/wsdl                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schedule/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/events/wsdl":Capabilities is a complexType.
///
struct tev__Capabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "WSSubscriptionPolicySupport" of XSD type xs:boolean.
   @enum xsd__boolean*                   WSSubscriptionPolicySupport    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "WSPullPointSupport" of XSD type xs:boolean.
   @enum xsd__boolean*                   WSPullPointSupport             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "WSPausableSubscriptionManagerInterfaceSupport" of XSD type xs:boolean.
   @enum xsd__boolean*                   WSPausableSubscriptionManagerInterfaceSupport 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of supported notification producers as defined by WS-BaseNotification.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxNotificationProducers" of XSD type xs:int.
   @int*                                 MaxNotificationProducers       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum supported number of notification pull points.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxPullPoints" of XSD type xs:int.
   @int*                                 MaxPullPoints                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication if the device supports persistent notification storage.
/// </BLOCKQUOTE></PRE>
/// Attribute "PersistentNotificationStorage" of XSD type xs:boolean.
   @enum xsd__boolean*                   PersistentNotificationStorage  0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/events/wsdl":SubscriptionPolicy is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Optional ONVIF defined pull point subscription policies
/// </BLOCKQUOTE></PRE>
struct tev__SubscriptionPolicy
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   The pullpoint should not provide Initialized nor Deleted events for Properties.
/// </BLOCKQUOTE></PRE>
/// Attribute "ChangedOnly" of XSD type xs:boolean.
   @enum xsd__boolean*                   ChangedOnly                    0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities is a complexType.
///
struct _tev__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _tev__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the event service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/events/wsdl":Capabilities.
    struct tev__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription
/// @brief "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription is a complexType.
///
struct _tev__CreatePullPointSubscription
{
/// <PRE><BLOCKQUOTE>
///   Optional XPATH expression to select specific topics.
/// </BLOCKQUOTE></PRE>
/// Element "Filter" of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Initial termination time.
/// </BLOCKQUOTE></PRE>
/// Element "InitialTerminationTime" of XSD type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     InitialTerminationTime         0;	///< Nillable pointer.
/// <PRE><BLOCKQUOTE>
///   Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a>.
/// </BLOCKQUOTE></PRE>
    struct _tev__CreatePullPointSubscription_SubscriptionPolicy
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse is a complexType.
///
struct _tev__CreatePullPointSubscriptionResponse
{
/// <PRE><BLOCKQUOTE>
///   Endpoint reference of the subscription to be used for pulling the messages.
/// </BLOCKQUOTE></PRE>
/// Element "SubscriptionReference" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Current time of the server for synchronization purposes.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.onvif.org/ver10/events/wsdl:""http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t                               wsnt__CurrentTime              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Date time when the PullPoint will be shut down without further pull requests.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.onvif.org/ver10/events/wsdl:""http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t                               wsnt__TerminationTime          1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessages
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessages is a complexType.
///
struct _tev__PullMessages
{
/// <PRE><BLOCKQUOTE>
///   Maximum time to block until this method returns.
/// </BLOCKQUOTE></PRE>
/// Element "Timeout" of XSD type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Upper limit for the number of messages to return at once. A server implementation may decide to return less messages.
/// </BLOCKQUOTE></PRE>
/// Element "MessageLimit" of XSD type xs:int.
    int                                  MessageLimit                   1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse is a complexType.
///
struct _tev__PullMessagesResponse
{
/// <PRE><BLOCKQUOTE>
///   The date and time when the messages have been delivered by the web server to the client.
/// </BLOCKQUOTE></PRE>
/// Element "CurrentTime" of XSD type xs:dateTime.
    time_t                               CurrentTime                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Date time when the PullPoint will be shut down without further pull requests.
/// </BLOCKQUOTE></PRE>
/// Element "TerminationTime" of XSD type xs:dateTime.
    time_t                               TerminationTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of messages. This list shall be empty in case of a timeout.
/// </BLOCKQUOTE></PRE>
/// Size of the dynamic array of struct wsnt__NotificationMessageHolderType* is 0..unbounded.
   $int                                  __sizeNotificationMessage      0;
/// Array struct wsnt__NotificationMessageHolderType* of size 0..unbounded.
    struct wsnt__NotificationMessageHolderType*  wsnt__NotificationMessage      0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse is a complexType.
///
struct _tev__PullMessagesFaultResponse
{
/// <PRE><BLOCKQUOTE>
///   Maximum timeout supported by the device.
/// </BLOCKQUOTE></PRE>
/// Element "MaxTimeout" of XSD type xs:duration.
    xsd__duration                        MaxTimeout                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum message limit supported by the device.
/// </BLOCKQUOTE></PRE>
/// Element "MaxMessageLimit" of XSD type xs:int.
    int                                  MaxMessageLimit                1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":Seek
/// @brief "http://www.onvif.org/ver10/events/wsdl":Seek is a complexType.
///
struct _tev__Seek
{
/// <PRE><BLOCKQUOTE>
///   The date and time to match against stored messages.
/// </BLOCKQUOTE></PRE>
/// Element "UtcTime" of XSD type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reverse the pull direction of PullMessages.
/// </BLOCKQUOTE></PRE>
/// Element "Reverse" of XSD type xs:boolean.
    enum xsd__boolean*                   Reverse                        0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SeekResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":SeekResponse is a complexType.
///
struct _tev__SeekResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint
/// @brief "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint is a complexType.
///
struct _tev__SetSynchronizationPoint
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse is a complexType.
///
struct _tev__SetSynchronizationPointResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventProperties
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventProperties is a complexType.
///
struct _tev__GetEventProperties
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse is a complexType.
///
struct _tev__GetEventPropertiesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of topic namespaces supported.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 1..unbounded.
   $int                                  __sizeTopicNamespaceLocation   1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         TopicNamespaceLocation         1;
/// <PRE><BLOCKQUOTE>
///   True when topicset is fixed for all times.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.onvif.org/ver10/events/wsdl:""http://docs.oasis-open.org/wsn/b-2":FixedTopicSet.
    enum xsd__boolean                    wsnt__FixedTopicSet            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Set of topics supported.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.onvif.org/ver10/events/wsdl:""http://docs.oasis-open.org/wsn/t-1":TopicSet.
    struct wstop__TopicSetType*          wstop__TopicSet                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Defines the XPath expression syntax supported for matching topic expressions. <br/>
///   The following TopicExpressionDialects are mandatory for an ONVIF compliant device :
///   <ul type="disc">
///   <li>http://docs.oasis-open.org/wsn/t-1/TopicExpression/Concrete</li>
///   <li>http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Size of the dynamic array of xsd__anyURI* is 1..unbounded.
   $int                                  __sizeTopicExpressionDialect   1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         wsnt__TopicExpressionDialect   1;
/// <PRE><BLOCKQUOTE>
///   Defines the XPath function set supported for message content filtering.<br/> The following MessageContentFilterDialects should be returned if a device supports the message content filtering:
///   <ul type="disc">
///   <li>http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter.</li>
///   </ul>
///   A device that does not support any MessageContentFilterDialect returns a single empty url.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 1..unbounded.
   $int                                  __sizeMessageContentFilterDialect 1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         MessageContentFilterDialect    1;
/// <PRE><BLOCKQUOTE>
///   Optional ProducerPropertiesDialects. Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a> for advanced filtering.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeProducerPropertiesFilterDialect 0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         ProducerPropertiesFilterDialect 0;
/// <PRE><BLOCKQUOTE>
///   The Message Content Description Language allows referencing
///   of vendor-specific types. In order to ease the integration of such types into a client application,
///   the GetEventPropertiesResponse shall list all URI locations to schema files whose types are
///   used in the description of notifications, with MessageContentSchemaLocation elements.<br/> This list shall at least contain the URI of the ONVIF schema file.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 1..unbounded.
   $int                                  __sizeMessageContentSchemaLocation 1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         MessageContentSchemaLocation   1;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
///
struct wsrfbf__BaseFaultType
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    struct _wsrfbf__BaseFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsrfbf__BaseFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    struct _wsrfbf__BaseFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType.
///
struct wsnt__QueryExpressionType
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "Dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// @todo This mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType.
///
struct wsnt__TopicExpressionType
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "Dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// @todo This mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
///
struct wsnt__FilterType
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
///
struct wsnt__SubscriptionPolicyType
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
///
struct wsnt__NotificationMessageHolderType
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":Topic.
    struct wsnt__TopicExpressionType*    Topic                          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":ProducerReference.
    wsa5__EndpointReferenceType*         ProducerReference              0;	///< Optional element.
    struct _wsnt__NotificationMessageHolderType_Message
    {
/// @todo <any namespace="##any" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                    Message                        1;	///< Required element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is a complexType.
///
struct _wsnt__NotificationProducerRP
{
/// Size of the dynamic array of struct wsnt__TopicExpressionType* is 0..unbounded.
   $int                                  __sizeTopicExpression          0;
/// Array struct wsnt__TopicExpressionType* of size 0..unbounded.
    struct wsnt__TopicExpressionType*    TopicExpression                0;
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":FixedTopicSet.
    enum xsd__boolean*                   FixedTopicSet                  0;	///< Optional element.
/// Size of the dynamic array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeTopicExpressionDialect   0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         TopicExpressionDialect         0;
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/t-1":TopicSet.
    struct wstop__TopicSetType*          wstop__TopicSet                0;	///< Optional element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
///
struct _wsnt__SubscriptionManagerRP
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":ConsumerReference.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":Filter.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy.
    struct wsnt__SubscriptionPolicyType*  SubscriptionPolicy             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":CreationTime.
    time_t*                              CreationTime                   0;	///< Optional element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify
/// @brief "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
///
struct _wsnt__Notify
{
/// Size of the dynamic array of struct wsnt__NotificationMessageHolderType* is 1..unbounded.
   $int                                  __sizeNotificationMessage      1;
/// Array struct wsnt__NotificationMessageHolderType* of size 1..unbounded.
    struct wsnt__NotificationMessageHolderType*  NotificationMessage            1;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw
/// @brief "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
///
struct _wsnt__UseRaw
{
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
///
struct _wsnt__Subscribe
{
/// Element "ConsumerReference" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element "Filter" of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// Element "InitialTerminationTime" of XSD type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     InitialTerminationTime         0;	///< Nillable pointer.
    struct _wsnt__Subscribe_SubscriptionPolicy
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
///
struct _wsnt__SubscribeResponse
{
/// Element "SubscriptionReference" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t*                              TerminationTime                0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
///
struct _wsnt__GetCurrentMessage
{
/// Element "Topic" of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    struct wsnt__TopicExpressionType*    Topic                          1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
///
struct _wsnt__GetCurrentMessageResponse
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
///
struct _wsnt__GetMessages
{
/// Element "MaximumNumber" of XSD type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              MaximumNumber                  0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
///
struct _wsnt__GetMessagesResponse
{
/// Size of the dynamic array of struct wsnt__NotificationMessageHolderType* is 0..unbounded.
   $int                                  __sizeNotificationMessage      0;
/// Array struct wsnt__NotificationMessageHolderType* of size 0..unbounded.
    struct wsnt__NotificationMessageHolderType*  NotificationMessage            0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
///
struct _wsnt__DestroyPullPoint
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
///
struct _wsnt__DestroyPullPointResponse
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
///
struct _wsnt__CreatePullPoint
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
///
struct _wsnt__CreatePullPointResponse
{
/// Element "PullPoint" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          PullPoint                      1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew
/// @brief "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
///
struct _wsnt__Renew
{
/// Element "TerminationTime" of XSD type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     TerminationTime                1;	///< Nillable pointer.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
///
struct _wsnt__RenewResponse
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t                               TerminationTime                1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
///
struct _wsnt__Unsubscribe
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
///
struct _wsnt__UnsubscribeResponse
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
///
struct _wsnt__PauseSubscription
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
///
struct _wsnt__PauseSubscriptionResponse
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
///
struct _wsnt__ResumeSubscription
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
///
struct _wsnt__ResumeSubscriptionResponse
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":Documentation is a complexType.
///
struct wstop__Documentation
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo This mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is an abstract complexType.
///
struct wstop__ExtensibleDocumented
{
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is a complexType.
///
struct wstop__QueryExpressionType
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "Dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// @todo This mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/display/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/display/wsdl":Capabilities is a complexType.
///
struct tls__Capabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indication that the SetLayout command supports only predefined layouts.
/// </BLOCKQUOTE></PRE>
/// Attribute "FixedLayout" of XSD type xs:boolean.
   @enum xsd__boolean*                   FixedLayout                    0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetServiceCapabilities is a complexType.
///
struct _tls__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _tls__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the display service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/display/wsdl":Capabilities.
    struct tls__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetLayout
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetLayout is a complexType.
///
struct _tls__GetLayout
{
/// <PRE><BLOCKQUOTE>
///   Token of the Video Output whose Layout is requested
/// </BLOCKQUOTE></PRE>
/// Element "VideoOutput" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetLayoutResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetLayoutResponse is a complexType.
///
struct _tls__GetLayoutResponse
{
/// <PRE><BLOCKQUOTE>
///   Current layout of the video output.
/// </BLOCKQUOTE></PRE>
/// Element "Layout" of XSD type "http://www.onvif.org/ver10/schema":Layout.
    struct tt__Layout*                   Layout                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":SetLayout
/// @brief "http://www.onvif.org/ver10/display/wsdl":SetLayout is a complexType.
///
struct _tls__SetLayout
{
/// <PRE><BLOCKQUOTE>
///   Token of the Video Output whose Layout shall be changed.
/// </BLOCKQUOTE></PRE>
/// Element "VideoOutput" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Layout to be set
/// </BLOCKQUOTE></PRE>
/// Element "Layout" of XSD type "http://www.onvif.org/ver10/schema":Layout.
    struct tt__Layout*                   Layout                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":SetLayoutResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":SetLayoutResponse is a complexType.
///
struct _tls__SetLayoutResponse
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetDisplayOptions
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetDisplayOptions is a complexType.
///
struct _tls__GetDisplayOptions
{
/// <PRE><BLOCKQUOTE>
///   Token of the Video Output whose options are requested
/// </BLOCKQUOTE></PRE>
/// Element "VideoOutput" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetDisplayOptionsResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetDisplayOptionsResponse is a complexType.
///
struct _tls__GetDisplayOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   The LayoutOptions describe the fixed and predefined layouts of a device. If the device does
///   not offer fixed layouts and allows setting the layout free this element is empty.
/// </BLOCKQUOTE></PRE>
/// Element "LayoutOptions" of XSD type "http://www.onvif.org/ver10/schema":LayoutOptions.
    struct tt__LayoutOptions*            LayoutOptions                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   decoding and encoding capabilities of the device
/// </BLOCKQUOTE></PRE>
/// Element "CodingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":CodingCapabilities.
    struct tt__CodingCapabilities*       CodingCapabilities             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetPaneConfigurations
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetPaneConfigurations is a complexType.
///
struct _tls__GetPaneConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Reference Token of the Video Output whose Pane Configurations are requested
/// </BLOCKQUOTE></PRE>
/// Element "VideoOutput" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetPaneConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetPaneConfigurationsResponse is a complexType.
///
struct _tls__GetPaneConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of defined Panes of the specified VideoOutput. Each VideoOutput has at least one PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PaneConfiguration* is 1..unbounded.
   $int                                  __sizePaneConfiguration        1;
/// Array struct tt__PaneConfiguration* of size 1..unbounded.
    struct tt__PaneConfiguration*        PaneConfiguration              1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetPaneConfiguration
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetPaneConfiguration is a complexType.
///
struct _tls__GetPaneConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference Token of the Video Output the requested pane belongs to
/// </BLOCKQUOTE></PRE>
/// Element "VideoOutput" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reference Token of the Pane whose Configuration is requested
/// </BLOCKQUOTE></PRE>
/// Element "Pane" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Pane                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetPaneConfigurationResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetPaneConfigurationResponse is a complexType.
///
struct _tls__GetPaneConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   returns the configuration of the requested pane.
/// </BLOCKQUOTE></PRE>
/// Element "PaneConfiguration" of XSD type "http://www.onvif.org/ver10/schema":PaneConfiguration.
    struct tt__PaneConfiguration*        PaneConfiguration              1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":SetPaneConfigurations
/// @brief "http://www.onvif.org/ver10/display/wsdl":SetPaneConfigurations is a complexType.
///
struct _tls__SetPaneConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Token of the video output whose panes to set.
/// </BLOCKQUOTE></PRE>
/// Element "VideoOutput" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Pane Configuration to be set.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PaneConfiguration* is 1..unbounded.
   $int                                  __sizePaneConfiguration        1;
/// Array struct tt__PaneConfiguration* of size 1..unbounded.
    struct tt__PaneConfiguration*        PaneConfiguration              1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":SetPaneConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":SetPaneConfigurationsResponse is a complexType.
///
struct _tls__SetPaneConfigurationsResponse
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":SetPaneConfiguration
/// @brief "http://www.onvif.org/ver10/display/wsdl":SetPaneConfiguration is a complexType.
///
struct _tls__SetPaneConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the video output whose panes to set.
/// </BLOCKQUOTE></PRE>
/// Element "VideoOutput" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Pane Configuration to be set.
/// </BLOCKQUOTE></PRE>
/// Element "PaneConfiguration" of XSD type "http://www.onvif.org/ver10/schema":PaneConfiguration.
    struct tt__PaneConfiguration*        PaneConfiguration              1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":SetPaneConfigurationResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":SetPaneConfigurationResponse is a complexType.
///
struct _tls__SetPaneConfigurationResponse
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":CreatePaneConfiguration
/// @brief "http://www.onvif.org/ver10/display/wsdl":CreatePaneConfiguration is a complexType.
///
struct _tls__CreatePaneConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the video output where the pane shall be created.
/// </BLOCKQUOTE></PRE>
/// Element "VideoOutput" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configuration of the pane to be created.
/// </BLOCKQUOTE></PRE>
/// Element "PaneConfiguration" of XSD type "http://www.onvif.org/ver10/schema":PaneConfiguration.
    struct tt__PaneConfiguration*        PaneConfiguration              1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":CreatePaneConfigurationResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":CreatePaneConfigurationResponse is a complexType.
///
struct _tls__CreatePaneConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Token of the new pane configuration.
/// </BLOCKQUOTE></PRE>
/// Element "PaneToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PaneToken                      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":DeletePaneConfiguration
/// @brief "http://www.onvif.org/ver10/display/wsdl":DeletePaneConfiguration is a complexType.
///
struct _tls__DeletePaneConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the video output where the pane shall be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "VideoOutput" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of the pane to be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "PaneToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PaneToken                      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":DeletePaneConfigurationResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":DeletePaneConfigurationResponse is a complexType.
///
struct _tls__DeletePaneConfigurationResponse
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base class for physical entities like inputs and outputs.
/// </BLOCKQUOTE></PRE>
struct tt__DeviceEntity
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangle is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Rectangle defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
struct tt__IntRectangle
{
/// Attribute "x" of XSD type xs:int.
   @int                                  x                              1;	///< Required attribute.
/// Attribute "y" of XSD type xs:int.
   @int                                  y                              1;	///< Required attribute.
/// Attribute "width" of XSD type xs:int.
   @int                                  width                          1;	///< Required attribute.
/// Attribute "height" of XSD type xs:int.
   @int                                  height                         1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangleRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of a rectangle. The rectangle itself is defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
struct tt__IntRectangleRange
{
/// <PRE><BLOCKQUOTE>
///   Range of X-axis.
/// </BLOCKQUOTE></PRE>
/// Element "XRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of Y-axis.
/// </BLOCKQUOTE></PRE>
/// Element "YRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 YRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of width.
/// </BLOCKQUOTE></PRE>
/// Element "WidthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 WidthRange                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of height.
/// </BLOCKQUOTE></PRE>
/// Element "HeightRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 HeightRange                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
struct tt__IntRange
{
/// Element "Min" of XSD type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element "Max" of XSD type xs:int.
    int                                  Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FloatRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
struct tt__FloatRange
{
/// Element "Min" of XSD type xs:float.
    float                                Min                            1;	///< Required element.
/// Element "Max" of XSD type xs:float.
    float                                Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":DurationRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of duration greater equal Min duration and less equal Max duration.
/// </BLOCKQUOTE></PRE>
struct tt__DurationRange
{
/// Element "Min" of XSD type xs:duration.
    xsd__duration                        Min                            1;	///< Required element.
/// Element "Max" of XSD type xs:duration.
    xsd__duration                        Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IntList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of values.
/// </BLOCKQUOTE></PRE>
struct tt__IntList
{
/// Size of array of int* is 0..unbounded.
   $int                                  __sizeItems                    0;
/// Array int* of size 0..unbounded.
    int*                                 Items                          0;
};

/// @brief "http://www.onvif.org/ver10/schema":FloatList is a complexType.
///
struct tt__FloatList
{
/// Size of array of float* is 0..unbounded.
   $int                                  __sizeItems                    0;
/// Array float* of size 0..unbounded.
    float*                               Items                          0;
};

/// @brief "http://www.onvif.org/ver10/schema":AnyHolder is a complexType.
///
struct tt__AnyHolder
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension is a complexType.
///
struct tt__VideoSourceExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor. To be used if imaging service 2.00 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "Imaging" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    struct tt__ImagingSettings20*        Imaging                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceExtension2.
    struct tt__VideoSourceExtension2*    Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension2 is a complexType.
///
struct tt__VideoSourceExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Profile is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A media profile consists of a set of media configurations. Media profiles are used by a client
///   to configure properties of a media stream from an NVT.<br/>
///   An NVT shall provide at least one media profile at boot. An NVT should provide ready to use
///   profiles for the most common media configurations that the device offers.<br/>
///   A profile consists of a set of interconnected configuration entities. Configurations are provided
///   by the NVT and can be either static or created dynamically by the NVT. For example, the
///   dynamic configurations can be created by the NVT depending on current available encoding
///   resources.
/// </BLOCKQUOTE></PRE>
struct tt__Profile
{
/// <PRE><BLOCKQUOTE>
///   User readable name of the profile.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video input.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  VideoSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio input.
/// </BLOCKQUOTE></PRE>
/// Element "AudioSourceConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  AudioSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video encoder.
/// </BLOCKQUOTE></PRE>
/// Element "VideoEncoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    struct tt__VideoEncoderConfiguration*  VideoEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio encoder.
/// </BLOCKQUOTE></PRE>
/// Element "AudioEncoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    struct tt__AudioEncoderConfiguration*  AudioEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the video analytics module and rule engine.
/// </BLOCKQUOTE></PRE>
/// Element "VideoAnalyticsConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  VideoAnalyticsConfiguration    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the pan tilt zoom unit.
/// </BLOCKQUOTE></PRE>
/// Element "PTZConfiguration" of XSD type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    struct tt__PTZConfiguration*         PTZConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the metadata stream.
/// </BLOCKQUOTE></PRE>
/// Element "MetadataConfiguration" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    struct tt__MetadataConfiguration*    MetadataConfiguration          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Extensions defined in ONVIF 2.0
/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ProfileExtension.
    struct tt__ProfileExtension*         Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the profile.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   A value of true signals that the profile cannot be deleted. Default is false.
/// </BLOCKQUOTE></PRE>
/// Attribute "fixed" of XSD type xs:boolean.
   @enum xsd__boolean*                   fixed                          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension is a complexType.
///
struct tt__ProfileExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio output.
/// </BLOCKQUOTE></PRE>
/// Element "AudioOutputConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  AudioOutputConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio decoder.
/// </BLOCKQUOTE></PRE>
/// Element "AudioDecoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    struct tt__AudioDecoderConfiguration*  AudioDecoderConfiguration      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ProfileExtension2.
    struct tt__ProfileExtension2*        Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension2 is a complexType.
///
struct tt__ProfileExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigurationEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base type defining the common properties of a configuration.
/// </BLOCKQUOTE></PRE>
struct tt__ConfigurationEntity
{
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension is a complexType.
///
struct tt__VideoSourceConfigurationExtension
{
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rotation of captured image.
/// </BLOCKQUOTE></PRE>
/// Element "Rotate" of XSD type "http://www.onvif.org/ver10/schema":Rotate.
    struct tt__Rotate*                   Rotate                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2.
    struct tt__VideoSourceConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2 is a complexType.
///
struct tt__VideoSourceConfigurationExtension2
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Rotate is a complexType.
///
struct tt__Rotate
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Rotation feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":RotateMode.
    enum tt__RotateMode                  Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure how much degree of clockwise rotation of image for On mode. Omitting this parameter for On mode means 180 degree rotation.
/// </BLOCKQUOTE></PRE>
/// Element "Degree" of XSD type xs:int.
    int*                                 Degree                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RotateExtension.
    struct tt__RotateExtension*          Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RotateExtension is a complexType.
///
struct tt__RotateExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions is a complexType.
///
struct tt__VideoSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported range for the capturing area.
/// </BLOCKQUOTE></PRE>
/// Element "BoundsRange" of XSD type "http://www.onvif.org/ver10/schema":IntRectangleRange.
    struct tt__IntRectangleRange*        BoundsRange                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of physical inputs.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeVideoSourceTokensAvailable 1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  VideoSourceTokensAvailable     1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension.
    struct tt__VideoSourceConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension is a complexType.
///
struct tt__VideoSourceConfigurationOptionsExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Rotation feature.
/// </BLOCKQUOTE></PRE>
/// Element "Rotate" of XSD type "http://www.onvif.org/ver10/schema":RotateOptions.
    struct tt__RotateOptions*            Rotate                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2.
    struct tt__VideoSourceConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2 is a complexType.
///
struct tt__VideoSourceConfigurationOptionsExtension2
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RotateOptions is a complexType.
///
struct tt__RotateOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options of Rotate mode parameter.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__RotateMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__RotateMode* of size 1..unbounded.
    enum tt__RotateMode*                 Mode                           1;
/// <PRE><BLOCKQUOTE>
///   List of supported degree value for rotation.
/// </BLOCKQUOTE></PRE>
/// Element "DegreeList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  DegreeList                     0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RotateOptionsExtension.
    struct tt__RotateOptionsExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RotateOptionsExtension is a complexType.
///
struct tt__RotateOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoResolution is a complexType.
///
struct tt__VideoResolution
{
/// <PRE><BLOCKQUOTE>
///   Number of the columns of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Width" of XSD type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of the lines of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Height" of XSD type xs:int.
    int                                  Height                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoRateControl is a complexType.
///
struct tt__VideoRateControl
{
/// <PRE><BLOCKQUOTE>
///   Maximum output framerate in fps. If an EncodingInterval is provided the resulting encoded framerate will be reduced by the given factor.
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateLimit" of XSD type xs:int.
    int                                  FrameRateLimit                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Interval at which images are encoded and transmitted. (A value of 1 means that every frame is encoded, a value of 2 means that every 2nd frame is encoded ...)
/// </BLOCKQUOTE></PRE>
/// Element "EncodingInterval" of XSD type xs:int.
    int                                  EncodingInterval               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the maximum output bitrate in kbps
/// </BLOCKQUOTE></PRE>
/// Element "BitrateLimit" of XSD type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Configuration is a complexType.
///
struct tt__Mpeg4Configuration
{
/// <PRE><BLOCKQUOTE>
///   Determines the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
/// Element "GovLength" of XSD type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the Mpeg4 profile, either simple profile (SP) or advanced simple profile (ASP)
/// </BLOCKQUOTE></PRE>
/// Element "Mpeg4Profile" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Profile.
    enum tt__Mpeg4Profile                Mpeg4Profile                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":H264Configuration is a complexType.
///
struct tt__H264Configuration
{
/// <PRE><BLOCKQUOTE>
///   Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
/// Element "GovLength" of XSD type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the H.264 profile, either baseline, main, extended or high
/// </BLOCKQUOTE></PRE>
/// Element "H264Profile" of XSD type "http://www.onvif.org/ver10/schema":H264Profile.
    enum tt__H264Profile                 H264Profile                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is a complexType.
///
struct tt__VideoEncoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Range of the quality values. A high value means higher quality.
/// </BLOCKQUOTE></PRE>
/// Element "QualityRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 QualityRange                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
/// Element "JPEG" of XSD type "http://www.onvif.org/ver10/schema":JpegOptions.
    struct tt__JpegOptions*              JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
/// Element "MPEG4" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Options.
    struct tt__Mpeg4Options*             MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
/// Element "H264" of XSD type "http://www.onvif.org/ver10/schema":H264Options.
    struct tt__H264Options*              H264                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension.
    struct tt__VideoEncoderOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is a complexType.
///
struct tt__VideoEncoderOptionsExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges.
/// </BLOCKQUOTE></PRE>
/// Element "JPEG" of XSD type "http://www.onvif.org/ver10/schema":JpegOptions2.
    struct tt__JpegOptions2*             JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
/// Element "MPEG4" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Options2.
    struct tt__Mpeg4Options2*            MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
/// Element "H264" of XSD type "http://www.onvif.org/ver10/schema":H264Options2.
    struct tt__H264Options2*             H264                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2.
    struct tt__VideoEncoderOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2 is a complexType.
///
struct tt__VideoEncoderOptionsExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions is a complexType.
///
struct tt__JpegOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options is a complexType.
///
struct tt__Mpeg4Options
{
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__Mpeg4Profile* is 1..unbounded.
   $int                                  __sizeMpeg4ProfilesSupported   1;
/// Array enum tt__Mpeg4Profile* of size 1..unbounded.
    enum tt__Mpeg4Profile*               Mpeg4ProfilesSupported         1;
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options is a complexType.
///
struct tt__H264Options
{
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__H264Profile* is 1..unbounded.
   $int                                  __sizeH264ProfilesSupported    1;
/// Array enum tt__H264Profile* of size 1..unbounded.
    enum tt__H264Profile*                H264ProfilesSupported          1;
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions is a complexType.
///
struct tt__AudioSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Tokens of the audio source the configuration can be used for.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeInputTokensAvailable     1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  InputTokensAvailable           1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension.
    struct tt__AudioSourceOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension is a complexType.
///
struct tt__AudioSourceOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions is a complexType.
///
struct tt__AudioEncoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   list of supported AudioEncoderConfigurations
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioEncoderConfigurationOption* is 0..unbounded.
   $int                                  __sizeOptions                  0;
/// Array struct tt__AudioEncoderConfigurationOption* of size 0..unbounded.
    struct tt__AudioEncoderConfigurationOption*  Options                        0;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOption is a complexType.
///
struct tt__AudioEncoderConfigurationOption
{
/// <PRE><BLOCKQUOTE>
///   The enoding used for audio data (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps for the specified Encoding
/// </BLOCKQUOTE></PRE>
/// Element "BitrateList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  BitrateList                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported Sample Rates in kHz for the specified Encoding
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  SampleRateList                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension is a complexType.
///
struct tt__MetadataConfigurationExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZFilter is a complexType.
///
struct tt__PTZFilter
{
/// <PRE><BLOCKQUOTE>
///   True if the metadata stream shall contain the PTZ status (IDLE, MOVING or UNKNOWN)
/// </BLOCKQUOTE></PRE>
/// Element "Status" of XSD type xs:boolean.
    enum xsd__boolean                    Status                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   True if the metadata stream shall contain the PTZ position
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:boolean.
    enum xsd__boolean                    Position                       1;	///< Required element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":EventSubscription is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Subcription handling in the same way as base notification subscription.
/// </BLOCKQUOTE></PRE>
struct tt__EventSubscription
{
/// Element "Filter" of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
    struct _tt__EventSubscription_SubscriptionPolicy
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions is a complexType.
///
struct tt__MetadataConfigurationOptions
{
/// Element "PTZStatusFilterOptions" of XSD type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions.
    struct tt__PTZStatusFilterOptions*   PTZStatusFilterOptions         1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension.
    struct tt__MetadataConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension is a complexType.
///
struct tt__MetadataConfigurationOptionsExtension
{
/// <PRE><BLOCKQUOTE>
///   List of supported metadata compression type. Its options shall be chosen from tt:MetadataCompressionType.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 0..unbounded.
   $int                                  __sizeCompressionType          0;
/// Array char** of size 0..unbounded.
    char**                               CompressionType                0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2.
    struct tt__MetadataConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2 is a complexType.
///
struct tt__MetadataConfigurationOptionsExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions is a complexType.
///
struct tt__PTZStatusFilterOptions
{
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream pan or tilt status information.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltStatusSupported" of XSD type xs:boolean.
    enum xsd__boolean                    PanTiltStatusSupported         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream zoom status inforamtion.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomStatusSupported" of XSD type xs:boolean.
    enum xsd__boolean                    ZoomStatusSupported            1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream the pan or tilt position.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltPositionSupported" of XSD type xs:boolean.
    enum xsd__boolean*                   PanTiltPositionSupported       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream zoom position information.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomPositionSupported" of XSD type xs:boolean.
    enum xsd__boolean*                   ZoomPositionSupported          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension.
    struct tt__PTZStatusFilterOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension is a complexType.
///
struct tt__PTZStatusFilterOptionsExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputExtension is a complexType.
///
struct tt__VideoOutputExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions is a complexType.
///
struct tt__VideoOutputConfigurationOptions
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions is a complexType.
///
struct tt__VideoDecoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode Jpeg streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
/// Element "JpegDecOptions" of XSD type "http://www.onvif.org/ver10/schema":JpegDecOptions.
    struct tt__JpegDecOptions*           JpegDecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode H.264 streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
/// Element "H264DecOptions" of XSD type "http://www.onvif.org/ver10/schema":H264DecOptions.
    struct tt__H264DecOptions*           H264DecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode Mpeg4 streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
/// Element "Mpeg4DecOptions" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4DecOptions.
    struct tt__Mpeg4DecOptions*          Mpeg4DecOptions                0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension.
    struct tt__VideoDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":H264DecOptions is a complexType.
///
struct tt__H264DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 Video Resolutions
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   List of supported H264 Profiles (either baseline, main, extended or high)
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__H264Profile* is 1..unbounded.
   $int                                  __sizeSupportedH264Profiles    1;
/// Array enum tt__H264Profile* of size 1..unbounded.
    enum tt__H264Profile*                SupportedH264Profiles          1;
/// <PRE><BLOCKQUOTE>
///   Supported H.264 bitrate range in kbps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedInputBitrate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported H.264 framerate range in fps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedFrameRate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedFrameRate             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":JpegDecOptions is a complexType.
///
struct tt__JpegDecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported Jpeg Video Resolutions
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported Jpeg bitrate range in kbps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedInputBitrate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported Jpeg framerate range in fps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedFrameRate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedFrameRate             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4DecOptions is a complexType.
///
struct tt__Mpeg4DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported Mpeg4 Video Resolutions
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   List of supported Mpeg4 Profiles (either SP or ASP)
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__Mpeg4Profile* is 1..unbounded.
   $int                                  __sizeSupportedMpeg4Profiles   1;
/// Array enum tt__Mpeg4Profile* of size 1..unbounded.
    enum tt__Mpeg4Profile*               SupportedMpeg4Profiles         1;
/// <PRE><BLOCKQUOTE>
///   Supported Mpeg4 bitrate range in kbps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedInputBitrate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported Mpeg4 framerate range in fps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedFrameRate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedFrameRate             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension is a complexType.
///
struct tt__VideoDecoderConfigurationOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions is a complexType.
///
struct tt__AudioOutputConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Tokens of the physical Audio outputs (typically one).
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeOutputTokensAvailable    1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  OutputTokensAvailable          1;
/// <PRE><BLOCKQUOTE>
///   An <b>audio</b> channel MAY support different types of audio transmission. While for full duplex
///   operation no special handling is required, in half duplex operation the transmission direction
///   needs to be switched.
///   The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
///   direction is currently active. An NVC can switch between different modes by setting the
///   AudioOutputConfiguration.<br/>
///   The following modes for the Send-Primacy are defined:<ul>
///   <li>www.onvif.org/ver20/HalfDuplex/Server
///   The server is allowed to send audio data to the client. The client shall not send
///   audio data via the backchannel to the NVT in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Client
///   The client is allowed to send audio data via the backchannel to the server. The
///   NVT shall not send audio data to the client in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Auto
///   It is up to the device how to deal with sending and receiving audio data.</li>
///   </ul>
///   Acoustic echo cancellation is out of ONVIF scope.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeSendPrimacyOptions       0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         SendPrimacyOptions             0;
/// <PRE><BLOCKQUOTE>
///   Minimum and maximum level range supported for this Output.
/// </BLOCKQUOTE></PRE>
/// Element "OutputLevelRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 OutputLevelRange               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions is a complexType.
///
struct tt__AudioDecoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode AAC encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
/// Element "AACDecOptions" of XSD type "http://www.onvif.org/ver10/schema":AACDecOptions.
    struct tt__AACDecOptions*            AACDecOptions                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode G711 encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
/// Element "G711DecOptions" of XSD type "http://www.onvif.org/ver10/schema":G711DecOptions.
    struct tt__G711DecOptions*           G711DecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode G726 encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
/// Element "G726DecOptions" of XSD type "http://www.onvif.org/ver10/schema":G726DecOptions.
    struct tt__G726DecOptions*           G726DecOptions                 0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension.
    struct tt__AudioDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":G711DecOptions is a complexType.
///
struct tt__G711DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  SampleRateRange                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AACDecOptions is a complexType.
///
struct tt__AACDecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  SampleRateRange                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":G726DecOptions is a complexType.
///
struct tt__G726DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  SampleRateRange                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension is a complexType.
///
struct tt__AudioDecoderConfigurationOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MulticastConfiguration is a complexType.
///
struct tt__MulticastConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The multicast address (if this address is set to 0 no multicast streaming is enaled)
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type "http://www.onvif.org/ver10/schema":IPAddress.
    struct tt__IPAddress*                Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The RTP mutlicast destination port. A device may support RTCP. In this case the port value shall be even to allow the corresponding RTCP stream to be mapped to the next higher (odd) destination port number as defined in the RTSP specification.
/// </BLOCKQUOTE></PRE>
/// Element "Port" of XSD type xs:int.
    int                                  Port                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   In case of IPv6 the TTL value is assumed as the hop limit. Note that for IPV6 and administratively scoped IPv4 multicast the primary use for hop limit / TTL is to prevent packets from (endlessly) circulating and not limiting scope. In these cases the address contains the scope.
/// </BLOCKQUOTE></PRE>
/// Element "TTL" of XSD type xs:int.
    int                                  TTL                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Read only property signalling that streaming is persistant. Use the methods StartMulticastStreaming and StopMulticastStreaming to switch its state.
/// </BLOCKQUOTE></PRE>
/// Element "AutoStart" of XSD type xs:boolean.
    enum xsd__boolean                    AutoStart                      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":StreamSetup is a complexType.
///
struct tt__StreamSetup
{
/// <PRE><BLOCKQUOTE>
///   Defines if a multicast or unicast stream is requested
/// </BLOCKQUOTE></PRE>
/// Element "Stream" of XSD type "http://www.onvif.org/ver10/schema":StreamType.
    enum tt__StreamType                  Stream                         1;	///< Required element.
/// Element "Transport" of XSD type "http://www.onvif.org/ver10/schema":Transport.
    struct tt__Transport*                Transport                      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Transport is a complexType.
///
struct tt__Transport
{
/// <PRE><BLOCKQUOTE>
///   Defines the network protocol for streaming, either UDP=RTP/UDP, RTSP=RTP/RTSP/TCP or HTTP=RTP/RTSP/HTTP/TCP
/// </BLOCKQUOTE></PRE>
/// Element "Protocol" of XSD type "http://www.onvif.org/ver10/schema":TransportProtocol.
    enum tt__TransportProtocol           Protocol                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to describe further tunnel options. This element is normally not needed
/// </BLOCKQUOTE></PRE>
/// Element "Tunnel" of XSD type "http://www.onvif.org/ver10/schema":Transport.
    struct tt__Transport*                Tunnel                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaUri is a complexType.
///
struct tt__MediaUri
{
/// <PRE><BLOCKQUOTE>
///   Stable Uri to be used for requesting the media stream
/// </BLOCKQUOTE></PRE>
/// Element "Uri" of XSD type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is only valid until the connection is established. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
/// Element "InvalidAfterConnect" of XSD type xs:boolean.
    enum xsd__boolean                    InvalidAfterConnect            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is invalid after a reboot of the device. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
/// Element "InvalidAfterReboot" of XSD type xs:boolean.
    enum xsd__boolean                    InvalidAfterReboot             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duration how long the Uri is valid. This parameter shall be set to PT0S to indicate that this stream URI is indefinitely valid even if the profile changes
/// </BLOCKQUOTE></PRE>
/// Element "Timeout" of XSD type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Scope is a complexType.
///
struct tt__Scope
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the scope is fixed or configurable.
/// </BLOCKQUOTE></PRE>
/// Element "ScopeDef" of XSD type "http://www.onvif.org/ver10/schema":ScopeDefinition.
    enum tt__ScopeDefinition             ScopeDef                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Scope item URI.
/// </BLOCKQUOTE></PRE>
/// Element "ScopeItem" of XSD type xs:anyURI.
    xsd__anyURI                          ScopeItem                      1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension is a complexType.
///
struct tt__NetworkInterfaceExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "InterfaceType" of XSD type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Extension point prepared for future 802.3 configuration.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Dot3Configuration* is 0..unbounded.
   $int                                  __sizeDot3                     0;
/// Array struct tt__Dot3Configuration* of size 0..unbounded.
    struct tt__Dot3Configuration*        Dot3                           0;
/// Size of array of struct tt__Dot11Configuration* is 0..unbounded.
   $int                                  __sizeDot11                    0;
/// Array struct tt__Dot11Configuration* of size 0..unbounded.
    struct tt__Dot11Configuration*       Dot11                          0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2.
    struct tt__NetworkInterfaceExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot3Configuration is a complexType.
///
struct tt__Dot3Configuration
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2 is a complexType.
///
struct tt__NetworkInterfaceExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceLink is a complexType.
///
struct tt__NetworkInterfaceLink
{
/// <PRE><BLOCKQUOTE>
///   Configured link settings.
/// </BLOCKQUOTE></PRE>
/// Element "AdminSettings" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    struct tt__NetworkInterfaceConnectionSetting*  AdminSettings                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Current active link settings.
/// </BLOCKQUOTE></PRE>
/// Element "OperSettings" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    struct tt__NetworkInterfaceConnectionSetting*  OperSettings                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Integer indicating interface type, for example: 6 is ethernet.
/// </BLOCKQUOTE></PRE>
/// Element "InterfaceType" of XSD type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting is a complexType.
///
struct tt__NetworkInterfaceConnectionSetting
{
/// <PRE><BLOCKQUOTE>
///   Auto negotiation on/off.
/// </BLOCKQUOTE></PRE>
/// Element "AutoNegotiation" of XSD type xs:boolean.
    enum xsd__boolean                    AutoNegotiation                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:int.
    int                                  Speed                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duplex type, Half or Full.
/// </BLOCKQUOTE></PRE>
/// Element "Duplex" of XSD type "http://www.onvif.org/ver10/schema":Duplex.
    enum tt__Duplex                      Duplex                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo is a complexType.
///
struct tt__NetworkInterfaceInfo
{
/// <PRE><BLOCKQUOTE>
///   Network interface name, for example eth0.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type xs:string.
    char*                                Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Network interface MAC address.
/// </BLOCKQUOTE></PRE>
/// Element "HwAddress" of XSD type "http://www.onvif.org/ver10/schema":HwAddress.
    tt__HwAddress                        HwAddress                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
/// Element "MTU" of XSD type xs:int.
    int*                                 MTU                            0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterface is a complexType.
///
struct tt__IPv6NetworkInterface
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv6 configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Config" of XSD type "http://www.onvif.org/ver10/schema":IPv6Configuration.
    struct tt__IPv6Configuration*        Config                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterface is a complexType.
///
struct tt__IPv4NetworkInterface
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Config" of XSD type "http://www.onvif.org/ver10/schema":IPv4Configuration.
    struct tt__IPv4Configuration*        Config                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Configuration is a complexType.
///
struct tt__IPv4Configuration
{
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv4Address* is 0..unbounded.
   $int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv4Address* of size 0..unbounded.
    struct tt__PrefixedIPv4Address*      Manual                         0;
/// <PRE><BLOCKQUOTE>
///   Link local address.
/// </BLOCKQUOTE></PRE>
/// Element "LinkLocal" of XSD type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    struct tt__PrefixedIPv4Address*      LinkLocal                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address configured by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    struct tt__PrefixedIPv4Address*      FromDHCP                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type xs:boolean.
    enum xsd__boolean                    DHCP                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6Configuration is a complexType.
///
struct tt__IPv6Configuration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
/// Element "AcceptRouterAdvert" of XSD type xs:boolean.
    enum xsd__boolean*                   AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration       DHCP                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of manually entered IPv6 addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      Manual                         0;
/// <PRE><BLOCKQUOTE>
///   List of link local IPv6 addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeLinkLocal                0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      LinkLocal                      0;
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeFromDHCP                 0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      FromDHCP                       0;
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using router advertisment.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeFromRA                   0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      FromRA                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension.
    struct tt__IPv6ConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension is a complexType.
///
struct tt__IPv6ConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocol is a complexType.
///
struct tt__NetworkProtocol
{
/// <PRE><BLOCKQUOTE>
///   Network protocol type string.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":NetworkProtocolType.
    enum tt__NetworkProtocolType         Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the protocol is enabled or not.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The port that is used by the protocol.
/// </BLOCKQUOTE></PRE>
/// Size of array of int* is 1..unbounded.
   $int                                  __sizePort                     1;
/// Array int* of size 1..unbounded.
    int*                                 Port                           1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkProtocolExtension.
    struct tt__NetworkProtocolExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolExtension is a complexType.
///
struct tt__NetworkProtocolExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHost is a complexType.
///
struct tt__NetworkHost
{
/// <PRE><BLOCKQUOTE>
///   Network host type: IPv4, IPv6 or DNS.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":NetworkHostType.
    enum tt__NetworkHostType             Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4Address" of XSD type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address.
/// </BLOCKQUOTE></PRE>
/// Element "IPv6Address" of XSD type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      IPv6Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
/// Element "DNSname" of XSD type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          DNSname                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkHostExtension.
    struct tt__NetworkHostExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostExtension is a complexType.
///
struct tt__NetworkHostExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddress is a complexType.
///
struct tt__IPAddress
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the address is an IPv4 or IPv6 address.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":IPType.
    enum tt__IPType                      Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4Address" of XSD type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
/// Element "IPv6Address" of XSD type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      IPv6Address                    0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv4Address is a complexType.
///
struct tt__PrefixedIPv4Address
{
/// <PRE><BLOCKQUOTE>
///   IPv4 address
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
/// Element "PrefixLength" of XSD type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv6Address is a complexType.
///
struct tt__PrefixedIPv6Address
{
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
/// Element "PrefixLength" of XSD type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformation is a complexType.
///
struct tt__HostnameInformation
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether the hostname is obtained from DHCP or not.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the hostname.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type xs:token.
    xsd__token                           Name                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":HostnameInformationExtension.
    struct tt__HostnameInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformationExtension is a complexType.
///
struct tt__HostnameInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformation is a complexType.
///
struct tt__DNSInformation
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DNS information is retrieved from DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Search domain.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__token* is 0..unbounded.
   $int                                  __sizeSearchDomain             0;
/// Array xsd__token* of size 0..unbounded.
    xsd__token*                          SearchDomain                   0;
/// <PRE><BLOCKQUOTE>
///   List of DNS addresses received from DHCP.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__IPAddress* is 0..unbounded.
   $int                                  __sizeDNSFromDHCP              0;
/// Array struct tt__IPAddress* of size 0..unbounded.
    struct tt__IPAddress*                DNSFromDHCP                    0;
/// <PRE><BLOCKQUOTE>
///   List of manually entered DNS addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__IPAddress* is 0..unbounded.
   $int                                  __sizeDNSManual                0;
/// Array struct tt__IPAddress* of size 0..unbounded.
    struct tt__IPAddress*                DNSManual                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":DNSInformationExtension.
    struct tt__DNSInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformationExtension is a complexType.
///
struct tt__DNSInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformation is a complexType.
///
struct tt__NTPInformation
{
/// <PRE><BLOCKQUOTE>
///   Indicates if NTP information is to be retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of NTP addresses retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
   $int                                  __sizeNTPFromDHCP              0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              NTPFromDHCP                    0;
/// <PRE><BLOCKQUOTE>
///   List of manually entered NTP addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
   $int                                  __sizeNTPManual                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              NTPManual                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NTPInformationExtension.
    struct tt__NTPInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformationExtension is a complexType.
///
struct tt__NTPInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformation is a complexType.
///
struct tt__DynamicDNSInformation
{
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Time to live.
/// </BLOCKQUOTE></PRE>
/// Element "TTL" of XSD type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension.
    struct tt__DynamicDNSInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension is a complexType.
///
struct tt__DynamicDNSInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration is a complexType.
///
struct tt__NetworkInterfaceSetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean*                   Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Link" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    struct tt__NetworkInterfaceConnectionSetting*  Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
/// Element "MTU" of XSD type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4" of XSD type "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration.
    struct tt__IPv4NetworkInterfaceSetConfiguration*  IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv6" of XSD type "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration.
    struct tt__IPv6NetworkInterfaceSetConfiguration*  IPv6                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension.
    struct tt__NetworkInterfaceSetConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension is a complexType.
///
struct tt__NetworkInterfaceSetConfigurationExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Size of array of struct tt__Dot3Configuration* is 0..unbounded.
   $int                                  __sizeDot3                     0;
/// Array struct tt__Dot3Configuration* of size 0..unbounded.
    struct tt__Dot3Configuration*        Dot3                           0;
/// Size of array of struct tt__Dot11Configuration* is 0..unbounded.
   $int                                  __sizeDot11                    0;
/// Array struct tt__Dot11Configuration* of size 0..unbounded.
    struct tt__Dot11Configuration*       Dot11                          0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2.
    struct tt__NetworkInterfaceSetConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration is a complexType.
///
struct tt__IPv6NetworkInterfaceSetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean*                   Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
/// Element "AcceptRouterAdvert" of XSD type xs:boolean.
    enum xsd__boolean*                   AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv6 addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      Manual                         0;
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration*      DHCP                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration is a complexType.
///
struct tt__IPv4NetworkInterfaceSetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean*                   Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv4Address* is 0..unbounded.
   $int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv4Address* of size 0..unbounded.
    struct tt__PrefixedIPv4Address*      Manual                         0;
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type xs:boolean.
    enum xsd__boolean*                   DHCP                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkGateway is a complexType.
///
struct tt__NetworkGateway
{
/// <PRE><BLOCKQUOTE>
///   IPv4 address string.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__IPv4Address* is 0..unbounded.
   $int                                  __sizeIPv4Address              0;
/// Array tt__IPv4Address* of size 0..unbounded.
    tt__IPv4Address*                     IPv4Address                    0;
/// <PRE><BLOCKQUOTE>
///   IPv6 address string.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__IPv6Address* is 0..unbounded.
   $int                                  __sizeIPv6Address              0;
/// Array tt__IPv6Address* of size 0..unbounded.
    tt__IPv6Address*                     IPv6Address                    0;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration is a complexType.
///
struct tt__NetworkZeroConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier of network interface.
/// </BLOCKQUOTE></PRE>
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the zero-configuration is enabled or not.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The zero-configuration IPv4 address(es)
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__IPv4Address* is 0..unbounded.
   $int                                  __sizeAddresses                0;
/// Array tt__IPv4Address* of size 0..unbounded.
    tt__IPv4Address*                     Addresses                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension.
    struct tt__NetworkZeroConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension is a complexType.
///
struct tt__NetworkZeroConfigurationExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional array holding the configuration for the second and possibly further interfaces.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkZeroConfiguration* is 0..unbounded.
   $int                                  __sizeAdditional               0;
/// Array struct tt__NetworkZeroConfiguration* of size 0..unbounded.
    struct tt__NetworkZeroConfiguration*  Additional                     0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2.
    struct tt__NetworkZeroConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2 is a complexType.
///
struct tt__NetworkZeroConfigurationExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilter is a complexType.
///
struct tt__IPAddressFilter
{
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilterType.
    enum tt__IPAddressFilterType         Type                           1;	///< Required element.
/// Size of array of struct tt__PrefixedIPv4Address* is 0..unbounded.
   $int                                  __sizeIPv4Address              0;
/// Array struct tt__PrefixedIPv4Address* of size 0..unbounded.
    struct tt__PrefixedIPv4Address*      IPv4Address                    0;
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeIPv6Address              0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      IPv6Address                    0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilterExtension.
    struct tt__IPAddressFilterExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterExtension is a complexType.
///
struct tt__IPAddressFilterExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Configuration is a complexType.
///
struct tt__Dot11Configuration
{
/// Element "SSID" of XSD type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":Dot11StationMode.
    enum tt__Dot11StationMode            Mode                           1;	///< Required element.
/// Element "Alias" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Alias                          1;	///< Required element.
/// Element "Priority" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority.
    tt__NetworkInterfaceConfigPriority   Priority                       1;	///< Required element.
/// Element "Security" of XSD type "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration.
    struct tt__Dot11SecurityConfiguration*  Security                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration is a complexType.
///
struct tt__Dot11SecurityConfiguration
{
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":Dot11SecurityMode.
    enum tt__Dot11SecurityMode           Mode                           1;	///< Required element.
/// Element "Algorithm" of XSD type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                Algorithm                      0;	///< Optional element.
/// Element "PSK" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSKSet.
    struct tt__Dot11PSKSet*              PSK                            0;	///< Optional element.
/// Element "Dot1X" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1X                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension.
    struct tt__Dot11SecurityConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension is a complexType.
///
struct tt__Dot11SecurityConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSet is a complexType.
///
struct tt__Dot11PSKSet
{
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 the RSNA PSK consists of 256 bits, or 64 octets when represented in hex<br/>
///   Either Key or Passphrase shall be given, if both are supplied Key shall be used by the device and Passphrase ignored.
/// </BLOCKQUOTE></PRE>
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSK.
    tt__Dot11PSK*                        Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 a pass-phrase is a sequence of between 8 and 63 ASCII-encoded characters and
///   each character in the pass-phrase must have an encoding in the range of 32 to 126 (decimal),inclusive.<br/>
///   If only Passpharse is supplied the Key shall be derived using the algorithm described in IEEE802.11-2007 section H.4
/// </BLOCKQUOTE></PRE>
/// Element "Passphrase" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase.
    tt__Dot11PSKPassphrase               Passphrase                     0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension.
    struct tt__Dot11PSKSetExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension is a complexType.
///
struct tt__Dot11PSKSetExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2 is a complexType.
///
struct tt__NetworkInterfaceSetConfigurationExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Capabilities is a complexType.
///
struct tt__Dot11Capabilities
{
/// Element "TKIP" of XSD type xs:boolean.
    enum xsd__boolean                    TKIP                           1;	///< Required element.
/// Element "ScanAvailableNetworks" of XSD type xs:boolean.
    enum xsd__boolean                    ScanAvailableNetworks          1;	///< Required element.
/// Element "MultipleConfiguration" of XSD type xs:boolean.
    enum xsd__boolean                    MultipleConfiguration          1;	///< Required element.
/// Element "AdHocStationMode" of XSD type xs:boolean.
    enum xsd__boolean                    AdHocStationMode               1;	///< Required element.
/// Element "WEP" of XSD type xs:boolean.
    enum xsd__boolean                    WEP                            1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Status is a complexType.
///
struct tt__Dot11Status
{
/// Element "SSID" of XSD type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of XSD type xs:string.
    char*                                BSSID                          0;	///< Optional element.
/// Element "PairCipher" of XSD type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                PairCipher                     0;	///< Optional element.
/// Element "GroupCipher" of XSD type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                GroupCipher                    0;	///< Optional element.
/// Element "SignalStrength" of XSD type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "ActiveConfigAlias" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ActiveConfigAlias              1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworks is a complexType.
///
struct tt__Dot11AvailableNetworks
{
/// Element "SSID" of XSD type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of XSD type xs:string.
    char*                                BSSID                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   See IEEE802.11 7.3.2.25.2 for details.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__Dot11AuthAndMangementSuite* is 0..unbounded.
   $int                                  __sizeAuthAndMangementSuite    0;
/// Array enum tt__Dot11AuthAndMangementSuite* of size 0..unbounded.
    enum tt__Dot11AuthAndMangementSuite*  AuthAndMangementSuite          0;
/// Size of array of enum tt__Dot11Cipher* is 0..unbounded.
   $int                                  __sizePairCipher               0;
/// Array enum tt__Dot11Cipher* of size 0..unbounded.
    enum tt__Dot11Cipher*                PairCipher                     0;
/// Size of array of enum tt__Dot11Cipher* is 0..unbounded.
   $int                                  __sizeGroupCipher              0;
/// Array enum tt__Dot11Cipher* of size 0..unbounded.
    enum tt__Dot11Cipher*                GroupCipher                    0;
/// Element "SignalStrength" of XSD type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension.
    struct tt__Dot11AvailableNetworksExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension is a complexType.
///
struct tt__Dot11AvailableNetworksExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Capabilities is a complexType.
///
struct tt__Capabilities
{
/// <PRE><BLOCKQUOTE>
///   Analytics capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Analytics" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsCapabilities.
    struct tt__AnalyticsCapabilities*    Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Device capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Device" of XSD type "http://www.onvif.org/ver10/schema":DeviceCapabilities.
    struct tt__DeviceCapabilities*       Device                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Event capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Events" of XSD type "http://www.onvif.org/ver10/schema":EventCapabilities.
    struct tt__EventCapabilities*        Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Imaging capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Imaging" of XSD type "http://www.onvif.org/ver10/schema":ImagingCapabilities.
    struct tt__ImagingCapabilities*      Imaging                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Media capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Media" of XSD type "http://www.onvif.org/ver10/schema":MediaCapabilities.
    struct tt__MediaCapabilities*        Media                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   PTZ capabilities
/// </BLOCKQUOTE></PRE>
/// Element "PTZ" of XSD type "http://www.onvif.org/ver10/schema":PTZCapabilities.
    struct tt__PTZCapabilities*          PTZ                            0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":CapabilitiesExtension.
    struct tt__CapabilitiesExtension*    Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension is a complexType.
///
struct tt__CapabilitiesExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "DeviceIO" of XSD type "http://www.onvif.org/ver10/schema":DeviceIOCapabilities.
    struct tt__DeviceIOCapabilities*     DeviceIO                       0;	///< Optional element.
/// Element "Display" of XSD type "http://www.onvif.org/ver10/schema":DisplayCapabilities.
    struct tt__DisplayCapabilities*      Display                        0;	///< Optional element.
/// Element "Recording" of XSD type "http://www.onvif.org/ver10/schema":RecordingCapabilities.
    struct tt__RecordingCapabilities*    Recording                      0;	///< Optional element.
/// Element "Search" of XSD type "http://www.onvif.org/ver10/schema":SearchCapabilities.
    struct tt__SearchCapabilities*       Search                         0;	///< Optional element.
/// Element "Replay" of XSD type "http://www.onvif.org/ver10/schema":ReplayCapabilities.
    struct tt__ReplayCapabilities*       Replay                         0;	///< Optional element.
/// Element "Receiver" of XSD type "http://www.onvif.org/ver10/schema":ReceiverCapabilities.
    struct tt__ReceiverCapabilities*     Receiver                       0;	///< Optional element.
/// Element "AnalyticsDevice" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities.
    struct tt__AnalyticsDeviceCapabilities*  AnalyticsDevice                0;	///< Optional element.
/// Element "Extensions" of XSD type "http://www.onvif.org/ver10/schema":CapabilitiesExtension2.
    struct tt__CapabilitiesExtension2*   Extensions                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension2 is a complexType.
///
struct tt__CapabilitiesExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsCapabilities is a complexType.
///
struct tt__AnalyticsCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Analytics service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not rules are supported.
/// </BLOCKQUOTE></PRE>
/// Element "RuleSupport" of XSD type xs:boolean.
    enum xsd__boolean                    RuleSupport                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not modules are supported.
/// </BLOCKQUOTE></PRE>
/// Element "AnalyticsModuleSupport" of XSD type xs:boolean.
    enum xsd__boolean                    AnalyticsModuleSupport         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilities is a complexType.
///
struct tt__DeviceCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Device service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "Network" of XSD type "http://www.onvif.org/ver10/schema":NetworkCapabilities.
    struct tt__NetworkCapabilities*      Network                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "System" of XSD type "http://www.onvif.org/ver10/schema":SystemCapabilities.
    struct tt__SystemCapabilities*       System                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   I/O capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "IO" of XSD type "http://www.onvif.org/ver10/schema":IOCapabilities.
    struct tt__IOCapabilities*           IO                             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "Security" of XSD type "http://www.onvif.org/ver10/schema":SecurityCapabilities.
    struct tt__SecurityCapabilities*     Security                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension.
    struct tt__DeviceCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension is a complexType.
///
struct tt__DeviceCapabilitiesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":EventCapabilities is a complexType.
///
struct tt__EventCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Event service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
/// Element "WSSubscriptionPolicySupport" of XSD type xs:boolean.
    enum xsd__boolean                    WSSubscriptionPolicySupport    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
/// Element "WSPullPointSupport" of XSD type xs:boolean.
    enum xsd__boolean                    WSPullPointSupport             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
/// Element "WSPausableSubscriptionManagerInterfaceSupport" of XSD type xs:boolean.
    enum xsd__boolean                    WSPausableSubscriptionManagerInterfaceSupport 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilities is a complexType.
///
struct tt__IOCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Number of input connectors.
/// </BLOCKQUOTE></PRE>
/// Element "InputConnectors" of XSD type xs:int.
    int*                                 InputConnectors                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Number of relay outputs.
/// </BLOCKQUOTE></PRE>
/// Element "RelayOutputs" of XSD type xs:int.
    int*                                 RelayOutputs                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension.
    struct tt__IOCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension is a complexType.
///
struct tt__IOCapabilitiesExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Auxiliary" of XSD type xs:boolean.
    enum xsd__boolean*                   Auxiliary                      0;	///< Optional element.
/// Size of array of tt__AuxiliaryData* is 0..unbounded.
   $int                                  __sizeAuxiliaryCommands        0;
/// Array tt__AuxiliaryData* of size 0..unbounded.
    tt__AuxiliaryData*                   AuxiliaryCommands              0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2.
    struct tt__IOCapabilitiesExtension2*  Extension                      1;	///< Required element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2 is a complexType.
///
struct tt__IOCapabilitiesExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilities is a complexType.
///
struct tt__MediaCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Media service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "StreamingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities.
    struct tt__RealTimeStreamingCapabilities*  StreamingCapabilities          1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension.
    struct tt__MediaCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is a complexType.
///
struct tt__MediaCapabilitiesExtension
{
/// Element "ProfileCapabilities" of XSD type "http://www.onvif.org/ver10/schema":ProfileCapabilities.
    struct tt__ProfileCapabilities*      ProfileCapabilities            1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is a complexType.
///
struct tt__RealTimeStreamingCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP multicast is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RTPMulticast" of XSD type xs:boolean.
    enum xsd__boolean*                   RTPMulticast                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP over TCP is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_TCP" of XSD type xs:boolean.
    enum xsd__boolean*                   RTP_USCORETCP                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP/RTSP/TCP is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_RTSP_TCP" of XSD type xs:boolean.
    enum xsd__boolean*                   RTP_USCORERTSP_USCORETCP       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension.
    struct tt__RealTimeStreamingCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension is a complexType.
///
struct tt__RealTimeStreamingCapabilitiesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileCapabilities is a complexType.
///
struct tt__ProfileCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumNumberOfProfiles" of XSD type xs:int.
    int                                  MaximumNumberOfProfiles        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilities is a complexType.
///
struct tt__NetworkCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IP filtering is supported.
/// </BLOCKQUOTE></PRE>
/// Element "IPFilter" of XSD type xs:boolean.
    enum xsd__boolean*                   IPFilter                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not zeroconf is supported.
/// </BLOCKQUOTE></PRE>
/// Element "ZeroConfiguration" of XSD type xs:boolean.
    enum xsd__boolean*                   ZeroConfiguration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "IPVersion6" of XSD type xs:boolean.
    enum xsd__boolean*                   IPVersion6                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not is supported.
/// </BLOCKQUOTE></PRE>
/// Element "DynDNS" of XSD type xs:boolean.
    enum xsd__boolean*                   DynDNS                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension.
    struct tt__NetworkCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension is a complexType.
///
struct tt__NetworkCapabilitiesExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Dot11Configuration" of XSD type xs:boolean.
    enum xsd__boolean*                   Dot11Configuration             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2.
    struct tt__NetworkCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2 is a complexType.
///
struct tt__NetworkCapabilitiesExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilities is a complexType.
///
struct tt__SecurityCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.1 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "TLS1.1" of XSD type xs:boolean.
    enum xsd__boolean                    TLS1_x002e1                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.2 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "TLS1.2" of XSD type xs:boolean.
    enum xsd__boolean                    TLS1_x002e2                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not onboard key generation is supported.
/// </BLOCKQUOTE></PRE>
/// Element "OnboardKeyGeneration" of XSD type xs:boolean.
    enum xsd__boolean                    OnboardKeyGeneration           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not access policy configuration is supported.
/// </BLOCKQUOTE></PRE>
/// Element "AccessPolicyConfig" of XSD type xs:boolean.
    enum xsd__boolean                    AccessPolicyConfig             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security X.509 token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "X.509Token" of XSD type xs:boolean.
    enum xsd__boolean                    X_x002e509Token                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security SAML token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "SAMLToken" of XSD type xs:boolean.
    enum xsd__boolean                    SAMLToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security Kerberos token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "KerberosToken" of XSD type xs:boolean.
    enum xsd__boolean                    KerberosToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security REL token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RELToken" of XSD type xs:boolean.
    enum xsd__boolean                    RELToken                       1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension.
    struct tt__SecurityCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension is a complexType.
///
struct tt__SecurityCapabilitiesExtension
{
/// Element "TLS1.0" of XSD type xs:boolean.
    enum xsd__boolean                    TLS1_x002e0                    1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2.
    struct tt__SecurityCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2 is a complexType.
///
struct tt__SecurityCapabilitiesExtension2
{
/// Element "Dot1X" of XSD type xs:boolean.
    enum xsd__boolean                    Dot1X                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
/// Size of array of int* is 0..unbounded.
   $int                                  __sizeSupportedEAPMethod       0;
/// Array int* of size 0..unbounded.
    int*                                 SupportedEAPMethod             0;
/// Element "RemoteUserHandling" of XSD type xs:boolean.
    enum xsd__boolean                    RemoteUserHandling             1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilities is a complexType.
///
struct tt__SystemCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Discovery resolve requests are supported.
/// </BLOCKQUOTE></PRE>
/// Element "DiscoveryResolve" of XSD type xs:boolean.
    enum xsd__boolean                    DiscoveryResolve               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Discovery Bye is supported.
/// </BLOCKQUOTE></PRE>
/// Element "DiscoveryBye" of XSD type xs:boolean.
    enum xsd__boolean                    DiscoveryBye                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not remote discovery is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RemoteDiscovery" of XSD type xs:boolean.
    enum xsd__boolean                    RemoteDiscovery                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system backup is supported.
/// </BLOCKQUOTE></PRE>
/// Element "SystemBackup" of XSD type xs:boolean.
    enum xsd__boolean                    SystemBackup                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system logging is supported.
/// </BLOCKQUOTE></PRE>
/// Element "SystemLogging" of XSD type xs:boolean.
    enum xsd__boolean                    SystemLogging                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not firmware upgrade is supported.
/// </BLOCKQUOTE></PRE>
/// Element "FirmwareUpgrade" of XSD type xs:boolean.
    enum xsd__boolean                    FirmwareUpgrade                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates supported ONVIF version(s).
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__OnvifVersion* is 1..unbounded.
   $int                                  __sizeSupportedVersions        1;
/// Array struct tt__OnvifVersion* of size 1..unbounded.
    struct tt__OnvifVersion*             SupportedVersions              1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension.
    struct tt__SystemCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension is a complexType.
///
struct tt__SystemCapabilitiesExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "HttpFirmwareUpgrade" of XSD type xs:boolean.
    enum xsd__boolean*                   HttpFirmwareUpgrade            0;	///< Optional element.
/// Element "HttpSystemBackup" of XSD type xs:boolean.
    enum xsd__boolean*                   HttpSystemBackup               0;	///< Optional element.
/// Element "HttpSystemLogging" of XSD type xs:boolean.
    enum xsd__boolean*                   HttpSystemLogging              0;	///< Optional element.
/// Element "HttpSupportInformation" of XSD type xs:boolean.
    enum xsd__boolean*                   HttpSupportInformation         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2.
    struct tt__SystemCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2 is a complexType.
///
struct tt__SystemCapabilitiesExtension2
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":OnvifVersion is a complexType.
///
struct tt__OnvifVersion
{
/// <PRE><BLOCKQUOTE>
///   Major version number.
/// </BLOCKQUOTE></PRE>
/// Element "Major" of XSD type xs:int.
    int                                  Major                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Two digit minor version number (e.g. X.0.1 maps to "01" and X.2.1 maps to "21" where X stands for Major version number).
/// </BLOCKQUOTE></PRE>
/// Element "Minor" of XSD type xs:int.
    int                                  Minor                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingCapabilities is a complexType.
///
struct tt__ImagingCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Imaging service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZCapabilities is a complexType.
///
struct tt__PTZCapabilities
{
/// <PRE><BLOCKQUOTE>
///   PTZ service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceIOCapabilities is a complexType.
///
struct tt__DeviceIOCapabilities
{
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "VideoSources" of XSD type xs:int.
    int                                  VideoSources                   1;	///< Required element.
/// Element "VideoOutputs" of XSD type xs:int.
    int                                  VideoOutputs                   1;	///< Required element.
/// Element "AudioSources" of XSD type xs:int.
    int                                  AudioSources                   1;	///< Required element.
/// Element "AudioOutputs" of XSD type xs:int.
    int                                  AudioOutputs                   1;	///< Required element.
/// Element "RelayOutputs" of XSD type xs:int.
    int                                  RelayOutputs                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DisplayCapabilities is a complexType.
///
struct tt__DisplayCapabilities
{
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indication that the SetLayout command supports only predefined layouts.
/// </BLOCKQUOTE></PRE>
/// Element "FixedLayout" of XSD type xs:boolean.
    enum xsd__boolean                    FixedLayout                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingCapabilities is a complexType.
///
struct tt__RecordingCapabilities
{
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "ReceiverSource" of XSD type xs:boolean.
    enum xsd__boolean                    ReceiverSource                 1;	///< Required element.
/// Element "MediaProfileSource" of XSD type xs:boolean.
    enum xsd__boolean                    MediaProfileSource             1;	///< Required element.
/// Element "DynamicRecordings" of XSD type xs:boolean.
    enum xsd__boolean                    DynamicRecordings              1;	///< Required element.
/// Element "DynamicTracks" of XSD type xs:boolean.
    enum xsd__boolean                    DynamicTracks                  1;	///< Required element.
/// Element "MaxStringLength" of XSD type xs:int.
    int                                  MaxStringLength                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SearchCapabilities is a complexType.
///
struct tt__SearchCapabilities
{
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "MetadataSearch" of XSD type xs:boolean.
    enum xsd__boolean                    MetadataSearch                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReplayCapabilities is a complexType.
///
struct tt__ReplayCapabilities
{
/// <PRE><BLOCKQUOTE>
///   The address of the replay service.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverCapabilities is a complexType.
///
struct tt__ReceiverCapabilities
{
/// <PRE><BLOCKQUOTE>
///   The address of the receiver service.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP multicast streams.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_Multicast" of XSD type xs:boolean.
    enum xsd__boolean                    RTP_USCOREMulticast            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/TCP streams
/// </BLOCKQUOTE></PRE>
/// Element "RTP_TCP" of XSD type xs:boolean.
    enum xsd__boolean                    RTP_USCORETCP                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/RTSP/TCP streams.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_RTSP_TCP" of XSD type xs:boolean.
    enum xsd__boolean                    RTP_USCORERTSP_USCORETCP       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of receivers supported by the device.
/// </BLOCKQUOTE></PRE>
/// Element "SupportedReceivers" of XSD type xs:int.
    int                                  SupportedReceivers             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum allowed length for RTSP URIs.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumRTSPURILength" of XSD type xs:int.
    int                                  MaximumRTSPURILength           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities is a complexType.
///
struct tt__AnalyticsDeviceCapabilities
{
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Obsolete property.
/// </BLOCKQUOTE></PRE>
/// Element "RuleSupport" of XSD type xs:boolean.
    enum xsd__boolean*                   RuleSupport                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension.
    struct tt__AnalyticsDeviceExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension is a complexType.
///
struct tt__AnalyticsDeviceExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLog is a complexType.
///
struct tt__SystemLog
{
/// <PRE><BLOCKQUOTE>
///   The log information as attachment data.
/// </BLOCKQUOTE></PRE>
/// Element "Binary" of XSD type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The log information as character data.
/// </BLOCKQUOTE></PRE>
/// Element "String" of XSD type xs:string.
    char*                                String                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportInformation is a complexType.
///
struct tt__SupportInformation
{
/// <PRE><BLOCKQUOTE>
///   The support information as attachment data.
/// </BLOCKQUOTE></PRE>
/// Element "Binary" of XSD type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The support information as character data.
/// </BLOCKQUOTE></PRE>
/// Element "String" of XSD type xs:string.
    char*                                String                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BinaryData is a complexType.
///
struct tt__BinaryData
{
/// <PRE><BLOCKQUOTE>
///   base64 encoded binary data.
/// </BLOCKQUOTE></PRE>
/// Element "Data" of XSD type xs:base64Binary.
    struct xsd__base64Binary             Data                           1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @char*                                xmime__contentType             0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":AttachmentData is a complexType.
///
struct tt__AttachmentData
{
/// Imported element reference "http://www.w3.org/2004/08/xop/include":Include.
    _xop__Include                        xop__Include                   1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @char*                                xmime__contentType             0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":BackupFile is a complexType.
///
struct tt__BackupFile
{
/// Element "Name" of XSD type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Data                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUriList is a complexType.
///
struct tt__SystemLogUriList
{
/// Size of array of struct tt__SystemLogUri* is 0..unbounded.
   $int                                  __sizeSystemLog                0;
/// Array struct tt__SystemLogUri* of size 0..unbounded.
    struct tt__SystemLogUri*             SystemLog                      0;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUri is a complexType.
///
struct tt__SystemLogUri
{
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               Type                           1;	///< Required element.
/// Element "Uri" of XSD type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTime is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   General date time inforamtion returned by the GetSystemDateTime method.
/// </BLOCKQUOTE></PRE>
struct tt__SystemDateTime
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the time is set manully or through NTP.
/// </BLOCKQUOTE></PRE>
/// Element "DateTimeType" of XSD type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative indicator whether daylight savings is currently on/off.
/// </BLOCKQUOTE></PRE>
/// Element "DaylightSavings" of XSD type xs:boolean.
    enum xsd__boolean                    DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Timezone information in Posix format.
/// </BLOCKQUOTE></PRE>
/// Element "TimeZone" of XSD type "http://www.onvif.org/ver10/schema":TimeZone.
    struct tt__TimeZone*                 TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Current system date and time in UTC format. This field is mandatory since version 2.0.
/// </BLOCKQUOTE></PRE>
/// Element "UTCDateTime" of XSD type "http://www.onvif.org/ver10/schema":DateTime.
    struct tt__DateTime*                 UTCDateTime                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in local format.
/// </BLOCKQUOTE></PRE>
/// Element "LocalDateTime" of XSD type "http://www.onvif.org/ver10/schema":DateTime.
    struct tt__DateTime*                 LocalDateTime                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SystemDateTimeExtension.
    struct tt__SystemDateTimeExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTimeExtension is a complexType.
///
struct tt__SystemDateTimeExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":DateTime is a complexType.
///
struct tt__DateTime
{
/// Element "Time" of XSD type "http://www.onvif.org/ver10/schema":Time.
    struct tt__Time*                     Time                           1;	///< Required element.
/// Element "Date" of XSD type "http://www.onvif.org/ver10/schema":Date.
    struct tt__Date*                     Date                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Date is a complexType.
///
struct tt__Date
{
/// Element "Year" of XSD type xs:int.
    int                                  Year                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 12.
/// </BLOCKQUOTE></PRE>
/// Element "Month" of XSD type xs:int.
    int                                  Month                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 31.
/// </BLOCKQUOTE></PRE>
/// Element "Day" of XSD type xs:int.
    int                                  Day                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Time is a complexType.
///
struct tt__Time
{
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 23.
/// </BLOCKQUOTE></PRE>
/// Element "Hour" of XSD type xs:int.
    int                                  Hour                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 59.
/// </BLOCKQUOTE></PRE>
/// Element "Minute" of XSD type xs:int.
    int                                  Minute                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 61 (typically 59).
/// </BLOCKQUOTE></PRE>
/// Element "Second" of XSD type xs:int.
    int                                  Second                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":TimeZone is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3<br/>
///   Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3<br/>
///   CET = designation for standard time when daylight saving is not in force<br/>
///   -1 = offset in hours = negative so 1 hour east of Greenwich meridian<br/>
///   CEST = designation when daylight saving is in force ("Central European Summer Time")<br/>
///   , = no offset number between code and comma, so default to one hour ahead for daylight saving<br/>
///   M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month)<br/>
///   /2, = the local time when the switch occurs = 2 a.m. in this case<br/>
///   M10.5.0 = when daylight saving ends = the last Sunday in October.<br/>
///   /3, = the local time when the switch occurs = 3 a.m. in this case<br/>
/// </BLOCKQUOTE></PRE>
struct tt__TimeZone
{
/// <PRE><BLOCKQUOTE>
///   Posix timezone string.
/// </BLOCKQUOTE></PRE>
/// Element "TZ" of XSD type xs:token.
    xsd__token                           TZ                             1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":RemoteUser is a complexType.
///
struct tt__RemoteUser
{
/// Element "Username" of XSD type xs:string.
    char*                                Username                       1;	///< Required element.
/// Element "Password" of XSD type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element "UseDerivedPassword" of XSD type xs:boolean.
    enum xsd__boolean                    UseDerivedPassword             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":User is a complexType.
///
struct tt__User
{
/// <PRE><BLOCKQUOTE>
///   Username string.
/// </BLOCKQUOTE></PRE>
/// Element "Username" of XSD type xs:string.
    char*                                Username                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Password string.
/// </BLOCKQUOTE></PRE>
/// Element "Password" of XSD type xs:string.
    char*                                Password                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User level string.
/// </BLOCKQUOTE></PRE>
/// Element "UserLevel" of XSD type "http://www.onvif.org/ver10/schema":UserLevel.
    enum tt__UserLevel                   UserLevel                      1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":UserExtension.
    struct tt__UserExtension*            Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":UserExtension is a complexType.
///
struct tt__UserExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateGenerationParameters is a complexType.
///
struct tt__CertificateGenerationParameters
{
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// Element "Subject" of XSD type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// Element "ValidNotBefore" of XSD type xs:token.
    xsd__token                           ValidNotBefore                 0;	///< Optional element.
/// Element "ValidNotAfter" of XSD type xs:token.
    xsd__token                           ValidNotAfter                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension.
    struct tt__CertificateGenerationParametersExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension is a complexType.
///
struct tt__CertificateGenerationParametersExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Certificate is a complexType.
///
struct tt__Certificate
{
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
/// Element "Certificate" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Certificate                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateStatus is a complexType.
///
struct tt__CertificateStatus
{
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a certificate is used in a HTTPS configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Status" of XSD type xs:boolean.
    enum xsd__boolean                    Status                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateWithPrivateKey is a complexType.
///
struct tt__CertificateWithPrivateKey
{
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// Element "Certificate" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Certificate                    1;	///< Required element.
/// Element "PrivateKey" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               PrivateKey                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformation is a complexType.
///
struct tt__CertificateInformation
{
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element "IssuerDN" of XSD type xs:string.
    char*                                IssuerDN                       0;	///< Optional element.
/// Element "SubjectDN" of XSD type xs:string.
    char*                                SubjectDN                      0;	///< Optional element.
/// Element "KeyUsage" of XSD type "http://www.onvif.org/ver10/schema":CertificateUsage.
    struct tt__CertificateUsage*         KeyUsage                       0;	///< Optional element.
/// Element "ExtendedKeyUsage" of XSD type "http://www.onvif.org/ver10/schema":CertificateUsage.
    struct tt__CertificateUsage*         ExtendedKeyUsage               0;	///< Optional element.
/// Element "KeyLength" of XSD type xs:int.
    int*                                 KeyLength                      0;	///< Optional element.
/// Element "Version" of XSD type xs:string.
    char*                                Version                        0;	///< Optional element.
/// Element "SerialNum" of XSD type xs:string.
    char*                                SerialNum                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Validity Range is from "NotBefore" to "NotAfter"; the corresponding DateTimeRange is from "From" to "Until"
/// </BLOCKQUOTE></PRE>
/// Element "SignatureAlgorithm" of XSD type xs:string.
    char*                                SignatureAlgorithm             0;	///< Optional element.
/// Element "Validity" of XSD type "http://www.onvif.org/ver10/schema":DateTimeRange.
    struct tt__DateTimeRange*            Validity                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":CertificateInformationExtension.
    struct tt__CertificateInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformationExtension is a complexType.
///
struct tt__CertificateInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfiguration is a complexType.
///
struct tt__Dot1XConfiguration
{
/// Element "Dot1XConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// Element "Identity" of XSD type xs:string.
    char*                                Identity                       1;	///< Required element.
/// Element "AnonymousID" of XSD type xs:string.
    char*                                AnonymousID                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   EAP Method type as defined in <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
/// Element "EAPMethod" of XSD type xs:int.
    int                                  EAPMethod                      1;	///< Required element.
/// Size of array of xsd__token* is 0..unbounded.
   $int                                  __sizeCACertificateID          0;
/// Array xsd__token* of size 0..unbounded.
    xsd__token*                          CACertificateID                0;
/// Element "EAPMethodConfiguration" of XSD type "http://www.onvif.org/ver10/schema":EAPMethodConfiguration.
    struct tt__EAPMethodConfiguration*   EAPMethodConfiguration         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension.
    struct tt__Dot1XConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension is a complexType.
///
struct tt__Dot1XConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":EAPMethodConfiguration is a complexType.
///
struct tt__EAPMethodConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Confgiuration information for TLS Method.
/// </BLOCKQUOTE></PRE>
/// Element "TLSConfiguration" of XSD type "http://www.onvif.org/ver10/schema":TLSConfiguration.
    struct tt__TLSConfiguration*         TLSConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Password for those EAP Methods that require a password. The password shall never be returned on a get method.
/// </BLOCKQUOTE></PRE>
/// Element "Password" of XSD type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":EapMethodExtension.
    struct tt__EapMethodExtension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":EapMethodExtension is a complexType.
///
struct tt__EapMethodExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":TLSConfiguration is a complexType.
///
struct tt__TLSConfiguration
{
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":GenericEapPwdConfigurationExtension is a complexType.
///
struct tt__GenericEapPwdConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RelayOutputSettings is a complexType.
///
struct tt__RelayOutputSettings
{
/// <PRE><BLOCKQUOTE>
///   'Bistable' or 'Monostable'
///   <ul>
///   <li>Bistable After setting the state, the relay remains in this state.</li>
///   <li>Monostable After setting the state, the relay returns to its idle state after the specified time.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":RelayMode.
    enum tt__RelayMode                   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Time after which the relay returns to its idle state if it is in monostable mode. If the Mode field is set to bistable mode the value of the parameter can be ignored.
/// </BLOCKQUOTE></PRE>
/// Element "DelayTime" of XSD type xs:duration.
    xsd__duration                        DelayTime                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   'open' or 'closed'
///   <ul>
///   <li>'open' means that the relay is open when the relay state is set to 'inactive' through the trigger command and closed when the state is set to 'active' through the same command.</li>
///   <li>'closed' means that the relay is closed when the relay state is set to 'inactive' through the trigger command and open when the state is set to 'active' through the same command.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "IdleState" of XSD type "http://www.onvif.org/ver10/schema":RelayIdleState.
    enum tt__RelayIdleState              IdleState                      1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension is a complexType.
///
struct tt__PTZNodeExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Detail of supported Preset Tour feature.
/// </BLOCKQUOTE></PRE>
/// Element "SupportedPresetTour" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSupported.
    struct tt__PTZPresetTourSupported*   SupportedPresetTour            0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZNodeExtension2.
    struct tt__PTZNodeExtension2*        Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension2 is a complexType.
///
struct tt__PTZNodeExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupported is a complexType.
///
struct tt__PTZPresetTourSupported
{
/// <PRE><BLOCKQUOTE>
///   Indicates number of preset tours that can be created. Required preset tour operations shall be available for this PTZ Node if one or more preset tour is supported.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumNumberOfPresetTours" of XSD type xs:int.
    int                                  MaximumNumberOfPresetTours     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates which preset tour operations are available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__PTZPresetTourOperation* is 0..unbounded.
   $int                                  __sizePTZPresetTourOperation   0;
/// Array enum tt__PTZPresetTourOperation* of size 0..unbounded.
    enum tt__PTZPresetTourOperation*     PTZPresetTourOperation         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension.
    struct tt__PTZPresetTourSupportedExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension is a complexType.
///
struct tt__PTZPresetTourSupportedExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension is a complexType.
///
struct tt__PTZConfigurationExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure PT Control Direction related features.
/// </BLOCKQUOTE></PRE>
/// Element "PTControlDirection" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirection.
    struct tt__PTControlDirection*       PTControlDirection             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2.
    struct tt__PTZConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2 is a complexType.
///
struct tt__PTZConfigurationExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirection is a complexType.
///
struct tt__PTControlDirection
{
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for E-Flip.
/// </BLOCKQUOTE></PRE>
/// Element "EFlip" of XSD type "http://www.onvif.org/ver10/schema":EFlip.
    struct tt__EFlip*                    EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for reversing of PT Control Direction.
/// </BLOCKQUOTE></PRE>
/// Element "Reverse" of XSD type "http://www.onvif.org/ver10/schema":Reverse.
    struct tt__Reverse*                  Reverse                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirectionExtension.
    struct tt__PTControlDirectionExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionExtension is a complexType.
///
struct tt__PTControlDirectionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":EFlip is a complexType.
///
struct tt__EFlip
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable E-Flip feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":EFlipMode.
    enum tt__EFlipMode                   Mode                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Reverse is a complexType.
///
struct tt__Reverse
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Reverse feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ReverseMode.
    enum tt__ReverseMode                 Mode                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions is a complexType.
///
struct tt__PTZConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   A list of supported coordinate systems including their range limitations.
/// </BLOCKQUOTE></PRE>
/// Element "Spaces" of XSD type "http://www.onvif.org/ver10/schema":PTZSpaces.
    struct tt__PTZSpaces*                Spaces                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A timeout Range within which Timeouts are accepted by the PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Element "PTZTimeout" of XSD type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            PTZTimeout                     1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Supported options for PT Direction Control.
/// </BLOCKQUOTE></PRE>
/// Element "PTControlDirection" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirectionOptions.
    struct tt__PTControlDirectionOptions*  PTControlDirection             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2.
    struct tt__PTZConfigurationOptions2*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The list of acceleration ramps supported by the device. The
///   smallest acceleration value corresponds to the minimal index, the
///   highest acceleration corresponds to the maximum index.
/// </BLOCKQUOTE></PRE>
/// Attribute "PTZRamps" of XSD type "http://www.onvif.org/ver10/schema":IntAttrList.
   @tt__IntAttrList                      PTZRamps                       0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2 is a complexType.
///
struct tt__PTZConfigurationOptions2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptions is a complexType.
///
struct tt__PTControlDirectionOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for EFlip feature.
/// </BLOCKQUOTE></PRE>
/// Element "EFlip" of XSD type "http://www.onvif.org/ver10/schema":EFlipOptions.
    struct tt__EFlipOptions*             EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Reverse feature.
/// </BLOCKQUOTE></PRE>
/// Element "Reverse" of XSD type "http://www.onvif.org/ver10/schema":ReverseOptions.
    struct tt__ReverseOptions*           Reverse                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension.
    struct tt__PTControlDirectionOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension is a complexType.
///
struct tt__PTControlDirectionOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptions is a complexType.
///
struct tt__EFlipOptions
{
/// <PRE><BLOCKQUOTE>
///   Options of EFlip mode parameter.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__EFlipMode* is 0..unbounded.
   $int                                  __sizeMode                     0;
/// Array enum tt__EFlipMode* of size 0..unbounded.
    enum tt__EFlipMode*                  Mode                           0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":EFlipOptionsExtension.
    struct tt__EFlipOptionsExtension*    Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptionsExtension is a complexType.
///
struct tt__EFlipOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptions is a complexType.
///
struct tt__ReverseOptions
{
/// <PRE><BLOCKQUOTE>
///   Options of Reverse mode parameter.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__ReverseMode* is 0..unbounded.
   $int                                  __sizeMode                     0;
/// Array enum tt__ReverseMode* of size 0..unbounded.
    enum tt__ReverseMode*                Mode                           0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ReverseOptionsExtension.
    struct tt__ReverseOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptionsExtension is a complexType.
///
struct tt__ReverseOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PanTiltLimits is a complexType.
///
struct tt__PanTiltLimits
{
/// <PRE><BLOCKQUOTE>
///   A range of pan tilt limits.
/// </BLOCKQUOTE></PRE>
/// Element "Range" of XSD type "http://www.onvif.org/ver10/schema":Space2DDescription.
    struct tt__Space2DDescription*       Range                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ZoomLimits is a complexType.
///
struct tt__ZoomLimits
{
/// <PRE><BLOCKQUOTE>
///   A range of zoom limit
/// </BLOCKQUOTE></PRE>
/// Element "Range" of XSD type "http://www.onvif.org/ver10/schema":Space1DDescription.
    struct tt__Space1DDescription*       Range                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpaces is a complexType.
///
struct tt__PTZSpaces
{
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt Position space is provided by every PTZ node that supports absolute Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the PTZ unit normalized to the range -1 to 1 resulting in the following space description.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space2DDescription* is 0..unbounded.
   $int                                  __sizeAbsolutePanTiltPositionSpace 0;
/// Array struct tt__Space2DDescription* of size 0..unbounded.
    struct tt__Space2DDescription*       AbsolutePanTiltPositionSpace   0;
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Position Space is provided by every PTZ node that supports absolute Zoom, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the Zoom normalized to the range 0 (wide) to 1 (tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
   $int                                  __sizeAbsoluteZoomPositionSpace 0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       AbsoluteZoomPositionSpace      0;
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt translation space is provided by every PTZ node that supports relative Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full positive and negative translation range of the PTZ unit normalized to the range -1 to 1, where positive translation would mean clockwise rotation or movement in right/up direction resulting in the following space description.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space2DDescription* is 0..unbounded.
   $int                                  __sizeRelativePanTiltTranslationSpace 0;
/// Array struct tt__Space2DDescription* of size 0..unbounded.
    struct tt__Space2DDescription*       RelativePanTiltTranslationSpace 0;
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Translation Space is provided by every PTZ node that supports relative Zoom, since it does not relate to a specific physical range. Instead, the corresponding absolute range should be defined as the full positive and negative translation range of the Zoom normalized to the range -1 to1, where a positive translation maps to a movement in TELE direction. The translation is signed to indicate direction (negative is to wide, positive is to tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension. This results in the following space description.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
   $int                                  __sizeRelativeZoomTranslationSpace 0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       RelativeZoomTranslationSpace   0;
/// <PRE><BLOCKQUOTE>
///   The generic Pan/Tilt velocity space shall be provided by every PTZ node, since it does not relate to a specific physical range. Instead, the range should be defined as a range of the PTZ units speed normalized to the range -1 to 1, where a positive velocity would map to clockwise rotation or movement in the right/up direction. A signed speed can be independently specified for the pan and tilt component resulting in the following space description.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space2DDescription* is 0..unbounded.
   $int                                  __sizeContinuousPanTiltVelocitySpace 0;
/// Array struct tt__Space2DDescription* of size 0..unbounded.
    struct tt__Space2DDescription*       ContinuousPanTiltVelocitySpace 0;
/// <PRE><BLOCKQUOTE>
///   The generic zoom velocity space specifies a zoom factor velocity without knowing the underlying physical model. The range should be normalized from -1 to 1, where a positive velocity would map to TELE direction. A generic zoom velocity space description resembles the following.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
   $int                                  __sizeContinuousZoomVelocitySpace 0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       ContinuousZoomVelocitySpace    0;
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Pan/Tilt movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information. The speed of a combined Pan/Tilt movement is represented by a single non-negative scalar value.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
   $int                                  __sizePanTiltSpeedSpace        0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       PanTiltSpeedSpace              0;
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Zoom movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
   $int                                  __sizeZoomSpeedSpace           0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       ZoomSpeedSpace                 0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZSpacesExtension.
    struct tt__PTZSpacesExtension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpacesExtension is a complexType.
///
struct tt__PTZSpacesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Space2DDescription is a complexType.
///
struct tt__Space2DDescription
{
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
/// Element "URI" of XSD type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
/// Element "XRange" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of y-axis.
/// </BLOCKQUOTE></PRE>
/// Element "YRange" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YRange                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Space1DDescription is a complexType.
///
struct tt__Space1DDescription
{
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
/// Element "URI" of XSD type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
/// Element "XRange" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               XRange                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector2D is a complexType.
///
struct tt__Vector2D
{
/// Attribute "x" of XSD type xs:float.
   @float                                x                              1;	///< Required attribute.
/// Attribute "y" of XSD type xs:float.
   @float                                y                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Pan/tilt coordinate space selector. The following options are defined:<ul>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Attribute "space" of XSD type xs:anyURI.
   @xsd__anyURI                          space                          0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector1D is a complexType.
///
struct tt__Vector1D
{
/// Attribute "x" of XSD type xs:float.
   @float                                x                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Pan/tilt coordinate space selector. The following options are defined:<ul style="">
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Attribute "space" of XSD type xs:anyURI.
   @xsd__anyURI                          space                          0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZVector is a complexType.
///
struct tt__PTZVector
{
/// <PRE><BLOCKQUOTE>
///   Pan and tilt position. The x component corresponds to pan and the y component to tilt.
/// </BLOCKQUOTE></PRE>
/// Element "PanTilt" of XSD type "http://www.onvif.org/ver10/schema":Vector2D.
    struct tt__Vector2D*                 PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom position.
/// </BLOCKQUOTE></PRE>
/// Element "Zoom" of XSD type "http://www.onvif.org/ver10/schema":Vector1D.
    struct tt__Vector1D*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpeed is a complexType.
///
struct tt__PTZSpeed
{
/// <PRE><BLOCKQUOTE>
///   Pan and tilt speed. The x component corresponds to pan and the y component to tilt. If omitted in a request, the current (if any) PanTilt movement should not be affected.
/// </BLOCKQUOTE></PRE>
/// Element "PanTilt" of XSD type "http://www.onvif.org/ver10/schema":Vector2D.
    struct tt__Vector2D*                 PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom speed. If omitted in a request, the current (if any) Zoom movement should not be affected.
/// </BLOCKQUOTE></PRE>
/// Element "Zoom" of XSD type "http://www.onvif.org/ver10/schema":Vector1D.
    struct tt__Vector1D*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatus is a complexType.
///
struct tt__PTZStatus
{
/// <PRE><BLOCKQUOTE>
///   Specifies the absolute position of the PTZ unit together with the Space references. The default absolute spaces of the corresponding PTZ configuration MUST be referenced within the Position element.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                Position                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Pan/Tilt/Zoom device unit is currently moving, idle or in an unknown state.
/// </BLOCKQUOTE></PRE>
/// Element "MoveStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZMoveStatus.
    struct tt__PTZMoveStatus*            MoveStatus                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   States a current PTZ error.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    char*                                Error                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Specifies the UTC time when this status was generated.
/// </BLOCKQUOTE></PRE>
/// Element "UtcTime" of XSD type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPreset is a complexType.
///
struct tt__PTZPreset
{
/// <PRE><BLOCKQUOTE>
///   A list of preset position name.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of preset position.
/// </BLOCKQUOTE></PRE>
/// Element "PTZPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                PTZPosition                    0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZMoveStatus is a complexType.
///
struct tt__PTZMoveStatus
{

/// </BLOCKQUOTE></PRE>
/// Element "PanTilt" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 PanTilt                        0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "Zoom" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PresetTour is a complexType.
///
struct tt__PresetTour
{
/// <PRE><BLOCKQUOTE>
///   Readable name of the preset tour.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Read only parameters to indicate the status of the preset tour.
/// </BLOCKQUOTE></PRE>
/// Element "Status" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStatus.
    struct tt__PTZPresetTourStatus*      Status                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Auto Start flag of the preset tour. True allows the preset tour to be activated always.
/// </BLOCKQUOTE></PRE>
/// Element "AutoStart" of XSD type xs:boolean.
    enum xsd__boolean                    AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameters to specify the detail behavior of the preset tour.
/// </BLOCKQUOTE></PRE>
/// Element "StartingCondition" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition.
    struct tt__PTZPresetTourStartingCondition*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of detail of touring spots including preset positions.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PTZPresetTourSpot* is 0..unbounded.
   $int                                  __sizeTourSpot                 0;
/// Array struct tt__PTZPresetTourSpot* of size 0..unbounded.
    struct tt__PTZPresetTourSpot*        TourSpot                       0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourExtension.
    struct tt__PTZPresetTourExtension*   Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of this preset tour.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourExtension is a complexType.
///
struct tt__PTZPresetTourExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpot is a complexType.
///
struct tt__PTZPresetTourSpot
{
/// <PRE><BLOCKQUOTE>
///   Detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "PresetDetail" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail.
    struct tt__PTZPresetTourPresetDetail*  PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify Pan/Tilt and Zoom speed on moving toward this tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 Speed                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify time duration of staying on this tour sport.
/// </BLOCKQUOTE></PRE>
/// Element "StayTime" of XSD type xs:duration.
    xsd__duration*                       StayTime                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension.
    struct tt__PTZPresetTourSpotExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension is a complexType.
///
struct tt__PTZPresetTourSpotExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail is a complexType.
///
struct tt__PTZPresetTourPresetDetail
{
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_PTZPresetTourPresetDetail;	///< Union _tt__union_PTZPresetTourPresetDetail selector: set to SOAP_UNION__tt__union_PTZPresetTourPresetDetail_<fieldname>
    union _tt__union_PTZPresetTourPresetDetail
    {
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with Preset Token defined in advance.
/// </BLOCKQUOTE></PRE>
/// Element "PresetToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with the home position of this PTZ Node. "False" to this parameter shall be treated as an invalid argument.
/// </BLOCKQUOTE></PRE>
/// Element "Home" of XSD type xs:boolean.
    enum xsd__boolean                    Home                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with vector of PTZ node directly.
/// </BLOCKQUOTE></PRE>
/// Element "PTZPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                PTZPosition                    1;	///< Required element.
/// Element "TypeExtension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension.
    struct tt__PTZPresetTourTypeExtension*  TypeExtension                  1;	///< Required element.
    }                                    union_PTZPresetTourPresetDetail;
//  END OF CHOICE
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension is a complexType.
///
struct tt__PTZPresetTourTypeExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatus is a complexType.
///
struct tt__PTZPresetTourStatus
{
/// <PRE><BLOCKQUOTE>
///   Indicates state of this preset tour by Idle/Touring/Paused.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourState.
    enum tt__PTZPresetTourState          State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates a tour spot currently staying.
/// </BLOCKQUOTE></PRE>
/// Element "CurrentTourSpot" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSpot.
    struct tt__PTZPresetTourSpot*        CurrentTourSpot                0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension.
    struct tt__PTZPresetTourStatusExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension is a complexType.
///
struct tt__PTZPresetTourStatusExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition is a complexType.
///
struct tt__PTZPresetTourStartingCondition
{
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how many times the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringTime" of XSD type xs:int.
    int*                                 RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how long time duration the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringDuration" of XSD type xs:duration.
    xsd__duration*                       RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to choose which direction the preset tour goes. Forward shall be chosen in case it is omitted.
/// </BLOCKQUOTE></PRE>
/// Element "Direction" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourDirection.
    enum tt__PTZPresetTourDirection*     Direction                      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension.
    struct tt__PTZPresetTourStartingConditionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Execute presets in random order. If set to true and Direction is also present, Direction will be ignored and presets of the Tour will be recalled randomly.
/// </BLOCKQUOTE></PRE>
/// Attribute "RandomPresetOrder" of XSD type xs:boolean.
   @enum xsd__boolean*                   RandomPresetOrder              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension is a complexType.
///
struct tt__PTZPresetTourStartingConditionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOptions is a complexType.
///
struct tt__PTZPresetTourOptions
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not the AutoStart is supported.
/// </BLOCKQUOTE></PRE>
/// Element "AutoStart" of XSD type xs:boolean.
    enum xsd__boolean                    AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Starting Condition.
/// </BLOCKQUOTE></PRE>
/// Element "StartingCondition" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions.
    struct tt__PTZPresetTourStartingConditionOptions*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Spot.
/// </BLOCKQUOTE></PRE>
/// Element "TourSpot" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions.
    struct tt__PTZPresetTourSpotOptions*  TourSpot                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions is a complexType.
///
struct tt__PTZPresetTourSpotOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "PresetDetail" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions.
    struct tt__PTZPresetTourPresetDetailOptions*  PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported range of stay time for a tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "StayTime" of XSD type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            StayTime                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions is a complexType.
///
struct tt__PTZPresetTourPresetDetailOptions
{
/// <PRE><BLOCKQUOTE>
///   A list of available Preset Tokens for tour spots.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 0..unbounded.
   $int                                  __sizePresetToken              0;
/// Array tt__ReferenceToken* of size 0..unbounded.
    tt__ReferenceToken*                  PresetToken                    0;
/// <PRE><BLOCKQUOTE>
///   An option to indicate Home postion for tour spots.
/// </BLOCKQUOTE></PRE>
/// Element "Home" of XSD type xs:boolean.
    enum xsd__boolean*                   Home                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Pan and Tilt for tour spots.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltPositionSpace" of XSD type "http://www.onvif.org/ver10/schema":Space2DDescription.
    struct tt__Space2DDescription*       PanTiltPositionSpace           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Zoom for a tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomPositionSpace" of XSD type "http://www.onvif.org/ver10/schema":Space1DDescription.
    struct tt__Space1DDescription*       ZoomPositionSpace              0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension.
    struct tt__PTZPresetTourPresetDetailOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension is a complexType.
///
struct tt__PTZPresetTourPresetDetailOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions is a complexType.
///
struct tt__PTZPresetTourStartingConditionOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Time.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringTime" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Duration.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringDuration" of XSD type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Direction of Preset Tour.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__PTZPresetTourDirection* is 0..unbounded.
   $int                                  __sizeDirection                0;
/// Array enum tt__PTZPresetTourDirection* of size 0..unbounded.
    enum tt__PTZPresetTourDirection*     Direction                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension.
    struct tt__PTZPresetTourStartingConditionOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension is a complexType.
///
struct tt__PTZPresetTourStartingConditionOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus is a complexType.
///
struct tt__ImagingStatus
{
/// Element "FocusStatus" of XSD type "http://www.onvif.org/ver10/schema":FocusStatus.
    struct tt__FocusStatus*              FocusStatus                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus is a complexType.
///
struct tt__FocusStatus
{
/// <PRE><BLOCKQUOTE>
///   Status of focus position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Status of focus MoveStatus.
/// </BLOCKQUOTE></PRE>
/// Element "MoveStatus" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Error status of focus.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    char*                                Error                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration is a complexType.
///
struct tt__FocusConfiguration
{
/// Element "AutoFocusMode" of XSD type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element "DefaultSpeed" of XSD type xs:float.
    float                                DefaultSpeed                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus near limit (unit: meter).
/// </BLOCKQUOTE></PRE>
/// Element "NearLimit" of XSD type xs:float.
    float                                NearLimit                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus far limit (unit: meter).
///   If set to 0.0, infinity will be used.
/// </BLOCKQUOTE></PRE>
/// Element "FarLimit" of XSD type xs:float.
    float                                FarLimit                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettings is a complexType.
///
struct tt__ImagingSettings
{
/// <PRE><BLOCKQUOTE>
///   Enabled/disabled BLC mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensation.
    struct tt__BacklightCompensation*    BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image brightness (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Brightness" of XSD type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Color saturation of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "ColorSaturation" of XSD type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contrast of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Contrast" of XSD type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Exposure mode of the device.
/// </BLOCKQUOTE></PRE>
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":Exposure.
    struct tt__Exposure*                 Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Focus configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusConfiguration.
    struct tt__FocusConfiguration*       Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Infrared Cutoff Filter settings.
/// </BLOCKQUOTE></PRE>
/// Element "IrCutFilter" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Sharpness of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Sharpness" of XSD type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   WDR settings.
/// </BLOCKQUOTE></PRE>
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRange.
    struct tt__WideDynamicRange*         WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   White balance settings.
/// </BLOCKQUOTE></PRE>
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalance.
    struct tt__WhiteBalance*             WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension.
    struct tt__ImagingSettingsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension is a complexType.
///
struct tt__ImagingSettingsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Exposure is a complexType.
///
struct tt__Exposure
{
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the NVT.</li>
///   <li>Manual Disabled exposure algorithm on the NVT.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
/// Element "Priority" of XSD type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority            Priority                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rectangular exposure mask.
/// </BLOCKQUOTE></PRE>
/// Element "Window" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    struct tt__Rectangle*                Window                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinExposureTime" of XSD type xs:float.
    float                                MinExposureTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxExposureTime" of XSD type xs:float.
    float                                MaxExposureTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinGain" of XSD type xs:float.
    float                                MinGain                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxGain" of XSD type xs:float.
    float                                MaxGain                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinIris" of XSD type xs:float.
    float                                MinIris                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxIris" of XSD type xs:float.
    float                                MaxIris                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed exposure time used by the image sensor (s).
/// </BLOCKQUOTE></PRE>
/// Element "ExposureTime" of XSD type xs:float.
    float                                ExposureTime                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed gain used by the image sensor (dB).
/// </BLOCKQUOTE></PRE>
/// Element "Gain" of XSD type xs:float.
    float                                Gain                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// </BLOCKQUOTE></PRE>
/// Element "Iris" of XSD type xs:float.
    float                                Iris                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRange is a complexType.
///
struct tt__WideDynamicRange
{
/// <PRE><BLOCKQUOTE>
///   White dynamic range (on/off)
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unitless)
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float                                Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensation is a complexType.
///
struct tt__BacklightCompensation
{
/// <PRE><BLOCKQUOTE>
///   Backlight compensation mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float                                Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions is a complexType.
///
struct tt__ImagingOptions
{
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions.
    struct tt__BacklightCompensationOptions*  BacklightCompensation          1;	///< Required element.
/// Element "Brightness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Brightness                     1;	///< Required element.
/// Element "ColorSaturation" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ColorSaturation                1;	///< Required element.
/// Element "Contrast" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Contrast                       1;	///< Required element.
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":ExposureOptions.
    struct tt__ExposureOptions*          Exposure                       1;	///< Required element.
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusOptions.
    struct tt__FocusOptions*             Focus                          1;	///< Required element.
/// Size of array of enum tt__IrCutFilterMode* is 1..unbounded.
   $int                                  __sizeIrCutFilterModes         1;
/// Array enum tt__IrCutFilterMode* of size 1..unbounded.
    enum tt__IrCutFilterMode*            IrCutFilterModes               1;
/// Element "Sharpness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Sharpness                      1;	///< Required element.
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions.
    struct tt__WideDynamicRangeOptions*  WideDynamicRange               1;	///< Required element.
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions.
    struct tt__WhiteBalanceOptions*      WhiteBalance                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions is a complexType.
///
struct tt__WideDynamicRangeOptions
{
/// Size of array of enum tt__WideDynamicMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__WideDynamicMode* of size 1..unbounded.
    enum tt__WideDynamicMode*            Mode                           1;
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationOptions is a complexType.
///
struct tt__BacklightCompensationOptions
{
/// Size of array of enum tt__WideDynamicMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__WideDynamicMode* of size 1..unbounded.
    enum tt__WideDynamicMode*            Mode                           1;
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions is a complexType.
///
struct tt__FocusOptions
{
/// Size of array of enum tt__AutoFocusMode* is 0..unbounded.
   $int                                  __sizeAutoFocusModes           0;
/// Array enum tt__AutoFocusMode* of size 0..unbounded.
    enum tt__AutoFocusMode*              AutoFocusModes                 0;
/// Element "DefaultSpeed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               DefaultSpeed                   1;	///< Required element.
/// Element "NearLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               NearLimit                      1;	///< Required element.
/// Element "FarLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               FarLimit                       1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureOptions is a complexType.
///
struct tt__ExposureOptions
{
/// Size of array of enum tt__ExposureMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__ExposureMode* of size 1..unbounded.
    enum tt__ExposureMode*               Mode                           1;
/// Size of array of enum tt__ExposurePriority* is 1..unbounded.
   $int                                  __sizePriority                 1;
/// Array enum tt__ExposurePriority* of size 1..unbounded.
    enum tt__ExposurePriority*           Priority                       1;
/// Element "MinExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinExposureTime                1;	///< Required element.
/// Element "MaxExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxExposureTime                1;	///< Required element.
/// Element "MinGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinGain                        1;	///< Required element.
/// Element "MaxGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxGain                        1;	///< Required element.
/// Element "MinIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinIris                        1;	///< Required element.
/// Element "MaxIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxIris                        1;	///< Required element.
/// Element "ExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ExposureTime                   1;	///< Required element.
/// Element "Gain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Gain                           1;	///< Required element.
/// Element "Iris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Iris                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions is a complexType.
///
struct tt__WhiteBalanceOptions
{
/// Size of array of enum tt__WhiteBalanceMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__WhiteBalanceMode* of size 1..unbounded.
    enum tt__WhiteBalanceMode*           Mode                           1;
/// Element "YrGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YrGain                         1;	///< Required element.
/// Element "YbGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YbGain                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusMove is a complexType.
///
struct tt__FocusMove
{
/// <PRE><BLOCKQUOTE>
///   Parameters for the absolute focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Absolute" of XSD type "http://www.onvif.org/ver10/schema":AbsoluteFocus.
    struct tt__AbsoluteFocus*            Absolute                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameters for the relative focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Relative" of XSD type "http://www.onvif.org/ver10/schema":RelativeFocus.
    struct tt__RelativeFocus*            Relative                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter for the continuous focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Continuous" of XSD type "http://www.onvif.org/ver10/schema":ContinuousFocus.
    struct tt__ContinuousFocus*          Continuous                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":AbsoluteFocus is a complexType.
///
struct tt__AbsoluteFocus
{
/// <PRE><BLOCKQUOTE>
///   Position parameter for the absolute focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the absolute focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocus is a complexType.
///
struct tt__RelativeFocus
{
/// <PRE><BLOCKQUOTE>
///   Distance parameter for the relative focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Distance" of XSD type xs:float.
    float                                Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the relative focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ContinuousFocus is a complexType.
///
struct tt__ContinuousFocus
{
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the Continuous focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:float.
    float                                Speed                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":MoveOptions is a complexType.
///
struct tt__MoveOptions
{
/// Element "Absolute" of XSD type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    struct tt__AbsoluteFocusOptions*     Absolute                       0;	///< Optional element.
/// Element "Relative" of XSD type "http://www.onvif.org/ver10/schema":RelativeFocusOptions.
    struct tt__RelativeFocusOptions*     Relative                       0;	///< Optional element.
/// Element "Continuous" of XSD type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    struct tt__ContinuousFocusOptions*   Continuous                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions is a complexType.
///
struct tt__AbsoluteFocusOptions
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocusOptions is a complexType.
///
struct tt__RelativeFocusOptions
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the distance.
/// </BLOCKQUOTE></PRE>
/// Element "Distance" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ContinuousFocusOptions is a complexType.
///
struct tt__ContinuousFocusOptions
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance is a complexType.
///
struct tt__WhiteBalance
{
/// <PRE><BLOCKQUOTE>
///   Auto whitebalancing mode (auto/manual).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CrGain" of XSD type xs:float.
    float                                CrGain                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Bgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CbGain" of XSD type xs:float.
    float                                CbGain                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus20 is a complexType.
///
struct tt__ImagingStatus20
{
/// <PRE><BLOCKQUOTE>
///   Status of focus.
/// </BLOCKQUOTE></PRE>
/// Element "FocusStatus20" of XSD type "http://www.onvif.org/ver10/schema":FocusStatus20.
    struct tt__FocusStatus20*            FocusStatus20                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingStatus20Extension.
    struct tt__ImagingStatus20Extension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus20Extension is a complexType.
///
struct tt__ImagingStatus20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus20 is a complexType.
///
struct tt__FocusStatus20
{
/// <PRE><BLOCKQUOTE>
///   Status of focus position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Status of focus MoveStatus.
/// </BLOCKQUOTE></PRE>
/// Element "MoveStatus" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Error status of focus.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    char*                                Error                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FocusStatus20Extension.
    struct tt__FocusStatus20Extension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus20Extension is a complexType.
///
struct tt__FocusStatus20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettings20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the ImagingSettings of a VideoSource. The supported options and ranges can be obtained via the GetOptions command.
/// </BLOCKQUOTE></PRE>
struct tt__ImagingSettings20
{
/// <PRE><BLOCKQUOTE>
///   Enabled/disabled BLC mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensation20.
    struct tt__BacklightCompensation20*  BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image brightness (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Brightness" of XSD type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Color saturation of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "ColorSaturation" of XSD type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contrast of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Contrast" of XSD type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Exposure mode of the device.
/// </BLOCKQUOTE></PRE>
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":Exposure20.
    struct tt__Exposure20*               Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Focus configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusConfiguration20.
    struct tt__FocusConfiguration20*     Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Infrared Cutoff Filter settings.
/// </BLOCKQUOTE></PRE>
/// Element "IrCutFilter" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Sharpness of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Sharpness" of XSD type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   WDR settings.
/// </BLOCKQUOTE></PRE>
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRange20.
    struct tt__WideDynamicRange20*       WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   White balance settings.
/// </BLOCKQUOTE></PRE>
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalance20.
    struct tt__WhiteBalance20*           WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20.
    struct tt__ImagingSettingsExtension20*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20 is a complexType.
///
struct tt__ImagingSettingsExtension20
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
/// Element "ImageStabilization" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilization.
    struct tt__ImageStabilization*       ImageStabilization             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202.
    struct tt__ImagingSettingsExtension202*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202 is a complexType.
///
struct tt__ImagingSettingsExtension202
{
/// <PRE><BLOCKQUOTE>
///   An optional parameter applied to only auto mode to adjust timing of toggling Ir cut filter.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__IrCutFilterAutoAdjustment* is 0..unbounded.
   $int                                  __sizeIrCutFilterAutoAdjustment 0;
/// Array struct tt__IrCutFilterAutoAdjustment* of size 0..unbounded.
    struct tt__IrCutFilterAutoAdjustment*  IrCutFilterAutoAdjustment      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203.
    struct tt__ImagingSettingsExtension203*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203 is a complexType.
///
struct tt__ImagingSettingsExtension203
{
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Contrast Compensation.
/// </BLOCKQUOTE></PRE>
/// Element "ToneCompensation" of XSD type "http://www.onvif.org/ver10/schema":ToneCompensation.
    struct tt__ToneCompensation*         ToneCompensation               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Defogging.
/// </BLOCKQUOTE></PRE>
/// Element "Defogging" of XSD type "http://www.onvif.org/ver10/schema":Defogging.
    struct tt__Defogging*                Defogging                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Noise Reduction.
/// </BLOCKQUOTE></PRE>
/// Element "NoiseReduction" of XSD type "http://www.onvif.org/ver10/schema":NoiseReduction.
    struct tt__NoiseReduction*           NoiseReduction                 0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204.
    struct tt__ImagingSettingsExtension204*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204 is a complexType.
///
struct tt__ImagingSettingsExtension204
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilization is a complexType.
///
struct tt__ImageStabilization
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationMode.
    enum tt__ImageStabilizationMode      Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified)
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationExtension.
    struct tt__ImageStabilizationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationExtension is a complexType.
///
struct tt__ImageStabilizationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustment is a complexType.
///
struct tt__IrCutFilterAutoAdjustment
{
/// <PRE><BLOCKQUOTE>
///   Specifies which boundaries to automatically toggle Ir cut filter following parameters are applied to. Its options shall be chosen from tt:IrCutFilterAutoBoundaryType.
/// </BLOCKQUOTE></PRE>
/// Element "BoundaryType" of XSD type xs:string.
    char*                                BoundaryType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Adjusts boundary exposure level for toggling Ir cut filter to on/off specified with unitless normalized value from +1.0 to -1.0. Zero is default and -1.0 is the darkest adjustment (Unitless).
/// </BLOCKQUOTE></PRE>
/// Element "BoundaryOffset" of XSD type xs:float.
    float*                               BoundaryOffset                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Delay time of toggling Ir cut filter to on/off after crossing of the boundary exposure levels.
/// </BLOCKQUOTE></PRE>
/// Element "ResponseTime" of XSD type xs:duration.
    xsd__duration*                       ResponseTime                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension.
    struct tt__IrCutFilterAutoAdjustmentExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension is a complexType.
///
struct tt__IrCutFilterAutoAdjustmentExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRange20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing whether WDR mode is enabled or disabled (on/off).
/// </BLOCKQUOTE></PRE>
struct tt__WideDynamicRange20
{
/// <PRE><BLOCKQUOTE>
///   Wide dynamic range mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensation20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing whether BLC mode is enabled or disabled (on/off).
/// </BLOCKQUOTE></PRE>
struct tt__BacklightCompensation20
{
/// <PRE><BLOCKQUOTE>
///   Backlight compensation mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":Exposure20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the exposure settings.
/// </BLOCKQUOTE></PRE>
struct tt__Exposure20
{
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the device.</li>
///   <li>Manual Disabled exposure algorithm on the device.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
/// Element "Priority" of XSD type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority*           Priority                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Rectangular exposure mask.
/// </BLOCKQUOTE></PRE>
/// Element "Window" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    struct tt__Rectangle*                Window                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinExposureTime" of XSD type xs:float.
    float*                               MinExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxExposureTime" of XSD type xs:float.
    float*                               MaxExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinGain" of XSD type xs:float.
    float*                               MinGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxGain" of XSD type xs:float.
    float*                               MaxGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinIris" of XSD type xs:float.
    float*                               MinIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxIris" of XSD type xs:float.
    float*                               MaxIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed exposure time used by the image sensor (s).
/// </BLOCKQUOTE></PRE>
/// Element "ExposureTime" of XSD type xs:float.
    float*                               ExposureTime                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed gain used by the image sensor (dB).
/// </BLOCKQUOTE></PRE>
/// Element "Gain" of XSD type xs:float.
    float*                               Gain                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// </BLOCKQUOTE></PRE>
/// Element "Iris" of XSD type xs:float.
    float*                               Iris                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensation is a complexType.
///
struct tt__ToneCompensation
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable or automatic ToneCompensation feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type xs:string.
    char*                                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter specified with unitless normalized value from 0.0 to +1.0.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ToneCompensationExtension.
    struct tt__ToneCompensationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationExtension is a complexType.
///
struct tt__ToneCompensationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Defogging is a complexType.
///
struct tt__Defogging
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable or automatic Defogging feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type xs:string.
    char*                                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter specified with unitless normalized value from 0.0 to +1.0.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":DefoggingExtension.
    struct tt__DefoggingExtension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingExtension is a complexType.
///
struct tt__DefoggingExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NoiseReduction is a complexType.
///
struct tt__NoiseReduction
{
/// <PRE><BLOCKQUOTE>
///   Level parameter specified with unitless normalized value from 0.0 to +1.0. Level=0 means no noise reduction or minimal noise reduction.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float                                Level                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20 is a complexType.
///
struct tt__ImagingOptions20
{
/// <PRE><BLOCKQUOTE>
///   Valid range of Backlight Compensation.
/// </BLOCKQUOTE></PRE>
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20.
    struct tt__BacklightCompensationOptions20*  BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Brightness.
/// </BLOCKQUOTE></PRE>
/// Element "Brightness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Color Saturation.
/// </BLOCKQUOTE></PRE>
/// Element "ColorSaturation" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Contrast.
/// </BLOCKQUOTE></PRE>
/// Element "Contrast" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Exposure.
/// </BLOCKQUOTE></PRE>
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":ExposureOptions20.
    struct tt__ExposureOptions20*        Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Focus.
/// </BLOCKQUOTE></PRE>
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusOptions20.
    struct tt__FocusOptions20*           Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of IrCutFilterModes.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__IrCutFilterMode* is 0..unbounded.
   $int                                  __sizeIrCutFilterModes         0;
/// Array enum tt__IrCutFilterMode* of size 0..unbounded.
    enum tt__IrCutFilterMode*            IrCutFilterModes               0;
/// <PRE><BLOCKQUOTE>
///   Valid range of Sharpness.
/// </BLOCKQUOTE></PRE>
/// Element "Sharpness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of WideDynamicRange.
/// </BLOCKQUOTE></PRE>
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20.
    struct tt__WideDynamicRangeOptions20*  WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of WhiteBalance.
/// </BLOCKQUOTE></PRE>
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20.
    struct tt__WhiteBalanceOptions20*    WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension.
    struct tt__ImagingOptions20Extension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension is a complexType.
///
struct tt__ImagingOptions20Extension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
/// Element "ImageStabilization" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationOptions.
    struct tt__ImageStabilizationOptions*  ImageStabilization             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2.
    struct tt__ImagingOptions20Extension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2 is a complexType.
///
struct tt__ImagingOptions20Extension2
{
/// <PRE><BLOCKQUOTE>
///   Options of parameters for adjustment of Ir cut filter auto mode.
/// </BLOCKQUOTE></PRE>
/// Element "IrCutFilterAutoAdjustment" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions.
    struct tt__IrCutFilterAutoAdjustmentOptions*  IrCutFilterAutoAdjustment      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3.
    struct tt__ImagingOptions20Extension3*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3 is a complexType.
///
struct tt__ImagingOptions20Extension3
{
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Tone Compensation feature.
/// </BLOCKQUOTE></PRE>
/// Element "ToneCompensationOptions" of XSD type "http://www.onvif.org/ver10/schema":ToneCompensationOptions.
    struct tt__ToneCompensationOptions*  ToneCompensationOptions        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Defogging feature.
/// </BLOCKQUOTE></PRE>
/// Element "DefoggingOptions" of XSD type "http://www.onvif.org/ver10/schema":DefoggingOptions.
    struct tt__DefoggingOptions*         DefoggingOptions               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Options of parameter for Noise Reduction feature.
/// </BLOCKQUOTE></PRE>
/// Element "NoiseReductionOptions" of XSD type "http://www.onvif.org/ver10/schema":NoiseReductionOptions.
    struct tt__NoiseReductionOptions*    NoiseReductionOptions          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4.
    struct tt__ImagingOptions20Extension4*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4 is a complexType.
///
struct tt__ImagingOptions20Extension4
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationOptions is a complexType.
///
struct tt__ImageStabilizationOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options of Image Stabilization mode parameter.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__ImageStabilizationMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__ImageStabilizationMode* of size 1..unbounded.
    enum tt__ImageStabilizationMode*     Mode                           1;
/// <PRE><BLOCKQUOTE>
///   Valid range of the Image Stabilization.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension.
    struct tt__ImageStabilizationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension is a complexType.
///
struct tt__ImageStabilizationOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions is a complexType.
///
struct tt__IrCutFilterAutoAdjustmentOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options of boundary types for adjustment of Ir cut filter auto mode. The opptions shall be chosen from tt:IrCutFilterAutoBoundaryType.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeBoundaryType             1;
/// Array char** of size 1..unbounded.
    char**                               BoundaryType                   1;
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not boundary offset for toggling Ir cut filter is supported.
/// </BLOCKQUOTE></PRE>
/// Element "BoundaryOffset" of XSD type xs:boolean.
    enum xsd__boolean*                   BoundaryOffset                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of delay time for toggling Ir cut filter.
/// </BLOCKQUOTE></PRE>
/// Element "ResponseTimeRange" of XSD type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            ResponseTimeRange              0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension.
    struct tt__IrCutFilterAutoAdjustmentOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension is a complexType.
///
struct tt__IrCutFilterAutoAdjustmentOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20 is a complexType.
///
struct tt__WideDynamicRangeOptions20
{
/// Size of array of enum tt__WideDynamicMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__WideDynamicMode* of size 1..unbounded.
    enum tt__WideDynamicMode*            Mode                           1;
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20 is a complexType.
///
struct tt__BacklightCompensationOptions20
{
/// <PRE><BLOCKQUOTE>
///   'ON' or 'OFF'
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__BacklightCompensationMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__BacklightCompensationMode* of size 1..unbounded.
    enum tt__BacklightCompensationMode*  Mode                           1;
/// <PRE><BLOCKQUOTE>
///   Level range of BacklightCompensation.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureOptions20 is a complexType.
///
struct tt__ExposureOptions20
{
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the device.</li>
///   <li>Manual Disabled exposure algorithm on the device.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__ExposureMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__ExposureMode* of size 1..unbounded.
    enum tt__ExposureMode*               Mode                           1;
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__ExposurePriority* is 0..unbounded.
   $int                                  __sizePriority                 0;
/// Array enum tt__ExposurePriority* of size 0..unbounded.
    enum tt__ExposurePriority*           Priority                       0;
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum ExposureTime.
/// </BLOCKQUOTE></PRE>
/// Element "MinExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum ExposureTime.
/// </BLOCKQUOTE></PRE>
/// Element "MaxExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum Gain.
/// </BLOCKQUOTE></PRE>
/// Element "MinGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum Gain.
/// </BLOCKQUOTE></PRE>
/// Element "MaxGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum Iris.
/// </BLOCKQUOTE></PRE>
/// Element "MinIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum Iris.
/// </BLOCKQUOTE></PRE>
/// Element "MaxIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the ExposureTime.
/// </BLOCKQUOTE></PRE>
/// Element "ExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ExposureTime                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Gain.
/// </BLOCKQUOTE></PRE>
/// Element "Gain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Gain                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Iris.
/// </BLOCKQUOTE></PRE>
/// Element "Iris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Iris                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MoveOptions20 is a complexType.
///
struct tt__MoveOptions20
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the absolute control.
/// </BLOCKQUOTE></PRE>
/// Element "Absolute" of XSD type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    struct tt__AbsoluteFocusOptions*     Absolute                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the relative control.
/// </BLOCKQUOTE></PRE>
/// Element "Relative" of XSD type "http://www.onvif.org/ver10/schema":RelativeFocusOptions20.
    struct tt__RelativeFocusOptions20*   Relative                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the continuous control.
/// </BLOCKQUOTE></PRE>
/// Element "Continuous" of XSD type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    struct tt__ContinuousFocusOptions*   Continuous                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocusOptions20 is a complexType.
///
struct tt__RelativeFocusOptions20
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the distance.
/// </BLOCKQUOTE></PRE>
/// Element "Distance" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance20 is a complexType.
///
struct tt__WhiteBalance20
{
/// <PRE><BLOCKQUOTE>
///   'AUTO' or 'MANUAL'
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CrGain" of XSD type xs:float.
    float*                               CrGain                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Bgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CbGain" of XSD type xs:float.
    float*                               CbGain                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalance20Extension.
    struct tt__WhiteBalance20Extension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance20Extension is a complexType.
///
struct tt__WhiteBalance20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration20 is a complexType.
///
struct tt__FocusConfiguration20
{
/// <PRE><BLOCKQUOTE>
///   Mode of auto fucus.
///   <ul>
///   <li>AUTO</li>
///   <li>MANUAL</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "AutoFocusMode" of XSD type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element "DefaultSpeed" of XSD type xs:float.
    float*                               DefaultSpeed                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus near limit (unit: meter).
/// </BLOCKQUOTE></PRE>
/// Element "NearLimit" of XSD type xs:float.
    float*                               NearLimit                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus far limit (unit: meter).
/// </BLOCKQUOTE></PRE>
/// Element "FarLimit" of XSD type xs:float.
    float*                               FarLimit                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension.
    struct tt__FocusConfiguration20Extension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension is a complexType.
///
struct tt__FocusConfiguration20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20 is a complexType.
///
struct tt__WhiteBalanceOptions20
{
/// <PRE><BLOCKQUOTE>
///   Mode of WhiteBalance.
///   <ul>
///   <li>AUTO</li>
///   <li>MANUAL</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__WhiteBalanceMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__WhiteBalanceMode* of size 1..unbounded.
    enum tt__WhiteBalanceMode*           Mode                           1;
/// Element "YrGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YrGain                         0;	///< Optional element.
/// Element "YbGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YbGain                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension.
    struct tt__WhiteBalanceOptions20Extension*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension is a complexType.
///
struct tt__WhiteBalanceOptions20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions20 is a complexType.
///
struct tt__FocusOptions20
{
/// <PRE><BLOCKQUOTE>
///   Mode of Auto Focus.
///   <ul>
///   <li>AUTO</li>
///   <li>MANUAL</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__AutoFocusMode* is 0..unbounded.
   $int                                  __sizeAutoFocusModes           0;
/// Array enum tt__AutoFocusMode* of size 0..unbounded.
    enum tt__AutoFocusMode*              AutoFocusModes                 0;
/// <PRE><BLOCKQUOTE>
///   Valid range of DefaultSpeed.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultSpeed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               DefaultSpeed                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of NearLimit.
/// </BLOCKQUOTE></PRE>
/// Element "NearLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               NearLimit                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of FarLimit.
/// </BLOCKQUOTE></PRE>
/// Element "FarLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               FarLimit                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FocusOptions20Extension.
    struct tt__FocusOptions20Extension*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions20Extension is a complexType.
///
struct tt__FocusOptions20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationOptions is a complexType.
///
struct tt__ToneCompensationOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for Tone Compensation mode. Its options shall be chosen from tt:ToneCompensationMode Type.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array char** of size 1..unbounded.
    char**                               Mode                           1;
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not support Level parameter for Tone Compensation.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:boolean.
    enum xsd__boolean                    Level                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingOptions is a complexType.
///
struct tt__DefoggingOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for Defogging mode. Its options shall be chosen from tt:DefoggingMode Type.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array char** of size 1..unbounded.
    char**                               Mode                           1;
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not support Level parameter for Defogging.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:boolean.
    enum xsd__boolean                    Level                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NoiseReductionOptions is a complexType.
///
struct tt__NoiseReductionOptions
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not support Level parameter for NoiseReduction.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:boolean.
    enum xsd__boolean                    Level                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageExtension is a complexType.
///
struct tt__MessageExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of parameters according to the corresponding ItemListDescription.
///   Each item in the list shall have a unique name.
/// </BLOCKQUOTE></PRE>
struct tt__ItemList
{
/// <PRE><BLOCKQUOTE>
///   Value name pair as defined by the corresponding description.
/// </BLOCKQUOTE></PRE>
/// Size of SimpleItem array is 0..unbounded.
   $int                                  __sizeSimpleItem               0;
    struct _tt__ItemList_SimpleItem
    {
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Item value. The type is defined in the corresponding description.
/// </BLOCKQUOTE></PRE>
/// Attribute "Value" of XSD type xs:anySimpleType.
   @xsd__anySimpleType                   Value                          1;	///< Required attribute.
    }                                   *SimpleItem                     0;
/// <PRE><BLOCKQUOTE>
///   Complex value structure.
/// </BLOCKQUOTE></PRE>
/// Size of ElementItem array is 0..unbounded.
   $int                                  __sizeElementItem              0;
    struct _tt__ItemList_ElementItem
    {
/// @todo <any namespace="##any">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
    }                                   *ElementItem                    0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ItemListExtension.
    struct tt__ItemListExtension*        Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListExtension is a complexType.
///
struct tt__ItemListExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageDescription is a complexType.
///
struct tt__MessageDescription
{
/// <PRE><BLOCKQUOTE>
///   Set of tokens producing this message. The list may only contain SimpleItemDescription items.
///   The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/>
///   For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken
///   and the name of the analytics module or rule.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Source                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// </BLOCKQUOTE></PRE>
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes the payload of the message.
/// </BLOCKQUOTE></PRE>
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Data                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    struct tt__MessageDescriptionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// </BLOCKQUOTE></PRE>
/// Attribute "IsProperty" of XSD type xs:boolean.
   @enum xsd__boolean*                   IsProperty                     0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is a complexType.
///
struct tt__MessageDescriptionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListDescription is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describes a list of items. Each item in the list shall have a unique name.
///   The list is designed as linear structure without optional or unbounded elements.
///   Use ElementItems only when complex structures are inevitable.
/// </BLOCKQUOTE></PRE>
struct tt__ItemListDescription
{
/// <PRE><BLOCKQUOTE>
///   Description of a simple item. The type must be of cathegory simpleType (xs:string, xs:integer, xs:float, ...).
/// </BLOCKQUOTE></PRE>
/// Size of SimpleItemDescription array is 0..unbounded.
   $int                                  __sizeSimpleItemDescription    0;
    struct _tt__ItemListDescription_SimpleItemDescription
    {
/// <PRE><BLOCKQUOTE>
///   Item name. Must be unique within a list.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// Attribute "Type" of XSD type xs:QName.
   @_QName                               Type                           1;	///< Required attribute.
    }                                   *SimpleItemDescription          0;
/// <PRE><BLOCKQUOTE>
///   Description of a complex type. The Type must reference a defined type.
/// </BLOCKQUOTE></PRE>
/// Size of ElementItemDescription array is 0..unbounded.
   $int                                  __sizeElementItemDescription   0;
    struct _tt__ItemListDescription_ElementItemDescription
    {
/// <PRE><BLOCKQUOTE>
///   Item name. Must be unique within a list.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The type of the item. The Type must reference a defined type.
/// </BLOCKQUOTE></PRE>
/// Attribute "Type" of XSD type xs:QName.
   @_QName                               Type                           1;	///< Required attribute.
    }                                   *ElementItemDescription         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension.
    struct tt__ItemListDescriptionExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is a complexType.
///
struct tt__ItemListDescriptionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector is a complexType.
///
struct tt__Vector
{
/// Attribute "x" of XSD type xs:float.
   @float*                               x                              0;	///< Optional attribute.
/// Attribute "y" of XSD type xs:float.
   @float*                               y                              0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Rectangle is a complexType.
///
struct tt__Rectangle
{
/// Attribute "bottom" of XSD type xs:float.
   @float*                               bottom                         0;	///< Optional attribute.
/// Attribute "top" of XSD type xs:float.
   @float*                               top                            0;	///< Optional attribute.
/// Attribute "right" of XSD type xs:float.
   @float*                               right                          0;	///< Optional attribute.
/// Attribute "left" of XSD type xs:float.
   @float*                               left                           0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Polygon is a complexType.
///
struct tt__Polygon
{
/// Size of array of struct tt__Vector* is 3..unbounded.
   $int                                  __sizePoint                    3;
/// Array struct tt__Vector* of size 3..unbounded.
    struct tt__Vector*                   Point                          3;
};

/// @brief "http://www.onvif.org/ver10/schema":Polyline is a complexType.
///
struct tt__Polyline
{
/// Size of array of struct tt__Vector* is 2..unbounded.
   $int                                  __sizePoint                    2;
/// Array struct tt__Vector* of size 2..unbounded.
    struct tt__Vector*                   Point                          2;
};

/// @brief "http://www.onvif.org/ver10/schema":Color is a complexType.
///
struct tt__Color
{
/// Attribute "X" of XSD type xs:float.
   @float                                X                              1;	///< Required attribute.
/// Attribute "Y" of XSD type xs:float.
   @float                                Y                              1;	///< Required attribute.
/// Attribute "Z" of XSD type xs:float.
   @float                                Z                              1;	///< Required attribute.
/// Attribute "Colorspace" of XSD type xs:anyURI.
   @xsd__anyURI                          Colorspace                     0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorCovariance is a complexType.
///
struct tt__ColorCovariance
{
/// Attribute "XX" of XSD type xs:float.
   @float                                XX                             1;	///< Required attribute.
/// Attribute "YY" of XSD type xs:float.
   @float                                YY                             1;	///< Required attribute.
/// Attribute "ZZ" of XSD type xs:float.
   @float                                ZZ                             1;	///< Required attribute.
/// Attribute "XY" of XSD type xs:float.
   @float*                               XY                             0;	///< Optional attribute.
/// Attribute "XZ" of XSD type xs:float.
   @float*                               XZ                             0;	///< Optional attribute.
/// Attribute "YZ" of XSD type xs:float.
   @float*                               YZ                             0;	///< Optional attribute.
/// Attribute "Colorspace" of XSD type xs:anyURI.
   @xsd__anyURI                          Colorspace                     0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Appearance is a complexType.
///
struct tt__Appearance
{
/// Element "Transformation" of XSD type "http://www.onvif.org/ver10/schema":Transformation.
    struct tt__Transformation*           Transformation                 0;	///< Optional element.
/// Element "Shape" of XSD type "http://www.onvif.org/ver10/schema":ShapeDescriptor.
    struct tt__ShapeDescriptor*          Shape                          0;	///< Optional element.
/// Element "Color" of XSD type "http://www.onvif.org/ver10/schema":ColorDescriptor.
    struct tt__ColorDescriptor*          Color                          0;	///< Optional element.
/// Element "Class" of XSD type "http://www.onvif.org/ver10/schema":ClassDescriptor.
    struct tt__ClassDescriptor*          Class                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AppearanceExtension.
    struct tt__AppearanceExtension*      Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AppearanceExtension is a complexType.
///
struct tt__AppearanceExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ShapeDescriptor is a complexType.
///
struct tt__ShapeDescriptor
{
/// Element "BoundingBox" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    struct tt__Rectangle*                BoundingBox                    1;	///< Required element.
/// Element "CenterOfGravity" of XSD type "http://www.onvif.org/ver10/schema":Vector.
    struct tt__Vector*                   CenterOfGravity                1;	///< Required element.
/// Size of array of struct tt__Polygon* is 0..unbounded.
   $int                                  __sizePolygon                  0;
/// Array struct tt__Polygon* of size 0..unbounded.
    struct tt__Polygon*                  Polygon                        0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension.
    struct tt__ShapeDescriptorExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension is a complexType.
///
struct tt__ShapeDescriptorExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorDescriptor is a complexType.
///
struct tt__ColorDescriptor
{
/// Size of ColorCluster array is 0..unbounded.
   $int                                  __sizeColorCluster             0;
    struct _tt__ColorDescriptor_ColorCluster
    {
/// Element "Color" of XSD type "http://www.onvif.org/ver10/schema":Color.
    struct tt__Color*                    Color                          1;	///< Required element.
/// Element "Weight" of XSD type xs:float.
    float*                               Weight                         0;	///< Optional element.
/// Element "Covariance" of XSD type "http://www.onvif.org/ver10/schema":ColorCovariance.
    struct tt__ColorCovariance*          Covariance                     0;	///< Optional element.
    }                                   *ColorCluster                   0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ColorDescriptorExtension.
    struct tt__ColorDescriptorExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorDescriptorExtension is a complexType.
///
struct tt__ColorDescriptorExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ClassDescriptor is a complexType.
///
struct tt__ClassDescriptor
{
/// Size of ClassCandidate array is 0..unbounded.
   $int                                  __sizeClassCandidate           0;
    struct _tt__ClassDescriptor_ClassCandidate
    {
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":ClassType.
    enum tt__ClassType                   Type                           1;	///< Required element.
/// Element "Likelihood" of XSD type xs:float.
    float                                Likelihood                     1;	///< Required element.
    }                                   *ClassCandidate                 0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ClassDescriptorExtension.
    struct tt__ClassDescriptorExtension*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ClassDescriptorExtension is a complexType.
///
struct tt__ClassDescriptorExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Size of array of struct tt__OtherType* is 1..unbounded.
   $int                                  __sizeOtherTypes               1;
/// Array struct tt__OtherType* of size 1..unbounded.
    struct tt__OtherType*                OtherTypes                     1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ClassDescriptorExtension2.
    struct tt__ClassDescriptorExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ClassDescriptorExtension2 is a complexType.
///
struct tt__ClassDescriptorExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OtherType is a complexType.
///
struct tt__OtherType
{
/// <PRE><BLOCKQUOTE>
///   Object Class Type
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type xs:string.
    char*                                Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A likelihood/probability that the corresponding object belongs to this class. The sum of the likelihoods shall NOT exceed 1
/// </BLOCKQUOTE></PRE>
/// Element "Likelihood" of XSD type xs:float.
    float                                Likelihood                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="1" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 1..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectExtension is a complexType.
///
struct tt__ObjectExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Transformation is a complexType.
///
struct tt__Transformation
{
/// Element "Translate" of XSD type "http://www.onvif.org/ver10/schema":Vector.
    struct tt__Vector*                   Translate                      0;	///< Optional element.
/// Element "Scale" of XSD type "http://www.onvif.org/ver10/schema":Vector.
    struct tt__Vector*                   Scale                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":TransformationExtension.
    struct tt__TransformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":TransformationExtension is a complexType.
///
struct tt__TransformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Frame is a complexType.
///
struct tt__Frame
{
/// Element "PTZStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZStatus.
    struct tt__PTZStatus*                PTZStatus                      0;	///< Optional element.
/// Element "Transformation" of XSD type "http://www.onvif.org/ver10/schema":Transformation.
    struct tt__Transformation*           Transformation                 0;	///< Optional element.
/// Size of array of struct tt__Object* is 0..unbounded.
   $int                                  __sizeObject                   0;
/// Array struct tt__Object* of size 0..unbounded.
    struct tt__Object*                   Object                         0;
/// Element "ObjectTree" of XSD type "http://www.onvif.org/ver10/schema":ObjectTree.
    struct tt__ObjectTree*               ObjectTree                     0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FrameExtension.
    struct tt__FrameExtension*           Extension                      0;	///< Optional element.
/// Attribute "UtcTime" of XSD type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FrameExtension is a complexType.
///
struct tt__FrameExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "MotionInCells" of XSD type "http://www.onvif.org/ver10/schema":MotionInCells.
    struct tt__MotionInCells*            MotionInCells                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FrameExtension2.
    struct tt__FrameExtension2*          Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":FrameExtension2 is a complexType.
///
struct tt__FrameExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Merge is a complexType.
///
struct tt__Merge
{
/// Size of array of struct tt__ObjectId* is 2..unbounded.
   $int                                  __sizefrom                     2;
/// Array struct tt__ObjectId* of size 2..unbounded.
    struct tt__ObjectId*                 from                           2;
/// Element "to" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    struct tt__ObjectId*                 to                             1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Split is a complexType.
///
struct tt__Split
{
/// Element "from" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    struct tt__ObjectId*                 from                           1;	///< Required element.
/// Size of array of struct tt__ObjectId* is 2..unbounded.
   $int                                  __sizeto                       2;
/// Array struct tt__ObjectId* of size 2..unbounded.
    struct tt__ObjectId*                 to                             2;
};

/// @brief "http://www.onvif.org/ver10/schema":Rename is a complexType.
///
struct tt__Rename
{
/// Element "from" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    struct tt__ObjectId*                 from                           1;	///< Required element.
/// Element "to" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    struct tt__ObjectId*                 to                             1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectId is a complexType.
///
struct tt__ObjectId
{
/// Attribute "ObjectId" of XSD type xs:integer.
   @xsd__integer                         ObjectId                       0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Behaviour is a complexType.
///
struct tt__Behaviour
{
    struct _tt__Behaviour_Removed
    {
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Removed                        0;	///< Optional element.
    struct _tt__Behaviour_Idle
    {
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Idle                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":BehaviourExtension.
    struct tt__BehaviourExtension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":BehaviourExtension is a complexType.
///
struct tt__BehaviourExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectTree is a complexType.
///
struct tt__ObjectTree
{
/// Size of array of struct tt__Rename* is 0..unbounded.
   $int                                  __sizeRename                   0;
/// Array struct tt__Rename* of size 0..unbounded.
    struct tt__Rename*                   Rename                         0;
/// Size of array of struct tt__Split* is 0..unbounded.
   $int                                  __sizeSplit                    0;
/// Array struct tt__Split* of size 0..unbounded.
    struct tt__Split*                    Split                          0;
/// Size of array of struct tt__Merge* is 0..unbounded.
   $int                                  __sizeMerge                    0;
/// Array struct tt__Merge* of size 0..unbounded.
    struct tt__Merge*                    Merge                          0;
/// Size of array of struct tt__ObjectId* is 0..unbounded.
   $int                                  __sizeDelete                   0;
/// Array struct tt__ObjectId* of size 0..unbounded.
    struct tt__ObjectId*                 Delete                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ObjectTreeExtension.
    struct tt__ObjectTreeExtension*      Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectTreeExtension is a complexType.
///
struct tt__ObjectTreeExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MotionInCells is a complexType.
///
struct tt__MotionInCells
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Number of columns of the cell grid (x dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Columns" of XSD type xs:integer.
   @xsd__integer                         Columns                        1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Number of rows of the cell grid (y dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Rows" of XSD type xs:integer.
   @xsd__integer                         Rows                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   A 1 denotes a cell where motion is detected and a 0 an empty cell. The first cell is in the upper left corner. Then the cell order goes first from left to right and then from up to down. If the number of cells is not a multiple of 8 the last byte is filled with zeros. The information is run length encoded according to Packbit coding in ISO 12369 (TIFF, Revision 6.0).
/// </BLOCKQUOTE></PRE>
/// Attribute "Cells" of XSD type xs:base64Binary.
   @struct xsd__base64Binary             Cells                          1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration is a complexType.
///
struct tt__AnalyticsEngineConfiguration
{
/// Size of array of struct tt__Config* is 0..unbounded.
   $int                                  __sizeAnalyticsModule          0;
/// Array struct tt__Config* of size 0..unbounded.
    struct tt__Config*                   AnalyticsModule                0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension.
    struct tt__AnalyticsEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension is a complexType.
///
struct tt__AnalyticsEngineConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RuleEngineConfiguration is a complexType.
///
struct tt__RuleEngineConfiguration
{
/// Size of array of struct tt__Config* is 0..unbounded.
   $int                                  __sizeRule                     0;
/// Array struct tt__Config* of size 0..unbounded.
    struct tt__Config*                   Rule                           0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension.
    struct tt__RuleEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension is a complexType.
///
struct tt__RuleEngineConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Config is a complexType.
///
struct tt__Config
{
/// <PRE><BLOCKQUOTE>
///   List of configuration parameters as defined in the correspding description.
/// </BLOCKQUOTE></PRE>
/// Element "Parameters" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Parameters                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Name of the configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Type of the configuration represented by a unique QName. The Type characterizes a ConfigDescription defining the Parameters.
/// </BLOCKQUOTE></PRE>
/// Attribute "Type" of XSD type xs:QName.
   @_QName                               Type                           1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigDescription is a complexType.
///
struct tt__ConfigDescription
{
/// <PRE><BLOCKQUOTE>
///   List describing the configuration parameters. The names of the parameters must be unique. If possible SimpleItems
///   should be used to transport the information to ease parsing of dynamically defined messages by a client
///   application.
/// </BLOCKQUOTE></PRE>
/// Element "Parameters" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Parameters                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The analytics modules and rule engine produce Events, which must be listed within the Analytics Module Description. In order to do so
///   the structure of the Message is defined and consists of three groups: Source, Key, and Data. It is recommended to use SimpleItemDescriptions wherever applicable.
///   The name of all Items must be unique within all Items contained in any group of this Message.
///   Depending on the component multiple parameters or none may be needed to identify the component uniquely.
/// </BLOCKQUOTE></PRE>
/// Size of Messages array is 0..unbounded.
   $int                                  __sizeMessages                 0;
    struct _tt__ConfigDescription_Messages
    {
/// INHERITED FROM tt__MessageDescription:
/// <PRE><BLOCKQUOTE>
///   Set of tokens producing this message. The list may only contain SimpleItemDescription items.
///   The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/>
///   For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken
///   and the name of the analytics module or rule.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Source                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// </BLOCKQUOTE></PRE>
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes the payload of the message.
/// </BLOCKQUOTE></PRE>
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Data                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    struct tt__MessageDescriptionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// </BLOCKQUOTE></PRE>
/// Attribute "IsProperty" of XSD type xs:boolean.
   @enum xsd__boolean*                   IsProperty                     0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM tt__MessageDescription
/// <PRE><BLOCKQUOTE>
///   The ParentTopic labels the message (e.g. "nn:RuleEngine/LineCrossing"). The real message can extend the ParentTopic
///   by for example the name of the instaniated rule (e.g. "nn:RuleEngine/LineCrossing/corssMyFirstLine").
///   Even without knowing the complete topic name, the subscriber will be able to distiguish the
///   messages produced by different rule instances of the same type via the Source fields of the message.
///   There the name of the rule instance, which produced the message, must be listed.
/// </BLOCKQUOTE></PRE>
/// Element "ParentTopic" of XSD type xs:string.
    char*                                ParentTopic                    1;	///< Required element.
    }                                   *Messages                       0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension.
    struct tt__ConfigDescriptionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   XML Type of the Configuration (e.g. "tt::LineDetector").
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:QName.
   @_QName                               Name                           1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension is a complexType.
///
struct tt__ConfigDescriptionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedRules is a complexType.
///
struct tt__SupportedRules
{
/// <PRE><BLOCKQUOTE>
///   Lists the location of all schemas that are referenced in the rules.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeRuleContentSchemaLocation 0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         RuleContentSchemaLocation      0;
/// <PRE><BLOCKQUOTE>
///   List of rules supported by the Video Analytics configuration..
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__ConfigDescription* is 0..unbounded.
   $int                                  __sizeRuleDescription          0;
/// Array struct tt__ConfigDescription* of size 0..unbounded.
    struct tt__ConfigDescription*        RuleDescription                0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SupportedRulesExtension.
    struct tt__SupportedRulesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedRulesExtension is a complexType.
///
struct tt__SupportedRulesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules is a complexType.
///
struct tt__SupportedAnalyticsModules
{
/// <PRE><BLOCKQUOTE>
///   It optionally contains a list of URLs that provide the location of schema files.
///   These schema files describe the types and elements used in the analytics module descriptions.
///   If the analytics module descriptions reference types or elements of the ONVIF schema file,
///   the ONVIF schema file MUST be explicitly listed.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeAnalyticsModuleContentSchemaLocation 0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         AnalyticsModuleContentSchemaLocation 0;
/// Size of array of struct tt__ConfigDescription* is 0..unbounded.
   $int                                  __sizeAnalyticsModuleDescription 0;
/// Array struct tt__ConfigDescription* of size 0..unbounded.
    struct tt__ConfigDescription*        AnalyticsModuleDescription     0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension.
    struct tt__SupportedAnalyticsModulesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension is a complexType.
///
struct tt__SupportedAnalyticsModulesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PolygonConfiguration is a complexType.
///
struct tt__PolygonConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains Polygon configuration for rule parameters
/// </BLOCKQUOTE></PRE>
/// Element "Polygon" of XSD type "http://www.onvif.org/ver10/schema":Polygon.
    struct tt__Polygon*                  Polygon                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArray is a complexType.
///
struct tt__PolylineArray
{
/// <PRE><BLOCKQUOTE>
///   Contains array of Polyline
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Polyline* is 1..unbounded.
   $int                                  __sizeSegment                  1;
/// Array struct tt__Polyline* of size 1..unbounded.
    struct tt__Polyline*                 Segment                        1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PolylineArrayExtension.
    struct tt__PolylineArrayExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArrayExtension is a complexType.
///
struct tt__PolylineArrayExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArrayConfiguration is a complexType.
///
struct tt__PolylineArrayConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains PolylineArray configuration data
/// </BLOCKQUOTE></PRE>
/// Element "PolylineArray" of XSD type "http://www.onvif.org/ver10/schema":PolylineArray.
    struct tt__PolylineArray*            PolylineArray                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MotionExpression is a complexType.
///
struct tt__MotionExpression
{
/// <PRE><BLOCKQUOTE>
///   Motion Expression data structure contains motion expression which is based on Scene Descriptor schema with XPATH syntax. The Type argument could allow introduction of different dialects
/// </BLOCKQUOTE></PRE>
/// Element "Expression" of XSD type xs:string.
    char*                                Expression                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "Type" of XSD type xs:string.
   @char*                                Type                           0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MotionExpressionConfiguration is a complexType.
///
struct tt__MotionExpressionConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains Rule MotionExpression configuration
/// </BLOCKQUOTE></PRE>
/// Element "MotionExpression" of XSD type "http://www.onvif.org/ver10/schema":MotionExpression.
    struct tt__MotionExpression*         MotionExpression               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CellLayout is a complexType.
///
struct tt__CellLayout
{
/// <PRE><BLOCKQUOTE>
///   Mapping of the cell grid to the Video frame. The cell grid is starting from the upper left corner and x dimension is going from left to right and the y dimension from up to down.
/// </BLOCKQUOTE></PRE>
/// Element "Transformation" of XSD type "http://www.onvif.org/ver10/schema":Transformation.
    struct tt__Transformation*           Transformation                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Number of columns of the cell grid (x dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Columns" of XSD type xs:integer.
   @xsd__integer                         Columns                        1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Number of rows of the cell grid (y dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Rows" of XSD type xs:integer.
   @xsd__integer                         Rows                           1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataStream is a complexType.
///
struct tt__MetadataStream
{
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_MetadataStream          0;
    struct __tt__union_MetadataStream
    {
   $int                                  __union_MetadataStream         0;	///< Union _tt__union_MetadataStream selector: set to SOAP_UNION__tt__union_MetadataStream_<fieldname> or 0
    union _tt__union_MetadataStream
    {
/// Element "VideoAnalytics" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsStream.
    struct tt__VideoAnalyticsStream*     VideoAnalytics                 1;	///< Required element.
/// Element "PTZ" of XSD type "http://www.onvif.org/ver10/schema":PTZStream.
    struct tt__PTZStream*                PTZ                            1;	///< Required element.
/// Element "Event" of XSD type "http://www.onvif.org/ver10/schema":EventStream.
    struct tt__EventStream*              Event                          1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataStreamExtension.
    struct tt__MetadataStreamExtension*  Extension                      1;	///< Required element.
    }                                    union_MetadataStream          ;
    }                                   *__union_MetadataStream        ;
//  END OF CHOICE
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataStreamExtension is a complexType.
///
struct tt__MetadataStreamExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "AudioAnalyticsStream" of XSD type "http://www.onvif.org/ver10/schema":AudioAnalyticsStream.
    struct tt__AudioAnalyticsStream*     AudioAnalyticsStream           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataStreamExtension2.
    struct tt__MetadataStreamExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataStreamExtension2 is a complexType.
///
struct tt__MetadataStreamExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioAnalyticsStream is a complexType.
///
struct tt__AudioAnalyticsStream
{
/// Size of array of struct tt__AudioDescriptor* is 0..unbounded.
   $int                                  __sizeAudioDescriptor          0;
/// Array struct tt__AudioDescriptor* of size 0..unbounded.
    struct tt__AudioDescriptor*          AudioDescriptor                0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AudioAnalyticsStreamExtension.
    struct tt__AudioAnalyticsStreamExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDescriptor is a complexType.
///
struct tt__AudioDescriptor
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "UtcTime" of XSD type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioAnalyticsStreamExtension is a complexType.
///
struct tt__AudioAnalyticsStreamExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsStream is a complexType.
///
struct tt__VideoAnalyticsStream
{
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_VideoAnalyticsStream    0;
    struct __tt__union_VideoAnalyticsStream
    {
   $int                                  __union_VideoAnalyticsStream   0;	///< Union _tt__union_VideoAnalyticsStream selector: set to SOAP_UNION__tt__union_VideoAnalyticsStream_<fieldname> or 0
/// Union for choice in tt__VideoAnalyticsStream.
    union _tt__union_VideoAnalyticsStream
    {
/// Element "Frame" of XSD type "http://www.onvif.org/ver10/schema":Frame.
    struct tt__Frame*                    Frame                          1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension.
    struct tt__VideoAnalyticsStreamExtension*  Extension                      1;	///< Required element.
    }                                    union_VideoAnalyticsStream    ;
    }                                   *__union_VideoAnalyticsStream  ;
//  END OF CHOICE
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension is a complexType.
///
struct tt__VideoAnalyticsStreamExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStream is a complexType.
///
struct tt__PTZStream
{
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_PTZStream               0;
    struct __tt__union_PTZStream
    {
   $int                                  __union_PTZStream              0;	///< Union _tt__union_PTZStream selector: set to SOAP_UNION__tt__union_PTZStream_<fieldname> or 0
/// Union for choice in tt__PTZStream.
    union _tt__union_PTZStream
    {
/// Element "PTZStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZStatus.
    struct tt__PTZStatus*                PTZStatus                      1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZStreamExtension.
    struct tt__PTZStreamExtension*       Extension                      1;	///< Required element.
    }                                    union_PTZStream               ;
    }                                   *__union_PTZStream             ;
//  END OF CHOICE
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStreamExtension is a complexType.
///
struct tt__PTZStreamExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":EventStream is a complexType.
///
struct tt__EventStream
{
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_EventStream             0;
    struct __tt__union_EventStream
    {
   $int                                  __union_EventStream            0;	///< Union _tt__union_EventStream selector: set to SOAP_UNION__tt__union_EventStream_<fieldname> or 0
/// Union for choice in tt__EventStream.
    union _tt__union_EventStream
    {
/// Element reference "http://www.onvif.org/ver10/schema:""http://docs.oasis-open.org/wsn/b-2":NotificationMessage.
    struct wsnt__NotificationMessageHolderType*  wsnt__NotificationMessage      1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":EventStreamExtension.
    struct tt__EventStreamExtension*     Extension                      1;	///< Required element.
    }                                    union_EventStream             ;
    }                                   *__union_EventStream           ;
//  END OF CHOICE
};

/// @brief "http://www.onvif.org/ver10/schema":EventStreamExtension is a complexType.
///
struct tt__EventStreamExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Configuration of the streaming and coding settings of a Video window.
/// </BLOCKQUOTE></PRE>
struct tt__PaneConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Optional name of the pane configuration.
/// </BLOCKQUOTE></PRE>
/// Element "PaneName" of XSD type xs:string.
    char*                                PaneName                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device has audio outputs, this element contains a pointer to the audio output that is associated with the pane. A client
///   can retrieve the available audio outputs of a device using the GetAudioOutputs command of the DeviceIO service.
/// </BLOCKQUOTE></PRE>
/// Element "AudioOutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioOutputToken               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device has audio sources, this element contains a pointer to the audio source that is associated with this pane.
///   The audio connection from a decoder device to the NVT is established using the backchannel mechanism. A client can retrieve the available audio sources of a device using the GetAudioSources command of the
///   DeviceIO service.
/// </BLOCKQUOTE></PRE>
/// Element "AudioSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioSourceToken               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The configuration of the audio encoder including codec, bitrate
///   and sample rate.
/// </BLOCKQUOTE></PRE>
/// Element "AudioEncoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    struct tt__AudioEncoderConfiguration*  AudioEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A pointer to a Receiver that has the necessary information to receive
///   data from a Transmitter. This Receiver can be connected and the network video decoder displays the received data on the specified outputs. A client can retrieve the available Receivers using the
///   GetReceivers command of the Receiver Service.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A unique identifier in the display device.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneLayout is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A pane layout describes one Video window of a display. It links a pane configuration to a region of the screen.
/// </BLOCKQUOTE></PRE>
struct tt__PaneLayout
{
/// <PRE><BLOCKQUOTE>
///   Reference to the configuration of the streaming and coding parameters.
/// </BLOCKQUOTE></PRE>
/// Element "Pane" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Pane                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Describes the location and size of the area on the monitor. The area coordinate values are espressed in normalized units [-1.0, 1.0].
/// </BLOCKQUOTE></PRE>
/// Element "Area" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    struct tt__Rectangle*                Area                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Layout is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A layout describes a set of Video windows that are displayed simultaniously on a display.
/// </BLOCKQUOTE></PRE>
struct tt__Layout
{
/// <PRE><BLOCKQUOTE>
///   List of panes assembling the display layout.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PaneLayout* is 1..unbounded.
   $int                                  __sizePaneLayout               1;
/// Array struct tt__PaneLayout* of size 1..unbounded.
    struct tt__PaneLayout*               PaneLayout                     1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":LayoutExtension.
    struct tt__LayoutExtension*          Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutExtension is a complexType.
///
struct tt__LayoutExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":CodingCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   This type contains the Audio and Video coding capabilities of a display service.
/// </BLOCKQUOTE></PRE>
struct tt__CodingCapabilities
{
/// <PRE><BLOCKQUOTE>
///   If the device supports audio encoding this section describes the supported codecs and their configuration.
/// </BLOCKQUOTE></PRE>
/// Element "AudioEncodingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    struct tt__AudioEncoderConfigurationOptions*  AudioEncodingCapabilities      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device supports audio decoding this section describes the supported codecs and their settings.
/// </BLOCKQUOTE></PRE>
/// Element "AudioDecodingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    struct tt__AudioDecoderConfigurationOptions*  AudioDecodingCapabilities      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This section describes the supported video codesc and their configuration.
/// </BLOCKQUOTE></PRE>
/// Element "VideoDecodingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions.
    struct tt__VideoDecoderConfigurationOptions*  VideoDecodingCapabilities      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The options supported for a display layout.
/// </BLOCKQUOTE></PRE>
struct tt__LayoutOptions
{
/// <PRE><BLOCKQUOTE>
///   Lists the possible Pane Layouts of the Video Output
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PaneLayoutOptions* is 1..unbounded.
   $int                                  __sizePaneLayoutOptions        1;
/// Array struct tt__PaneLayoutOptions* of size 1..unbounded.
    struct tt__PaneLayoutOptions*        PaneLayoutOptions              1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":LayoutOptionsExtension.
    struct tt__LayoutOptionsExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutOptionsExtension is a complexType.
///
struct tt__LayoutOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneLayoutOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Description of a pane layout describing a complete display layout.
/// </BLOCKQUOTE></PRE>
struct tt__PaneLayoutOptions
{
/// <PRE><BLOCKQUOTE>
///   List of areas assembling a layout. Coordinate values are in the range [-1.0, 1.0].
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Rectangle* is 1..unbounded.
   $int                                  __sizeArea                     1;
/// Array struct tt__Rectangle* of size 1..unbounded.
    struct tt__Rectangle*                Area                           1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PaneOptionExtension.
    struct tt__PaneOptionExtension*      Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneOptionExtension is a complexType.
///
struct tt__PaneOptionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Receiver is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Description of a receiver, including its token and configuration.
/// </BLOCKQUOTE></PRE>
struct tt__Receiver
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the receiver.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Describes the configuration of the receiver.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    struct tt__ReceiverConfiguration*    Configuration                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describes the configuration of a receiver.
/// </BLOCKQUOTE></PRE>
struct tt__ReceiverConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The following connection modes are defined:
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ReceiverMode.
    enum tt__ReceiverMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Details of the URI to which the receiver should connect.
/// </BLOCKQUOTE></PRE>
/// Element "MediaUri" of XSD type xs:anyURI.
    xsd__anyURI                          MediaUri                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Stream connection parameters.
/// </BLOCKQUOTE></PRE>
/// Element "StreamSetup" of XSD type "http://www.onvif.org/ver10/schema":StreamSetup.
    struct tt__StreamSetup*              StreamSetup                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverStateInformation is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Contains information about a receiver's current state.
/// </BLOCKQUOTE></PRE>
struct tt__ReceiverStateInformation
{
/// <PRE><BLOCKQUOTE>
///   The connection state of the receiver may have one of the following states:
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":ReceiverState.
    enum tt__ReceiverState               State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not the receiver was created automatically.
/// </BLOCKQUOTE></PRE>
/// Element "AutoCreated" of XSD type xs:boolean.
    enum xsd__boolean                    AutoCreated                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SourceReference is a complexType.
///
struct tt__SourceReference
{
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "Type" of XSD type xs:anyURI.
   @xsd__anyURI                          Type                           0;	///< Default attribute value="http://www.onvif.org/ver10/schema/Receiver".
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DateTimeRange is a complexType.
///
struct tt__DateTimeRange
{
/// Element "From" of XSD type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// Element "Until" of XSD type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingSummary is a complexType.
///
struct tt__RecordingSummary
{
/// <PRE><BLOCKQUOTE>
///   The earliest point in time where there is recorded data on the device.
/// </BLOCKQUOTE></PRE>
/// Element "DataFrom" of XSD type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The most recent point in time where there is recorded data on the device.
/// </BLOCKQUOTE></PRE>
/// Element "DataUntil" of XSD type xs:dateTime.
    time_t                               DataUntil                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The device contains this many recordings.
/// </BLOCKQUOTE></PRE>
/// Element "NumberRecordings" of XSD type xs:int.
    int                                  NumberRecordings               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SearchScope is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A structure for defining a limited scope when searching in recorded data.
/// </BLOCKQUOTE></PRE>
struct tt__SearchScope
{
/// <PRE><BLOCKQUOTE>
///   A list of sources that are included in the scope. If this list is included, only data from one of these sources shall be searched.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__SourceReference* is 0..unbounded.
   $int                                  __sizeIncludedSources          0;
/// Array struct tt__SourceReference* of size 0..unbounded.
    struct tt__SourceReference*          IncludedSources                0;
/// <PRE><BLOCKQUOTE>
///   A list of recordings that are included in the scope. If this list is included, only data from one of these recordings shall be searched.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__RecordingReference* is 0..unbounded.
   $int                                  __sizeIncludedRecordings       0;
/// Array tt__RecordingReference* of size 0..unbounded.
    tt__RecordingReference*              IncludedRecordings             0;
/// <PRE><BLOCKQUOTE>
///   An xpath expression used to specify what recordings to search. Only those recordings with an RecordingInformation structure that matches the filter shall be searched.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingInformationFilter" of XSD type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression                  RecordingInformationFilter     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Extension point
/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SearchScopeExtension.
    struct tt__SearchScopeExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SearchScopeExtension is a complexType.
///
struct tt__SearchScopeExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPositionFilter is a complexType.
///
struct tt__PTZPositionFilter
{
/// <PRE><BLOCKQUOTE>
///   The lower boundary of the PTZ volume to look for.
/// </BLOCKQUOTE></PRE>
/// Element "MinPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                MinPosition                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The upper boundary of the PTZ volume to look for.
/// </BLOCKQUOTE></PRE>
/// Element "MaxPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                MaxPosition                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If true, search for when entering the specified PTZ volume.
/// </BLOCKQUOTE></PRE>
/// Element "EnterOrExit" of XSD type xs:boolean.
    enum xsd__boolean                    EnterOrExit                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataFilter is a complexType.
///
struct tt__MetadataFilter
{
/// Element "MetadataStreamFilter" of XSD type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression                  MetadataStreamFilter           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FindRecordingResultList is a complexType.
///
struct tt__FindRecordingResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A RecordingInformation structure for each found recording matching the search.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__RecordingInformation* is 0..unbounded.
   $int                                  __sizeRecordingInformation     0;
/// Array struct tt__RecordingInformation* of size 0..unbounded.
    struct tt__RecordingInformation*     RecordingInformation           0;
};

/// @brief "http://www.onvif.org/ver10/schema":FindEventResultList is a complexType.
///
struct tt__FindEventResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindEventResult structure for each found event matching the search.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__FindEventResult* is 0..unbounded.
   $int                                  __sizeResult                   0;
/// Array struct tt__FindEventResult* of size 0..unbounded.
    struct tt__FindEventResult*          Result                         0;
};

/// @brief "http://www.onvif.org/ver10/schema":FindEventResult is a complexType.
///
struct tt__FindEventResult
{
/// <PRE><BLOCKQUOTE>
///   The recording where this event was found. Empty string if no recording is associated with this event.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the track where this event was found. Empty string if no track is associated with this event.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time when the event occured.
/// </BLOCKQUOTE></PRE>
/// Element "Time" of XSD type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The description of the event.
/// </BLOCKQUOTE></PRE>
/// Element "Event" of XSD type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
    struct wsnt__NotificationMessageHolderType*  Event                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If true, indicates that the event is a virtual event generated for this particular search session to give the state of a property at the start time of the search.
/// </BLOCKQUOTE></PRE>
/// Element "StartStateEvent" of XSD type xs:boolean.
    enum xsd__boolean                    StartStateEvent                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FindPTZPositionResultList is a complexType.
///
struct tt__FindPTZPositionResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindPTZPositionResult structure for each found PTZ position matching the search.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__FindPTZPositionResult* is 0..unbounded.
   $int                                  __sizeResult                   0;
/// Array struct tt__FindPTZPositionResult* of size 0..unbounded.
    struct tt__FindPTZPositionResult*    Result                         0;
};

/// @brief "http://www.onvif.org/ver10/schema":FindPTZPositionResult is a complexType.
///
struct tt__FindPTZPositionResult
{
/// <PRE><BLOCKQUOTE>
///   A reference to the recording containing the PTZ position.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the metadata track containing the PTZ position.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time when the PTZ position was valid.
/// </BLOCKQUOTE></PRE>
/// Element "Time" of XSD type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The PTZ position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                Position                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FindMetadataResultList is a complexType.
///
struct tt__FindMetadataResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindMetadataResult structure for each found set of Metadata matching the search.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__FindMetadataResult* is 0..unbounded.
   $int                                  __sizeResult                   0;
/// Array struct tt__FindMetadataResult* of size 0..unbounded.
    struct tt__FindMetadataResult*       Result                         0;
};

/// @brief "http://www.onvif.org/ver10/schema":FindMetadataResult is a complexType.
///
struct tt__FindMetadataResult
{
/// <PRE><BLOCKQUOTE>
///   A reference to the recording containing the metadata.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the metadata track containing the matching metadata.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The point in time when the matching metadata occurs in the metadata track.
/// </BLOCKQUOTE></PRE>
/// Element "Time" of XSD type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingInformation is a complexType.
///
struct tt__RecordingInformation
{
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Information about the source of the recording. This gives a description of where the data in the recording comes from. Since a single
///   recording is intended to record related material, there is just one source. It is indicates the physical location or the
///   major data source for the recording. Currently the recordingconfiguration cannot describe each individual data source.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    struct tt__RecordingSourceInformation*  Source                         1;	///< Required element.
/// Element "EarliestRecording" of XSD type xs:dateTime.
    time_t*                              EarliestRecording              0;	///< Optional element.
/// Element "LatestRecording" of XSD type xs:dateTime.
    time_t*                              LatestRecording                0;	///< Optional element.
/// Element "Content" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__TrackInformation* is 0..unbounded.
   $int                                  __sizeTrack                    0;
/// Array struct tt__TrackInformation* of size 0..unbounded.
    struct tt__TrackInformation*         Track                          0;
/// Element "RecordingStatus" of XSD type "http://www.onvif.org/ver10/schema":RecordingStatus.
    enum tt__RecordingStatus             RecordingStatus                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingSourceInformation is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A set of informative desciptions of a data source. The Search searvice allows a client to filter on recordings based on information in this structure.
/// </BLOCKQUOTE></PRE>
struct tt__RecordingSourceInformation
{
/// <PRE><BLOCKQUOTE>
///   Identifier for the source chosen by the client that creates the structure.
///   This identifier is opaque to the device. Clients may use any type of URI for this field. A device shall support at least 128 characters.
/// </BLOCKQUOTE></PRE>
/// Element "SourceId" of XSD type xs:anyURI.
    xsd__anyURI                          SourceId                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative user readable name of the source, e.g. "Camera23". A device shall support at least 20 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the physical location of the source, e.g. the coordinates on a map.
/// </BLOCKQUOTE></PRE>
/// Element "Location" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Location                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the source.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   URI provided by the service supplying data to be recorded. A device shall support at least 128 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type xs:anyURI.
    xsd__anyURI                          Address                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackInformation is a complexType.
///
struct tt__TrackInformation
{
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Type of the track: "Video", "Audio" or "Metadata".
///   The track shall only be able to hold data of that type.
/// </BLOCKQUOTE></PRE>
/// Element "TrackType" of XSD type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the contents of the track.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The start date and time of the oldest recorded data in the track.
/// </BLOCKQUOTE></PRE>
/// Element "DataFrom" of XSD type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The stop date and time of the newest recorded data in the track.
/// </BLOCKQUOTE></PRE>
/// Element "DataTo" of XSD type xs:dateTime.
    time_t                               DataTo                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaAttributes is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A set of media attributes valid for a recording at a point in time or for a time interval.
/// </BLOCKQUOTE></PRE>
struct tt__MediaAttributes
{
/// <PRE><BLOCKQUOTE>
///   A reference to the recording that has these attributes.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A set of attributes for each track.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__TrackAttributes* is 0..unbounded.
   $int                                  __sizeTrackAttributes          0;
/// Array struct tt__TrackAttributes* of size 0..unbounded.
    struct tt__TrackAttributes*          TrackAttributes                0;
/// <PRE><BLOCKQUOTE>
///   The attributes are valid from this point in time in the recording.
/// </BLOCKQUOTE></PRE>
/// Element "From" of XSD type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The attributes are valid until this point in time in the recording. Can be equal to 'From' to indicate that the attributes are only known to be valid for this particular point in time.
/// </BLOCKQUOTE></PRE>
/// Element "Until" of XSD type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackAttributes is a complexType.
///
struct tt__TrackAttributes
{
/// <PRE><BLOCKQUOTE>
///   The basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// </BLOCKQUOTE></PRE>
/// Element "TrackInformation" of XSD type "http://www.onvif.org/ver10/schema":TrackInformation.
    struct tt__TrackInformation*         TrackInformation               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If the track is a video track, exactly one of this structure shall be present and contain the video attributes.
/// </BLOCKQUOTE></PRE>
/// Element "VideoAttributes" of XSD type "http://www.onvif.org/ver10/schema":VideoAttributes.
    struct tt__VideoAttributes*          VideoAttributes                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the track is an audio track, exactly one of this structure shall be present and contain the audio attributes.
/// </BLOCKQUOTE></PRE>
/// Element "AudioAttributes" of XSD type "http://www.onvif.org/ver10/schema":AudioAttributes.
    struct tt__AudioAttributes*          AudioAttributes                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the track is an metadata track, exactly one of this structure shall be present and contain the metadata attributes.
/// </BLOCKQUOTE></PRE>
/// Element "MetadataAttributes" of XSD type "http://www.onvif.org/ver10/schema":MetadataAttributes.
    struct tt__MetadataAttributes*       MetadataAttributes             0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":TrackAttributesExtension.
    struct tt__TrackAttributesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackAttributesExtension is a complexType.
///
struct tt__TrackAttributesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAttributes is a complexType.
///
struct tt__VideoAttributes
{
/// <PRE><BLOCKQUOTE>
///   Average bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The width of the video in pixels.
/// </BLOCKQUOTE></PRE>
/// Element "Width" of XSD type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The height of the video in pixels.
/// </BLOCKQUOTE></PRE>
/// Element "Height" of XSD type xs:int.
    int                                  Height                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Used video codec, either Jpeg, H.264 or Mpeg4
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Average framerate in frames per second.
/// </BLOCKQUOTE></PRE>
/// Element "Framerate" of XSD type xs:float.
    float                                Framerate                      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioAttributes is a complexType.
///
struct tt__AudioAttributes
{
/// <PRE><BLOCKQUOTE>
///   The bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Audio codec used for encoding the audio (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The sample rate in kHz.
/// </BLOCKQUOTE></PRE>
/// Element "Samplerate" of XSD type xs:int.
    int                                  Samplerate                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataAttributes is a complexType.
///
struct tt__MetadataAttributes
{
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be PTZ data in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
/// Element "CanContainPTZ" of XSD type xs:boolean.
    enum xsd__boolean                    CanContainPTZ                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be analytics data in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
/// Element "CanContainAnalytics" of XSD type xs:boolean.
    enum xsd__boolean                    CanContainAnalytics            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be notifications in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
/// Element "CanContainNotifications" of XSD type xs:boolean.
    enum xsd__boolean                    CanContainNotifications        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   List of all PTZ spaces active for recording. Note that events are only recorded on position changes and the actual point of recording may not necessarily contain an event of the specified type.
/// </BLOCKQUOTE></PRE>
/// Attribute "PtzSpaces" of XSD type "http://www.onvif.org/ver10/schema":StringAttrList.
   @tt__StringAttrList                   PtzSpaces                      0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingConfiguration is a complexType.
///
struct tt__RecordingConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Information about the source of the recording.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    struct tt__RecordingSourceInformation*  Source                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the source.
/// </BLOCKQUOTE></PRE>
/// Element "Content" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Sspecifies the maximum time that data in any track within the
///   recording shall be stored. The device shall delete any data older than the maximum retention
///   time. Such data shall not be accessible anymore. If the MaximumRetentionPeriod is set to 0,
///   the device shall not limit the retention time of stored data, except by resource constraints.
///   Whatever the value of MaximumRetentionTime, the device may automatically delete
///   recordings to free up storage space for new recordings.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumRetentionTime" of XSD type xs:duration.
    xsd__duration                        MaximumRetentionTime           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackConfiguration is a complexType.
///
struct tt__TrackConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Type of the track. It shall be equal to the strings Video,
///   Audio or Metadata. The track shall only be able to hold data of that type.
/// </BLOCKQUOTE></PRE>
/// Element "TrackType" of XSD type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the track.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":GetRecordingsResponseItem is a complexType.
///
struct tt__GetRecordingsResponseItem
{
/// <PRE><BLOCKQUOTE>
///   Token of the recording.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configuration of the recording.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    struct tt__RecordingConfiguration*   Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of tracks.
/// </BLOCKQUOTE></PRE>
/// Element "Tracks" of XSD type "http://www.onvif.org/ver10/schema":GetTracksResponseList.
    struct tt__GetTracksResponseList*    Tracks                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":GetTracksResponseList is a complexType.
///
struct tt__GetTracksResponseList
{
/// <PRE><BLOCKQUOTE>
///   Configuration of a track.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__GetTracksResponseItem* is 0..unbounded.
   $int                                  __sizeTrack                    0;
/// Array struct tt__GetTracksResponseItem* of size 0..unbounded.
    struct tt__GetTracksResponseItem*    Track                          0;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":GetTracksResponseItem is a complexType.
///
struct tt__GetTracksResponseItem
{
/// <PRE><BLOCKQUOTE>
///   Token of the track.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configuration of the track.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    struct tt__TrackConfiguration*       Configuration                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobConfiguration is a complexType.
///
struct tt__RecordingJobConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Identifies the recording to which this job shall store the received data.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The mode of the job. If it is idle, nothing shall happen. If it is active, the device shall try
///   to obtain data from the receivers. A client shall use GetRecordingJobState to determine if data transfer is really taking place.<br/>
///   The only valid values for Mode shall be Idle and Active.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobMode.
    tt__RecordingJobMode                 Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   This shall be a non-negative number. If there are multiple recording jobs that store data to
///   the same track, the device will only store the data for the recording job with the highest
///   priority. The priority is specified per recording job, but the device shall determine the priority
///   of each track individually. If there are two recording jobs with the same priority, the device
///   shall record the data corresponding to the recording job that was activated the latest.
/// </BLOCKQUOTE></PRE>
/// Element "Priority" of XSD type xs:int.
    int                                  Priority                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Source of the recording.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__RecordingJobSource* is 0..unbounded.
   $int                                  __sizeSource                   0;
/// Array struct tt__RecordingJobSource* of size 0..unbounded.
    struct tt__RecordingJobSource*       Source                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension.
    struct tt__RecordingJobConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension is a complexType.
///
struct tt__RecordingJobConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobSource is a complexType.
///
struct tt__RecordingJobSource
{
/// <PRE><BLOCKQUOTE>
///   This field shall be a reference to the source of the data. The type of the source
///   is determined by the attribute Type in the SourceToken structure. If Type is
///   http://www.onvif.org/ver10/schema/Receiver, the token is a ReceiverReference. In this case
///   the device shall receive the data over the network. If Type is
///   http://www.onvif.org/ver10/schema/Profile, the token identifies a media profile, instructing the
///   device to obtain data from a profile that exists on the local device.
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":SourceReference.
    struct tt__SourceReference*          SourceToken                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If this field is TRUE, and if the SourceToken is omitted, the device
///   shall create a receiver object (through the receiver service) and assign the
///   ReceiverReference to the SourceToken field. When retrieving the RecordingJobConfiguration
///   from the device, the AutoCreateReceiver field shall never be present.
/// </BLOCKQUOTE></PRE>
/// Element "AutoCreateReceiver" of XSD type xs:boolean.
    enum xsd__boolean*                   AutoCreateReceiver             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of tracks associated with the recording.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__RecordingJobTrack* is 0..unbounded.
   $int                                  __sizeTracks                   0;
/// Array struct tt__RecordingJobTrack* of size 0..unbounded.
    struct tt__RecordingJobTrack*        Tracks                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension.
    struct tt__RecordingJobSourceExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension is a complexType.
///
struct tt__RecordingJobSourceExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobTrack is a complexType.
///
struct tt__RecordingJobTrack
{
/// <PRE><BLOCKQUOTE>
///   If the received RTSP stream contains multiple tracks of the same type, the
///   SourceTag differentiates between those Tracks. This field can be ignored in case of recording a local source.
/// </BLOCKQUOTE></PRE>
/// Element "SourceTag" of XSD type xs:string.
    char*                                SourceTag                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The destination is the tracktoken of the track to which the device shall store the
///   received data.
/// </BLOCKQUOTE></PRE>
/// Element "Destination" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateInformation is a complexType.
///
struct tt__RecordingJobStateInformation
{
/// <PRE><BLOCKQUOTE>
///   Identification of the recording that the recording job records to.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Holds the aggregated state over the whole RecordingJobInformation structure.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Identifies the data source of the recording job.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__RecordingJobStateSource* is 0..unbounded.
   $int                                  __sizeSources                  0;
/// Array struct tt__RecordingJobStateSource* of size 0..unbounded.
    struct tt__RecordingJobStateSource*  Sources                        0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension.
    struct tt__RecordingJobStateInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension is a complexType.
///
struct tt__RecordingJobStateInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateSource is a complexType.
///
struct tt__RecordingJobStateSource
{
/// <PRE><BLOCKQUOTE>
///   Identifies the data source of the recording job.
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":SourceReference.
    struct tt__SourceReference*          SourceToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Holds the aggregated state over all substructures of RecordingJobStateSource.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of track items.
/// </BLOCKQUOTE></PRE>
/// Element "Tracks" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobStateTracks.
    struct tt__RecordingJobStateTracks*  Tracks                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateTracks is a complexType.
///
struct tt__RecordingJobStateTracks
{
/// Size of array of struct tt__RecordingJobStateTrack* is 0..unbounded.
   $int                                  __sizeTrack                    0;
/// Array struct tt__RecordingJobStateTrack* of size 0..unbounded.
    struct tt__RecordingJobStateTrack*   Track                          0;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateTrack is a complexType.
///
struct tt__RecordingJobStateTrack
{
/// <PRE><BLOCKQUOTE>
///   Identifies the track of the data source that provides the data.
/// </BLOCKQUOTE></PRE>
/// Element "SourceTag" of XSD type xs:string.
    char*                                SourceTag                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the destination track.
/// </BLOCKQUOTE></PRE>
/// Element "Destination" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optionally holds an implementation defined string value that describes the error.
///   The string should be in the English language.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    char*                                Error                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Provides the job state of the track. The valid
///   values of state shall be Idle, Active and Error. If state equals Error, the Error field may be filled in with an implementation defined value.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":GetRecordingJobsResponseItem is a complexType.
///
struct tt__GetRecordingJobsResponseItem
{
/// Element "JobToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// Element "JobConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    struct tt__RecordingJobConfiguration*  JobConfiguration               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReplayConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Configuration parameters for the replay service.
/// </BLOCKQUOTE></PRE>
struct tt__ReplayConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The RTSP session timeout.
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration is a complexType.
///
struct tt__AnalyticsDeviceEngineConfiguration
{
/// Size of array of struct tt__EngineConfiguration* is 1..unbounded.
   $int                                  __sizeEngineConfiguration      1;
/// Array struct tt__EngineConfiguration* of size 1..unbounded.
    struct tt__EngineConfiguration*      EngineConfiguration            1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension.
    struct tt__AnalyticsDeviceEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension is a complexType.
///
struct tt__AnalyticsDeviceEngineConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":EngineConfiguration is a complexType.
///
struct tt__EngineConfiguration
{
/// Element "VideoAnalyticsConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  VideoAnalyticsConfiguration    1;	///< Required element.
/// Element "AnalyticsEngineInputInfo" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo.
    struct tt__AnalyticsEngineInputInfo*  AnalyticsEngineInputInfo       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo is a complexType.
///
struct tt__AnalyticsEngineInputInfo
{
/// Element "InputInfo" of XSD type "http://www.onvif.org/ver10/schema":Config.
    struct tt__Config*                   InputInfo                      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension.
    struct tt__AnalyticsEngineInputInfoExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension is a complexType.
///
struct tt__AnalyticsEngineInputInfoExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SourceIdentification is a complexType.
///
struct tt__SourceIdentification
{
/// Element "Name" of XSD type xs:string.
    char*                                Name                           1;	///< Required element.
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  Token                          1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SourceIdentificationExtension.
    struct tt__SourceIdentificationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SourceIdentificationExtension is a complexType.
///
struct tt__SourceIdentificationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataInput is a complexType.
///
struct tt__MetadataInput
{
/// Size of array of struct tt__Config* is 0..unbounded.
   $int                                  __sizeMetadataConfig           0;
/// Array struct tt__Config* of size 0..unbounded.
    struct tt__Config*                   MetadataConfig                 0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataInputExtension.
    struct tt__MetadataInputExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataInputExtension is a complexType.
///
struct tt__MetadataInputExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsStateInformation is a complexType.
///
struct tt__AnalyticsStateInformation
{
/// <PRE><BLOCKQUOTE>
///   Token of the control object whose status is requested.
/// </BLOCKQUOTE></PRE>
/// Element "AnalyticsEngineControlToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AnalyticsEngineControlToken    1;	///< Required element.
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsState.
    struct tt__AnalyticsState*           State                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsState is a complexType.
///
struct tt__AnalyticsState
{
/// Element "Error" of XSD type xs:string.
    char*                                Error                          0;	///< Optional element.
/// Element "State" of XSD type xs:string.
    char*                                State                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ActionEngineEventPayload is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Action Engine Event Payload data structure contains the information about the ONVIF command invocations. Since this event could be generated by other or proprietary actions, the command invocation specific fields are defined as optional and additional extension mechanism is provided for future or additional action definitions.
/// </BLOCKQUOTE></PRE>
struct tt__ActionEngineEventPayload
{
/// <PRE><BLOCKQUOTE>
///   Request Message
/// </BLOCKQUOTE></PRE>
/// Element "RequestInfo" of XSD type SOAP-ENV:Envelope.
    struct SOAP_ENV__Envelope*           RequestInfo                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Response Message
/// </BLOCKQUOTE></PRE>
/// Element "ResponseInfo" of XSD type SOAP-ENV:Envelope.
    struct SOAP_ENV__Envelope*           ResponseInfo                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Fault Message
/// </BLOCKQUOTE></PRE>
/// Element "Fault" of XSD type SOAP-ENV:Fault.
    struct SOAP_ENV__Fault*              Fault                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension.
    struct tt__ActionEngineEventPayloadExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension is a complexType.
///
struct tt__ActionEngineEventPayloadExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassCandidate is a complexType.
///
struct tt__AudioClassCandidate
{
/// <PRE><BLOCKQUOTE>
///   Indicates audio class label
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":AudioClassType.
    tt__AudioClassType                   Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A likelihood/probability that the corresponding audio event belongs to this class. The sum of the likelihoods shall NOT exceed 1
/// </BLOCKQUOTE></PRE>
/// Element "Likelihood" of XSD type xs:float.
    float                                Likelihood                     1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassDescriptor is a complexType.
///
struct tt__AudioClassDescriptor
{
/// <PRE><BLOCKQUOTE>
///   Array of audio class label and class probability
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioClassCandidate* is 0..unbounded.
   $int                                  __sizeClassCandidate           0;
/// Array struct tt__AudioClassCandidate* of size 0..unbounded.
    struct tt__AudioClassCandidate*      ClassCandidate                 0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension.
    struct tt__AudioClassDescriptorExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension is a complexType.
///
struct tt__AudioClassDescriptorExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDPosConfiguration is a complexType.
///
struct tt__OSDPosConfiguration
{
/// <PRE><BLOCKQUOTE>
///   For OSD position type, following are the pre-defined: <ul><li>UpperLeft</li>
///   <li>UpperRight</li>
///   <li>LowerLeft</li>
///   <li>LowerRight</li>
///   <li>Custom</li></ul>
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type xs:string.
    char*                                Type                           1;	///< Required element.
/// Element "Pos" of XSD type "http://www.onvif.org/ver10/schema":Vector.
    struct tt__Vector*                   Pos                            0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension.
    struct tt__OSDPosConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension is a complexType.
///
struct tt__OSDPosConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColor is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The value range of "Transparent" could be defined by vendors only should follow this rule: the minimum value means non-transparent and the maximum value maens fully transparent.
/// </BLOCKQUOTE></PRE>
struct tt__OSDColor
{
/// Element "Color" of XSD type "http://www.onvif.org/ver10/schema":Color.
    struct tt__Color*                    Color                          1;	///< Required element.
/// Attribute "Transparent" of XSD type xs:int.
   @int*                                 Transparent                    0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextConfiguration is a complexType.
///
struct tt__OSDTextConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The following OSD Text Type are defined:<ul>
///   <li>Plain - The Plain type means the OSD is shown as a text string which defined in the "PlainText" item.</li>
///   <li>Date - The Date type means the OSD is shown as a date, format of which should be present in the "DateFormat" item.</li>
///   <li>Time - The Time type means the OSD is shown as a time, format of which should be present in the "TimeFormat" item.</li>
///   <li>DateAndTime - The DateAndTime type means the OSD is shown as date and time, format of which should be present in the "DateFormat" and the "TimeFormat" item.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type xs:string.
    char*                                Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported OSD date formats. This element shall be present when the value of Type field has Date or DateAndTime. The following DateFormat are defined:<ul>
///   <li>M/d/yyyy - e.g. 3/6/2013</li>
///   <li>MM/dd/yyyy - e.g. 03/06/2013</li>
///   <li>dd/MM/yyyy - e.g. 06/03/2013</li>
///   <li>yyyy/MM/dd - e.g. 2013/03/06</li>
///   <li>yyyy-MM-dd - e.g. 2013-06-03</li>
///   <li>dddd, MMMM dd, yyyy - e.g. Wednesday, March 06, 2013</li>
///   <li>MMMM dd, yyyy - e.g. March 06, 2013</li>
///   <li>dd MMMM, yyyy - e.g. 06 March, 2013</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "DateFormat" of XSD type xs:string.
    char*                                DateFormat                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported OSD time formats. This element shall be present when the value of Type field has Time or DateAndTime. The following TimeFormat are defined:<ul>
///   <li>h:mm:ss tt - e.g. 2:14:21 PM</li>
///   <li>hh:mm:ss tt - e.g. 02:14:21 PM</li>
///   <li>H:mm:ss - e.g. 14:14:21</li>
///   <li>HH:mm:ss - e.g. 14:14:21</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "TimeFormat" of XSD type xs:string.
    char*                                TimeFormat                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Font size of the text in pt.
/// </BLOCKQUOTE></PRE>
/// Element "FontSize" of XSD type xs:int.
    int*                                 FontSize                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Font color of the text.
/// </BLOCKQUOTE></PRE>
/// Element "FontColor" of XSD type "http://www.onvif.org/ver10/schema":OSDColor.
    struct tt__OSDColor*                 FontColor                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Background color of the text.
/// </BLOCKQUOTE></PRE>
/// Element "BackgroundColor" of XSD type "http://www.onvif.org/ver10/schema":OSDColor.
    struct tt__OSDColor*                 BackgroundColor                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The content of text to be displayed.
/// </BLOCKQUOTE></PRE>
/// Element "PlainText" of XSD type xs:string.
    char*                                PlainText                      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension.
    struct tt__OSDTextConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension is a complexType.
///
struct tt__OSDTextConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgConfiguration is a complexType.
///
struct tt__OSDImgConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The URI of the image which to be displayed.
/// </BLOCKQUOTE></PRE>
/// Element "ImgPath" of XSD type xs:anyURI.
    xsd__anyURI                          ImgPath                        1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension.
    struct tt__OSDImgConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension is a complexType.
///
struct tt__OSDImgConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorspaceRange is a complexType.
///
struct tt__ColorspaceRange
{
/// Element "X" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               X                              1;	///< Required element.
/// Element "Y" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Y                              1;	///< Required element.
/// Element "Z" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Z                              1;	///< Required element.
/// Element "Colorspace" of XSD type xs:anyURI.
    xsd__anyURI                          Colorspace                     1;	///< Required element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describe the option of the color supported. Either list each color or define the range of color value. The following values are acceptable for Colourspace attribute.<ul><li>http://www.onvif.org/ver10/colorspace/YCbCr - YCbCr colourspace</li>
///   <li>http://www.onvif.org/ver10/colorspace/CIELUV - CIE LUV</li>
///   <li>http://www.onvif.org/ver10/colorspace/CIELAB - CIE 1976 (L*a*b*)</li>
///   <li>http://www.onvif.org/ver10/colorspace/HSV - HSV colourspace</li></ul>
/// </BLOCKQUOTE></PRE>
struct tt__ColorOptions
{
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with one ore more elements with maxOccurs>1 (ColorList) prevents the use of a union. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
/// <PRE><BLOCKQUOTE>
///   List the supported color.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Color* is 1..unbounded.
   $int                                  __sizeColorList                0;
/// Array struct tt__Color* of size 1..unbounded.
    struct tt__Color*                    ColorList                     ;
/// <PRE><BLOCKQUOTE>
///   Define the rang of color supported.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__ColorspaceRange* is 1..unbounded.
   $int                                  __sizeColorspaceRange          0;
/// Array struct tt__ColorspaceRange* of size 1..unbounded.
    struct tt__ColorspaceRange*          ColorspaceRange               ;
//  END OF CHOICE
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColorOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describe the option of the color and its transparency.
/// </BLOCKQUOTE></PRE>
struct tt__OSDColorOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional list of supported colors.
/// </BLOCKQUOTE></PRE>
/// Element "Color" of XSD type "http://www.onvif.org/ver10/schema":ColorOptions.
    struct tt__ColorOptions*             Color                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Range of the transparent level. Larger means more tranparent.
/// </BLOCKQUOTE></PRE>
/// Element "Transparent" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 Transparent                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension.
    struct tt__OSDColorOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension is a complexType.
///
struct tt__OSDColorOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextOptions is a complexType.
///
struct tt__OSDTextOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported OSD text type. When a device indicates the supported number relating to Text type in MaximumNumberOfOSDs, the type shall be presented.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeType                     1;
/// Array char** of size 1..unbounded.
    char**                               Type                           1;
/// <PRE><BLOCKQUOTE>
///   Range of the font size value.
/// </BLOCKQUOTE></PRE>
/// Element "FontSizeRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FontSizeRange                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported date format.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 0..unbounded.
   $int                                  __sizeDateFormat               0;
/// Array char** of size 0..unbounded.
    char**                               DateFormat                     0;
/// <PRE><BLOCKQUOTE>
///   List of supported time format.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 0..unbounded.
   $int                                  __sizeTimeFormat               0;
/// Array char** of size 0..unbounded.
    char**                               TimeFormat                     0;
/// <PRE><BLOCKQUOTE>
///   List of supported font color.
/// </BLOCKQUOTE></PRE>
/// Element "FontColor" of XSD type "http://www.onvif.org/ver10/schema":OSDColorOptions.
    struct tt__OSDColorOptions*          FontColor                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported background color.
/// </BLOCKQUOTE></PRE>
/// Element "BackgroundColor" of XSD type "http://www.onvif.org/ver10/schema":OSDColorOptions.
    struct tt__OSDColorOptions*          BackgroundColor                0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension.
    struct tt__OSDTextOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension is a complexType.
///
struct tt__OSDTextOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgOptions is a complexType.
///
struct tt__OSDImgOptions
{
/// <PRE><BLOCKQUOTE>
///   List of avaiable uris of image.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 1..unbounded.
   $int                                  __sizeImagePath                1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         ImagePath                      1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension.
    struct tt__OSDImgOptionsExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension is a complexType.
///
struct tt__OSDImgOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationExtension is a complexType.
///
struct tt__OSDConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs is a complexType.
///
struct tt__MaximumNumberOfOSDs
{
/// Attribute "Total" of XSD type xs:int.
   @int                                  Total                          1;	///< Required attribute.
/// Attribute "Image" of XSD type xs:int.
   @int*                                 Image                          0;	///< Optional attribute.
/// Attribute "PlainText" of XSD type xs:int.
   @int*                                 PlainText                      0;	///< Optional attribute.
/// Attribute "Date" of XSD type xs:int.
   @int*                                 Date                           0;	///< Optional attribute.
/// Attribute "Time" of XSD type xs:int.
   @int*                                 Time                           0;	///< Optional attribute.
/// Attribute "DateAndTime" of XSD type xs:int.
   @int*                                 DateAndTime                    0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationOptions is a complexType.
///
struct tt__OSDConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   The maximum number of OSD configurations supported for the specificate video source configuration. If a device limits the number of instances by OSDType, it should indicate the supported number via the related attribute.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumNumberOfOSDs" of XSD type "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs.
    struct tt__MaximumNumberOfOSDs*      MaximumNumberOfOSDs            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List supported type of OSD configuration. When a device indicates the supported number for each types in MaximumNumberOfOSDs, related type shall be presented. A device shall return Option element relating to listed type.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__OSDType* is 1..unbounded.
   $int                                  __sizeType                     1;
/// Array enum tt__OSDType* of size 1..unbounded.
    enum tt__OSDType*                    Type                           1;
/// <PRE><BLOCKQUOTE>
///   List available OSD position type. Following are the pre-defined:<ul><li>UpperLeft</li>
///   <li>UpperRight</li>
///   <li>LowerLeft</li>
///   <li>LowerRight</li>
///   <li>Custom</li></ul>
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizePositionOption           1;
/// Array char** of size 1..unbounded.
    char**                               PositionOption                 1;
/// <PRE><BLOCKQUOTE>
///   Option of the OSD text configuration. This element shall be returned if the device is signaling the support for Text.
/// </BLOCKQUOTE></PRE>
/// Element "TextOption" of XSD type "http://www.onvif.org/ver10/schema":OSDTextOptions.
    struct tt__OSDTextOptions*           TextOption                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Option of the OSD image configuration. This element shall be returned if the device is signaling the support for Image.
/// </BLOCKQUOTE></PRE>
/// Element "ImageOption" of XSD type "http://www.onvif.org/ver10/schema":OSDImgOptions.
    struct tt__OSDImgOptions*            ImageOption                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension.
    struct tt__OSDConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension is a complexType.
///
struct tt__OSDConfigurationOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FileProgress is a complexType.
///
struct tt__FileProgress
{
/// <PRE><BLOCKQUOTE>
///   Exported file name
/// </BLOCKQUOTE></PRE>
/// Element "FileName" of XSD type xs:string.
    char*                                FileName                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Normalized percentage completion for uploading the exported file
/// </BLOCKQUOTE></PRE>
/// Element "Progress" of XSD type xs:float.
    float                                Progress                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ArrayOfFileProgress is a complexType.
///
struct tt__ArrayOfFileProgress
{
/// <PRE><BLOCKQUOTE>
///   Exported file name and export progress information
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__FileProgress* is 0..unbounded.
   $int                                  __sizeFileProgress             0;
/// Array struct tt__FileProgress* of size 0..unbounded.
    struct tt__FileProgress*             FileProgress                   0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension.
    struct tt__ArrayOfFileProgressExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension is a complexType.
///
struct tt__ArrayOfFileProgressExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":StorageReferencePath is a complexType.
///
struct tt__StorageReferencePath
{
/// <PRE><BLOCKQUOTE>
///   identifier of an existing Storage Configuration.
/// </BLOCKQUOTE></PRE>
/// Element "StorageToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   StorageToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   gives the relative directory path on the storage
/// </BLOCKQUOTE></PRE>
/// Element "RelativePath" of XSD type xs:string.
    char*                                RelativePath                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":StorageReferencePathExtension.
    struct tt__StorageReferencePathExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":StorageReferencePathExtension is a complexType.
///
struct tt__StorageReferencePathExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Message
/// @brief "http://www.onvif.org/ver10/schema":Message is a complexType.
///
struct _tt__Message
{
/// <PRE><BLOCKQUOTE>
///   Token value pairs that triggered this message. Typically only one item is present.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Source                         0;	///< Optional element.
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Key                            0;	///< Optional element.
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Data                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MessageExtension.
    struct tt__MessageExtension*         Extension                      0;	///< Optional element.
/// Attribute "UtcTime" of XSD type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// Attribute "PropertyOperation" of XSD type "http://www.onvif.org/ver10/schema":PropertyOperation.
   @enum tt__PropertyOperation*          PropertyOperation              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities is a complexType.
///
struct tmd__Capabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Number of video sources (defaults to none).
/// </BLOCKQUOTE></PRE>
/// Attribute "VideoSources" of XSD type xs:int.
   @int                                  VideoSources                   0 = 0;	///< Default attribute value="0".
/// <PRE><BLOCKQUOTE>
///   Number of video outputs (defaults to none).
/// </BLOCKQUOTE></PRE>
/// Attribute "VideoOutputs" of XSD type xs:int.
   @int                                  VideoOutputs                   0 = 0;	///< Default attribute value="0".
/// <PRE><BLOCKQUOTE>
///   Number of audio sources (defaults to none).
/// </BLOCKQUOTE></PRE>
/// Attribute "AudioSources" of XSD type xs:int.
   @int                                  AudioSources                   0 = 0;	///< Default attribute value="0".
/// <PRE><BLOCKQUOTE>
///   Number of audio outputs (defaults to none).
/// </BLOCKQUOTE></PRE>
/// Attribute "AudioOutputs" of XSD type xs:int.
   @int                                  AudioOutputs                   0 = 0;	///< Default attribute value="0".
/// <PRE><BLOCKQUOTE>
///   Number of relay outputs (defaults to none).
/// </BLOCKQUOTE></PRE>
/// Attribute "RelayOutputs" of XSD type xs:int.
   @int                                  RelayOutputs                   0 = 0;	///< Default attribute value="0".
/// <PRE><BLOCKQUOTE>
///   Number of serial ports (defaults to none).
/// </BLOCKQUOTE></PRE>
/// Attribute "SerialPorts" of XSD type xs:int.
   @int                                  SerialPorts                    0 = 0;	///< Default attribute value="0".
/// <PRE><BLOCKQUOTE>
///   Number of digital inputs (defaults to none).
/// </BLOCKQUOTE></PRE>
/// Attribute "DigitalInputs" of XSD type xs:int.
   @int                                  DigitalInputs                  0 = 0;	///< Default attribute value="0".
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":RelayOutputOptions is a complexType.
///
struct tmd__RelayOutputOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported Modes.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__RelayMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__RelayMode* of size 1..unbounded.
    enum tt__RelayMode*                  Mode                           1;
/// <PRE><BLOCKQUOTE>
///   Supported delay time range or discrete values in seconds. This element must be present if MonoStable mode is supported.
/// </BLOCKQUOTE></PRE>
/// Element "DelayTimes" of XSD type "http://www.onvif.org/ver10/deviceIO/wsdl":DelayTimes.
    tmd__DelayTimes                      DelayTimes                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   True if the relay only supports the exact values for the DelayTimes listed. Default is false.
/// </BLOCKQUOTE></PRE>
/// Element "Discrete" of XSD type xs:boolean.
    enum xsd__boolean*                   Discrete                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/deviceIO/wsdl":RelayOutputOptionsExtension.
    struct tmd__RelayOutputOptionsExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Token of the relay output.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":RelayOutputOptionsExtension is a complexType.
///
struct tmd__RelayOutputOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SerialData is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The serial port data.
/// </BLOCKQUOTE></PRE>
struct tmd__SerialData
{
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_SerialData            ;	///< Union _tmd__union_SerialData selector: set to SOAP_UNION__tmd__union_SerialData_<fieldname>
/// Union for choice in tmd__SerialData.
    union _tmd__union_SerialData
    {
/// Element "Binary" of XSD type xs:base64Binary.
    struct xsd__base64Binary             Binary                         1;	///< Required element.
/// Element "String" of XSD type xs:string.
    char*                                String                         1;	///< Required element.
    }                                    union_SerialData              ;
//  END OF CHOICE
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The parameters for configuring the serial port.
/// </BLOCKQUOTE></PRE>
struct tmd__SerialPortConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The transfer bitrate.
/// </BLOCKQUOTE></PRE>
/// Element "BaudRate" of XSD type xs:int.
    int                                  BaudRate                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The parity for the data error detection.
/// </BLOCKQUOTE></PRE>
/// Element "ParityBit" of XSD type "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBit.
    enum tmd__ParityBit                  ParityBit                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The bit length for each character.
/// </BLOCKQUOTE></PRE>
/// Element "CharacterLength" of XSD type xs:int.
    int                                  CharacterLength                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The number of stop bits used to terminate each character.
/// </BLOCKQUOTE></PRE>
/// Element "StopBit" of XSD type xs:float.
    float                                StopBit                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// Attribute "type" of XSD type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortType.
   @enum tmd__SerialPortType             type                           1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfigurationOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The configuration options that relates to serial port.
/// </BLOCKQUOTE></PRE>
struct tmd__SerialPortConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   The list of configurable transfer bitrate.
/// </BLOCKQUOTE></PRE>
/// Element "BaudRateList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  BaudRateList                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The list of configurable parity for the data error detection.
/// </BLOCKQUOTE></PRE>
/// Element "ParityBitList" of XSD type "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBitList.
    struct tmd__ParityBitList*           ParityBitList                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The list of configurable bit length for each character.
/// </BLOCKQUOTE></PRE>
/// Element "CharacterLengthList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  CharacterLengthList            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The list of configurable number of stop bits used to terminate each character.
/// </BLOCKQUOTE></PRE>
/// Element "StopBitList" of XSD type "http://www.onvif.org/ver10/schema":FloatList.
    struct tt__FloatList*                StopBitList                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBitList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The list of configurable parity for the data error detection.
/// </BLOCKQUOTE></PRE>
struct tmd__ParityBitList
{
/// Size of array of enum tmd__ParityBit* is 0..unbounded.
   $int                                  __sizeItems                    0;
/// Array enum tmd__ParityBit* of size 0..unbounded.
    enum tmd__ParityBit*                 Items                          0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilities is a complexType.
///
struct _tmd__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _tmd__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the device IO service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities.
    struct tmd__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptions is a complexType.
///
struct _tmd__GetRelayOutputOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional reference token to the relay for which the options are requested.
/// </BLOCKQUOTE></PRE>
/// Element "RelayOutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptionsResponse is a complexType.
///
struct _tmd__GetRelayOutputOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   Valid values and ranges for the configuration of a relay output.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tmd__RelayOutputOptions* is 0..unbounded.
   $int                                  __sizeRelayOutputOptions       0;
/// Array struct tmd__RelayOutputOptions* of size 0..unbounded.
    struct tmd__RelayOutputOptions*      RelayOutputOptions             0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputs
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputs is a complexType.
///
struct _tmd__GetVideoOutputs
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputsResponse is a complexType.
///
struct _tmd__GetVideoOutputsResponse
{
/// <PRE><BLOCKQUOTE>
///   List containing all physical Video output connections of a device.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoOutput* is 0..unbounded.
   $int                                  __sizeVideoOutputs             0;
/// Array struct tt__VideoOutput* of size 0..unbounded.
    struct tt__VideoOutput*              VideoOutputs                   0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfiguration is a complexType.
///
struct _tmd__GetAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested AudioSource.
/// </BLOCKQUOTE></PRE>
/// Element "AudioSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioSourceToken               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationResponse is a complexType.
///
struct _tmd__GetAudioSourceConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Current configuration of the Audio input.
/// </BLOCKQUOTE></PRE>
/// Element "AudioSourceConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  AudioSourceConfiguration       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfiguration is a complexType.
///
struct _tmd__GetAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the physical Audio output.
/// </BLOCKQUOTE></PRE>
/// Element "AudioOutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioOutputToken               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationResponse is a complexType.
///
struct _tmd__GetAudioOutputConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Current configuration of the Audio output.
/// </BLOCKQUOTE></PRE>
/// Element "AudioOutputConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  AudioOutputConfiguration       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfiguration is a complexType.
///
struct _tmd__GetVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested VideoSource.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationResponse is a complexType.
///
struct _tmd__GetVideoSourceConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Current configuration of the Video input.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  VideoSourceConfiguration       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfiguration is a complexType.
///
struct _tmd__GetVideoOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested VideoOutput.
/// </BLOCKQUOTE></PRE>
/// Element "VideoOutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutputToken               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationResponse is a complexType.
///
struct _tmd__GetVideoOutputConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Current configuration of the Video output.
/// </BLOCKQUOTE></PRE>
/// Element "VideoOutputConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoOutputConfiguration.
    struct tt__VideoOutputConfiguration*  VideoOutputConfiguration       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfiguration is a complexType.
///
struct _tmd__SetAudioSourceConfiguration
{
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element determines how configuration
///   changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
///   after reboot.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfigurationResponse is a complexType.
///
struct _tmd__SetAudioSourceConfigurationResponse
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfiguration is a complexType.
///
struct _tmd__SetAudioOutputConfiguration
{
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element determines how configuration
///   changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
///   after reboot.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfigurationResponse is a complexType.
///
struct _tmd__SetAudioOutputConfigurationResponse
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfiguration is a complexType.
///
struct _tmd__SetVideoSourceConfiguration
{
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element determines how configuration
///   changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
///   after reboot.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfigurationResponse is a complexType.
///
struct _tmd__SetVideoSourceConfigurationResponse
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfiguration is a complexType.
///
struct _tmd__SetVideoOutputConfiguration
{
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoOutputConfiguration.
    struct tt__VideoOutputConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element determines how configuration
///   changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
///   after reboot.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfigurationResponse is a complexType.
///
struct _tmd__SetVideoOutputConfigurationResponse
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptions is a complexType.
///
struct _tmd__GetVideoSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Token of the Video input whose options are requested..
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
///
struct _tmd__GetVideoSourceConfigurationOptionsResponse
{
/// Element "VideoSourceConfigurationOptions" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    struct tt__VideoSourceConfigurationOptions*  VideoSourceConfigurationOptions 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptions is a complexType.
///
struct _tmd__GetVideoOutputConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Token of the Video Output whose options are requested..
/// </BLOCKQUOTE></PRE>
/// Element "VideoOutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutputToken               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptionsResponse is a complexType.
///
struct _tmd__GetVideoOutputConfigurationOptionsResponse
{
/// Element "VideoOutputConfigurationOptions" of XSD type "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions.
    struct tt__VideoOutputConfigurationOptions*  VideoOutputConfigurationOptions 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptions is a complexType.
///
struct _tmd__GetAudioSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Token of the physical Audio input whose options are requested..
/// </BLOCKQUOTE></PRE>
/// Element "AudioSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioSourceToken               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
///
struct _tmd__GetAudioSourceConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   Returns the AudioSourceToken available.
/// </BLOCKQUOTE></PRE>
/// Element "AudioSourceOptions" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    struct tt__AudioSourceConfigurationOptions*  AudioSourceOptions             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptions is a complexType.
///
struct _tmd__GetAudioOutputConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Token of the physical Audio Output whose options are requested..
/// </BLOCKQUOTE></PRE>
/// Element "AudioOutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioOutputToken               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
///
struct _tmd__GetAudioOutputConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   Available settings and ranges for the requested Audio output.
/// </BLOCKQUOTE></PRE>
/// Element "AudioOutputOptions" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    struct tt__AudioOutputConfigurationOptions*  AudioOutputOptions             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettings
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettings is a complexType.
///
struct _tmd__SetRelayOutputSettings
{
/// Element "RelayOutput" of XSD type "http://www.onvif.org/ver10/schema":RelayOutput.
    struct tt__RelayOutput*              RelayOutput                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettingsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettingsResponse is a complexType.
///
struct _tmd__SetRelayOutputSettingsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputs
/// <PRE><BLOCKQUOTE>
///   Get the available digital inputs of a device.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputs is a complexType.
///
struct _tmd__GetDigitalInputs
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputsResponse
/// <PRE><BLOCKQUOTE>
///   Requested digital inputs.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputsResponse is a complexType.
///
struct _tmd__GetDigitalInputsResponse
{
/// Size of array of struct tt__DigitalInput* is 0..unbounded.
   $int                                  __sizeDigitalInputs            0;
/// Array struct tt__DigitalInput* of size 0..unbounded.
    struct tt__DigitalInput*             DigitalInputs                  0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPorts
/// <PRE><BLOCKQUOTE>
///   The physical serial port on the device that allows serial data to be read and written.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPorts is a complexType.
///
struct _tmd__GetSerialPorts
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortsResponse
/// <PRE><BLOCKQUOTE>
///   Requested serial ports.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortsResponse is a complexType.
///
struct _tmd__GetSerialPortsResponse
{
/// Size of array of struct tmd__SerialPort* is 0..unbounded.
   $int                                  __sizeSerialPort               0;
/// Array struct tmd__SerialPort* of size 0..unbounded.
    struct tmd__SerialPort*              SerialPort                     0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfiguration
/// <PRE><BLOCKQUOTE>
///   Gets the configuration that relates to serial port configuration.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfiguration is a complexType.
///
struct _tmd__GetSerialPortConfiguration
{
/// Element "SerialPortToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SerialPortToken                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationResponse
/// <PRE><BLOCKQUOTE>
///   Requested serial port configuration.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationResponse is a complexType.
///
struct _tmd__GetSerialPortConfigurationResponse
{
/// Element "SerialPortConfiguration" of XSD type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfiguration.
    struct tmd__SerialPortConfiguration*  SerialPortConfiguration        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfiguration
/// <PRE><BLOCKQUOTE>
///   Sets the configuration that relates to serial port configuration.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfiguration is a complexType.
///
struct _tmd__SetSerialPortConfiguration
{
/// Element "SerialPortConfiguration" of XSD type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfiguration.
    struct tmd__SerialPortConfiguration*  SerialPortConfiguration        1;	///< Required element.
/// Element "ForcePersistance" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistance               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfigurationResponse is a complexType.
///
struct _tmd__SetSerialPortConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptions
/// <PRE><BLOCKQUOTE>
///   Gets the configuration options that relates to serial port configuration.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptions is a complexType.
///
struct _tmd__GetSerialPortConfigurationOptions
{
/// Element "SerialPortToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SerialPortToken                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptionsResponse
/// <PRE><BLOCKQUOTE>
///   Requested serial port configuration options.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptionsResponse is a complexType.
///
struct _tmd__GetSerialPortConfigurationOptionsResponse
{
/// Element "SerialPortOptions" of XSD type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfigurationOptions.
    struct tmd__SerialPortConfigurationOptions*  SerialPortOptions              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommand
/// <PRE><BLOCKQUOTE>
///   Transmitting arbitrary data to the connected serial device and then receiving its response data.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommand is a complexType.
///
struct _tmd__SendReceiveSerialCommand
{
/// <PRE><BLOCKQUOTE>
///   The serial port data.
/// </BLOCKQUOTE></PRE>
/// Element "SerialData" of XSD type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialData.
    struct tmd__SerialData*              SerialData                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates that the command should be responded back within the specified period of time.
/// </BLOCKQUOTE></PRE>
/// Element "TimeOut" of XSD type xs:duration.
    xsd__duration*                       TimeOut                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This element may be put in the case that data length returned from the connected serial device is already determined as some fixed bytes length. It indicates the length of received data which can be regarded as available.
/// </BLOCKQUOTE></PRE>
/// Element "DataLength" of XSD type xs:integer.
    xsd__integer                         DataLength                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This element may be put in the case that the delimiter codes returned from the connected serial device is already known. It indicates the termination data sequence of the responded data. In case the string has more than one character a device shall interpret the whole string as a single delimiter. Furthermore a device shall return the delimiter character(s) to the client.
/// </BLOCKQUOTE></PRE>
/// Element "Delimiter" of XSD type xs:string.
    char*                                Delimiter                      0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommandResponse
/// <PRE><BLOCKQUOTE>
///   Receiving the response data.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommandResponse is a complexType.
///
struct _tmd__SendReceiveSerialCommandResponse
{
/// Element "SerialData" of XSD type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialData.
    struct tmd__SerialData*              SerialData                     0;	///< Optional element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/media/wsdl":Capabilities is a complexType.
///
struct trt__Capabilities
{
/// <PRE><BLOCKQUOTE>
///   Media profile capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileCapabilities" of XSD type "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities.
    struct trt__ProfileCapabilities*     ProfileCapabilities            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "StreamingCapabilities" of XSD type "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities.
    struct trt__StreamingCapabilities*   StreamingCapabilities          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates if GetSnapshotUri is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "SnapshotUri" of XSD type xs:boolean.
   @enum xsd__boolean*                   SnapshotUri                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not Rotation feature is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "Rotation" of XSD type xs:boolean.
   @enum xsd__boolean*                   Rotation                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for changing video source mode.
/// </BLOCKQUOTE></PRE>
/// Attribute "VideoSourceMode" of XSD type xs:boolean.
   @enum xsd__boolean*                   VideoSourceMode                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates if OSD is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "OSD" of XSD type xs:boolean.
   @enum xsd__boolean*                   OSD                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for the Efficient XML Interchange (EXI) binary XML format.
/// </BLOCKQUOTE></PRE>
/// Attribute "EXICompression" of XSD type xs:boolean.
   @enum xsd__boolean*                   EXICompression                 0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities is a complexType.
///
struct trt__ProfileCapabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumNumberOfProfiles" of XSD type xs:int.
   @int*                                 MaximumNumberOfProfiles        0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities is a complexType.
///
struct trt__StreamingCapabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP multicast.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTPMulticast" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTPMulticast                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP over TCP.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTP_TCP" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTP_USCORETCP                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP/RTSP/TCP.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTP_RTSP_TCP" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for non aggregate RTSP control.
/// </BLOCKQUOTE></PRE>
/// Attribute "NonAggregateControl" of XSD type xs:boolean.
   @enum xsd__boolean*                   NonAggregateControl            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the device does not support live media streaming via RTSP.
/// </BLOCKQUOTE></PRE>
/// Attribute "NoRTSPStreaming" of XSD type xs:boolean.
   @enum xsd__boolean*                   NoRTSPStreaming                0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":VideoSourceMode is a complexType.
///
struct trt__VideoSourceMode
{
/// <PRE><BLOCKQUOTE>
///   Max frame rate in frames per second for this video source mode.
/// </BLOCKQUOTE></PRE>
/// Element "MaxFramerate" of XSD type xs:float.
    float                                MaxFramerate                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Max horizontal and vertical resolution for this video source mode.
/// </BLOCKQUOTE></PRE>
/// Element "MaxResolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          MaxResolution                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.
/// </BLOCKQUOTE></PRE>
/// Element "Encodings" of XSD type "http://www.onvif.org/ver10/media/wsdl":EncodingTypes.
    trt__EncodingTypes                   Encodings                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   After setting the mode if a device starts to reboot this value is true. If a device change the mode without rebooting this value is false. If true, configured parameters may not be guaranteed by the device after rebooting.
/// </BLOCKQUOTE></PRE>
/// Element "Reboot" of XSD type xs:boolean.
    enum xsd__boolean                    Reboot                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of this video source mode. This field should be described in English.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/media/wsdl":VideoSourceModeExtension.
    struct trt__VideoSourceModeExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicate token for video source mode.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indication of whether this mode is active. If active this value is true. In case of non-indication, it means as false. The value of true shall be had by only one video source mode.
/// </BLOCKQUOTE></PRE>
/// Attribute "Enabled" of XSD type xs:boolean.
   @enum xsd__boolean*                   Enabled                        0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":VideoSourceModeExtension is a complexType.
///
struct trt__VideoSourceModeExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities is a complexType.
///
struct _trt__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _trt__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the media service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
    struct trt__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSources
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSources is a complexType.
///
struct _trt__GetVideoSources
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse is a complexType.
///
struct _trt__GetVideoSourcesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of existing Video Sources
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoSource* is 0..unbounded.
   $int                                  __sizeVideoSources             0;
/// Array struct tt__VideoSource* of size 0..unbounded.
    struct tt__VideoSource*              VideoSources                   0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSources
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSources is a complexType.
///
struct _trt__GetAudioSources
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse is a complexType.
///
struct _trt__GetAudioSourcesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of existing Audio Sources
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioSource* is 0..unbounded.
   $int                                  __sizeAudioSources             0;
/// Array struct tt__AudioSource* of size 0..unbounded.
    struct tt__AudioSource*              AudioSources                   0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs is a complexType.
///
struct _trt__GetAudioOutputs
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse is a complexType.
///
struct _trt__GetAudioOutputsResponse
{
/// <PRE><BLOCKQUOTE>
///   List of existing Audio Outputs
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioOutput* is 0..unbounded.
   $int                                  __sizeAudioOutputs             0;
/// Array struct tt__AudioOutput* of size 0..unbounded.
    struct tt__AudioOutput*              AudioOutputs                   0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateProfile is a complexType.
///
struct _trt__CreateProfile
{
/// <PRE><BLOCKQUOTE>
///   friendly name of the profile to be created
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional token, specifying the unique identifier of the new profile. <br/>A device supports at least a token length of 12 characters and characters "A-Z" | "a-z" | "0-9" | "-.".
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse is a complexType.
///
struct _trt__CreateProfileResponse
{
/// <PRE><BLOCKQUOTE>
///   returns the new created profile
/// </BLOCKQUOTE></PRE>
/// Element "Profile" of XSD type "http://www.onvif.org/ver10/schema":Profile.
    struct tt__Profile*                  Profile                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfile is a complexType.
///
struct _trt__GetProfile
{
/// <PRE><BLOCKQUOTE>
///   this command requests a specific profile
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse is a complexType.
///
struct _trt__GetProfileResponse
{
/// <PRE><BLOCKQUOTE>
///   returns the requested media profile
/// </BLOCKQUOTE></PRE>
/// Element "Profile" of XSD type "http://www.onvif.org/ver10/schema":Profile.
    struct tt__Profile*                  Profile                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfiles
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfiles is a complexType.
///
struct _trt__GetProfiles
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse is a complexType.
///
struct _trt__GetProfilesResponse
{
/// <PRE><BLOCKQUOTE>
///   lists all profiles that exist in the media service
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Profile* is 0..unbounded.
   $int                                  __sizeProfiles                 0;
/// Array struct tt__Profile* of size 0..unbounded.
    struct tt__Profile*                  Profiles                       0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration is a complexType.
///
struct _trt__AddVideoEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoEncoderConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse is a complexType.
///
struct _trt__AddVideoEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration is a complexType.
///
struct _trt__RemoveVideoEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoEncoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse is a complexType.
///
struct _trt__RemoveVideoEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration is a complexType.
///
struct _trt__AddVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoSourceConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse is a complexType.
///
struct _trt__AddVideoSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration is a complexType.
///
struct _trt__RemoveVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoSourceConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse is a complexType.
///
struct _trt__RemoveVideoSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration is a complexType.
///
struct _trt__AddAudioEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioEncoderConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse is a complexType.
///
struct _trt__AddAudioEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration is a complexType.
///
struct _trt__RemoveAudioEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioEncoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse is a complexType.
///
struct _trt__RemoveAudioEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration is a complexType.
///
struct _trt__AddAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioSourceConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse is a complexType.
///
struct _trt__AddAudioSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration is a complexType.
///
struct _trt__RemoveAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioSourceConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse is a complexType.
///
struct _trt__RemoveAudioSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration is a complexType.
///
struct _trt__AddPTZConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the PTZConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse is a complexType.
///
struct _trt__AddPTZConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration is a complexType.
///
struct _trt__RemovePTZConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   PTZConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse is a complexType.
///
struct _trt__RemovePTZConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration is a complexType.
///
struct _trt__AddVideoAnalyticsConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoAnalyticsConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse is a complexType.
///
struct _trt__AddVideoAnalyticsConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration is a complexType.
///
struct _trt__RemoveVideoAnalyticsConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoAnalyticsConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse is a complexType.
///
struct _trt__RemoveVideoAnalyticsConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration is a complexType.
///
struct _trt__AddMetadataConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the MetadataConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse is a complexType.
///
struct _trt__AddMetadataConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration is a complexType.
///
struct _trt__RemoveMetadataConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   MetadataConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse is a complexType.
///
struct _trt__RemoveMetadataConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration is a complexType.
///
struct _trt__AddAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioOutputConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse is a complexType.
///
struct _trt__AddAudioOutputConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration is a complexType.
///
struct _trt__RemoveAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioOutputConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse is a complexType.
///
struct _trt__RemoveAudioOutputConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration is a complexType.
///
struct _trt__AddAudioDecoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the profile where the configuration should be added.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the AudioDecoderConfiguration to add.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse is a complexType.
///
struct _trt__AddAudioDecoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration is a complexType.
///
struct _trt__RemoveAudioDecoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the media profile from which the AudioDecoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse is a complexType.
///
struct _trt__RemoveAudioDecoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteProfile is a complexType.
///
struct _trt__DeleteProfile
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the profile that should be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse is a complexType.
///
struct _trt__DeleteProfileResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations is a complexType.
///
struct _trt__GetVideoEncoderConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse is a complexType.
///
struct _trt__GetVideoEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video encoder configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoEncoderConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__VideoEncoderConfiguration* of size 0..unbounded.
    struct tt__VideoEncoderConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations is a complexType.
///
struct _trt__GetVideoSourceConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse is a complexType.
///
struct _trt__GetVideoSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video source configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoSourceConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__VideoSourceConfiguration* of size 0..unbounded.
    struct tt__VideoSourceConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations is a complexType.
///
struct _trt__GetAudioEncoderConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse is a complexType.
///
struct _trt__GetAudioEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio encoder configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioEncoderConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioEncoderConfiguration* of size 0..unbounded.
    struct tt__AudioEncoderConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations is a complexType.
///
struct _trt__GetAudioSourceConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse is a complexType.
///
struct _trt__GetAudioSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio source configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioSourceConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioSourceConfiguration* of size 0..unbounded.
    struct tt__AudioSourceConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations is a complexType.
///
struct _trt__GetVideoAnalyticsConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse is a complexType.
///
struct _trt__GetVideoAnalyticsConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of VideoAnalytics configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoAnalyticsConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__VideoAnalyticsConfiguration* of size 0..unbounded.
    struct tt__VideoAnalyticsConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations is a complexType.
///
struct _trt__GetMetadataConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse is a complexType.
///
struct _trt__GetMetadataConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of metadata configurations
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__MetadataConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__MetadataConfiguration* of size 0..unbounded.
    struct tt__MetadataConfiguration*    Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations is a complexType.
///
struct _trt__GetAudioOutputConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse is a complexType.
///
struct _trt__GetAudioOutputConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio output configurations
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioOutputConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioOutputConfiguration* of size 0..unbounded.
    struct tt__AudioOutputConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations is a complexType.
///
struct _trt__GetAudioDecoderConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse is a complexType.
///
struct _trt__GetAudioDecoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio decoder configurations
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioDecoderConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioDecoderConfiguration* of size 0..unbounded.
    struct tt__AudioDecoderConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration is a complexType.
///
struct _trt__GetVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested video source configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse is a complexType.
///
struct _trt__GetVideoSourceConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested video source configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration is a complexType.
///
struct _trt__GetVideoEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested video encoder configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse is a complexType.
///
struct _trt__GetVideoEncoderConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested video encoder configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    struct tt__VideoEncoderConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration is a complexType.
///
struct _trt__GetAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio source configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse is a complexType.
///
struct _trt__GetAudioSourceConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested audio source configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration is a complexType.
///
struct _trt__GetAudioEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio encoder configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse is a complexType.
///
struct _trt__GetAudioEncoderConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested audio encoder configuration
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    struct tt__AudioEncoderConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration is a complexType.
///
struct _trt__GetVideoAnalyticsConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested video analytics configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse is a complexType.
///
struct _trt__GetVideoAnalyticsConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested video analytics configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration is a complexType.
///
struct _trt__GetMetadataConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested metadata configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse is a complexType.
///
struct _trt__GetMetadataConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested metadata configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    struct tt__MetadataConfiguration*    Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration is a complexType.
///
struct _trt__GetAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio output configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse is a complexType.
///
struct _trt__GetAudioOutputConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested audio output configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration is a complexType.
///
struct _trt__GetAudioDecoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio decoder configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse is a complexType.
///
struct _trt__GetAudioDecoderConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested audio decoder configuration
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    struct tt__AudioDecoderConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations is a complexType.
///
struct _trt__GetCompatibleVideoEncoderConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse is a complexType.
///
struct _trt__GetCompatibleVideoEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of video encoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoEncoderConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__VideoEncoderConfiguration* of size 0..unbounded.
    struct tt__VideoEncoderConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations is a complexType.
///
struct _trt__GetCompatibleVideoSourceConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse is a complexType.
///
struct _trt__GetCompatibleVideoSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of video source configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoSourceConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__VideoSourceConfiguration* of size 0..unbounded.
    struct tt__VideoSourceConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations is a complexType.
///
struct _trt__GetCompatibleAudioEncoderConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse is a complexType.
///
struct _trt__GetCompatibleAudioEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio encoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioEncoderConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioEncoderConfiguration* of size 0..unbounded.
    struct tt__AudioEncoderConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations is a complexType.
///
struct _trt__GetCompatibleAudioSourceConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse is a complexType.
///
struct _trt__GetCompatibleAudioSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio source configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioSourceConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioSourceConfiguration* of size 0..unbounded.
    struct tt__AudioSourceConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations is a complexType.
///
struct _trt__GetCompatibleVideoAnalyticsConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse is a complexType.
///
struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of video analytics configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoAnalyticsConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__VideoAnalyticsConfiguration* of size 0..unbounded.
    struct tt__VideoAnalyticsConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations is a complexType.
///
struct _trt__GetCompatibleMetadataConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse is a complexType.
///
struct _trt__GetCompatibleMetadataConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of metadata configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__MetadataConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__MetadataConfiguration* of size 0..unbounded.
    struct tt__MetadataConfiguration*    Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations is a complexType.
///
struct _trt__GetCompatibleAudioOutputConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse is a complexType.
///
struct _trt__GetCompatibleAudioOutputConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio output configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioOutputConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioOutputConfiguration* of size 0..unbounded.
    struct tt__AudioOutputConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations is a complexType.
///
struct _trt__GetCompatibleAudioDecoderConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse is a complexType.
///
struct _trt__GetCompatibleAudioDecoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio decoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioDecoderConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioDecoderConfiguration* of size 0..unbounded.
    struct tt__AudioDecoderConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration is a complexType.
///
struct _trt__SetVideoEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified video encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    struct tt__VideoEncoderConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse is a complexType.
///
struct _trt__SetVideoEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration is a complexType.
///
struct _trt__SetVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified video source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse is a complexType.
///
struct _trt__SetVideoSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration is a complexType.
///
struct _trt__SetAudioEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    struct tt__AudioEncoderConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse is a complexType.
///
struct _trt__SetAudioEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration is a complexType.
///
struct _trt__SetAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse is a complexType.
///
struct _trt__SetAudioSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration is a complexType.
///
struct _trt__SetVideoAnalyticsConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified video analytics configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse is a complexType.
///
struct _trt__SetVideoAnalyticsConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration is a complexType.
///
struct _trt__SetMetadataConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified metadata configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    struct tt__MetadataConfiguration*    Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse is a complexType.
///
struct _trt__SetMetadataConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration is a complexType.
///
struct _trt__SetAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio output configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse is a complexType.
///
struct _trt__SetAudioOutputConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration is a complexType.
///
struct _trt__SetAudioDecoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio decoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    struct tt__AudioDecoderConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse is a complexType.
///
struct _trt__SetAudioDecoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions is a complexType.
///
struct _trt__GetVideoSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional video source configurationToken that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
///
struct _trt__GetVideoSourceConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the video source configuration options. If a video source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    struct tt__VideoSourceConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions is a complexType.
///
struct _trt__GetVideoEncoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional video encoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse is a complexType.
///
struct _trt__GetVideoEncoderConfigurationOptionsResponse
{
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions.
    struct tt__VideoEncoderConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions is a complexType.
///
struct _trt__GetAudioSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional audio source configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
///
struct _trt__GetAudioSourceConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio source configuration options. If a audio source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    struct tt__AudioSourceConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions is a complexType.
///
struct _trt__GetAudioEncoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional audio encoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse is a complexType.
///
struct _trt__GetAudioEncoderConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio encoder configuration options. If a audio encoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    struct tt__AudioEncoderConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions is a complexType.
///
struct _trt__GetMetadataConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional metadata configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse is a complexType.
///
struct _trt__GetMetadataConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the metadata configuration options. If a metadata configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions.
    struct tt__MetadataConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions is a complexType.
///
struct _trt__GetAudioOutputConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional audio output configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
///
struct _trt__GetAudioOutputConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio output configuration options. If a audio output configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    struct tt__AudioOutputConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions is a complexType.
///
struct _trt__GetAudioDecoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional audio decoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse is a complexType.
///
struct _trt__GetAudioDecoderConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio decoder configuration options. If a audio decoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    struct tt__AudioDecoderConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances is a complexType.
///
struct _trt__GetGuaranteedNumberOfVideoEncoderInstances
{
/// <PRE><BLOCKQUOTE>
///   Token of the video source configuration
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse is a complexType.
///
struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
{
/// <PRE><BLOCKQUOTE>
///   The minimum guaranteed total number of encoder instances (applications) per VideoSourceConfiguration. The device is able to deliver the TotalNumber of streams
/// </BLOCKQUOTE></PRE>
/// Element "TotalNumber" of XSD type xs:int.
    int                                  TotalNumber                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many Jpeg streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
/// Element "JPEG" of XSD type xs:int.
    int*                                 JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many H264 streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
/// Element "H264" of XSD type xs:int.
    int*                                 H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many Mpeg4 streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
/// Element "MPEG4" of XSD type xs:int.
    int*                                 MPEG4                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUri
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetStreamUri is a complexType.
///
struct _trt__GetStreamUri
{
/// <PRE><BLOCKQUOTE>
///   Stream Setup that should be used with the uri
/// </BLOCKQUOTE></PRE>
/// Element "StreamSetup" of XSD type "http://www.onvif.org/ver10/schema":StreamSetup.
    struct tt__StreamSetup*              StreamSetup                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the configuration of the content of the stream.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse is a complexType.
///
struct _trt__GetStreamUriResponse
{

/// </BLOCKQUOTE></PRE>
/// Element "MediaUri" of XSD type "http://www.onvif.org/ver10/schema":MediaUri.
    struct tt__MediaUri*                 MediaUri                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming
/// @brief "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming is a complexType.
///
struct _trt__StartMulticastStreaming
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse is a complexType.
///
struct _trt__StartMulticastStreamingResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming
/// @brief "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming is a complexType.
///
struct _trt__StopMulticastStreaming
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse is a complexType.
///
struct _trt__StopMulticastStreamingResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint is a complexType.
///
struct _trt__SetSynchronizationPoint
{
/// <PRE><BLOCKQUOTE>
///   Contains a Profile reference for which a Synchronization Point is requested.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse is a complexType.
///
struct _trt__SetSynchronizationPointResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri is a complexType.
///
struct _trt__GetSnapshotUri
{
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the source and dimensions of the snapshot.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse is a complexType.
///
struct _trt__GetSnapshotUriResponse
{

/// </BLOCKQUOTE></PRE>
/// Element "MediaUri" of XSD type "http://www.onvif.org/ver10/schema":MediaUri.
    struct tt__MediaUri*                 MediaUri                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModes
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModes is a complexType.
///
struct _trt__GetVideoSourceModes
{
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModesResponse is a complexType.
///
struct _trt__GetVideoSourceModesResponse
{
/// <PRE><BLOCKQUOTE>
///   Return the information for specified video source mode.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct trt__VideoSourceMode* is 1..unbounded.
   $int                                  __sizeVideoSourceModes         1;
/// Array struct trt__VideoSourceMode* of size 1..unbounded.
    struct trt__VideoSourceMode*         VideoSourceModes               1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceMode
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceMode is a complexType.
///
struct _trt__SetVideoSourceMode
{
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicate video source mode.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceModeToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceModeToken           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceModeResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceModeResponse is a complexType.
///
struct _trt__SetVideoSourceModeResponse
{
/// <PRE><BLOCKQUOTE>
///   The response contains information about rebooting after returning response. When Reboot is set true, a device will reboot automatically after setting mode.
/// </BLOCKQUOTE></PRE>
/// Element "Reboot" of XSD type xs:boolean.
    enum xsd__boolean                    Reboot                         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDs
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDs is a complexType.
///
struct _trt__GetOSDs
{
/// <PRE><BLOCKQUOTE>
///   Token of the Video Source Configuration, which has OSDs associated with are requested. If token not exist, request all available OSDs.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDsResponse is a complexType.
///
struct _trt__GetOSDsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of requested OSDs.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__OSDConfiguration* is 0..unbounded.
   $int                                  __sizeOSDs                     0;
/// Array struct tt__OSDConfiguration* of size 0..unbounded.
    struct tt__OSDConfiguration*         OSDs                           0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSD is a complexType.
///
struct _trt__GetOSD
{
/// <PRE><BLOCKQUOTE>
///   The GetOSD command fetches the OSD configuration if the OSD token is known.
/// </BLOCKQUOTE></PRE>
/// Element "OSDToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDResponse is a complexType.
///
struct _trt__GetOSDResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested OSD configuration.
/// </BLOCKQUOTE></PRE>
/// Element "OSD" of XSD type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    struct tt__OSDConfiguration*         OSD                            1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetOSD is a complexType.
///
struct _trt__SetOSD
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified OSD configuration.
/// </BLOCKQUOTE></PRE>
/// Element "OSD" of XSD type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    struct tt__OSDConfiguration*         OSD                            1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetOSDResponse is a complexType.
///
struct _trt__SetOSDResponse
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDOptions is a complexType.
///
struct _trt__GetOSDOptions
{
/// <PRE><BLOCKQUOTE>
///   Video Source Configuration Token that specifies an existing video source configuration that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDOptionsResponse is a complexType.
///
struct _trt__GetOSDOptionsResponse
{

/// </BLOCKQUOTE></PRE>
/// Element "OSDOptions" of XSD type "http://www.onvif.org/ver10/schema":OSDConfigurationOptions.
    struct tt__OSDConfigurationOptions*  OSDOptions                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateOSD is a complexType.
///
struct _trt__CreateOSD
{
/// <PRE><BLOCKQUOTE>
///   Contain the initial OSD configuration for create.
/// </BLOCKQUOTE></PRE>
/// Element "OSD" of XSD type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    struct tt__OSDConfiguration*         OSD                            1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateOSDResponse is a complexType.
///
struct _trt__CreateOSDResponse
{
/// <PRE><BLOCKQUOTE>
///   Returns Token of the newly created OSD
/// </BLOCKQUOTE></PRE>
/// Element "OSDToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteOSD is a complexType.
///
struct _trt__DeleteOSD
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the OSD configuration that should be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "OSDToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteOSDResponse is a complexType.
///
struct _trt__DeleteOSDResponse
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":Service is a complexType.
///
struct tds__Service
{
/// <PRE><BLOCKQUOTE>
///   Namespace of the service being described. This parameter allows to match the service capabilities to the service. Note that only one set of capabilities is supported per namespace.
/// </BLOCKQUOTE></PRE>
/// Element "Namespace" of XSD type xs:anyURI.
    xsd__anyURI                          Namespace                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The transport addresses where the service can be reached. The scheme and IP part shall match the one used in the request (i.e. the GetServices request).
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
    struct _tds__Service_Capabilities
    {
/// @todo <any namespace="##any">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Capabilities                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The version of the service (not the ONVIF core spec version).
/// </BLOCKQUOTE></PRE>
/// Element "Version" of XSD type "http://www.onvif.org/ver10/schema":OnvifVersion.
    struct tt__OnvifVersion*             Version                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities is a complexType.
///
struct tds__DeviceServiceCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "Network" of XSD type "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities.
    struct tds__NetworkCapabilities*     Network                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "Security" of XSD type "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities.
    struct tds__SecurityCapabilities*    Security                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "System" of XSD type "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities.
    struct tds__SystemCapabilities*      System                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Capabilities that do not fit in any of the other categories.
/// </BLOCKQUOTE></PRE>
/// Element "Misc" of XSD type "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities.
    struct tds__MiscCapabilities*        Misc                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities is a complexType.
///
struct tds__NetworkCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates support for IP filtering.
/// </BLOCKQUOTE></PRE>
/// Attribute "IPFilter" of XSD type xs:boolean.
   @enum xsd__boolean*                   IPFilter                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for zeroconf.
/// </BLOCKQUOTE></PRE>
/// Attribute "ZeroConfiguration" of XSD type xs:boolean.
   @enum xsd__boolean*                   ZeroConfiguration              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IPv6.
/// </BLOCKQUOTE></PRE>
/// Attribute "IPVersion6" of XSD type xs:boolean.
   @enum xsd__boolean*                   IPVersion6                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for dynamic DNS configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "DynDNS" of XSD type xs:boolean.
   @enum xsd__boolean*                   DynDNS                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.11 configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "Dot11Configuration" of XSD type xs:boolean.
   @enum xsd__boolean*                   Dot11Configuration             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of Dot1X configurations supported by the device
/// </BLOCKQUOTE></PRE>
/// Attribute "Dot1XConfigurations" of XSD type xs:int.
   @int*                                 Dot1XConfigurations            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of hostname from DHCP.
/// </BLOCKQUOTE></PRE>
/// Attribute "HostnameFromDHCP" of XSD type xs:boolean.
   @enum xsd__boolean*                   HostnameFromDHCP               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of NTP servers supported by the devices SetNTP command.
/// </BLOCKQUOTE></PRE>
/// Attribute "NTP" of XSD type xs:int.
   @int*                                 NTP                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for Stateful IPv6 DHCP.
/// </BLOCKQUOTE></PRE>
/// Attribute "DHCPv6" of XSD type xs:boolean.
   @enum xsd__boolean*                   DHCPv6                         0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities is a complexType.
///
struct tds__SecurityCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.0.
/// </BLOCKQUOTE></PRE>
/// Attribute "TLS1.0" of XSD type xs:boolean.
   @enum xsd__boolean*                   TLS1_x002e0                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.1.
/// </BLOCKQUOTE></PRE>
/// Attribute "TLS1.1" of XSD type xs:boolean.
   @enum xsd__boolean*                   TLS1_x002e1                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.2.
/// </BLOCKQUOTE></PRE>
/// Attribute "TLS1.2" of XSD type xs:boolean.
   @enum xsd__boolean*                   TLS1_x002e2                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for onboard key generation.
/// </BLOCKQUOTE></PRE>
/// Attribute "OnboardKeyGeneration" of XSD type xs:boolean.
   @enum xsd__boolean*                   OnboardKeyGeneration           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for access policy configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "AccessPolicyConfig" of XSD type xs:boolean.
   @enum xsd__boolean*                   AccessPolicyConfig             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for the ONVIF default access policy.
/// </BLOCKQUOTE></PRE>
/// Attribute "DefaultAccessPolicy" of XSD type xs:boolean.
   @enum xsd__boolean*                   DefaultAccessPolicy            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.1X configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "Dot1X" of XSD type xs:boolean.
   @enum xsd__boolean*                   Dot1X                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote user configuration. Used when accessing another device.
/// </BLOCKQUOTE></PRE>
/// Attribute "RemoteUserHandling" of XSD type xs:boolean.
   @enum xsd__boolean*                   RemoteUserHandling             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security X.509 token.
/// </BLOCKQUOTE></PRE>
/// Attribute "X.509Token" of XSD type xs:boolean.
   @enum xsd__boolean*                   X_x002e509Token                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security SAML token.
/// </BLOCKQUOTE></PRE>
/// Attribute "SAMLToken" of XSD type xs:boolean.
   @enum xsd__boolean*                   SAMLToken                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Kerberos token.
/// </BLOCKQUOTE></PRE>
/// Attribute "KerberosToken" of XSD type xs:boolean.
   @enum xsd__boolean*                   KerberosToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Username token.
/// </BLOCKQUOTE></PRE>
/// Attribute "UsernameToken" of XSD type xs:boolean.
   @enum xsd__boolean*                   UsernameToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS over HTTP digest authenticated communication layer.
/// </BLOCKQUOTE></PRE>
/// Attribute "HttpDigest" of XSD type xs:boolean.
   @enum xsd__boolean*                   HttpDigest                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security REL token.
/// </BLOCKQUOTE></PRE>
/// Attribute "RELToken" of XSD type xs:boolean.
   @enum xsd__boolean*                   RELToken                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
/// Attribute "SupportedEAPMethods" of XSD type "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes.
   @tds__EAPMethodTypes                  SupportedEAPMethods            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum number of users that the device supports.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxUsers" of XSD type xs:int.
   @int*                                 MaxUsers                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of characters supported for the username by CreateUsers.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxUserNameLength" of XSD type xs:int.
   @int*                                 MaxUserNameLength              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of characters supported for the password by CreateUsers and SetUser.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxPasswordLength" of XSD type xs:int.
   @int*                                 MaxPasswordLength              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities is a complexType.
///
struct tds__SystemCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS Discovery resolve requests.
/// </BLOCKQUOTE></PRE>
/// Attribute "DiscoveryResolve" of XSD type xs:boolean.
   @enum xsd__boolean*                   DiscoveryResolve               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Discovery Bye.
/// </BLOCKQUOTE></PRE>
/// Attribute "DiscoveryBye" of XSD type xs:boolean.
   @enum xsd__boolean*                   DiscoveryBye                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote discovery.
/// </BLOCKQUOTE></PRE>
/// Attribute "RemoteDiscovery" of XSD type xs:boolean.
   @enum xsd__boolean*                   RemoteDiscovery                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through MTOM.
/// </BLOCKQUOTE></PRE>
/// Attribute "SystemBackup" of XSD type xs:boolean.
   @enum xsd__boolean*                   SystemBackup                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through MTOM.
/// </BLOCKQUOTE></PRE>
/// Attribute "SystemLogging" of XSD type xs:boolean.
   @enum xsd__boolean*                   SystemLogging                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for firmware upgrade through MTOM.
/// </BLOCKQUOTE></PRE>
/// Attribute "FirmwareUpgrade" of XSD type xs:boolean.
   @enum xsd__boolean*                   FirmwareUpgrade                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for firmware upgrade through HTTP.
/// </BLOCKQUOTE></PRE>
/// Attribute "HttpFirmwareUpgrade" of XSD type xs:boolean.
   @enum xsd__boolean*                   HttpFirmwareUpgrade            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through HTTP.
/// </BLOCKQUOTE></PRE>
/// Attribute "HttpSystemBackup" of XSD type xs:boolean.
   @enum xsd__boolean*                   HttpSystemBackup               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through HTTP.
/// </BLOCKQUOTE></PRE>
/// Attribute "HttpSystemLogging" of XSD type xs:boolean.
   @enum xsd__boolean*                   HttpSystemLogging              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieving support information through HTTP.
/// </BLOCKQUOTE></PRE>
/// Attribute "HttpSupportInformation" of XSD type xs:boolean.
   @enum xsd__boolean*                   HttpSupportInformation         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for storage configuration interfaces.
/// </BLOCKQUOTE></PRE>
/// Attribute "StorageConfiguration" of XSD type xs:boolean.
   @enum xsd__boolean*                   StorageConfiguration           0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities is a complexType.
///
struct tds__MiscCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Lists of commands supported by SendAuxiliaryCommand.
/// </BLOCKQUOTE></PRE>
/// Attribute "AuxiliaryCommands" of XSD type "http://www.onvif.org/ver10/schema":StringAttrList.
   @tt__StringAttrList                   AuxiliaryCommands              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":UserCredential is a complexType.
///
struct tds__UserCredential
{
/// <PRE><BLOCKQUOTE>
///   User name
/// </BLOCKQUOTE></PRE>
/// Element "UserName" of XSD type xs:string.
    char*                                UserName                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   optional password
/// </BLOCKQUOTE></PRE>
/// Element "Password" of XSD type xs:string.
    char*                                Password                       0;	///< Optional element.
    struct _tds__UserCredential_Extension
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData is a complexType.
///
struct tds__StorageConfigurationData
{
/// <PRE><BLOCKQUOTE>
///   local path
/// </BLOCKQUOTE></PRE>
/// Element "LocalPath" of XSD type xs:anyURI.
    xsd__anyURI                          LocalPath                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Storage server address
/// </BLOCKQUOTE></PRE>
/// Element "StorageUri" of XSD type xs:anyURI.
    xsd__anyURI                          StorageUri                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User credential for the storage server
/// </BLOCKQUOTE></PRE>
/// Element "User" of XSD type "http://www.onvif.org/ver10/device/wsdl":UserCredential.
    struct tds__UserCredential*          User                           0;	///< Optional element.
    struct _tds__StorageConfigurationData_Extension
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   StorageType lists the acceptable values for type attribute
/// </BLOCKQUOTE></PRE>
/// Attribute "type" of XSD type xs:string.
   @char*                                type                           1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServices
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServices is a complexType.
///
struct _tds__GetServices
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the service capabilities (untyped) should be included in the response.
/// </BLOCKQUOTE></PRE>
/// Element "IncludeCapability" of XSD type xs:boolean.
    enum xsd__boolean                    IncludeCapability              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse is a complexType.
///
struct _tds__GetServicesResponse
{
/// <PRE><BLOCKQUOTE>
///   Each Service element contains information about one service.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tds__Service* is 1..unbounded.
   $int                                  __sizeService                  1;
/// Array struct tds__Service* of size 1..unbounded.
    struct tds__Service*                 Service                        1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities is a complexType.
///
struct _tds__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _tds__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the device service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
    struct tds__DeviceServiceCapabilities*  Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation is a complexType.
///
struct _tds__GetDeviceInformation
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse is a complexType.
///
struct _tds__GetDeviceInformationResponse
{
/// <PRE><BLOCKQUOTE>
///   The manufactor of the device.
/// </BLOCKQUOTE></PRE>
/// Element "Manufacturer" of XSD type xs:string.
    char*                                Manufacturer                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The device model.
/// </BLOCKQUOTE></PRE>
/// Element "Model" of XSD type xs:string.
    char*                                Model                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The firmware version in the device.
/// </BLOCKQUOTE></PRE>
/// Element "FirmwareVersion" of XSD type xs:string.
    char*                                FirmwareVersion                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The serial number of the device.
/// </BLOCKQUOTE></PRE>
/// Element "SerialNumber" of XSD type xs:string.
    char*                                SerialNumber                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The hardware ID of the device.
/// </BLOCKQUOTE></PRE>
/// Element "HardwareId" of XSD type xs:string.
    char*                                HardwareId                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime is a complexType.
///
struct _tds__SetSystemDateAndTime
{
/// <PRE><BLOCKQUOTE>
///   Defines if the date and time is set via NTP or manually.
/// </BLOCKQUOTE></PRE>
/// Element "DateTimeType" of XSD type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Automatically adjust Daylight savings if defined in TimeZone.
/// </BLOCKQUOTE></PRE>
/// Element "DaylightSavings" of XSD type xs:boolean.
    enum xsd__boolean                    DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time zone in POSIX 1003.1 format
/// </BLOCKQUOTE></PRE>
/// Element "TimeZone" of XSD type "http://www.onvif.org/ver10/schema":TimeZone.
    struct tt__TimeZone*                 TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in UTC. If time is obtained via NTP, UTCDateTime has no meaning
/// </BLOCKQUOTE></PRE>
/// Element "UTCDateTime" of XSD type "http://www.onvif.org/ver10/schema":DateTime.
    struct tt__DateTime*                 UTCDateTime                    0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse is a complexType.
///
struct _tds__SetSystemDateAndTimeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime is a complexType.
///
struct _tds__GetSystemDateAndTime
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse is a complexType.
///
struct _tds__GetSystemDateAndTimeResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains information whether system date and time are set manually or by NTP, daylight savings is on or off, time zone in POSIX 1003.1 format and system date and time in UTC and also local system date and time.
/// </BLOCKQUOTE></PRE>
/// Element "SystemDateAndTime" of XSD type "http://www.onvif.org/ver10/schema":SystemDateTime.
    struct tt__SystemDateTime*           SystemDateAndTime              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault is a complexType.
///
struct _tds__SetSystemFactoryDefault
{
/// <PRE><BLOCKQUOTE>
///   Specifies the factory default action type.
/// </BLOCKQUOTE></PRE>
/// Element "FactoryDefault" of XSD type "http://www.onvif.org/ver10/schema":FactoryDefaultType.
    enum tt__FactoryDefaultType          FactoryDefault                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse is a complexType.
///
struct _tds__SetSystemFactoryDefaultResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware is a complexType.
///
struct _tds__UpgradeSystemFirmware
{
/// Element "Firmware" of XSD type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Firmware                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse is a complexType.
///
struct _tds__UpgradeSystemFirmwareResponse
{
/// Element "Message" of XSD type xs:string.
    char*                                Message                        0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemReboot
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemReboot is a complexType.
///
struct _tds__SystemReboot
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse is a complexType.
///
struct _tds__SystemRebootResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the reboot message sent by the device.
/// </BLOCKQUOTE></PRE>
/// Element "Message" of XSD type xs:string.
    char*                                Message                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystem
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystem is a complexType.
///
struct _tds__RestoreSystem
{
/// Size of array of struct tt__BackupFile* is 1..unbounded.
   $int                                  __sizeBackupFiles              1;
/// Array struct tt__BackupFile* of size 1..unbounded.
    struct tt__BackupFile*               BackupFiles                    1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse is a complexType.
///
struct _tds__RestoreSystemResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup is a complexType.
///
struct _tds__GetSystemBackup
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse is a complexType.
///
struct _tds__GetSystemBackupResponse
{
/// Size of array of struct tt__BackupFile* is 1..unbounded.
   $int                                  __sizeBackupFiles              1;
/// Array struct tt__BackupFile* of size 1..unbounded.
    struct tt__BackupFile*               BackupFiles                    1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation is a complexType.
///
struct _tds__GetSystemSupportInformation
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse is a complexType.
///
struct _tds__GetSystemSupportInformationResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the arbitary device diagnostics information.
/// </BLOCKQUOTE></PRE>
/// Element "SupportInformation" of XSD type "http://www.onvif.org/ver10/schema":SupportInformation.
    struct tt__SupportInformation*       SupportInformation             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLog
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLog is a complexType.
///
struct _tds__GetSystemLog
{
/// <PRE><BLOCKQUOTE>
///   Specifies the type of system log to get.
/// </BLOCKQUOTE></PRE>
/// Element "LogType" of XSD type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               LogType                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse is a complexType.
///
struct _tds__GetSystemLogResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the system log information.
/// </BLOCKQUOTE></PRE>
/// Element "SystemLog" of XSD type "http://www.onvif.org/ver10/schema":SystemLog.
    struct tt__SystemLog*                SystemLog                      1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopes is a complexType.
///
struct _tds__GetScopes
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse is a complexType.
///
struct _tds__GetScopesResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of URI definining the device scopes. Scope parameters can be of two types: fixed and configurable. Fixed parameters can not be altered.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Scope* is 1..unbounded.
   $int                                  __sizeScopes                   1;
/// Array struct tt__Scope* of size 1..unbounded.
    struct tt__Scope*                    Scopes                         1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopes is a complexType.
///
struct _tds__SetScopes
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of scope parameters that will replace all existing configurable scope parameters.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 1..unbounded.
   $int                                  __sizeScopes                   1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         Scopes                         1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse is a complexType.
///
struct _tds__SetScopesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopes is a complexType.
///
struct _tds__AddScopes
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of new configurable scope parameters that will be added to the existing configurable scope.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 1..unbounded.
   $int                                  __sizeScopeItem                1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         ScopeItem                      1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse is a complexType.
///
struct _tds__AddScopesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopes is a complexType.
///
struct _tds__RemoveScopes
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that should be removed from the device scope.<br/>
///   Note that the response message always will match the request or an error will be returned. The use of the response is for that reason deprecated.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 1..unbounded.
   $int                                  __sizeScopeItem                1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         ScopeItem                      1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse is a complexType.
///
struct _tds__RemoveScopesResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that has been removed from the device scope
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeScopeItem                0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         ScopeItem                      0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode is a complexType.
///
struct _tds__GetDiscoveryMode
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse is a complexType.
///
struct _tds__GetDiscoveryModeResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
/// Element "DiscoveryMode" of XSD type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode is a complexType.
///
struct _tds__SetDiscoveryMode
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
/// Element "DiscoveryMode" of XSD type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse is a complexType.
///
struct _tds__SetDiscoveryModeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode is a complexType.
///
struct _tds__GetRemoteDiscoveryMode
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse is a complexType.
///
struct _tds__GetRemoteDiscoveryModeResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
/// Element "RemoteDiscoveryMode" of XSD type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode is a complexType.
///
struct _tds__SetRemoteDiscoveryMode
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
/// Element "RemoteDiscoveryMode" of XSD type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse is a complexType.
///
struct _tds__SetRemoteDiscoveryModeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses is a complexType.
///
struct _tds__GetDPAddresses
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse is a complexType.
///
struct _tds__GetDPAddressesResponse
{
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
   $int                                  __sizeDPAddress                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              DPAddress                      0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses is a complexType.
///
struct _tds__SetDPAddresses
{
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
   $int                                  __sizeDPAddress                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              DPAddress                      0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse is a complexType.
///
struct _tds__SetDPAddressesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference is a complexType.
///
struct _tds__GetEndpointReference
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse is a complexType.
///
struct _tds__GetEndpointReferenceResponse
{
/// Element "GUID" of XSD type xs:string.
    char*                                GUID                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser is a complexType.
///
struct _tds__GetRemoteUser
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse is a complexType.
///
struct _tds__GetRemoteUserResponse
{
/// Element "RemoteUser" of XSD type "http://www.onvif.org/ver10/schema":RemoteUser.
    struct tt__RemoteUser*               RemoteUser                     0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser is a complexType.
///
struct _tds__SetRemoteUser
{
/// Element "RemoteUser" of XSD type "http://www.onvif.org/ver10/schema":RemoteUser.
    struct tt__RemoteUser*               RemoteUser                     0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse is a complexType.
///
struct _tds__SetRemoteUserResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsers is a complexType.
///
struct _tds__GetUsers
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse is a complexType.
///
struct _tds__GetUsersResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of the onvif users and following information is included in each entry: username and user level.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__User* is 0..unbounded.
   $int                                  __sizeUser                     0;
/// Array struct tt__User* of size 0..unbounded.
    struct tt__User*                     User                           0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsers is a complexType.
///
struct _tds__CreateUsers
{
/// <PRE><BLOCKQUOTE>
///   Creates new device users and corresponding credentials. Each user entry includes: username, password and user level. Either all users are created successfully or a fault message MUST be returned without creating any user. If trying to create several users with exactly the same username the request is rejected and no users are created. If password is missing, then fault message Too weak password is returned.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__User* is 1..unbounded.
   $int                                  __sizeUser                     1;
/// Array struct tt__User* of size 1..unbounded.
    struct tt__User*                     User                           1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse is a complexType.
///
struct _tds__CreateUsersResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsers is a complexType.
///
struct _tds__DeleteUsers
{
/// <PRE><BLOCKQUOTE>
///   Deletes users on an device and there may exist users that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a fault message MUST be returned and no users be deleted. If a username exists multiple times in the request, then a fault message is returned.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeUsername                 1;
/// Array char** of size 1..unbounded.
    char**                               Username                       1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse is a complexType.
///
struct _tds__DeleteUsersResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUser is a complexType.
///
struct _tds__SetUser
{
/// <PRE><BLOCKQUOTE>
///   Updates the credentials for one or several users on an device. Either all change requests are processed successfully or a fault message MUST be returned. If the request contains the same username multiple times, a fault message is returned.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__User* is 1..unbounded.
   $int                                  __sizeUser                     1;
/// Array struct tt__User* of size 1..unbounded.
    struct tt__User*                     User                           1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUserResponse is a complexType.
///
struct _tds__SetUserResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl is a complexType.
///
struct _tds__GetWsdlUrl
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse is a complexType.
///
struct _tds__GetWsdlUrlResponse
{
/// Element "WsdlUrl" of XSD type xs:anyURI.
    xsd__anyURI                          WsdlUrl                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilities is a complexType.
///
struct _tds__GetCapabilities
{
/// <PRE><BLOCKQUOTE>
///   List of categories to retrieve capability information on.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__CapabilityCategory* is 0..unbounded.
   $int                                  __sizeCategory                 0;
/// Array enum tt__CapabilityCategory* of size 0..unbounded.
    enum tt__CapabilityCategory*         Category                       0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse is a complexType.
///
struct _tds__GetCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   Capability information.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/schema":Capabilities.
    struct tt__Capabilities*             Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostname is a complexType.
///
struct _tds__GetHostname
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse is a complexType.
///
struct _tds__GetHostnameResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the hostname information.
/// </BLOCKQUOTE></PRE>
/// Element "HostnameInformation" of XSD type "http://www.onvif.org/ver10/schema":HostnameInformation.
    struct tt__HostnameInformation*      HostnameInformation            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostname is a complexType.
///
struct _tds__SetHostname
{
/// <PRE><BLOCKQUOTE>
///   The hostname to set.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type xs:token.
    xsd__token                           Name                           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse is a complexType.
///
struct _tds__SetHostnameResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP is a complexType.
///
struct _tds__SetHostnameFromDHCP
{
/// <PRE><BLOCKQUOTE>
///   True if the hostname shall be obtained via DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse is a complexType.
///
struct _tds__SetHostnameFromDHCPResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
/// </BLOCKQUOTE></PRE>
/// Element "RebootNeeded" of XSD type xs:boolean.
    enum xsd__boolean                    RebootNeeded                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNS is a complexType.
///
struct _tds__GetDNS
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse is a complexType.
///
struct _tds__GetDNSResponse
{
/// <PRE><BLOCKQUOTE>
///   DNS information.
/// </BLOCKQUOTE></PRE>
/// Element "DNSInformation" of XSD type "http://www.onvif.org/ver10/schema":DNSInformation.
    struct tt__DNSInformation*           DNSInformation                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNS is a complexType.
///
struct _tds__SetDNS
{
/// <PRE><BLOCKQUOTE>
///   Indicate if the DNS address is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS search domain.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__token* is 0..unbounded.
   $int                                  __sizeSearchDomain             0;
/// Array xsd__token* of size 0..unbounded.
    xsd__token*                          SearchDomain                   0;
/// <PRE><BLOCKQUOTE>
///   DNS address(es) set manually.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__IPAddress* is 0..unbounded.
   $int                                  __sizeDNSManual                0;
/// Array struct tt__IPAddress* of size 0..unbounded.
    struct tt__IPAddress*                DNSManual                      0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse is a complexType.
///
struct _tds__SetDNSResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTP is a complexType.
///
struct _tds__GetNTP
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse is a complexType.
///
struct _tds__GetNTPResponse
{
/// <PRE><BLOCKQUOTE>
///   NTP information.
/// </BLOCKQUOTE></PRE>
/// Element "NTPInformation" of XSD type "http://www.onvif.org/ver10/schema":NTPInformation.
    struct tt__NTPInformation*           NTPInformation                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTP is a complexType.
///
struct _tds__SetNTP
{
/// <PRE><BLOCKQUOTE>
///   Indicate if NTP address information is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Manual NTP settings.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
   $int                                  __sizeNTPManual                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              NTPManual                      0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse is a complexType.
///
struct _tds__SetNTPResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS is a complexType.
///
struct _tds__GetDynamicDNS
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse is a complexType.
///
struct _tds__GetDynamicDNSResponse
{
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS information.
/// </BLOCKQUOTE></PRE>
/// Element "DynamicDNSInformation" of XSD type "http://www.onvif.org/ver10/schema":DynamicDNSInformation.
    struct tt__DynamicDNSInformation*    DynamicDNSInformation          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS is a complexType.
///
struct _tds__SetDynamicDNS
{
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS record time to live.
/// </BLOCKQUOTE></PRE>
/// Element "TTL" of XSD type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse is a complexType.
///
struct _tds__SetDynamicDNSResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces is a complexType.
///
struct _tds__GetNetworkInterfaces
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse is a complexType.
///
struct _tds__GetNetworkInterfacesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of network interfaces.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkInterface* is 1..unbounded.
   $int                                  __sizeNetworkInterfaces        1;
/// Array struct tt__NetworkInterface* of size 1..unbounded.
    struct tt__NetworkInterface*         NetworkInterfaces              1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces is a complexType.
///
struct _tds__SetNetworkInterfaces
{
/// <PRE><BLOCKQUOTE>
///   Symbolic network interface name.
/// </BLOCKQUOTE></PRE>
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface name.
/// </BLOCKQUOTE></PRE>
/// Element "NetworkInterface" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration.
    struct tt__NetworkInterfaceSetConfiguration*  NetworkInterface               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse is a complexType.
///
struct _tds__SetNetworkInterfacesResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
///   If a device responds with RebootNeeded set to false, the device can be reached
///   via the new IP address without further action. A client should be aware that a device
///   may not be responsive for a short period of time until it signals availability at
///   the new address via the discovery Hello messages.
///   If a device responds with RebootNeeded set to true, it will be further available under
///   its previous IP address. The settings will only be activated when the device is
///   rebooted via the SystemReboot command.
/// </BLOCKQUOTE></PRE>
/// Element "RebootNeeded" of XSD type xs:boolean.
    enum xsd__boolean                    RebootNeeded                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols is a complexType.
///
struct _tds__GetNetworkProtocols
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse is a complexType.
///
struct _tds__GetNetworkProtocolsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains an array of defined protocols supported by the device. There are three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be retrieved for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkProtocol* is 0..unbounded.
   $int                                  __sizeNetworkProtocols         0;
/// Array struct tt__NetworkProtocol* of size 0..unbounded.
    struct tt__NetworkProtocol*          NetworkProtocols               0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols is a complexType.
///
struct _tds__SetNetworkProtocols
{
/// <PRE><BLOCKQUOTE>
///   Configures one or more defined network protocols supported by the device. There are currently three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be set for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkProtocol* is 1..unbounded.
   $int                                  __sizeNetworkProtocols         1;
/// Array struct tt__NetworkProtocol* of size 1..unbounded.
    struct tt__NetworkProtocol*          NetworkProtocols               1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse is a complexType.
///
struct _tds__SetNetworkProtocolsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway is a complexType.
///
struct _tds__GetNetworkDefaultGateway
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse is a complexType.
///
struct _tds__GetNetworkDefaultGatewayResponse
{
/// <PRE><BLOCKQUOTE>
///   Gets the default IPv4 and IPv6 gateway settings from the device.
/// </BLOCKQUOTE></PRE>
/// Element "NetworkGateway" of XSD type "http://www.onvif.org/ver10/schema":NetworkGateway.
    struct tt__NetworkGateway*           NetworkGateway                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway is a complexType.
///
struct _tds__SetNetworkDefaultGateway
{
/// <PRE><BLOCKQUOTE>
///   Sets IPv4 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__IPv4Address* is 0..unbounded.
   $int                                  __sizeIPv4Address              0;
/// Array tt__IPv4Address* of size 0..unbounded.
    tt__IPv4Address*                     IPv4Address                    0;
/// <PRE><BLOCKQUOTE>
///   Sets IPv6 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__IPv6Address* is 0..unbounded.
   $int                                  __sizeIPv6Address              0;
/// Array tt__IPv6Address* of size 0..unbounded.
    tt__IPv6Address*                     IPv6Address                    0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse is a complexType.
///
struct _tds__SetNetworkDefaultGatewayResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration is a complexType.
///
struct _tds__GetZeroConfiguration
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse is a complexType.
///
struct _tds__GetZeroConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the zero-configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ZeroConfiguration" of XSD type "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration.
    struct tt__NetworkZeroConfiguration*  ZeroConfiguration              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration is a complexType.
///
struct _tds__SetZeroConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical interface.
/// </BLOCKQUOTE></PRE>
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Specifies if the zero-configuration should be enabled or not.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse is a complexType.
///
struct _tds__SetZeroConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter is a complexType.
///
struct _tds__GetIPAddressFilter
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse is a complexType.
///
struct _tds__GetIPAddressFilterResponse
{
/// Element "IPAddressFilter" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter is a complexType.
///
struct _tds__SetIPAddressFilter
{
/// Element "IPAddressFilter" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse is a complexType.
///
struct _tds__SetIPAddressFilterResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter is a complexType.
///
struct _tds__AddIPAddressFilter
{
/// Element "IPAddressFilter" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse is a complexType.
///
struct _tds__AddIPAddressFilterResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter is a complexType.
///
struct _tds__RemoveIPAddressFilter
{
/// Element "IPAddressFilter" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse is a complexType.
///
struct _tds__RemoveIPAddressFilterResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy is a complexType.
///
struct _tds__GetAccessPolicy
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse is a complexType.
///
struct _tds__GetAccessPolicyResponse
{
/// Element "PolicyFile" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               PolicyFile                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy is a complexType.
///
struct _tds__SetAccessPolicy
{
/// Element "PolicyFile" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               PolicyFile                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse is a complexType.
///
struct _tds__SetAccessPolicyResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificate
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificate is a complexType.
///
struct _tds__CreateCertificate
{
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Identification of the entity associated with the public-key.
/// </BLOCKQUOTE></PRE>
/// Element "Subject" of XSD type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate validity start date.
/// </BLOCKQUOTE></PRE>
/// Element "ValidNotBefore" of XSD type xs:dateTime.
    time_t*                              ValidNotBefore                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate expiry start date.
/// </BLOCKQUOTE></PRE>
/// Element "ValidNotAfter" of XSD type xs:dateTime.
    time_t*                              ValidNotAfter                  0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse is a complexType.
///
struct _tds__CreateCertificateResponse
{
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
/// Element "NvtCertificate" of XSD type "http://www.onvif.org/ver10/schema":Certificate.
    struct tt__Certificate*              NvtCertificate                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificates is a complexType.
///
struct _tds__GetCertificates
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse is a complexType.
///
struct _tds__GetCertificatesResponse
{
/// <PRE><BLOCKQUOTE>
///   Id and base64 encoded DER representation of all available certificates.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Certificate* is 0..unbounded.
   $int                                  __sizeNvtCertificate           0;
/// Array struct tt__Certificate* of size 0..unbounded.
    struct tt__Certificate*              NvtCertificate                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus is a complexType.
///
struct _tds__GetCertificatesStatus
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse is a complexType.
///
struct _tds__GetCertificatesStatusResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__CertificateStatus* is 0..unbounded.
   $int                                  __sizeCertificateStatus        0;
/// Array struct tt__CertificateStatus* of size 0..unbounded.
    struct tt__CertificateStatus*        CertificateStatus              0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus is a complexType.
///
struct _tds__SetCertificatesStatus
{
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is to be used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__CertificateStatus* is 0..unbounded.
   $int                                  __sizeCertificateStatus        0;
/// Array struct tt__CertificateStatus* of size 0..unbounded.
    struct tt__CertificateStatus*        CertificateStatus              0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse is a complexType.
///
struct _tds__SetCertificatesStatusResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates is a complexType.
///
struct _tds__DeleteCertificates
{
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__token* is 1..unbounded.
   $int                                  __sizeCertificateID            1;
/// Array xsd__token* of size 1..unbounded.
    xsd__token*                          CertificateID                  1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse is a complexType.
///
struct _tds__DeleteCertificatesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request is a complexType.
///
struct _tds__GetPkcs10Request
{
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative Dinstinguished Name(RDN) CommonName(CN).
/// </BLOCKQUOTE></PRE>
/// Element "Subject" of XSD type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional base64 encoded DER attributes.
/// </BLOCKQUOTE></PRE>
/// Element "Attributes" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Attributes                     0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse is a complexType.
///
struct _tds__GetPkcs10RequestResponse
{
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
/// Element "Pkcs10Request" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Pkcs10Request                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificates is a complexType.
///
struct _tds__LoadCertificates
{
/// <PRE><BLOCKQUOTE>
///   Optional id and base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Certificate* is 1..unbounded.
   $int                                  __sizeNVTCertificate           1;
/// Array struct tt__Certificate* of size 1..unbounded.
    struct tt__Certificate*              NVTCertificate                 1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse is a complexType.
///
struct _tds__LoadCertificatesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode is a complexType.
///
struct _tds__GetClientCertificateMode
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse is a complexType.
///
struct _tds__GetClientCertificateModeResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode is a complexType.
///
struct _tds__SetClientCertificateMode
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse is a complexType.
///
struct _tds__SetClientCertificateModeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificates is a complexType.
///
struct _tds__GetCACertificates
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse is a complexType.
///
struct _tds__GetCACertificatesResponse
{
/// Size of array of struct tt__Certificate* is 0..unbounded.
   $int                                  __sizeCACertificate            0;
/// Array struct tt__Certificate* of size 0..unbounded.
    struct tt__Certificate*              CACertificate                  0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey is a complexType.
///
struct _tds__LoadCertificateWithPrivateKey
{
/// Size of array of struct tt__CertificateWithPrivateKey* is 1..unbounded.
   $int                                  __sizeCertificateWithPrivateKey 1;
/// Array struct tt__CertificateWithPrivateKey* of size 1..unbounded.
    struct tt__CertificateWithPrivateKey*  CertificateWithPrivateKey      1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse is a complexType.
///
struct _tds__LoadCertificateWithPrivateKeyResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation is a complexType.
///
struct _tds__GetCertificateInformation
{
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse is a complexType.
///
struct _tds__GetCertificateInformationResponse
{
/// Element "CertificateInformation" of XSD type "http://www.onvif.org/ver10/schema":CertificateInformation.
    struct tt__CertificateInformation*   CertificateInformation         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates is a complexType.
///
struct _tds__LoadCACertificates
{
/// Size of array of struct tt__Certificate* is 1..unbounded.
   $int                                  __sizeCACertificate            1;
/// Array struct tt__Certificate* of size 1..unbounded.
    struct tt__Certificate*              CACertificate                  1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse is a complexType.
///
struct _tds__LoadCACertificatesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration is a complexType.
///
struct _tds__CreateDot1XConfiguration
{
/// Element "Dot1XConfiguration" of XSD type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse is a complexType.
///
struct _tds__CreateDot1XConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration is a complexType.
///
struct _tds__SetDot1XConfiguration
{
/// Element "Dot1XConfiguration" of XSD type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse is a complexType.
///
struct _tds__SetDot1XConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration is a complexType.
///
struct _tds__GetDot1XConfiguration
{
/// Element "Dot1XConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse is a complexType.
///
struct _tds__GetDot1XConfigurationResponse
{
/// Element "Dot1XConfiguration" of XSD type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations is a complexType.
///
struct _tds__GetDot1XConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse is a complexType.
///
struct _tds__GetDot1XConfigurationsResponse
{
/// Size of array of struct tt__Dot1XConfiguration* is 0..unbounded.
   $int                                  __sizeDot1XConfiguration       0;
/// Array struct tt__Dot1XConfiguration* of size 0..unbounded.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration is a complexType.
///
struct _tds__DeleteDot1XConfiguration
{
/// Size of array of tt__ReferenceToken* is 0..unbounded.
   $int                                  __sizeDot1XConfigurationToken  0;
/// Array tt__ReferenceToken* of size 0..unbounded.
    tt__ReferenceToken*                  Dot1XConfigurationToken        0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse is a complexType.
///
struct _tds__DeleteDot1XConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs is a complexType.
///
struct _tds__GetRelayOutputs
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse is a complexType.
///
struct _tds__GetRelayOutputsResponse
{
/// Size of array of struct tt__RelayOutput* is 0..unbounded.
   $int                                  __sizeRelayOutputs             0;
/// Array struct tt__RelayOutput* of size 0..unbounded.
    struct tt__RelayOutput*              RelayOutputs                   0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings is a complexType.
///
struct _tds__SetRelayOutputSettings
{
/// Element "RelayOutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "Properties" of XSD type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    struct tt__RelayOutputSettings*      Properties                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse is a complexType.
///
struct _tds__SetRelayOutputSettingsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState is a complexType.
///
struct _tds__SetRelayOutputState
{
/// Element "RelayOutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "LogicalState" of XSD type "http://www.onvif.org/ver10/schema":RelayLogicalState.
    enum tt__RelayLogicalState           LogicalState                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse is a complexType.
///
struct _tds__SetRelayOutputStateResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand is a complexType.
///
struct _tds__SendAuxiliaryCommand
{
/// Element "AuxiliaryCommand" of XSD type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommand               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse is a complexType.
///
struct _tds__SendAuxiliaryCommandResponse
{
/// Element "AuxiliaryCommandResponse" of XSD type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommandResponse       0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities is a complexType.
///
struct _tds__GetDot11Capabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse is a complexType.
///
struct _tds__GetDot11CapabilitiesResponse
{
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/schema":Dot11Capabilities.
    struct tt__Dot11Capabilities*        Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Status
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Status is a complexType.
///
struct _tds__GetDot11Status
{
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse is a complexType.
///
struct _tds__GetDot11StatusResponse
{
/// Element "Status" of XSD type "http://www.onvif.org/ver10/schema":Dot11Status.
    struct tt__Dot11Status*              Status                         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks is a complexType.
///
struct _tds__ScanAvailableDot11Networks
{
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse is a complexType.
///
struct _tds__ScanAvailableDot11NetworksResponse
{
/// Size of array of struct tt__Dot11AvailableNetworks* is 0..unbounded.
   $int                                  __sizeNetworks                 0;
/// Array struct tt__Dot11AvailableNetworks* of size 0..unbounded.
    struct tt__Dot11AvailableNetworks*   Networks                       0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUris
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUris is a complexType.
///
struct _tds__GetSystemUris
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse is a complexType.
///
struct _tds__GetSystemUrisResponse
{
/// Element "SystemLogUris" of XSD type "http://www.onvif.org/ver10/schema":SystemLogUriList.
    struct tt__SystemLogUriList*         SystemLogUris                  0;	///< Optional element.
/// Element "SupportInfoUri" of XSD type xs:anyURI.
    xsd__anyURI                          SupportInfoUri                 0;	///< Optional element.
/// Element "SystemBackupUri" of XSD type xs:anyURI.
    xsd__anyURI                          SystemBackupUri                0;	///< Optional element.
    struct _tds__GetSystemUrisResponse_Extension
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Extension                      0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade is a complexType.
///
struct _tds__StartFirmwareUpgrade
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse is a complexType.
///
struct _tds__StartFirmwareUpgradeResponse
{
/// Element "UploadUri" of XSD type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "UploadDelay" of XSD type xs:duration.
    xsd__duration                        UploadDelay                    1;	///< Required element.
/// Element "ExpectedDownTime" of XSD type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore is a complexType.
///
struct _tds__StartSystemRestore
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse is a complexType.
///
struct _tds__StartSystemRestoreResponse
{
/// Element "UploadUri" of XSD type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "ExpectedDownTime" of XSD type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations is a complexType.
///
struct _tds__GetStorageConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse is a complexType.
///
struct _tds__GetStorageConfigurationsResponse
{
/// Size of array of struct tds__StorageConfiguration* is 0..unbounded.
   $int                                  __sizeStorageConfigurations    0;
/// Array struct tds__StorageConfiguration* of size 0..unbounded.
    struct tds__StorageConfiguration*    StorageConfigurations          0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration is a complexType.
///
struct _tds__CreateStorageConfiguration
{
/// Element "StorageConfiguration" of XSD type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    struct tds__StorageConfigurationData*  StorageConfiguration           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse is a complexType.
///
struct _tds__CreateStorageConfigurationResponse
{
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration is a complexType.
///
struct _tds__GetStorageConfiguration
{
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse is a complexType.
///
struct _tds__GetStorageConfigurationResponse
{
/// Element "StorageConfiguration" of XSD type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    struct tds__StorageConfiguration*    StorageConfiguration           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration is a complexType.
///
struct _tds__SetStorageConfiguration
{
/// Element "StorageConfiguration" of XSD type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    struct tds__StorageConfiguration*    StorageConfiguration           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse is a complexType.
///
struct _tds__SetStorageConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration is a complexType.
///
struct _tds__DeleteStorageConfiguration
{
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse is a complexType.
///
struct _tds__DeleteStorageConfigurationResponse
{
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/imaging/wsdl":Capabilities is a complexType.
///
struct timg__Capabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not Image Stabilization feature is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "ImageStabilization" of XSD type xs:boolean.
   @enum xsd__boolean*                   ImageStabilization             0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilities is a complexType.
///
struct _timg__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _timg__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the imaging service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver20/imaging/wsdl":Capabilities.
    struct timg__Capabilities*           Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettings
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettings is a complexType.
///
struct _timg__GetImagingSettings
{
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource for which the ImagingSettings.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettingsResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettingsResponse is a complexType.
///
struct _timg__GetImagingSettingsResponse
{
/// <PRE><BLOCKQUOTE>
///   ImagingSettings for the VideoSource that was requested.
/// </BLOCKQUOTE></PRE>
/// Element "ImagingSettings" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    struct tt__ImagingSettings20*        ImagingSettings                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettings
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettings is a complexType.
///
struct _timg__SetImagingSettings
{
/// Element "VideoSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// Element "ImagingSettings" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    struct tt__ImagingSettings20*        ImagingSettings                1;	///< Required element.
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean*                   ForcePersistence               0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettingsResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettingsResponse is a complexType.
///
struct _timg__SetImagingSettingsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetOptions
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetOptions is a complexType.
///
struct _timg__GetOptions
{
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource for which the imaging parameter options are requested.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetOptionsResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetOptionsResponse is a complexType.
///
struct _timg__GetOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the imaging parameters that are categorized as device specific.
/// </BLOCKQUOTE></PRE>
/// Element "ImagingOptions" of XSD type "http://www.onvif.org/ver10/schema":ImagingOptions20.
    struct tt__ImagingOptions20*         ImagingOptions                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Move
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":Move is a complexType.
///
struct _timg__Move
{
/// <PRE><BLOCKQUOTE>
///   Reference to the VideoSource for the requested move (focus) operation.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Content of the requested move (focus) operation.
/// </BLOCKQUOTE></PRE>
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusMove.
    struct tt__FocusMove*                Focus                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":MoveResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":MoveResponse is a complexType.
///
struct _timg__MoveResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptions
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptions is a complexType.
///
struct _timg__GetMoveOptions
{
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource for the requested move options.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptionsResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptionsResponse is a complexType.
///
struct _timg__GetMoveOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the focus lens move options.
/// </BLOCKQUOTE></PRE>
/// Element "MoveOptions" of XSD type "http://www.onvif.org/ver10/schema":MoveOptions20.
    struct tt__MoveOptions20*            MoveOptions                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Stop
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":Stop is a complexType.
///
struct _timg__Stop
{
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource where the focus movement should be stopped.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":StopResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":StopResponse is a complexType.
///
struct _timg__StopResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetStatus
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetStatus is a complexType.
///
struct _timg__GetStatus
{
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource where the imaging status should be requested.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetStatusResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetStatusResponse is a complexType.
///
struct _timg__GetStatusResponse
{
/// <PRE><BLOCKQUOTE>
///   Requested imaging status.
/// </BLOCKQUOTE></PRE>
/// Element "Status" of XSD type "http://www.onvif.org/ver10/schema":ImagingStatus20.
    struct tt__ImagingStatus20*          Status                         1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/ptz/wsdl":Capabilities is a complexType.
///
struct tptz__Capabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not EFlip is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "EFlip" of XSD type xs:boolean.
   @enum xsd__boolean*                   EFlip                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not reversing of PT control direction is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "Reverse" of XSD type xs:boolean.
   @enum xsd__boolean*                   Reverse                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for the GetCompatibleConfigurations command.
/// </BLOCKQUOTE></PRE>
/// Attribute "GetCompatibleConfigurations" of XSD type xs:boolean.
   @enum xsd__boolean*                   GetCompatibleConfigurations    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the PTZVector includes MoveStatus information.
/// </BLOCKQUOTE></PRE>
/// Attribute "MoveStatus" of XSD type xs:boolean.
   @enum xsd__boolean*                   MoveStatus                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the PTZVector includes Position information.
/// </BLOCKQUOTE></PRE>
/// Attribute "StatusPosition" of XSD type xs:boolean.
   @enum xsd__boolean*                   StatusPosition                 0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities is a complexType.
///
struct _tptz__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _tptz__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the PTZ service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
    struct tptz__Capabilities*           Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodes
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodes is a complexType.
///
struct _tptz__GetNodes
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse is a complexType.
///
struct _tptz__GetNodesResponse
{
/// <PRE><BLOCKQUOTE>
///   A list of the existing PTZ Nodes on the device.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PTZNode* is 0..unbounded.
   $int                                  __sizePTZNode                  0;
/// Array struct tt__PTZNode* of size 0..unbounded.
    struct tt__PTZNode*                  PTZNode                        0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNode
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNode is a complexType.
///
struct _tptz__GetNode
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested PTZNode.
/// </BLOCKQUOTE></PRE>
/// Element "NodeToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse is a complexType.
///
struct _tptz__GetNodeResponse
{
/// <PRE><BLOCKQUOTE>
///   A requested PTZNode.
/// </BLOCKQUOTE></PRE>
/// Element "PTZNode" of XSD type "http://www.onvif.org/ver10/schema":PTZNode.
    struct tt__PTZNode*                  PTZNode                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations is a complexType.
///
struct _tptz__GetConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse is a complexType.
///
struct _tptz__GetConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   A list of all existing PTZConfigurations on the device.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PTZConfiguration* is 0..unbounded.
   $int                                  __sizePTZConfiguration         0;
/// Array struct tt__PTZConfiguration* of size 0..unbounded.
    struct tt__PTZConfiguration*         PTZConfiguration               0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration is a complexType.
///
struct _tptz__GetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested PTZConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "PTZConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PTZConfigurationToken          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse is a complexType.
///
struct _tptz__GetConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   A requested PTZConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "PTZConfiguration" of XSD type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    struct tt__PTZConfiguration*         PTZConfiguration               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration is a complexType.
///
struct _tptz__SetConfiguration
{

/// </BLOCKQUOTE></PRE>
/// Element "PTZConfiguration" of XSD type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    struct tt__PTZConfiguration*         PTZConfiguration               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Flag that makes configuration persistent. Example: User wants the configuration to exist after reboot.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse is a complexType.
///
struct _tptz__SetConfigurationResponse
{
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    struct __tptz__SetConfigurationResponse_sequence
    {
    }                                   *__SetConfigurationResponse_sequence 0;
//  END OF SEQUENCE
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions is a complexType.
///
struct _tptz__GetConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Token of an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse is a complexType.
///
struct _tptz__GetConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested PTZ configuration options.
/// </BLOCKQUOTE></PRE>
/// Element "PTZConfigurationOptions" of XSD type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions.
    struct tt__PTZConfigurationOptions*  PTZConfigurationOptions        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand is a complexType.
///
struct _tptz__SendAuxiliaryCommand
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The Auxiliary request data.
/// </BLOCKQUOTE></PRE>
/// Element "AuxiliaryData" of XSD type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryData                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse is a complexType.
///
struct _tptz__SendAuxiliaryCommandResponse
{
/// <PRE><BLOCKQUOTE>
///   The response contains the auxiliary response.
/// </BLOCKQUOTE></PRE>
/// Element "AuxiliaryResponse" of XSD type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryResponse              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresets
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresets is a complexType.
///
struct _tptz__GetPresets
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse is a complexType.
///
struct _tptz__GetPresetsResponse
{
/// <PRE><BLOCKQUOTE>
///   A list of presets which are available for the requested MediaProfile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PTZPreset* is 0..unbounded.
   $int                                  __sizePreset                   0;
/// Array struct tt__PTZPreset* of size 0..unbounded.
    struct tt__PTZPreset*                Preset                         0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetPreset is a complexType.
///
struct _tptz__SetPreset
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset name.
/// </BLOCKQUOTE></PRE>
/// Element "PresetName" of XSD type xs:string.
    char*                                PresetName                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
/// Element "PresetToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse is a complexType.
///
struct _tptz__SetPresetResponse
{
/// <PRE><BLOCKQUOTE>
///   A token to the Preset which has been set.
/// </BLOCKQUOTE></PRE>
/// Element "PresetToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset is a complexType.
///
struct _tptz__RemovePreset
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
/// Element "PresetToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse is a complexType.
///
struct _tptz__RemovePresetResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset is a complexType.
///
struct _tptz__GotoPreset
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
/// Element "PresetToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 Speed                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse is a complexType.
///
struct _tptz__GotoPresetResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatus
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetStatus is a complexType.
///
struct _tptz__GetStatus
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the PTZStatus should be requested.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse is a complexType.
///
struct _tptz__GetStatusResponse
{
/// <PRE><BLOCKQUOTE>
///   The PTZStatus for the requested MediaProfile.
/// </BLOCKQUOTE></PRE>
/// Element "PTZStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZStatus.
    struct tt__PTZStatus*                PTZStatus                      1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition is a complexType.
///
struct _tptz__GotoHomePosition
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 Speed                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse is a complexType.
///
struct _tptz__GotoHomePositionResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition is a complexType.
///
struct _tptz__SetHomePosition
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the home position should be set.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse is a complexType.
///
struct _tptz__SetHomePositionResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove is a complexType.
///
struct _tptz__ContinuousMove
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A Velocity vector specifying the velocity of pan, tilt and zoom.
/// </BLOCKQUOTE></PRE>
/// Element "Velocity" of XSD type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 Velocity                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Timeout parameter.
/// </BLOCKQUOTE></PRE>
/// Element "Timeout" of XSD type xs:duration.
    xsd__duration*                       Timeout                        0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse is a complexType.
///
struct _tptz__ContinuousMoveResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove is a complexType.
///
struct _tptz__RelativeMove
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A positional Translation relative to the current position
/// </BLOCKQUOTE></PRE>
/// Element "Translation" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                Translation                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed parameter.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 Speed                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse is a complexType.
///
struct _tptz__RelativeMoveResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove is a complexType.
///
struct _tptz__AbsoluteMove
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A Position vector specifying the absolute target position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 Speed                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse is a complexType.
///
struct _tptz__AbsoluteMoveResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Stop
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":Stop is a complexType.
///
struct _tptz__Stop
{
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile that indicate what should be stopped.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Set true when we want to stop ongoing pan and tilt movements.If PanTilt arguments are not present, this command stops these movements.
/// </BLOCKQUOTE></PRE>
/// Element "PanTilt" of XSD type xs:boolean.
    enum xsd__boolean*                   PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Set true when we want to stop ongoing zoom movement.If Zoom arguments are not present, this command stops ongoing zoom movement.
/// </BLOCKQUOTE></PRE>
/// Element "Zoom" of XSD type xs:boolean.
    enum xsd__boolean*                   Zoom                           0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":StopResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":StopResponse is a complexType.
///
struct _tptz__StopResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours is a complexType.
///
struct _tptz__GetPresetTours
{
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse is a complexType.
///
struct _tptz__GetPresetToursResponse
{
/// Size of array of struct tt__PresetTour* is 0..unbounded.
   $int                                  __sizePresetTour               0;
/// Array struct tt__PresetTour* of size 0..unbounded.
    struct tt__PresetTour*               PresetTour                     0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour is a complexType.
///
struct _tptz__GetPresetTour
{
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse is a complexType.
///
struct _tptz__GetPresetTourResponse
{
/// Element "PresetTour" of XSD type "http://www.onvif.org/ver10/schema":PresetTour.
    struct tt__PresetTour*               PresetTour                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions is a complexType.
///
struct _tptz__GetPresetTourOptions
{
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse is a complexType.
///
struct _tptz__GetPresetTourOptionsResponse
{
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourOptions.
    struct tt__PTZPresetTourOptions*     Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour is a complexType.
///
struct _tptz__CreatePresetTour
{
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse is a complexType.
///
struct _tptz__CreatePresetTourResponse
{
/// Element "PresetTourToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour is a complexType.
///
struct _tptz__ModifyPresetTour
{
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTour" of XSD type "http://www.onvif.org/ver10/schema":PresetTour.
    struct tt__PresetTour*               PresetTour                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse is a complexType.
///
struct _tptz__ModifyPresetTourResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour is a complexType.
///
struct _tptz__OperatePresetTour
{
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Element "Operation" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourOperation.
    enum tt__PTZPresetTourOperation      Operation                      1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse is a complexType.
///
struct _tptz__OperatePresetTourResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour is a complexType.
///
struct _tptz__RemovePresetTour
{
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse is a complexType.
///
struct _tptz__RemovePresetTourResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurations
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurations is a complexType.
///
struct _tptz__GetCompatibleConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurationsResponse is a complexType.
///
struct _tptz__GetCompatibleConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   A list of all existing PTZConfigurations on the NVT that is suitable to be added to the addressed media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PTZConfiguration* is 0..unbounded.
   $int                                  __sizePTZConfiguration         0;
/// Array struct tt__PTZConfiguration* of size 0..unbounded.
    struct tt__PTZConfiguration*         PTZConfiguration               0;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/receiver/wsdl":Capabilities is a complexType.
///
struct trv__Capabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates that the device can receive RTP multicast streams.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTP_Multicast" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTP_USCOREMulticast            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the device can receive RTP/TCP streams
/// </BLOCKQUOTE></PRE>
/// Attribute "RTP_TCP" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTP_USCORETCP                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the device can receive RTP/RTSP/TCP streams.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTP_RTSP_TCP" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum number of receivers supported by the device.
/// </BLOCKQUOTE></PRE>
/// Attribute "SupportedReceivers" of XSD type xs:int.
   @int                                  SupportedReceivers             1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum allowed length for RTSP URIs (Minimum and default value is 128 octet).
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumRTSPURILength" of XSD type xs:int.
   @int*                                 MaximumRTSPURILength           0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilities is a complexType.
///
struct _trv__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _trv__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the receiver service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/receiver/wsdl":Capabilities.
    struct trv__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceivers
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceivers is a complexType.
///
struct _trv__GetReceivers
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiversResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceiversResponse is a complexType.
///
struct _trv__GetReceiversResponse
{
/// <PRE><BLOCKQUOTE>
///   A list of all receivers that currently exist on the device.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Receiver* is 0..unbounded.
   $int                                  __sizeReceivers                0;
/// Array struct tt__Receiver* of size 0..unbounded.
    struct tt__Receiver*                 Receivers                      0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiver
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceiver is a complexType.
///
struct _trv__GetReceiver
{
/// <PRE><BLOCKQUOTE>
///   The token of the receiver to be retrieved.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverResponse is a complexType.
///
struct _trv__GetReceiverResponse
{
/// <PRE><BLOCKQUOTE>
///   The details of the receiver.
/// </BLOCKQUOTE></PRE>
/// Element "Receiver" of XSD type "http://www.onvif.org/ver10/schema":Receiver.
    struct tt__Receiver*                 Receiver                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiver
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiver is a complexType.
///
struct _trv__CreateReceiver
{
/// <PRE><BLOCKQUOTE>
///   The initial configuration for the new receiver.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    struct tt__ReceiverConfiguration*    Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiverResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiverResponse is a complexType.
///
struct _trv__CreateReceiverResponse
{
/// <PRE><BLOCKQUOTE>
///   The details of the receiver that was created.
/// </BLOCKQUOTE></PRE>
/// Element "Receiver" of XSD type "http://www.onvif.org/ver10/schema":Receiver.
    struct tt__Receiver*                 Receiver                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiver
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiver is a complexType.
///
struct _trv__DeleteReceiver
{
/// <PRE><BLOCKQUOTE>
///   The token of the receiver to be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiverResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiverResponse is a complexType.
///
struct _trv__DeleteReceiverResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiver
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiver is a complexType.
///
struct _trv__ConfigureReceiver
{
/// <PRE><BLOCKQUOTE>
///   The token of the receiver to be configured.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The new configuration for the receiver.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    struct tt__ReceiverConfiguration*    Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiverResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiverResponse is a complexType.
///
struct _trv__ConfigureReceiverResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverMode
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverMode is a complexType.
///
struct _trv__SetReceiverMode
{
/// <PRE><BLOCKQUOTE>
///   The token of the receiver to be changed.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The new receiver mode. Options available are:
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ReceiverMode.
    enum tt__ReceiverMode                Mode                           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverModeResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverModeResponse is a complexType.
///
struct _trv__SetReceiverModeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverState
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverState is a complexType.
///
struct _trv__GetReceiverState
{
/// <PRE><BLOCKQUOTE>
///   The token of the receiver to be queried.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverStateResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverStateResponse is a complexType.
///
struct _trv__GetReceiverStateResponse
{
/// <PRE><BLOCKQUOTE>
///   Description of the current receiver state.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverState" of XSD type "http://www.onvif.org/ver10/schema":ReceiverStateInformation.
    struct tt__ReceiverStateInformation*  ReceiverState                  1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/recording/wsdl                                *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/recording/wsdl":Capabilities is a complexType.
///
struct trc__Capabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indication if the device supports dynamic creation and deletion of recordings
/// </BLOCKQUOTE></PRE>
/// Attribute "DynamicRecordings" of XSD type xs:boolean.
   @enum xsd__boolean*                   DynamicRecordings              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication if the device supports dynamic creation and deletion of tracks
/// </BLOCKQUOTE></PRE>
/// Attribute "DynamicTracks" of XSD type xs:boolean.
   @enum xsd__boolean*                   DynamicTracks                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication which encodings are supported for recording. The list may contain one or more enumeration values of tt:VideoEncoding and tt:AudioEncoding. If device does not support audio recording tt:AudioEncoding shall not be listed.
/// </BLOCKQUOTE></PRE>
/// Attribute "Encoding" of XSD type "http://www.onvif.org/ver10/recording/wsdl":EncodingTypes.
   @trc__EncodingTypes                   Encoding                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum supported bit rate for all tracks of a recording in kBit/s.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxRate" of XSD type xs:float.
   @float*                               MaxRate                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum supported bit rate for all recordings in kBit/s.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxTotalRate" of XSD type xs:float.
   @float*                               MaxTotalRate                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of recordings supported. (Integer values only.)
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxRecordings" of XSD type xs:float.
   @float*                               MaxRecordings                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum total number of supported recording jobs by the device.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxRecordingJobs" of XSD type xs:int.
   @int*                                 MaxRecordingJobs               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication if the device supports the GetRecordingOptions command.
/// </BLOCKQUOTE></PRE>
/// Attribute "Options" of XSD type xs:boolean.
   @enum xsd__boolean*                   Options                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication if the device supports recording metadata.
/// </BLOCKQUOTE></PRE>
/// Attribute "MetadataRecording" of XSD type xs:boolean.
   @enum xsd__boolean*                   MetadataRecording              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication that the device supports ExportRecordedData command for the listed export file formats.
///   The list shall return at least one export file format value. The value of 'ONVIF' refers to
///   ONVIF Export File Format specification.
/// </BLOCKQUOTE></PRE>
/// Attribute "SupportedExportFileFormats" of XSD type "http://www.onvif.org/ver10/schema":StringAttrList.
   @tt__StringAttrList                   SupportedExportFileFormats     0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/recording/wsdl":RecordingOptions is a complexType.
///
struct trc__RecordingOptions
{
/// Element "Job" of XSD type "http://www.onvif.org/ver10/recording/wsdl":JobOptions.
    struct trc__JobOptions*              Job                            1;	///< Required element.
/// Element "Track" of XSD type "http://www.onvif.org/ver10/recording/wsdl":TrackOptions.
    struct trc__TrackOptions*            Track                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/recording/wsdl":JobOptions is a complexType.
///
struct trc__JobOptions
{
/// <PRE><BLOCKQUOTE>
///   Number of spare jobs that can be created for the recording.
/// </BLOCKQUOTE></PRE>
/// Attribute "Spare" of XSD type xs:int.
   @int*                                 Spare                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   A device that supports recording of a restricted set of Media Service Profiles returns the list of profiles that can be recorded on the given Recording.
/// </BLOCKQUOTE></PRE>
/// Attribute "CompatibleSources" of XSD type "http://www.onvif.org/ver10/schema":StringAttrList.
   @tt__StringAttrList                   CompatibleSources              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/recording/wsdl":TrackOptions is a complexType.
///
struct trc__TrackOptions
{
/// <PRE><BLOCKQUOTE>
///   Total spare number of tracks that can be added to this recording.
/// </BLOCKQUOTE></PRE>
/// Attribute "SpareTotal" of XSD type xs:int.
   @int*                                 SpareTotal                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Number of spare Video tracks that can be added to this recording.
/// </BLOCKQUOTE></PRE>
/// Attribute "SpareVideo" of XSD type xs:int.
   @int*                                 SpareVideo                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Number of spare Aduio tracks that can be added to this recording.
/// </BLOCKQUOTE></PRE>
/// Attribute "SpareAudio" of XSD type xs:int.
   @int*                                 SpareAudio                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Number of spare Metadata tracks that can be added to this recording.
/// </BLOCKQUOTE></PRE>
/// Attribute "SpareMetadata" of XSD type xs:int.
   @int*                                 SpareMetadata                  0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetServiceCapabilities is a complexType.
///
struct _trc__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _trc__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the recording service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/recording/wsdl":Capabilities.
    struct trc__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":CreateRecording
/// @brief "http://www.onvif.org/ver10/recording/wsdl":CreateRecording is a complexType.
///
struct _trc__CreateRecording
{
/// <PRE><BLOCKQUOTE>
///   Initial configuration for the recording.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    struct tt__RecordingConfiguration*   RecordingConfiguration         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":CreateRecordingResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":CreateRecordingResponse is a complexType.
///
struct _trc__CreateRecordingResponse
{
/// <PRE><BLOCKQUOTE>
///   The reference to the created recording.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":DeleteRecording
/// @brief "http://www.onvif.org/ver10/recording/wsdl":DeleteRecording is a complexType.
///
struct _trc__DeleteRecording
{
/// <PRE><BLOCKQUOTE>
///   The reference of the recording to be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":DeleteRecordingResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":DeleteRecordingResponse is a complexType.
///
struct _trc__DeleteRecordingResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordings
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordings is a complexType.
///
struct _trc__GetRecordings
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingsResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingsResponse is a complexType.
///
struct _trc__GetRecordingsResponse
{
/// <PRE><BLOCKQUOTE>
///   List of recording items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__GetRecordingsResponseItem* is 0..unbounded.
   $int                                  __sizeRecordingItem            0;
/// Array struct tt__GetRecordingsResponseItem* of size 0..unbounded.
    struct tt__GetRecordingsResponseItem*  RecordingItem                  0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetRecordingConfiguration
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetRecordingConfiguration is a complexType.
///
struct _trc__SetRecordingConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the recording that shall be changed.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The new configuration.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    struct tt__RecordingConfiguration*   RecordingConfiguration         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetRecordingConfigurationResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetRecordingConfigurationResponse is a complexType.
///
struct _trc__SetRecordingConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingConfiguration
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingConfiguration is a complexType.
///
struct _trc__GetRecordingConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the configuration to be retrieved.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingConfigurationResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingConfigurationResponse is a complexType.
///
struct _trc__GetRecordingConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Configuration of the recording.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    struct tt__RecordingConfiguration*   RecordingConfiguration         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":CreateTrack
/// @brief "http://www.onvif.org/ver10/recording/wsdl":CreateTrack is a complexType.
///
struct _trc__CreateTrack
{
/// <PRE><BLOCKQUOTE>
///   Identifies the recording to which a track shall be added.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The configuration of the new track.
/// </BLOCKQUOTE></PRE>
/// Element "TrackConfiguration" of XSD type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    struct tt__TrackConfiguration*       TrackConfiguration             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":CreateTrackResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":CreateTrackResponse is a complexType.
///
struct _trc__CreateTrackResponse
{
/// <PRE><BLOCKQUOTE>
///   The TrackToken shall identify the newly created track. The
///   TrackToken shall be unique within the recoding to which
///   the new track belongs.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":DeleteTrack
/// @brief "http://www.onvif.org/ver10/recording/wsdl":DeleteTrack is a complexType.
///
struct _trc__DeleteTrack
{
/// <PRE><BLOCKQUOTE>
///   Token of the recording the track belongs to.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of the track to be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":DeleteTrackResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":DeleteTrackResponse is a complexType.
///
struct _trc__DeleteTrackResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetTrackConfiguration
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetTrackConfiguration is a complexType.
///
struct _trc__GetTrackConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the recording the track belongs to.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of the track.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetTrackConfigurationResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetTrackConfigurationResponse is a complexType.
///
struct _trc__GetTrackConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Configuration of the track.
/// </BLOCKQUOTE></PRE>
/// Element "TrackConfiguration" of XSD type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    struct tt__TrackConfiguration*       TrackConfiguration             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetTrackConfiguration
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetTrackConfiguration is a complexType.
///
struct _trc__SetTrackConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the recording the track belongs to.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of the track to be modified.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   New configuration for the track.
/// </BLOCKQUOTE></PRE>
/// Element "TrackConfiguration" of XSD type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    struct tt__TrackConfiguration*       TrackConfiguration             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetTrackConfigurationResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetTrackConfigurationResponse is a complexType.
///
struct _trc__SetTrackConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":CreateRecordingJob
/// @brief "http://www.onvif.org/ver10/recording/wsdl":CreateRecordingJob is a complexType.
///
struct _trc__CreateRecordingJob
{
/// <PRE><BLOCKQUOTE>
///   The initial configuration of the new recording job.
/// </BLOCKQUOTE></PRE>
/// Element "JobConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    struct tt__RecordingJobConfiguration*  JobConfiguration               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":CreateRecordingJobResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":CreateRecordingJobResponse is a complexType.
///
struct _trc__CreateRecordingJobResponse
{
/// <PRE><BLOCKQUOTE>
///   The JobToken shall identify the created recording job.
/// </BLOCKQUOTE></PRE>
/// Element "JobToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The JobConfiguration structure shall be the configuration as it is used by the device. This may be different from the
///   JobConfiguration passed to CreateRecordingJob.
/// </BLOCKQUOTE></PRE>
/// Element "JobConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    struct tt__RecordingJobConfiguration*  JobConfiguration               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":DeleteRecordingJob
/// @brief "http://www.onvif.org/ver10/recording/wsdl":DeleteRecordingJob is a complexType.
///
struct _trc__DeleteRecordingJob
{
/// <PRE><BLOCKQUOTE>
///   The token of the job to be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "JobToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":DeleteRecordingJobResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":DeleteRecordingJobResponse is a complexType.
///
struct _trc__DeleteRecordingJobResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobs
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobs is a complexType.
///
struct _trc__GetRecordingJobs
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobsResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobsResponse is a complexType.
///
struct _trc__GetRecordingJobsResponse
{
/// <PRE><BLOCKQUOTE>
///   List of recording jobs.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__GetRecordingJobsResponseItem* is 0..unbounded.
   $int                                  __sizeJobItem                  0;
/// Array struct tt__GetRecordingJobsResponseItem* of size 0..unbounded.
    struct tt__GetRecordingJobsResponseItem*  JobItem                        0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobConfiguration
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobConfiguration is a complexType.
///
struct _trc__SetRecordingJobConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the job to be modified.
/// </BLOCKQUOTE></PRE>
/// Element "JobToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   New configuration of the recording job.
/// </BLOCKQUOTE></PRE>
/// Element "JobConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    struct tt__RecordingJobConfiguration*  JobConfiguration               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobConfigurationResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobConfigurationResponse is a complexType.
///
struct _trc__SetRecordingJobConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The JobConfiguration structure shall be the configuration
///   as it is used by the device. This may be different from the JobConfiguration passed to SetRecordingJobConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "JobConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    struct tt__RecordingJobConfiguration*  JobConfiguration               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobConfiguration
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobConfiguration is a complexType.
///
struct _trc__GetRecordingJobConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the recording job.
/// </BLOCKQUOTE></PRE>
/// Element "JobToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobConfigurationResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobConfigurationResponse is a complexType.
///
struct _trc__GetRecordingJobConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Current configuration of the recording job.
/// </BLOCKQUOTE></PRE>
/// Element "JobConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    struct tt__RecordingJobConfiguration*  JobConfiguration               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobMode
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobMode is a complexType.
///
struct _trc__SetRecordingJobMode
{
/// <PRE><BLOCKQUOTE>
///   Token of the recording job.
/// </BLOCKQUOTE></PRE>
/// Element "JobToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The new mode for the recording job.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobMode.
    tt__RecordingJobMode                 Mode                           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobModeResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobModeResponse is a complexType.
///
struct _trc__SetRecordingJobModeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobState
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobState is a complexType.
///
struct _trc__GetRecordingJobState
{
/// <PRE><BLOCKQUOTE>
///   Token of the recording job.
/// </BLOCKQUOTE></PRE>
/// Element "JobToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobStateResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobStateResponse is a complexType.
///
struct _trc__GetRecordingJobStateResponse
{
/// <PRE><BLOCKQUOTE>
///   The current state of the recording job.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobStateInformation.
    struct tt__RecordingJobStateInformation*  State                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingOptions
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingOptions is a complexType.
///
struct _trc__GetRecordingOptions
{
/// <PRE><BLOCKQUOTE>
///   Token of the recording.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingOptionsResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingOptionsResponse is a complexType.
///
struct _trc__GetRecordingOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   Configuration of the recording.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/recording/wsdl":RecordingOptions.
    struct trc__RecordingOptions*        Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":ExportRecordedData
/// @brief "http://www.onvif.org/ver10/recording/wsdl":ExportRecordedData is a complexType.
///
struct _trc__ExportRecordedData
{
/// <PRE><BLOCKQUOTE>
///   Indicates the selection criterion on the existing recordings. .
/// </BLOCKQUOTE></PRE>
/// Element "SearchScope" of XSD type "http://www.onvif.org/ver10/schema":SearchScope.
    struct tt__SearchScope*              SearchScope                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates which export file format to be used.
/// </BLOCKQUOTE></PRE>
/// Element "FileFormat" of XSD type xs:string.
    char*                                FileFormat                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the target storage and relative directory path.
/// </BLOCKQUOTE></PRE>
/// Element "StorageDestination" of XSD type "http://www.onvif.org/ver10/schema":StorageReferencePath.
    struct tt__StorageReferencePath*     StorageDestination             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":ExportRecordedDataResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":ExportRecordedDataResponse is a complexType.
///
struct _trc__ExportRecordedDataResponse
{
/// <PRE><BLOCKQUOTE>
///   Unique operation token for client to associate the relevant events.
/// </BLOCKQUOTE></PRE>
/// Element "OperationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OperationToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of exported file names. The device can also use AsyncronousOperationStatus event to publish this list.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 0..unbounded.
   $int                                  __sizeFileNames                0;
/// Array char** of size 0..unbounded.
    char**                               FileNames                      0;
    struct _trc__ExportRecordedDataResponse_Extension
    {
/// @todo <any namespace="##any">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Extension                      0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":StopExportRecordedData
/// @brief "http://www.onvif.org/ver10/recording/wsdl":StopExportRecordedData is a complexType.
///
struct _trc__StopExportRecordedData
{
/// <PRE><BLOCKQUOTE>
///   Unique ExportRecordedData operation token
/// </BLOCKQUOTE></PRE>
/// Element "OperationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OperationToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":StopExportRecordedDataResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":StopExportRecordedDataResponse is a complexType.
///
struct _trc__StopExportRecordedDataResponse
{
/// <PRE><BLOCKQUOTE>
///   Progress percentage of ExportRecordedData operation.
/// </BLOCKQUOTE></PRE>
/// Element "Progress" of XSD type xs:float.
    float                                Progress                       1;	///< Required element.

/// </BLOCKQUOTE></PRE>
/// Element "FileProgressStatus" of XSD type "http://www.onvif.org/ver10/schema":ArrayOfFileProgress.
    struct tt__ArrayOfFileProgress*      FileProgressStatus             1;	///< Required element.
/// @todo <any namespace="##any">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetExportRecordedDataState
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetExportRecordedDataState is a complexType.
///
struct _trc__GetExportRecordedDataState
{
/// <PRE><BLOCKQUOTE>
///   Unique ExportRecordedData operation token
/// </BLOCKQUOTE></PRE>
/// Element "OperationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OperationToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetExportRecordedDataStateResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetExportRecordedDataStateResponse is a complexType.
///
struct _trc__GetExportRecordedDataStateResponse
{
/// <PRE><BLOCKQUOTE>
///   Progress percentage of ExportRecordedData operation.
/// </BLOCKQUOTE></PRE>
/// Element "Progress" of XSD type xs:float.
    float                                Progress                       1;	///< Required element.

/// </BLOCKQUOTE></PRE>
/// Element "FileProgressStatus" of XSD type "http://www.onvif.org/ver10/schema":ArrayOfFileProgress.
    struct tt__ArrayOfFileProgress*      FileProgressStatus             1;	///< Required element.
/// @todo <any namespace="##any">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/search/wsdl":Capabilities is a complexType.
///
struct tse__Capabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "MetadataSearch" of XSD type xs:boolean.
   @enum xsd__boolean*                   MetadataSearch                 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for general virtual property events in the FindEvents method.
/// </BLOCKQUOTE></PRE>
/// Attribute "GeneralStartEvents" of XSD type xs:boolean.
   @enum xsd__boolean*                   GeneralStartEvents             0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetServiceCapabilities is a complexType.
///
struct _tse__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _tse__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the search service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/search/wsdl":Capabilities.
    struct tse__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingSummary
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetRecordingSummary is a complexType.
///
struct _tse__GetRecordingSummary
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingSummaryResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetRecordingSummaryResponse is a complexType.
///
struct _tse__GetRecordingSummaryResponse
{
/// Element "Summary" of XSD type "http://www.onvif.org/ver10/schema":RecordingSummary.
    struct tt__RecordingSummary*         Summary                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingInformation
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetRecordingInformation is a complexType.
///
struct _tse__GetRecordingInformation
{
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingInformationResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetRecordingInformationResponse is a complexType.
///
struct _tse__GetRecordingInformationResponse
{
/// Element "RecordingInformation" of XSD type "http://www.onvif.org/ver10/schema":RecordingInformation.
    struct tt__RecordingInformation*     RecordingInformation           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetMediaAttributes
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetMediaAttributes is a complexType.
///
struct _tse__GetMediaAttributes
{
/// Size of array of tt__RecordingReference* is 0..unbounded.
   $int                                  __sizeRecordingTokens          0;
/// Array tt__RecordingReference* of size 0..unbounded.
    tt__RecordingReference*              RecordingTokens                0;
/// Element "Time" of XSD type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetMediaAttributesResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetMediaAttributesResponse is a complexType.
///
struct _tse__GetMediaAttributesResponse
{
/// Size of array of struct tt__MediaAttributes* is 0..unbounded.
   $int                                  __sizeMediaAttributes          0;
/// Array struct tt__MediaAttributes* of size 0..unbounded.
    struct tt__MediaAttributes*          MediaAttributes                0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindRecordings
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindRecordings is a complexType.
///
struct _tse__FindRecordings
{
/// <PRE><BLOCKQUOTE>
///   Scope defines the dataset to consider for this search.
/// </BLOCKQUOTE></PRE>
/// Element "Scope" of XSD type "http://www.onvif.org/ver10/schema":SearchScope.
    struct tt__SearchScope*              Scope                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.
/// </BLOCKQUOTE></PRE>
/// Element "MaxMatches" of XSD type xs:int.
    int*                                 MaxMatches                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.
/// </BLOCKQUOTE></PRE>
/// Element "KeepAliveTime" of XSD type xs:duration.
    xsd__duration                        KeepAliveTime                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindRecordingsResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindRecordingsResponse is a complexType.
///
struct _tse__FindRecordingsResponse
{
/// Element "SearchToken" of XSD type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingSearchResults
/// <PRE><BLOCKQUOTE>
///   Gets results from a particular recording listingession.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetRecordingSearchResults is a complexType.
///
struct _tse__GetRecordingSearchResults
{
/// <PRE><BLOCKQUOTE>
///   The search session to get results from.
/// </BLOCKQUOTE></PRE>
/// Element "SearchToken" of XSD type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The minimum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
/// Element "MinResults" of XSD type xs:int.
    int*                                 MinResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
/// Element "MaxResults" of XSD type xs:int.
    int*                                 MaxResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.
/// </BLOCKQUOTE></PRE>
/// Element "WaitTime" of XSD type xs:duration.
    xsd__duration*                       WaitTime                       0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingSearchResultsResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetRecordingSearchResultsResponse is a complexType.
///
struct _tse__GetRecordingSearchResultsResponse
{
/// Element "ResultList" of XSD type "http://www.onvif.org/ver10/schema":FindRecordingResultList.
    struct tt__FindRecordingResultList*  ResultList                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindEvents
/// <PRE><BLOCKQUOTE>
///   Starts a search session and specifies the search parameters.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindEvents is a complexType.
///
struct _tse__FindEvents
{
/// <PRE><BLOCKQUOTE>
///   The point of time where the search will start.
/// </BLOCKQUOTE></PRE>
/// Element "StartPoint" of XSD type xs:dateTime.
    time_t                               StartPoint                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The point of time where the search will stop. This can be a time before the StartPoint, in which case the search is performed backwards in time.
/// </BLOCKQUOTE></PRE>
/// Element "EndPoint" of XSD type xs:dateTime.
    time_t*                              EndPoint                       0;	///< Optional element.
/// Element "Scope" of XSD type "http://www.onvif.org/ver10/schema":SearchScope.
    struct tt__SearchScope*              Scope                          1;	///< Required element.
/// Element "SearchFilter" of XSD type "http://www.onvif.org/ver10/schema":EventFilter.
    struct tt__EventFilter*              SearchFilter                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Setting IncludeStartState to true means that the server should return virtual events representing the start state for any recording included in the scope. Start state events are limited to the topics defined in the SearchFilter that have the IsProperty flag set to true.
/// </BLOCKQUOTE></PRE>
/// Element "IncludeStartState" of XSD type xs:boolean.
    enum xsd__boolean                    IncludeStartState              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.
/// </BLOCKQUOTE></PRE>
/// Element "MaxMatches" of XSD type xs:int.
    int*                                 MaxMatches                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.
/// </BLOCKQUOTE></PRE>
/// Element "KeepAliveTime" of XSD type xs:duration.
    xsd__duration                        KeepAliveTime                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindEventsResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindEventsResponse is a complexType.
///
struct _tse__FindEventsResponse
{
/// <PRE><BLOCKQUOTE>
///   A unique reference to the search session created by this request.
/// </BLOCKQUOTE></PRE>
/// Element "SearchToken" of XSD type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetEventSearchResults
/// <PRE><BLOCKQUOTE>
///   Gets results from a particular search session.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetEventSearchResults is a complexType.
///
struct _tse__GetEventSearchResults
{
/// <PRE><BLOCKQUOTE>
///   The search session to get results from.
/// </BLOCKQUOTE></PRE>
/// Element "SearchToken" of XSD type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The minimum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
/// Element "MinResults" of XSD type xs:int.
    int*                                 MinResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
/// Element "MaxResults" of XSD type xs:int.
    int*                                 MaxResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.
/// </BLOCKQUOTE></PRE>
/// Element "WaitTime" of XSD type xs:duration.
    xsd__duration*                       WaitTime                       0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetEventSearchResultsResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetEventSearchResultsResponse is a complexType.
///
struct _tse__GetEventSearchResultsResponse
{
/// Element "ResultList" of XSD type "http://www.onvif.org/ver10/schema":FindEventResultList.
    struct tt__FindEventResultList*      ResultList                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindPTZPosition
/// <PRE><BLOCKQUOTE>
///   Starts a search session and specifies the search parameters.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindPTZPosition is a complexType.
///
struct _tse__FindPTZPosition
{
/// <PRE><BLOCKQUOTE>
///   The point of time where the search will start.
/// </BLOCKQUOTE></PRE>
/// Element "StartPoint" of XSD type xs:dateTime.
    time_t                               StartPoint                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The point of time where the search will stop. This can be a time before the StartPoint, in which case the search is performed backwards in time.
/// </BLOCKQUOTE></PRE>
/// Element "EndPoint" of XSD type xs:dateTime.
    time_t*                              EndPoint                       0;	///< Optional element.
/// Element "Scope" of XSD type "http://www.onvif.org/ver10/schema":SearchScope.
    struct tt__SearchScope*              Scope                          1;	///< Required element.
/// Element "SearchFilter" of XSD type "http://www.onvif.org/ver10/schema":PTZPositionFilter.
    struct tt__PTZPositionFilter*        SearchFilter                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.
/// </BLOCKQUOTE></PRE>
/// Element "MaxMatches" of XSD type xs:int.
    int*                                 MaxMatches                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.
/// </BLOCKQUOTE></PRE>
/// Element "KeepAliveTime" of XSD type xs:duration.
    xsd__duration                        KeepAliveTime                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindPTZPositionResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindPTZPositionResponse is a complexType.
///
struct _tse__FindPTZPositionResponse
{
/// <PRE><BLOCKQUOTE>
///   A unique reference to the search session created by this request.
/// </BLOCKQUOTE></PRE>
/// Element "SearchToken" of XSD type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetPTZPositionSearchResults
/// <PRE><BLOCKQUOTE>
///   Gets results from a particular search session.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetPTZPositionSearchResults is a complexType.
///
struct _tse__GetPTZPositionSearchResults
{
/// <PRE><BLOCKQUOTE>
///   The search session to get results from.
/// </BLOCKQUOTE></PRE>
/// Element "SearchToken" of XSD type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The minimum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
/// Element "MinResults" of XSD type xs:int.
    int*                                 MinResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
/// Element "MaxResults" of XSD type xs:int.
    int*                                 MaxResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.
/// </BLOCKQUOTE></PRE>
/// Element "WaitTime" of XSD type xs:duration.
    xsd__duration*                       WaitTime                       0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetPTZPositionSearchResultsResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetPTZPositionSearchResultsResponse is a complexType.
///
struct _tse__GetPTZPositionSearchResultsResponse
{
/// Element "ResultList" of XSD type "http://www.onvif.org/ver10/schema":FindPTZPositionResultList.
    struct tt__FindPTZPositionResultList*  ResultList                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindMetadata
/// <PRE><BLOCKQUOTE>
///   Starts a search session and specifies the search parameters.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindMetadata is a complexType.
///
struct _tse__FindMetadata
{
/// <PRE><BLOCKQUOTE>
///   The point of time where the search will start.
/// </BLOCKQUOTE></PRE>
/// Element "StartPoint" of XSD type xs:dateTime.
    time_t                               StartPoint                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The point of time where the search will stop. This can be a time before the StartPoint, in which case the search is performed backwards in time.
/// </BLOCKQUOTE></PRE>
/// Element "EndPoint" of XSD type xs:dateTime.
    time_t*                              EndPoint                       0;	///< Optional element.
/// Element "Scope" of XSD type "http://www.onvif.org/ver10/schema":SearchScope.
    struct tt__SearchScope*              Scope                          1;	///< Required element.
/// Element "MetadataFilter" of XSD type "http://www.onvif.org/ver10/schema":MetadataFilter.
    struct tt__MetadataFilter*           MetadataFilter                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.
/// </BLOCKQUOTE></PRE>
/// Element "MaxMatches" of XSD type xs:int.
    int*                                 MaxMatches                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.
/// </BLOCKQUOTE></PRE>
/// Element "KeepAliveTime" of XSD type xs:duration.
    xsd__duration                        KeepAliveTime                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindMetadataResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindMetadataResponse is a complexType.
///
struct _tse__FindMetadataResponse
{
/// <PRE><BLOCKQUOTE>
///   A unique reference to the search session created by this request.
/// </BLOCKQUOTE></PRE>
/// Element "SearchToken" of XSD type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetMetadataSearchResults
/// <PRE><BLOCKQUOTE>
///   Gets results from a particular search session.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetMetadataSearchResults is a complexType.
///
struct _tse__GetMetadataSearchResults
{
/// <PRE><BLOCKQUOTE>
///   The search session to get results from.
/// </BLOCKQUOTE></PRE>
/// Element "SearchToken" of XSD type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The minimum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
/// Element "MinResults" of XSD type xs:int.
    int*                                 MinResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
/// Element "MaxResults" of XSD type xs:int.
    int*                                 MaxResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.
/// </BLOCKQUOTE></PRE>
/// Element "WaitTime" of XSD type xs:duration.
    xsd__duration*                       WaitTime                       0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetMetadataSearchResultsResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetMetadataSearchResultsResponse is a complexType.
///
struct _tse__GetMetadataSearchResultsResponse
{
/// Element "ResultList" of XSD type "http://www.onvif.org/ver10/schema":FindMetadataResultList.
    struct tt__FindMetadataResultList*   ResultList                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetSearchState
/// <PRE><BLOCKQUOTE>
///   Returns the state of an ongoing search session.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetSearchState is a complexType.
///
struct _tse__GetSearchState
{
/// <PRE><BLOCKQUOTE>
///   The search session to get the state from.
/// </BLOCKQUOTE></PRE>
/// Element "SearchToken" of XSD type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetSearchStateResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetSearchStateResponse is a complexType.
///
struct _tse__GetSearchStateResponse
{
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 State                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":EndSearch
/// <PRE><BLOCKQUOTE>
///   Ends an ongoing search session, freeing any resources.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.onvif.org/ver10/search/wsdl":EndSearch is a complexType.
///
struct _tse__EndSearch
{
/// <PRE><BLOCKQUOTE>
///   The search session to end.
/// </BLOCKQUOTE></PRE>
/// Element "SearchToken" of XSD type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":EndSearchResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":EndSearchResponse is a complexType.
///
struct _tse__EndSearchResponse
{
/// <PRE><BLOCKQUOTE>
///   The point of time the search had reached when it was ended. It is equal to the EndPoint specified in Find-operation if the search was completed.
/// </BLOCKQUOTE></PRE>
/// Element "Endpoint" of XSD type xs:dateTime.
    time_t                               Endpoint                       1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/replay/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/replay/wsdl":Capabilities is a complexType.
///
struct trp__Capabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicator that the Device supports reverse playback as defined in the ONVIF Streaming Specification.
/// </BLOCKQUOTE></PRE>
/// Attribute "ReversePlayback" of XSD type xs:boolean.
   @enum xsd__boolean                    ReversePlayback                0 = 0;	///< Default attribute value="0".
/// <PRE><BLOCKQUOTE>
///   The list contains two elements defining the minimum and maximum valid values supported as session timeout in seconds.
/// </BLOCKQUOTE></PRE>
/// Attribute "SessionTimeoutRange" of XSD type "http://www.onvif.org/ver10/schema":FloatAttrList.
   @tt__FloatAttrList                    SessionTimeoutRange            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP/RTSP/TCP.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTP_RTSP_TCP" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/replay/wsdl":GetServiceCapabilities is a complexType.
///
struct _trp__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/replay/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _trp__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the replay service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/replay/wsdl":Capabilities.
    struct trp__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":GetReplayUri
/// @brief "http://www.onvif.org/ver10/replay/wsdl":GetReplayUri is a complexType.
///
struct _trp__GetReplayUri
{
/// <PRE><BLOCKQUOTE>
///   Specifies the connection parameters to be used for the stream. The URI that is returned may depend on these parameters.
/// </BLOCKQUOTE></PRE>
/// Element "StreamSetup" of XSD type "http://www.onvif.org/ver10/schema":StreamSetup.
    struct tt__StreamSetup*              StreamSetup                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The identifier of the recording to be streamed.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RecordingToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":GetReplayUriResponse
/// @brief "http://www.onvif.org/ver10/replay/wsdl":GetReplayUriResponse is a complexType.
///
struct _trp__GetReplayUriResponse
{
/// <PRE><BLOCKQUOTE>
///   The URI to which the client should connect in order to stream the recording.
/// </BLOCKQUOTE></PRE>
/// Element "Uri" of XSD type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":SetReplayConfiguration
/// @brief "http://www.onvif.org/ver10/replay/wsdl":SetReplayConfiguration is a complexType.
///
struct _trp__SetReplayConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Description of the new replay configuration parameters.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":ReplayConfiguration.
    struct tt__ReplayConfiguration*      Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":SetReplayConfigurationResponse
/// @brief "http://www.onvif.org/ver10/replay/wsdl":SetReplayConfigurationResponse is a complexType.
///
struct _trp__SetReplayConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":GetReplayConfiguration
/// @brief "http://www.onvif.org/ver10/replay/wsdl":GetReplayConfiguration is a complexType.
///
struct _trp__GetReplayConfiguration
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":GetReplayConfigurationResponse
/// @brief "http://www.onvif.org/ver10/replay/wsdl":GetReplayConfigurationResponse is a complexType.
///
struct _trp__GetReplayConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The current replay configuration parameters.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":ReplayConfiguration.
    struct tt__ReplayConfiguration*      Configuration                  1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/analytics/wsdl":Capabilities is a complexType.
///
struct tan__Capabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indication that the device supports the rules interface and the rules syntax.
/// </BLOCKQUOTE></PRE>
/// Attribute "RuleSupport" of XSD type xs:boolean.
   @enum xsd__boolean*                   RuleSupport                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication that the device supports the scene analytics module interface.
/// </BLOCKQUOTE></PRE>
/// Attribute "AnalyticsModuleSupport" of XSD type xs:boolean.
   @enum xsd__boolean*                   AnalyticsModuleSupport         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication that the device produces the cell based scene description
/// </BLOCKQUOTE></PRE>
/// Attribute "CellBasedSceneDescriptionSupported" of XSD type xs:boolean.
   @enum xsd__boolean*                   CellBasedSceneDescriptionSupported 0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetServiceCapabilities is a complexType.
///
struct _tan__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _tan__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the analytics service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver20/analytics/wsdl":Capabilities.
    struct tan__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRules is a complexType.
///
struct _tan__GetSupportedRules
{
/// <PRE><BLOCKQUOTE>
///   References an existing Video Analytics configuration. The list of available tokens can be obtained
///   via the Media service GetVideoAnalyticsConfigurations method.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRulesResponse is a complexType.
///
struct _tan__GetSupportedRulesResponse
{
/// Element "SupportedRules" of XSD type "http://www.onvif.org/ver10/schema":SupportedRules.
    struct tt__SupportedRules*           SupportedRules                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateRules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":CreateRules is a complexType.
///
struct _tan__CreateRules
{
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Size of array of struct tt__Config* is 1..unbounded.
   $int                                  __sizeRule                     1;
/// Array struct tt__Config* of size 1..unbounded.
    struct tt__Config*                   Rule                           1;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateRulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":CreateRulesResponse is a complexType.
///
struct _tan__CreateRulesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteRules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":DeleteRules is a complexType.
///
struct _tan__DeleteRules
{
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   References the specific rule to be deleted (e.g. "MyLineDetector").
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeRuleName                 1;
/// Array char** of size 1..unbounded.
    char**                               RuleName                       1;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteRulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":DeleteRulesResponse is a complexType.
///
struct _tan__DeleteRulesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyRules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":ModifyRules is a complexType.
///
struct _tan__ModifyRules
{
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Size of array of struct tt__Config* is 1..unbounded.
   $int                                  __sizeRule                     1;
/// Array struct tt__Config* of size 1..unbounded.
    struct tt__Config*                   Rule                           1;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyRulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":ModifyRulesResponse is a complexType.
///
struct _tan__ModifyRulesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetRules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetRules is a complexType.
///
struct _tan__GetRules
{
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetRulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetRulesResponse is a complexType.
///
struct _tan__GetRulesResponse
{
/// Size of array of struct tt__Config* is 0..unbounded.
   $int                                  __sizeRule                     0;
/// Array struct tt__Config* of size 0..unbounded.
    struct tt__Config*                   Rule                           0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModules is a complexType.
///
struct _tan__GetSupportedAnalyticsModules
{
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModulesResponse is a complexType.
///
struct _tan__GetSupportedAnalyticsModulesResponse
{
/// Element "SupportedAnalyticsModules" of XSD type "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules.
    struct tt__SupportedAnalyticsModules*  SupportedAnalyticsModules      1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModules is a complexType.
///
struct _tan__CreateAnalyticsModules
{
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Size of array of struct tt__Config* is 1..unbounded.
   $int                                  __sizeAnalyticsModule          1;
/// Array struct tt__Config* of size 1..unbounded.
    struct tt__Config*                   AnalyticsModule                1;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModulesResponse is a complexType.
///
struct _tan__CreateAnalyticsModulesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModules is a complexType.
///
struct _tan__DeleteAnalyticsModules
{
/// <PRE><BLOCKQUOTE>
///   Reference to an existing Video Analytics configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Name of the AnalyticsModule to be deleted.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeAnalyticsModuleName      1;
/// Array char** of size 1..unbounded.
    char**                               AnalyticsModuleName            1;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModulesResponse is a complexType.
///
struct _tan__DeleteAnalyticsModulesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModules is a complexType.
///
struct _tan__ModifyAnalyticsModules
{
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Size of array of struct tt__Config* is 1..unbounded.
   $int                                  __sizeAnalyticsModule          1;
/// Array struct tt__Config* of size 1..unbounded.
    struct tt__Config*                   AnalyticsModule                1;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModulesResponse is a complexType.
///
struct _tan__ModifyAnalyticsModulesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModules is a complexType.
///
struct _tan__GetAnalyticsModules
{
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModulesResponse is a complexType.
///
struct _tan__GetAnalyticsModulesResponse
{
/// Size of array of struct tt__Config* is 0..unbounded.
   $int                                  __sizeAnalyticsModule          0;
/// Array struct tt__Config* of size 0..unbounded.
    struct tt__Config*                   AnalyticsModule                0;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/analyticsdevice/wsdl                          *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":Capabilities is a complexType.
///
struct tad__Capabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetServiceCapabilities is a complexType.
///
struct _tad__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _tad__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the analytics device service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/analyticsdevice/wsdl":Capabilities.
    struct tad__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":DeleteAnalyticsEngineControl
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":DeleteAnalyticsEngineControl is a complexType.
///
struct _tad__DeleteAnalyticsEngineControl
{
/// <PRE><BLOCKQUOTE>
///   Token of the Analytics Engine Control configuration to be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":DeleteAnalyticsEngineControlResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":DeleteAnalyticsEngineControlResponse is a complexType.
///
struct _tad__DeleteAnalyticsEngineControlResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":CreateAnalyticsEngineInputs
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":CreateAnalyticsEngineInputs is a complexType.
///
struct _tad__CreateAnalyticsEngineInputs
{
/// <PRE><BLOCKQUOTE>
///   Settings of the configurations to be created.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AnalyticsEngineInput* is 1..unbounded.
   $int                                  __sizeConfiguration            1;
/// Array struct tt__AnalyticsEngineInput* of size 1..unbounded.
    struct tt__AnalyticsEngineInput*     Configuration                  1;
/// Size of array of enum xsd__boolean* is 1..unbounded.
   $int                                  __sizeForcePersistence         1;
/// Array enum xsd__boolean* of size 1..unbounded.
    enum xsd__boolean*                   ForcePersistence               1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":CreateAnalyticsEngineInputsResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":CreateAnalyticsEngineInputsResponse is a complexType.
///
struct _tad__CreateAnalyticsEngineInputsResponse
{
/// <PRE><BLOCKQUOTE>
///   Configurations containing token generated.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AnalyticsEngineInput* is 1..unbounded.
   $int                                  __sizeConfiguration            1;
/// Array struct tt__AnalyticsEngineInput* of size 1..unbounded.
    struct tt__AnalyticsEngineInput*     Configuration                  1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":CreateAnalyticsEngineControl
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":CreateAnalyticsEngineControl is a complexType.
///
struct _tad__CreateAnalyticsEngineControl
{
/// <PRE><BLOCKQUOTE>
///   Settings of the Analytics Engine Control configuration to be created. Mode shall be set to "idle".
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineControl.
    struct tt__AnalyticsEngineControl*   Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":CreateAnalyticsEngineControlResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":CreateAnalyticsEngineControlResponse is a complexType.
///
struct _tad__CreateAnalyticsEngineControlResponse
{
/// <PRE><BLOCKQUOTE>
///   Configuration containing token generated.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AnalyticsEngineInput* is 1..unbounded.
   $int                                  __sizeConfiguration            1;
/// Array struct tt__AnalyticsEngineInput* of size 1..unbounded.
    struct tt__AnalyticsEngineInput*     Configuration                  1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":SetAnalyticsEngineControl
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":SetAnalyticsEngineControl is a complexType.
///
struct _tad__SetAnalyticsEngineControl
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified Analytics Engine Control configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineControl.
    struct tt__AnalyticsEngineControl*   Configuration                  1;	///< Required element.
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":SetAnalyticsEngineControlResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":SetAnalyticsEngineControlResponse is a complexType.
///
struct _tad__SetAnalyticsEngineControlResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineControl
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineControl is a complexType.
///
struct _tad__GetAnalyticsEngineControl
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested AnalyticsEngineControl configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineControlResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineControlResponse is a complexType.
///
struct _tad__GetAnalyticsEngineControlResponse
{
/// <PRE><BLOCKQUOTE>
///   Configuration of the AnalyticsEngineControl.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineControl.
    struct tt__AnalyticsEngineControl*   Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineControls
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineControls is a complexType.
///
struct _tad__GetAnalyticsEngineControls
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineControlsResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineControlsResponse is a complexType.
///
struct _tad__GetAnalyticsEngineControlsResponse
{
/// <PRE><BLOCKQUOTE>
///   List of available AnalyticsEngineControl configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AnalyticsEngineControl* is 1..unbounded.
   $int                                  __sizeAnalyticsEngineControls  1;
/// Array struct tt__AnalyticsEngineControl* of size 1..unbounded.
    struct tt__AnalyticsEngineControl*   AnalyticsEngineControls        1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngine
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngine is a complexType.
///
struct _tad__GetAnalyticsEngine
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested AnalyticsEngine configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineResponse is a complexType.
///
struct _tad__GetAnalyticsEngineResponse
{
/// <PRE><BLOCKQUOTE>
///   Configuration of the AnalyticsEngine.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngine.
    struct tt__AnalyticsEngine*          Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngines
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngines is a complexType.
///
struct _tad__GetAnalyticsEngines
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEnginesResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEnginesResponse is a complexType.
///
struct _tad__GetAnalyticsEnginesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of available AnalyticsEngine configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AnalyticsEngine* is 1..unbounded.
   $int                                  __sizeConfiguration            1;
/// Array struct tt__AnalyticsEngine* of size 1..unbounded.
    struct tt__AnalyticsEngine*          Configuration                  1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":SetVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":SetVideoAnalyticsConfiguration is a complexType.
///
struct _tad__SetVideoAnalyticsConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified video analytics configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  Configuration                  1;	///< Required element.
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":SetVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":SetVideoAnalyticsConfigurationResponse is a complexType.
///
struct _tad__SetVideoAnalyticsConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":SetAnalyticsEngineInput
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":SetAnalyticsEngineInput is a complexType.
///
struct _tad__SetAnalyticsEngineInput
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified Analytics Engine Input configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineInput.
    struct tt__AnalyticsEngineInput*     Configuration                  1;	///< Required element.
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":SetAnalyticsEngineInputResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":SetAnalyticsEngineInputResponse is a complexType.
///
struct _tad__SetAnalyticsEngineInputResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineInput
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineInput is a complexType.
///
struct _tad__GetAnalyticsEngineInput
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested AnalyticsEngineInput configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineInputResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineInputResponse is a complexType.
///
struct _tad__GetAnalyticsEngineInputResponse
{
/// <PRE><BLOCKQUOTE>
///   Configuration of the AnalyticsEngineInput.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineInput.
    struct tt__AnalyticsEngineInput*     Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineInputs
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineInputs is a complexType.
///
struct _tad__GetAnalyticsEngineInputs
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineInputsResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsEngineInputsResponse is a complexType.
///
struct _tad__GetAnalyticsEngineInputsResponse
{
/// <PRE><BLOCKQUOTE>
///   List of available AnalyticsEngineInput configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AnalyticsEngineInput* is 1..unbounded.
   $int                                  __sizeConfiguration            1;
/// Array struct tt__AnalyticsEngineInput* of size 1..unbounded.
    struct tt__AnalyticsEngineInput*     Configuration                  1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsDeviceStreamUri
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsDeviceStreamUri is a complexType.
///
struct _tad__GetAnalyticsDeviceStreamUri
{
/// <PRE><BLOCKQUOTE>
///   Configuration of the URI requested.
/// </BLOCKQUOTE></PRE>
/// Element "StreamSetup" of XSD type "http://www.onvif.org/ver10/schema":StreamSetup.
    struct tt__StreamSetup*              StreamSetup                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of the AnalyticsEngineControl whose URI is requested.
/// </BLOCKQUOTE></PRE>
/// Element "AnalyticsEngineControlToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AnalyticsEngineControlToken    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsDeviceStreamUriResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsDeviceStreamUriResponse is a complexType.
///
struct _tad__GetAnalyticsDeviceStreamUriResponse
{
/// <PRE><BLOCKQUOTE>
///   Streaming URI.
/// </BLOCKQUOTE></PRE>
/// Element "Uri" of XSD type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetVideoAnalyticsConfiguration is a complexType.
///
struct _tad__GetVideoAnalyticsConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the VideoAnalyticsConfiguration requested.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetVideoAnalyticsConfigurationResponse is a complexType.
///
struct _tad__GetVideoAnalyticsConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Settings of the VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":DeleteAnalyticsEngineInputs
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":DeleteAnalyticsEngineInputs is a complexType.
///
struct _tad__DeleteAnalyticsEngineInputs
{
/// <PRE><BLOCKQUOTE>
///   LIst of tokens of Analytics Engine Input configurations to be deleted.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeConfigurationToken       1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  ConfigurationToken             1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":DeleteAnalyticsEngineInputsResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":DeleteAnalyticsEngineInputsResponse is a complexType.
///
struct _tad__DeleteAnalyticsEngineInputsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsState
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsState is a complexType.
///
struct _tad__GetAnalyticsState
{
/// <PRE><BLOCKQUOTE>
///   Token of the AnalyticsEngineControl whose state information is requested.
/// </BLOCKQUOTE></PRE>
/// Element "AnalyticsEngineControlToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AnalyticsEngineControlToken    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsStateResponse
/// @brief "http://www.onvif.org/ver10/analyticsdevice/wsdl":GetAnalyticsStateResponse is a complexType.
///
struct _tad__GetAnalyticsStateResponse
{
/// <PRE><BLOCKQUOTE>
///   Current status information.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsStateInformation.
    struct tt__AnalyticsStateInformation*  State                          1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/actionengine/wsdl                             *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":ActionConfigDescription is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describes the configuration parameters of an action.
/// </BLOCKQUOTE></PRE>
struct ns1__ActionConfigDescription
{
/// <PRE><BLOCKQUOTE>
///   Action configuration parameter descriptions
/// </BLOCKQUOTE></PRE>
/// Element "ParameterDescription" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      ParameterDescription           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Action type name
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:QName.
   @_QName                               Name                           1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":SupportedActions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   SupportedActions data structure lists the available action types that service provider supports. For each action type, data structure contains the action configuration parameters.
/// </BLOCKQUOTE></PRE>
struct ns1__SupportedActions
{
/// <PRE><BLOCKQUOTE>
///   Lists the location of all schemas that are referenced in the supported actions. If the action descriptions reference data types in the ONVIF schema file,the ONVIF schema file MUST be explicitly listed.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeActionContentSchemaLocation 0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         ActionContentSchemaLocation    0;
/// <PRE><BLOCKQUOTE>
///   List of actions supported by Action Engine Service provider.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns1__ActionConfigDescription* is 0..unbounded.
   $int                                  __sizeActionDescription        0;
/// Array struct ns1__ActionConfigDescription* of size 0..unbounded.
    struct ns1__ActionConfigDescription*  ActionDescription              0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":SupportedActionsExtension.
    struct ns1__SupportedActionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":SupportedActionsExtension is a complexType.
///
struct ns1__SupportedActionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":ActionEngineCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Action Engine Capabilities data structure contains the maximum number of supported actions and number of actions in use for generic as well as specific action types
/// </BLOCKQUOTE></PRE>
struct ns1__ActionEngineCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Limits for each action type
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns1__ActionTypeLimits* is 0..unbounded.
   $int                                  __sizeActionCapabilities       0;
/// Array struct ns1__ActionTypeLimits* of size 0..unbounded.
    struct ns1__ActionTypeLimits*        ActionCapabilities             0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":ActionEngineCapabilitiesExtension.
    struct ns1__ActionEngineCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of trigger configurations that the service provider can concurrently support
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumTriggers" of XSD type xs:positiveInteger.
   @xsd__positiveInteger                 MaximumTriggers                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum number of actions that the service provider can concurrently support
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumActions" of XSD type xs:positiveInteger.
   @xsd__positiveInteger                 MaximumActions                 0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":ActionEngineCapabilitiesExtension is a complexType.
///
struct ns1__ActionEngineCapabilitiesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":ActionTypeLimits is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   ActionTypeLimits data structure contains maximum and current usage information for a specific action type in the service provider
/// </BLOCKQUOTE></PRE>
struct ns1__ActionTypeLimits
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Action Type
/// </BLOCKQUOTE></PRE>
/// Attribute "Type" of XSD type xs:QName.
   @_QName                               Type                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   For the specific action type, the maximum number of actions that could be concurrently supported by the service provider
/// </BLOCKQUOTE></PRE>
/// Attribute "Maximum" of XSD type xs:positiveInteger.
   @xsd__positiveInteger                 Maximum                        1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   For the specific action type, the number of actions in use by the service provider
/// </BLOCKQUOTE></PRE>
/// Attribute "InUse" of XSD type xs:nonNegativeInteger.
   @xsd__nonNegativeInteger              InUse                          0;	///< Default attribute value="0".
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":ActionConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Action Configuration data type contains the configuration settings of action configuration parameters, service requester given action Name, and service provider supported action type value
/// </BLOCKQUOTE></PRE>
struct ns1__ActionConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Action configuration parameter settings.
/// </BLOCKQUOTE></PRE>
/// Element "Parameters" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Parameters                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   User given name.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Denotes the action type.
/// </BLOCKQUOTE></PRE>
/// Attribute "Type" of XSD type xs:QName.
   @_QName                               Type                           1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":Action is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Action data type contains the configuration settings of one action instance and service provider assigned unique identifier for this action configuration.
/// </BLOCKQUOTE></PRE>
struct ns1__Action
{
/// <PRE><BLOCKQUOTE>
///   Action configuration contains action type, user given action name, and configuratin parameter settings.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":ActionConfiguration.
    struct ns1__ActionConfiguration*     Configuration                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Unique Action identifier that service provider assigned to the action configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   Token                          1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":ActionTriggerConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Action Trigger configuration data type contains mandatory Topic Expression (Section Topic Filter in [Core Specification]), optional Message content expression (Section Message Content Filter in [Core Specification]), and set of actions to be triggered.
/// </BLOCKQUOTE></PRE>
struct ns1__ActionTriggerConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Topic expression, for example, to trigger only for relays. Trigger based on event topic.
/// </BLOCKQUOTE></PRE>
/// Element "TopicExpression" of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    struct wsnt__TopicExpressionType*    TopicExpression                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Content expression, for example, to trigger only when the relay value is on. Trigger based on content data in event.
/// </BLOCKQUOTE></PRE>
/// Element "ContentExpression" of XSD type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
    struct wsnt__QueryExpressionType*    ContentExpression              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Reference to actions to be triggered when the conditions are satisfied.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 0..unbounded.
   $int                                  __sizeActionToken              0;
/// Array tt__ReferenceToken* of size 0..unbounded.
    tt__ReferenceToken*                  ActionToken                    0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":ActionTriggerConfigurationExtension.
    struct ns1__ActionTriggerConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":ActionTriggerConfigurationExtension is a complexType.
///
struct ns1__ActionTriggerConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":ActionTrigger is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Action Trigger data type contains the service provider assigned unique identifier for the configuration and action trigger configuration data.
/// </BLOCKQUOTE></PRE>
struct ns1__ActionTrigger
{
/// <PRE><BLOCKQUOTE>
///   Action Trigger Configuration
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":ActionTriggerConfiguration.
    struct ns1__ActionTriggerConfiguration*  Configuration                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Unique Action Trigger identifier that service provider assigned to the action trigger configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   Token                          1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":onvif_action is a complexType.
///
struct ns1__onvif_USCOREaction
{
/// Size of array of struct ns1__ActionConfigDescription* is 1..unbounded.
   $int                                  __sizeActionDescription        1;
/// Array struct ns1__ActionConfigDescription* of size 1..unbounded.
    struct ns1__ActionConfigDescription*  ActionDescription              1;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":EMailServerConfiguration is a complexType.
///
struct ns1__EMailServerConfiguration
{
/// <PRE><BLOCKQUOTE>
///   SMTP EMail Server configuration
/// </BLOCKQUOTE></PRE>
/// Element "SMTPConfig" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":SMTPConfig.
    struct ns1__SMTPConfig*              SMTPConfig                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   POP EMail Server configuration
/// </BLOCKQUOTE></PRE>
/// Element "POPConfig" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":POPConfig.
    struct ns1__POPConfig*               POPConfig                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Credentials configuration
/// </BLOCKQUOTE></PRE>
/// Element "AuthenticationConfig" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":AuthenticationConfig.
    struct ns1__AuthenticationConfig*    AuthenticationConfig           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":SMTPConfig is a complexType.
///
struct ns1__SMTPConfig
{
/// <PRE><BLOCKQUOTE>
///   Destination SMTP Address configuration
/// </BLOCKQUOTE></PRE>
/// Element "HostAddress" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":HostAddress.
    struct ns1__HostAddress*             HostAddress                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.

/// </BLOCKQUOTE></PRE>
/// Attribute "portNo" of XSD type xs:positiveInteger.
   @xsd__positiveInteger                 portNo                         0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":POPConfig is a complexType.
///
struct ns1__POPConfig
{
/// <PRE><BLOCKQUOTE>
///   Destination POP Server Address configuration
/// </BLOCKQUOTE></PRE>
/// Element "HostAddress" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":HostAddress.
    struct ns1__HostAddress*             HostAddress                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":HostAddress is a complexType.
///
struct ns1__HostAddress
{
/// <PRE><BLOCKQUOTE>
///   IP Address
/// </BLOCKQUOTE></PRE>
/// Element "Value" of XSD type xs:string.
    char*                                Value                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   IP Address format type such as IPv4 or IPv6
/// </BLOCKQUOTE></PRE>
/// Attribute "formatType" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":AddressFormatType.
   @enum ns1__AddressFormatType          formatType                     1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":UserCredentials is a complexType.
///
struct ns1__UserCredentials
{
/// <PRE><BLOCKQUOTE>
///   Username
/// </BLOCKQUOTE></PRE>
/// Element "username" of XSD type xs:string.
    char*                                username                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Password
/// </BLOCKQUOTE></PRE>
/// Element "password" of XSD type xs:base64Binary.
    struct xsd__base64Binary*            password                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":UserCredentialsExtension.
    struct ns1__UserCredentialsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":UserCredentialsExtension is a complexType.
///
struct ns1__UserCredentialsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":AuthenticationConfig is a complexType.
///
struct ns1__AuthenticationConfig
{
/// <PRE><BLOCKQUOTE>
///   Username-password
/// </BLOCKQUOTE></PRE>
/// Element "User" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":UserCredentials.
    struct ns1__UserCredentials*         User                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Email server authentication mode
/// </BLOCKQUOTE></PRE>
/// Attribute "mode" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":EMailAuthenticationMode.
   @enum ns1__EMailAuthenticationMode    mode                           1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":EMailReceiverConfiguration is a complexType.
///
struct ns1__EMailReceiverConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Configuration for E-mail TO
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeTO                       1;
/// Array char** of size 1..unbounded.
    char**                               TO                             1;
/// <PRE><BLOCKQUOTE>
///   Configuration for E-mail CC
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 0..unbounded.
   $int                                  __sizeCC                       0;
/// Array char** of size 0..unbounded.
    char**                               CC                             0;

/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":EMailReceiverConfigurationExtension.
    struct ns1__EMailReceiverConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":EMailReceiverConfigurationExtension is a complexType.
///
struct ns1__EMailReceiverConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":EMailAttachmentConfiguration is a complexType.
///
struct ns1__EMailAttachmentConfiguration
{

/// </BLOCKQUOTE></PRE>
/// Element "FileName" of XSD type xs:string.
    char*                                FileName                       0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "doSuffix" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":FileSuffixType.
    enum ns1__FileSuffixType*            doSuffix                       0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":EMailAttachmentConfigurationExtension.
    struct ns1__EMailAttachmentConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":EMailAttachmentConfigurationExtension is a complexType.
///
struct ns1__EMailAttachmentConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":EMailBodyTextConfiguration is a complexType.
///
struct ns1__EMailBodyTextConfiguration
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Whether content of E-mail message contains event data
/// </BLOCKQUOTE></PRE>
/// Attribute "includeEvent" of XSD type xs:boolean.
   @enum xsd__boolean*                   includeEvent                   0;	///< Optional attribute.

/// </BLOCKQUOTE></PRE>
/// Attribute "type" of XSD type xs:string.
   @char*                                type                           0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":MediaSource is a complexType.
///
struct ns1__MediaSource
{
/// <PRE><BLOCKQUOTE>
///   MediaSource profile reference token
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":HttpHostConfigurations is a complexType.
///
struct ns1__HttpHostConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Destination HTTP Server configuration
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns1__HttpDestinationConfiguration* is 1..unbounded.
   $int                                  __sizeHttpDestination          1;
/// Array struct ns1__HttpDestinationConfiguration* of size 1..unbounded.
    struct ns1__HttpDestinationConfiguration*  HttpDestination                1;

/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":HttpHostConfigurationsExtension.
    struct ns1__HttpHostConfigurationsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":HttpHostConfigurationsExtension is a complexType.
///
struct ns1__HttpHostConfigurationsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":HttpDestinationConfiguration is a complexType.
///
struct ns1__HttpDestinationConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Destination HTTP Server address configuration
/// </BLOCKQUOTE></PRE>
/// Element "HostAddress" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":HttpHostAddress.
    struct ns1__HttpHostAddress*         HostAddress                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   User Credentials configuration for destination HTTP Server
/// </BLOCKQUOTE></PRE>
/// Element "HttpAuthentication" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":HttpAuthenticationConfiguration.
    struct ns1__HttpAuthenticationConfiguration*  HttpAuthentication             0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":HttpDestinationConfigurationExtension.
    struct ns1__HttpDestinationConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   URI for POST Message destination
/// </BLOCKQUOTE></PRE>
/// Attribute "uri" of XSD type xs:string.
   @char*                                uri                            0 = "/";	///< Default attribute value="/".
/// <PRE><BLOCKQUOTE>
///   HTTP/HTTPS protocol selection (default is http)
/// </BLOCKQUOTE></PRE>
/// Attribute "protocol" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":HttpProtocolType.
   @enum ns1__HttpProtocolType           protocol                       0 = ns1__HttpProtocolType__http;	///< Default attribute value="http".
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":HttpDestinationConfigurationExtension is a complexType.
///
struct ns1__HttpDestinationConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":HttpAuthenticationConfiguration is a complexType.
///
struct ns1__HttpAuthenticationConfiguration
{
/// <PRE><BLOCKQUOTE>
///   User credentials
/// </BLOCKQUOTE></PRE>
/// Element "User" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":UserCredentials.
    struct ns1__UserCredentials*         User                           0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":HttpAuthenticationConfigurationExtension.
    struct ns1__HttpAuthenticationConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   HTTP Authentication Method
/// </BLOCKQUOTE></PRE>
/// Attribute "method" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":HttpAuthenticationMethodType.
   @enum ns1__HttpAuthenticationMethodType  method                         0 = ns1__HttpAuthenticationMethodType__none;	///< Default attribute value="none".
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":HttpAuthenticationConfigurationExtension is a complexType.
///
struct ns1__HttpAuthenticationConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":HttpHostAddress is a complexType.
///
struct ns1__HttpHostAddress
{
/// <PRE><BLOCKQUOTE>
///   Destination HTTP Server IP Address
/// </BLOCKQUOTE></PRE>
/// Element "Value" of XSD type xs:string.
    char*                                Value                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   IPv4 or IPv6
/// </BLOCKQUOTE></PRE>
/// Attribute "formatType" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":AddressFormatType.
   @enum ns1__AddressFormatType          formatType                     1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Port Number if different from 80
/// </BLOCKQUOTE></PRE>
/// Attribute "portNo" of XSD type xs:integer.
   @xsd__integer                         portNo                         0;	///< Default attribute value="80".
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":PostContentConfiguration is a complexType.
///
struct ns1__PostContentConfiguration
{
/// <PRE><BLOCKQUOTE>
///   MediaSource reference when the media is attached to POST message
/// </BLOCKQUOTE></PRE>
/// Element "MediaReference" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":MediaSource.
    struct ns1__MediaSource*             MediaReference                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Configuration for POST Message content
/// </BLOCKQUOTE></PRE>
/// Element "PostBody" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":PostBodyConfiguration.
    struct ns1__PostBodyConfiguration*   PostBody                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":PostBodyConfiguration is a complexType.
///
struct ns1__PostBodyConfiguration
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.

/// </BLOCKQUOTE></PRE>
/// Attribute "formData" of XSD type xs:string.
   @char*                                formData                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Whether include event into POST message
/// </BLOCKQUOTE></PRE>
/// Attribute "includeEvent" of XSD type xs:boolean.
   @enum xsd__boolean*                   includeEvent                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Whether attach media into POST message
/// </BLOCKQUOTE></PRE>
/// Attribute "includeMedia" of XSD type xs:boolean.
   @enum xsd__boolean*                   includeMedia                   0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":FtpHostConfigurations is a complexType.
///
struct ns1__FtpHostConfigurations
{
/// <PRE><BLOCKQUOTE>
///   FTP Action destination configuration
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns1__FtpDestinationConfiguration* is 1..unbounded.
   $int                                  __sizeFtpDestination           1;
/// Array struct ns1__FtpDestinationConfiguration* of size 1..unbounded.
    struct ns1__FtpDestinationConfiguration*  FtpDestination                 1;

/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":FtpHostConfigurationsExtension.
    struct ns1__FtpHostConfigurationsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":FtpHostConfigurationsExtension is a complexType.
///
struct ns1__FtpHostConfigurationsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":FtpDestinationConfiguration is a complexType.
///
struct ns1__FtpDestinationConfiguration
{
/// <PRE><BLOCKQUOTE>
///   FTP Server IP Address
/// </BLOCKQUOTE></PRE>
/// Element "HostAddress" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":FtpHostAddress.
    struct ns1__FtpHostAddress*          HostAddress                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Upload Directory Path
/// </BLOCKQUOTE></PRE>
/// Element "UploadPath" of XSD type xs:string.
    char*                                UploadPath                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   User credentials confguration for target FTP Server
/// </BLOCKQUOTE></PRE>
/// Element "FtpAuthentication" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":FtpAuthenticationConfiguration.
    struct ns1__FtpAuthenticationConfiguration*  FtpAuthentication              1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":FtpDestinationConfigurationExtension.
    struct ns1__FtpDestinationConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":FtpDestinationConfigurationExtension is a complexType.
///
struct ns1__FtpDestinationConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":FtpAuthenticationConfiguration is a complexType.
///
struct ns1__FtpAuthenticationConfiguration
{
/// <PRE><BLOCKQUOTE>
///   User Credentials
/// </BLOCKQUOTE></PRE>
/// Element "User" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":UserCredentials.
    struct ns1__UserCredentials*         User                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":FtpAuthenticationConfigurationExtension.
    struct ns1__FtpAuthenticationConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":FtpAuthenticationConfigurationExtension is a complexType.
///
struct ns1__FtpAuthenticationConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":FtpHostAddress is a complexType.
///
struct ns1__FtpHostAddress
{
/// <PRE><BLOCKQUOTE>
///   FTP Server IP Address
/// </BLOCKQUOTE></PRE>
/// Element "Value" of XSD type xs:string.
    char*                                Value                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   IPv4 or IPv6
/// </BLOCKQUOTE></PRE>
/// Attribute "formatType" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":AddressFormatType.
   @enum ns1__AddressFormatType          formatType                     1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Port Number
/// </BLOCKQUOTE></PRE>
/// Attribute "portNo" of XSD type xs:integer.
   @xsd__integer                         portNo                         0;	///< Default attribute value="21".
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":FtpContent is a complexType.
///
struct ns1__FtpContent
{

/// </BLOCKQUOTE></PRE>
/// Element "FtpContentConfig" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":FtpContentConfiguration.
    struct ns1__FtpContentConfiguration*  FtpContentConfig               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":FtpFileNameConfigurations is a complexType.
///
struct ns1__FtpFileNameConfigurations
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Name of file
/// </BLOCKQUOTE></PRE>
/// Attribute "file_name" of XSD type xs:string.
   @char*                                file_USCOREname                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Suffix of file
/// </BLOCKQUOTE></PRE>
/// Attribute "suffix" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":FileSuffixType.
   @enum ns1__FileSuffixType             suffix                         0 = ns1__FileSuffixType__none;	///< Default attribute value="none".
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":FtpContentConfiguration is a complexType.
///
struct ns1__FtpContentConfiguration
{
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_FtpContentConfiguration;	///< Union _ns1__union_FtpContentConfiguration selector: set to SOAP_UNION__ns1__union_FtpContentConfiguration_<fieldname>
    union _ns1__union_FtpContentConfiguration
    {
/// <PRE><BLOCKQUOTE>
///   Upload Images action configuration
/// </BLOCKQUOTE></PRE>
/// Element "UploadImages" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":FtpContentConfigurationUploadImages.
    struct ns1__FtpContentConfigurationUploadImages*  UploadImages                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Upload files action configuration
/// </BLOCKQUOTE></PRE>
/// Element "UploadFile" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":FtpContentConfigurationUploadFile.
    struct ns1__FtpContentConfigurationUploadFile*  UploadFile                     1;	///< Required element.
    }                                    union_FtpContentConfiguration ;
//  END OF CHOICE
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Type of FTP Upload action
/// </BLOCKQUOTE></PRE>
/// Attribute "Type" of XSD type xs:string.
   @char*                                Type                           1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":FtpContentConfigurationUploadImages is a complexType.
///
struct ns1__FtpContentConfigurationUploadImages
{
/// <PRE><BLOCKQUOTE>
///   Upload Image action; how long?
/// </BLOCKQUOTE></PRE>
/// Element "HowLong" of XSD type xs:duration.
    xsd__duration                        HowLong                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Upload Image action; sample interval?
/// </BLOCKQUOTE></PRE>
/// Element "SampleInterval" of XSD type xs:duration.
    xsd__duration                        SampleInterval                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Upload Image action; name of destination file
/// </BLOCKQUOTE></PRE>
/// Element "FileName" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":FtpFileNameConfigurations.
    struct ns1__FtpFileNameConfigurations*  FileName                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":FtpContentConfigurationUploadFile is a complexType.
///
struct ns1__FtpContentConfigurationUploadFile
{
/// <PRE><BLOCKQUOTE>
///   Name of source file
/// </BLOCKQUOTE></PRE>
/// Element "sourceFileName" of XSD type xs:string.
    char*                                sourceFileName                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Name of destination file
/// </BLOCKQUOTE></PRE>
/// Element "destinationFileName" of XSD type xs:string.
    char*                                destinationFileName            1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":SMSProviderConfiguration is a complexType.
///
struct ns1__SMSProviderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   SMS Provider's URL
/// </BLOCKQUOTE></PRE>
/// Element "ProviderURL" of XSD type xs:anyURI.
    xsd__anyURI                          ProviderURL                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Username and password
/// </BLOCKQUOTE></PRE>
/// Element "User" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":UserCredentials.
    struct ns1__UserCredentials*         User                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":SMSSenderConfiguration is a complexType.
///
struct ns1__SMSSenderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Sender's e-mail address
/// </BLOCKQUOTE></PRE>
/// Element "EMail" of XSD type xs:string.
    char*                                EMail                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":SMSMessage is a complexType.
///
struct ns1__SMSMessage
{
/// <PRE><BLOCKQUOTE>
///   Text Message
/// </BLOCKQUOTE></PRE>
/// Element "Text" of XSD type xs:string.
    char*                                Text                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":TriggeredRecordingConfiguration is a complexType.
///
struct ns1__TriggeredRecordingConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Length of recording time before the triggering event
/// </BLOCKQUOTE></PRE>
/// Element "PreRecordDuration" of XSD type xs:duration.
    xsd__duration                        PreRecordDuration              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Recording after alarm recording duration
/// </BLOCKQUOTE></PRE>
/// Element "PostRecordDuration" of XSD type xs:duration.
    xsd__duration                        PostRecordDuration             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Record duration
/// </BLOCKQUOTE></PRE>
/// Element "RecordDuration" of XSD type xs:duration.
    xsd__duration                        RecordDuration                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Recording frame rate
/// </BLOCKQUOTE></PRE>
/// Element "RecordFrameRate" of XSD type xs:positiveInteger.
    xsd__positiveInteger                 RecordFrameRate                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Whether Audio recording on/off
/// </BLOCKQUOTE></PRE>
/// Element "DoRecordAudio" of XSD type xs:boolean.
    enum xsd__boolean                    DoRecordAudio                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":RecordingActionConfiguration is a complexType.
///
struct ns1__RecordingActionConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Recording configuration
/// </BLOCKQUOTE></PRE>
/// Element "RecordConfig" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":TriggeredRecordingConfiguration.
    struct ns1__TriggeredRecordingConfiguration*  RecordConfig                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":GetSupportedActions
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":GetSupportedActions is a complexType.
///
struct _ns1__GetSupportedActions
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":GetSupportedActionsResponse
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":GetSupportedActionsResponse is a complexType.
///
struct _ns1__GetSupportedActionsResponse
{
/// <PRE><BLOCKQUOTE>
///   Array of supported Action types
/// </BLOCKQUOTE></PRE>
/// Element "SupportedActions" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":SupportedActions.
    struct ns1__SupportedActions*        SupportedActions               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":GetActions
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":GetActions is a complexType.
///
struct _ns1__GetActions
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":GetActionsResponse
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":GetActionsResponse is a complexType.
///
struct _ns1__GetActionsResponse
{
/// <PRE><BLOCKQUOTE>
///   Array of current Action configurations
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns1__Action* is 0..unbounded.
   $int                                  __sizeAction                   0;
/// Array struct ns1__Action* of size 0..unbounded.
    struct ns1__Action*                  Action                         0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":CreateActions
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":CreateActions is a complexType.
///
struct _ns1__CreateActions
{
/// <PRE><BLOCKQUOTE>
///   Array of Actions to be configured on service provider
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns1__ActionConfiguration* is 1..unbounded.
   $int                                  __sizeAction                   1;
/// Array struct ns1__ActionConfiguration* of size 1..unbounded.
    struct ns1__ActionConfiguration*     Action                         1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":CreateActionsResponse
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":CreateActionsResponse is a complexType.
///
struct _ns1__CreateActionsResponse
{
/// <PRE><BLOCKQUOTE>
///   Array of configured Actions with service provider assigned unique identifiers
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns1__Action* is 0..unbounded.
   $int                                  __sizeAction                   0;
/// Array struct ns1__Action* of size 0..unbounded.
    struct ns1__Action*                  Action                         0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":DeleteActions
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":DeleteActions is a complexType.
///
struct _ns1__DeleteActions
{
/// <PRE><BLOCKQUOTE>
///   Array of tokens referencing existing Action configurations to be removed
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  Token                          1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":DeleteActionsResponse
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":DeleteActionsResponse is a complexType.
///
struct _ns1__DeleteActionsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":ModifyActions
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":ModifyActions is a complexType.
///
struct _ns1__ModifyActions
{
/// <PRE><BLOCKQUOTE>
///   Array of Action configurations to update the existing action configurations
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns1__Action* is 1..unbounded.
   $int                                  __sizeAction                   1;
/// Array struct ns1__Action* of size 1..unbounded.
    struct ns1__Action*                  Action                         1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":ModifyActionsResponse
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":ModifyActionsResponse is a complexType.
///
struct _ns1__ModifyActionsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":GetServiceCapabilities is a complexType.
///
struct _ns1__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _ns1__GetServiceCapabilitiesResponse
{
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":ActionEngineCapabilities.
    struct ns1__ActionEngineCapabilities*  Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":GetActionTriggers
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":GetActionTriggers is a complexType.
///
struct _ns1__GetActionTriggers
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":GetActionTriggersResponse
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":GetActionTriggersResponse is a complexType.
///
struct _ns1__GetActionTriggersResponse
{
/// <PRE><BLOCKQUOTE>
///   Array of current Action Trigger configurations
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns1__ActionTrigger* is 0..unbounded.
   $int                                  __sizeActionTrigger            0;
/// Array struct ns1__ActionTrigger* of size 0..unbounded.
    struct ns1__ActionTrigger*           ActionTrigger                  0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":CreateActionTriggers
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":CreateActionTriggers is a complexType.
///
struct _ns1__CreateActionTriggers
{
/// <PRE><BLOCKQUOTE>
///   Action Triggers to be configured
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns1__ActionTriggerConfiguration* is 1..unbounded.
   $int                                  __sizeActionTrigger            1;
/// Array struct ns1__ActionTriggerConfiguration* of size 1..unbounded.
    struct ns1__ActionTriggerConfiguration*  ActionTrigger                  1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":CreateActionTriggersResponse
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":CreateActionTriggersResponse is a complexType.
///
struct _ns1__CreateActionTriggersResponse
{
/// <PRE><BLOCKQUOTE>
///   Returns configured Action Triggers with service provider assigned unique identifers
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns1__ActionTrigger* is 0..unbounded.
   $int                                  __sizeActionTrigger            0;
/// Array struct ns1__ActionTrigger* of size 0..unbounded.
    struct ns1__ActionTrigger*           ActionTrigger                  0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":ModifyActionTriggers
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":ModifyActionTriggers is a complexType.
///
struct _ns1__ModifyActionTriggers
{
/// <PRE><BLOCKQUOTE>
///   Array of Action Trigger configurations to be updated.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns1__ActionTrigger* is 1..unbounded.
   $int                                  __sizeActionTrigger            1;
/// Array struct ns1__ActionTrigger* of size 1..unbounded.
    struct ns1__ActionTrigger*           ActionTrigger                  1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":ModifyActionTriggersResponse
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":ModifyActionTriggersResponse is a complexType.
///
struct _ns1__ModifyActionTriggersResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":DeleteActionTriggers
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":DeleteActionTriggers is a complexType.
///
struct _ns1__DeleteActionTriggers
{
/// <PRE><BLOCKQUOTE>
///   Array of tokens referencing existing Action Trigger configurations to be removed
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  Token                          1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":DeleteActionTriggersResponse
/// @brief "http://www.onvif.org/ver10/actionengine/wsdl":DeleteActionTriggersResponse is a complexType.
///
struct _ns1__DeleteActionTriggersResponse
{
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/accesscontrol/wsdl                            *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":ServiceCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The service capabilities reflect optional functionality of a service.
///   The information is static and does not change during device operation.
///   The following capabilities are available:
/// </BLOCKQUOTE></PRE>
struct ns2__ServiceCapabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   The maximum number of entries returned by a single GetList request. The device shall never return more than this number of entities in a single response.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxLimit" of XSD type xs:unsignedInt.
   @unsigned int                         MaxLimit                       1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":AccessPointCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The AccessPoint capabilities reflect optional functionality of a particular physical entity.
///   Different AccessPoint instances may have different set of capabilities. This information may
///   change during device operation, e.g. if hardware settings are changed.
///   The following capabilities are available:
/// </BLOCKQUOTE></PRE>
struct ns2__AccessPointCapabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not this AccessPoint instance supports EnableAccessPoint and DisableAccessPoint commands.
/// </BLOCKQUOTE></PRE>
/// Attribute "DisableAccessPoint" of XSD type xs:boolean.
   @enum xsd__boolean                    DisableAccessPoint             1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not this AccessPoint instance supports generation of duress events.
/// </BLOCKQUOTE></PRE>
/// Attribute "Duress" of XSD type xs:boolean.
   @enum xsd__boolean*                   Duress                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not this AccessPoint has a REX switch or other input that allows anonymous access.
/// </BLOCKQUOTE></PRE>
/// Attribute "AnonymousAccess" of XSD type xs:boolean.
   @enum xsd__boolean*                   AnonymousAccess                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not this AccessPoint instance supports generation of AccessTaken and AccessNotTaken events. If AnonymousAccess and AccessTaken are both true, it indicates that the Anonymous versions of AccessTaken and AccessNotTaken are supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "AccessTaken" of XSD type xs:boolean.
   @enum xsd__boolean*                   AccessTaken                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not this AccessPoint instance supports the ExternalAuthorization operation and the generation of Request events. If AnonymousAccess and ExternalAuthorization are both true, it indicates that the Anonymous version is supported as well.
/// </BLOCKQUOTE></PRE>
/// Attribute "ExternalAuthorization" of XSD type xs:boolean.
   @enum xsd__boolean*                   ExternalAuthorization          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":AccessPointState is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The AccessPointState contains state information for an AccessPoint.
///   An ONVIF compliant device shall provide the following fields for each AccessPoint instance:
/// </BLOCKQUOTE></PRE>
struct ns2__AccessPointState
{
/// <PRE><BLOCKQUOTE>
///   Indicates that the AccessPoint is enabled. By default this field value shall be True, if the DisableAccessPoint capabilities is not supported.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":GetServiceCapabilities is a complexType.
///
struct _ns2__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _ns2__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capability response message contains the requested Access Control service capabilities using a hierarchical XML capability structure.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/accesscontrol/wsdl":ServiceCapabilities.
    struct ns2__ServiceCapabilities*     Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAccessPointInfoList
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAccessPointInfoList is a complexType.
///
struct _ns2__GetAccessPointInfoList
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of entries to return. If not specified, less than one or higher than what the device supports, the number of items is determined by the device.
/// </BLOCKQUOTE></PRE>
/// Element "Limit" of XSD type xs:int.
    int*                                 Limit                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Start returning entries from this start reference. If not specified, entries shall start from the beginning of the dataset.
/// </BLOCKQUOTE></PRE>
/// Element "StartReference" of XSD type xs:string.
    char*                                StartReference                 0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAccessPointInfoListResponse
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAccessPointInfoListResponse is a complexType.
///
struct _ns2__GetAccessPointInfoListResponse
{
/// <PRE><BLOCKQUOTE>
///   StartReference to use in next call to get the following items. If absent, no more items to get.
/// </BLOCKQUOTE></PRE>
/// Element "NextStartReference" of XSD type xs:string.
    char*                                NextStartReference             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of AccessPointInfo items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns2__AccessPointInfo* is 0..unbounded.
   $int                                  __sizeAccessPointInfo          0;
/// Array struct ns2__AccessPointInfo* of size 0..unbounded.
    struct ns2__AccessPointInfo*         AccessPointInfo                0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAccessPointInfo
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAccessPointInfo is a complexType.
///
struct _ns2__GetAccessPointInfo
{
/// <PRE><BLOCKQUOTE>
///   Tokens of AccessPointInfo items to get.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns3__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array ns3__ReferenceToken* of size 1..unbounded.
    ns3__ReferenceToken*                 Token                          1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAccessPointInfoResponse
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAccessPointInfoResponse is a complexType.
///
struct _ns2__GetAccessPointInfoResponse
{
/// <PRE><BLOCKQUOTE>
///   List of AccessPointInfo items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns2__AccessPointInfo* is 0..unbounded.
   $int                                  __sizeAccessPointInfo          0;
/// Array struct ns2__AccessPointInfo* of size 0..unbounded.
    struct ns2__AccessPointInfo*         AccessPointInfo                0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAreaInfoList
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAreaInfoList is a complexType.
///
struct _ns2__GetAreaInfoList
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of entries to return. If not specified, less than one or higher than what the device supports, the number of items is determined by the device.
/// </BLOCKQUOTE></PRE>
/// Element "Limit" of XSD type xs:int.
    int*                                 Limit                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Start returning entries from this start reference. If not specified, entries shall start from the beginning of the dataset.
/// </BLOCKQUOTE></PRE>
/// Element "StartReference" of XSD type xs:string.
    char*                                StartReference                 0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAreaInfoListResponse
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAreaInfoListResponse is a complexType.
///
struct _ns2__GetAreaInfoListResponse
{
/// <PRE><BLOCKQUOTE>
///   StartReference to use in next call to get the following items. If absent, no more items to get.
/// </BLOCKQUOTE></PRE>
/// Element "NextStartReference" of XSD type xs:string.
    char*                                NextStartReference             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of AreaInfo items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns2__AreaInfo* is 0..unbounded.
   $int                                  __sizeAreaInfo                 0;
/// Array struct ns2__AreaInfo* of size 0..unbounded.
    struct ns2__AreaInfo*                AreaInfo                       0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAreaInfo
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAreaInfo is a complexType.
///
struct _ns2__GetAreaInfo
{
/// <PRE><BLOCKQUOTE>
///   Tokens of AreaInfo items to get.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns3__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array ns3__ReferenceToken* of size 1..unbounded.
    ns3__ReferenceToken*                 Token                          1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAreaInfoResponse
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAreaInfoResponse is a complexType.
///
struct _ns2__GetAreaInfoResponse
{
/// <PRE><BLOCKQUOTE>
///   List of AreaInfo items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns2__AreaInfo* is 0..unbounded.
   $int                                  __sizeAreaInfo                 0;
/// Array struct ns2__AreaInfo* of size 0..unbounded.
    struct ns2__AreaInfo*                AreaInfo                       0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAccessPointState
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAccessPointState is a complexType.
///
struct _ns2__GetAccessPointState
{
/// <PRE><BLOCKQUOTE>
///   Token of AccessPoint instance to get AccessPointState for.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAccessPointStateResponse
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":GetAccessPointStateResponse is a complexType.
///
struct _ns2__GetAccessPointStateResponse
{
/// <PRE><BLOCKQUOTE>
///   AccessPointState item.
/// </BLOCKQUOTE></PRE>
/// Element "AccessPointState" of XSD type "http://www.onvif.org/ver10/accesscontrol/wsdl":AccessPointState.
    struct ns2__AccessPointState*        AccessPointState               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":EnableAccessPoint
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":EnableAccessPoint is a complexType.
///
struct _ns2__EnableAccessPoint
{
/// <PRE><BLOCKQUOTE>
///   Token of the AccessPoint instance to enable.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":EnableAccessPointResponse
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":EnableAccessPointResponse is a complexType.
///
struct _ns2__EnableAccessPointResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":DisableAccessPoint
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":DisableAccessPoint is a complexType.
///
struct _ns2__DisableAccessPoint
{
/// <PRE><BLOCKQUOTE>
///   Token of the AccessPoint instance to disable.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":DisableAccessPointResponse
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":DisableAccessPointResponse is a complexType.
///
struct _ns2__DisableAccessPointResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":ExternalAuthorization
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":ExternalAuthorization is a complexType.
///
struct _ns2__ExternalAuthorization
{
/// <PRE><BLOCKQUOTE>
///   Token of the Access Point instance.
/// </BLOCKQUOTE></PRE>
/// Element "AccessPointToken" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  AccessPointToken               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional token of the Credential involved.
/// </BLOCKQUOTE></PRE>
/// Element "CredentialToken" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  CredentialToken                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional reason for decision.
/// </BLOCKQUOTE></PRE>
/// Element "Reason" of XSD type xs:string.
    char*                                Reason                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Decision - Granted or Denied.
/// </BLOCKQUOTE></PRE>
/// Element "Decision" of XSD type "http://www.onvif.org/ver10/accesscontrol/wsdl":Decision.
    enum ns2__Decision                   Decision                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accesscontrol/wsdl":ExternalAuthorizationResponse
/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":ExternalAuthorizationResponse is a complexType.
///
struct _ns2__ExternalAuthorizationResponse
{
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/pacs                                          *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/pacs":DataEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   General datastructure referenced by a token.
///   Should be used as extension base.
/// </BLOCKQUOTE></PRE>
struct ns3__DataEntity
{
/// <PRE><BLOCKQUOTE>
///   A service-unique identifier of the item.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns3__ReferenceToken                  token                          1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/pacs":Attribute is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Attributes contains a Name and an optional Value and type.
/// </BLOCKQUOTE></PRE>
struct ns3__Attribute
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Name of attribute. Key names starting with "ONVIF" (any case) are reserved for ONVIF
///   use.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Value of attribute
/// </BLOCKQUOTE></PRE>
/// Attribute "Value" of XSD type xs:string.
   @char*                                Value                          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/doorcontrol/wsdl                              *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":ServiceCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   ServiceCapabilities structure reflects optional functionality of a service.
///   The information is static and does not change during device operation.
///   The following capabilities are available:
/// </BLOCKQUOTE></PRE>
struct ns4__ServiceCapabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   The maximum number of entries returned by a single Get<Entity>List or Get<Entity> request. The device shall never return more than this number of entities in a single response.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxLimit" of XSD type xs:unsignedInt.
   @unsigned int                         MaxLimit                       1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   DoorCapabilities reflect optional functionality of a particular physical entity.
///   Different door instances may have different set of capabilities.
///   This information may change during device operation, e.g. if hardware settings are changed.
///   The following capabilities are available:
/// </BLOCKQUOTE></PRE>
struct ns4__DoorCapabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not this Door instance supports AccessDoor command to perform momentary access.
/// </BLOCKQUOTE></PRE>
/// Attribute "Access" of XSD type xs:boolean.
   @enum xsd__boolean*                   Access                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that this Door instance supports overriding configured timing in the AccessDoor command.
/// </BLOCKQUOTE></PRE>
/// Attribute "AccessTimingOverride" of XSD type xs:boolean.
   @enum xsd__boolean*                   AccessTimingOverride           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that this Door instance supports LockDoor command to lock the door.
/// </BLOCKQUOTE></PRE>
/// Attribute "Lock" of XSD type xs:boolean.
   @enum xsd__boolean*                   Lock                           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that this Door instance supports UnlockDoor command to unlock the door.
/// </BLOCKQUOTE></PRE>
/// Attribute "Unlock" of XSD type xs:boolean.
   @enum xsd__boolean*                   Unlock                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that this Door instance supports BlockDoor command to block the door.
/// </BLOCKQUOTE></PRE>
/// Attribute "Block" of XSD type xs:boolean.
   @enum xsd__boolean*                   Block                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that this Door instance supports DoubleLockDoor command to lock multiple locks on the door.
/// </BLOCKQUOTE></PRE>
/// Attribute "DoubleLock" of XSD type xs:boolean.
   @enum xsd__boolean*                   DoubleLock                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that this Door instance supports LockDown (and LockDownRelease) commands to lock the door and put it in LockedDown mode.
/// </BLOCKQUOTE></PRE>
/// Attribute "LockDown" of XSD type xs:boolean.
   @enum xsd__boolean*                   LockDown                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that this Door instance supports LockOpen (and LockOpenRelease) commands to unlock the door and put it in LockedOpen mode.
/// </BLOCKQUOTE></PRE>
/// Attribute "LockOpen" of XSD type xs:boolean.
   @enum xsd__boolean*                   LockOpen                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that this Door instance has a DoorMonitor and supports the DoorPhysicalState event.
/// </BLOCKQUOTE></PRE>
/// Attribute "DoorMonitor" of XSD type xs:boolean.
   @enum xsd__boolean*                   DoorMonitor                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that this Door instance has a LockMonitor and supports the LockPhysicalState event.
/// </BLOCKQUOTE></PRE>
/// Attribute "LockMonitor" of XSD type xs:boolean.
   @enum xsd__boolean*                   LockMonitor                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that this Door instance has a DoubleLockMonitor and supports the DoubleLockPhysicalState event.
/// </BLOCKQUOTE></PRE>
/// Attribute "DoubleLockMonitor" of XSD type xs:boolean.
   @enum xsd__boolean*                   DoubleLockMonitor              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that this Door instance supports door alarm and the DoorAlarm event.
/// </BLOCKQUOTE></PRE>
/// Attribute "Alarm" of XSD type xs:boolean.
   @enum xsd__boolean*                   Alarm                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that this Door instance has a Tamper detector and supports the DoorTamper event.
/// </BLOCKQUOTE></PRE>
/// Attribute "Tamper" of XSD type xs:boolean.
   @enum xsd__boolean*                   Tamper                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that this Door instance supports door fault and the DoorFault event.
/// </BLOCKQUOTE></PRE>
/// Attribute "Fault" of XSD type xs:boolean.
   @enum xsd__boolean*                   Fault                          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorState is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The DoorState structure contains current aggregate runtime status of Door.
/// </BLOCKQUOTE></PRE>
struct ns4__DoorState
{
/// <PRE><BLOCKQUOTE>
///   Physical state of Door; it is of type DoorPhysicalState. A device that signals support for DoorMonitor capability for a particular door instance shall provide this field.
/// </BLOCKQUOTE></PRE>
/// Element "DoorPhysicalState" of XSD type "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorPhysicalState.
    enum ns4__DoorPhysicalState*         DoorPhysicalState              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Physical state of the Lock; it is of type LockPhysicalState. A device that signals support for LockMonitor capability for a particular door instance shall provide this field.
/// </BLOCKQUOTE></PRE>
/// Element "LockPhysicalState" of XSD type "http://www.onvif.org/ver10/doorcontrol/wsdl":LockPhysicalState.
    enum ns4__LockPhysicalState*         LockPhysicalState              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Physical state of the DoubleLock; it is of type LockPhysicalState. A device that signals support for DoubleLockMonitor capability for a particular door instance shall provide this field.
/// </BLOCKQUOTE></PRE>
/// Element "DoubleLockPhysicalState" of XSD type "http://www.onvif.org/ver10/doorcontrol/wsdl":LockPhysicalState.
    enum ns4__LockPhysicalState*         DoubleLockPhysicalState        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Alarm state of the door; it is of type DoorAlarmState. A device that signals support for Alarm capability for a particular door instance shall provide this field.
/// </BLOCKQUOTE></PRE>
/// Element "Alarm" of XSD type "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorAlarmState.
    enum ns4__DoorAlarmState*            Alarm                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Tampering state of the door; it is of type DoorTamper. A device that signals support for Tamper capability for a particular door instance shall provide this field.
/// </BLOCKQUOTE></PRE>
/// Element "Tamper" of XSD type "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorTamper.
    struct ns4__DoorTamper*              Tamper                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Fault information for door; it is of type DoorFault. A device that signals support for Fault capability for a particular door instance shall provide this field.
/// </BLOCKQUOTE></PRE>
/// Element "Fault" of XSD type "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorFault.
    struct ns4__DoorFault*               Fault                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The logical operating mode of the door; it is of type DoorMode. An ONVIF compatible device shall report current operating mode in this field.
/// </BLOCKQUOTE></PRE>
/// Element "DoorMode" of XSD type "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorMode.
    enum ns4__DoorMode                   DoorMode                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorTamper is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Tampering information for a Door.
/// </BLOCKQUOTE></PRE>
struct ns4__DoorTamper
{
/// <PRE><BLOCKQUOTE>
///   Optional field; Details describing tampering state change (e.g., reason, place and time). <br/>NOTE: All fields (including this one) which are designed to give end-user prompts can be localized to the customers's native language.
/// </BLOCKQUOTE></PRE>
/// Element "Reason" of XSD type xs:string.
    char*                                Reason                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   State of the tamper detector; it is of type DoorTamperState.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorTamperState.
    enum ns4__DoorTamperState            State                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorFault is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Fault information for a Door.
///   This can be extended with optional attributes in the future.
/// </BLOCKQUOTE></PRE>
struct ns4__DoorFault
{
/// <PRE><BLOCKQUOTE>
///   Optional reason for fault.
/// </BLOCKQUOTE></PRE>
/// Element "Reason" of XSD type xs:string.
    char*                                Reason                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Overall fault state for the door; it is of type DoorFaultState. If there are any faults, the value shall be: FaultDetected. Details of the detected fault shall be found in the Reason field, and/or the various DoorState fields and/or in extensions to this structure.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorFaultState.
    enum ns4__DoorFaultState             State                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":AccessDoorExtension is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Extension for the AccessDoor command.
/// </BLOCKQUOTE></PRE>
struct ns4__AccessDoorExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":GetServiceCapabilities is a complexType.
///
struct _ns4__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _ns4__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capability response message contains the requested DoorControl service capabilities using a hierarchical XML capability structure.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/doorcontrol/wsdl":ServiceCapabilities.
    struct ns4__ServiceCapabilities*     Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":GetDoorInfoList
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":GetDoorInfoList is a complexType.
///
struct _ns4__GetDoorInfoList
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of entries to return. If not specified, or higher than what the device supports, the number of items shall be determined by the device.
/// </BLOCKQUOTE></PRE>
/// Element "Limit" of XSD type xs:int.
    int*                                 Limit                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Start returning entries from this start reference. If not specified, entries shall start from the beginning of the dataset.
/// </BLOCKQUOTE></PRE>
/// Element "StartReference" of XSD type xs:string.
    char*                                StartReference                 0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":GetDoorInfoListResponse
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":GetDoorInfoListResponse is a complexType.
///
struct _ns4__GetDoorInfoListResponse
{
/// <PRE><BLOCKQUOTE>
///   StartReference to use in next call to get the following items. If absent, no more items to get.
/// </BLOCKQUOTE></PRE>
/// Element "NextStartReference" of XSD type xs:string.
    char*                                NextStartReference             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of DoorInfo items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns4__DoorInfo* is 0..unbounded.
   $int                                  __sizeDoorInfo                 0;
/// Array struct ns4__DoorInfo* of size 0..unbounded.
    struct ns4__DoorInfo*                DoorInfo                       0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":GetDoorInfo
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":GetDoorInfo is a complexType.
///
struct _ns4__GetDoorInfo
{
/// <PRE><BLOCKQUOTE>
///   Tokens of DoorInfo items to get.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns3__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array ns3__ReferenceToken* of size 1..unbounded.
    ns3__ReferenceToken*                 Token                          1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":GetDoorInfoResponse
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":GetDoorInfoResponse is a complexType.
///
struct _ns4__GetDoorInfoResponse
{
/// <PRE><BLOCKQUOTE>
///   List of DoorInfo items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns4__DoorInfo* is 0..unbounded.
   $int                                  __sizeDoorInfo                 0;
/// Array struct ns4__DoorInfo* of size 0..unbounded.
    struct ns4__DoorInfo*                DoorInfo                       0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":GetDoorState
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":GetDoorState is a complexType.
///
struct _ns4__GetDoorState
{
/// <PRE><BLOCKQUOTE>
///   Token of the Door instance to get the state for.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":GetDoorStateResponse
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":GetDoorStateResponse is a complexType.
///
struct _ns4__GetDoorStateResponse
{
/// <PRE><BLOCKQUOTE>
///   The state of the door.
/// </BLOCKQUOTE></PRE>
/// Element "DoorState" of XSD type "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorState.
    struct ns4__DoorState*               DoorState                      1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":AccessDoor
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":AccessDoor is a complexType.
///
struct _ns4__AccessDoor
{
/// <PRE><BLOCKQUOTE>
///   Token of the Door instance to control.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional - Indicates that the configured extended time should be used.
/// </BLOCKQUOTE></PRE>
/// Element "UseExtendedTime" of XSD type xs:boolean.
    enum xsd__boolean*                   UseExtendedTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional - overrides AccessTime if specified.
/// </BLOCKQUOTE></PRE>
/// Element "AccessTime" of XSD type xs:duration.
    xsd__duration*                       AccessTime                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional - overrides OpenTooLongTime if specified (DOTL).
/// </BLOCKQUOTE></PRE>
/// Element "OpenTooLongTime" of XSD type xs:duration.
    xsd__duration*                       OpenTooLongTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional - overrides PreAlarmTime if specified.
/// </BLOCKQUOTE></PRE>
/// Element "PreAlarmTime" of XSD type xs:duration.
    xsd__duration*                       PreAlarmTime                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Future extension.
/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/doorcontrol/wsdl":AccessDoorExtension.
    struct ns4__AccessDoorExtension*     Extension                      0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":AccessDoorResponse
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":AccessDoorResponse is a complexType.
///
struct _ns4__AccessDoorResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":LockDoor
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":LockDoor is a complexType.
///
struct _ns4__LockDoor
{
/// <PRE><BLOCKQUOTE>
///   Token of the Door instance to control.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":LockDoorResponse
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":LockDoorResponse is a complexType.
///
struct _ns4__LockDoorResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":UnlockDoor
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":UnlockDoor is a complexType.
///
struct _ns4__UnlockDoor
{
/// <PRE><BLOCKQUOTE>
///   Token of the Door instance to control.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":UnlockDoorResponse
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":UnlockDoorResponse is a complexType.
///
struct _ns4__UnlockDoorResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":BlockDoor
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":BlockDoor is a complexType.
///
struct _ns4__BlockDoor
{
/// <PRE><BLOCKQUOTE>
///   Token of the Door instance to control.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":BlockDoorResponse
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":BlockDoorResponse is a complexType.
///
struct _ns4__BlockDoorResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":LockDownDoor
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":LockDownDoor is a complexType.
///
struct _ns4__LockDownDoor
{
/// <PRE><BLOCKQUOTE>
///   Token of the Door instance to control.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":LockDownDoorResponse
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":LockDownDoorResponse is a complexType.
///
struct _ns4__LockDownDoorResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":LockDownReleaseDoor
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":LockDownReleaseDoor is a complexType.
///
struct _ns4__LockDownReleaseDoor
{
/// <PRE><BLOCKQUOTE>
///   Token of the Door instance to control.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":LockDownReleaseDoorResponse
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":LockDownReleaseDoorResponse is a complexType.
///
struct _ns4__LockDownReleaseDoorResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":LockOpenDoor
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":LockOpenDoor is a complexType.
///
struct _ns4__LockOpenDoor
{
/// <PRE><BLOCKQUOTE>
///   Token of the Door instance to control.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":LockOpenDoorResponse
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":LockOpenDoorResponse is a complexType.
///
struct _ns4__LockOpenDoorResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":LockOpenReleaseDoor
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":LockOpenReleaseDoor is a complexType.
///
struct _ns4__LockOpenReleaseDoor
{
/// <PRE><BLOCKQUOTE>
///   Token of the Door instance to control.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":LockOpenReleaseDoorResponse
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":LockOpenReleaseDoorResponse is a complexType.
///
struct _ns4__LockOpenReleaseDoorResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":DoubleLockDoor
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":DoubleLockDoor is a complexType.
///
struct _ns4__DoubleLockDoor
{
/// <PRE><BLOCKQUOTE>
///   Token of the Door instance to control.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/doorcontrol/wsdl":DoubleLockDoorResponse
/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":DoubleLockDoorResponse is a complexType.
///
struct _ns4__DoubleLockDoorResponse
{
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/advancedsecurity/wsdl                         *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeyAttribute is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The attributes of a key in the keystore.
/// </BLOCKQUOTE></PRE>
struct ns5__KeyAttribute
{
/// <PRE><BLOCKQUOTE>
///   The ID of the key.
/// </BLOCKQUOTE></PRE>
/// Element "KeyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeyID.
    ns5__KeyID                           KeyID                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The client-defined alias of the key.
/// </BLOCKQUOTE></PRE>
/// Element "Alias" of XSD type xs:string.
    char*                                Alias                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Absent if the key is not a key pair. True if and only if the key is a key pair and contains a private key. False if and only if the key is a key pair and does not contain a private key.
/// </BLOCKQUOTE></PRE>
/// Element "hasPrivateKey" of XSD type xs:boolean.
    enum xsd__boolean*                   hasPrivateKey                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The status of the key. The value should be one of the values in the tas:KeyStatus enumeration.
/// </BLOCKQUOTE></PRE>
/// Element "KeyStatus" of XSD type xs:string.
    char*                                KeyStatus                      1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   True if and only if the key was generated outside the device.
/// </BLOCKQUOTE></PRE>
/// Element "externallyGenerated" of XSD type xs:boolean.
    enum xsd__boolean*                   externallyGenerated            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   True if and only if the key is stored in a specially protected hardware component inside the device.
/// </BLOCKQUOTE></PRE>
/// Element "securelyStored" of XSD type xs:boolean.
    enum xsd__boolean*                   securelyStored                 0;	///< Optional element.
    struct _ns5__KeyAttribute_Extension
    {
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DNAttributeTypeAndValue is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A distinguished name attribute type and value pair.
/// </BLOCKQUOTE></PRE>
struct ns5__DNAttributeTypeAndValue
{
/// <PRE><BLOCKQUOTE>
///   The attribute type.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":DNAttributeType.
    ns5__DNAttributeType                 Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The value of the attribute.
/// </BLOCKQUOTE></PRE>
/// Element "Value" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":DNAttributeValue.
    ns5__DNAttributeValue                Value                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":MultiValuedRDN is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A multi-valued RDN
/// </BLOCKQUOTE></PRE>
struct ns5__MultiValuedRDN
{
/// <PRE><BLOCKQUOTE>
///   A list of types and values defining a multi-valued RDN
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns5__DNAttributeTypeAndValue* is 0..unbounded.
   $int                                  __sizeAttribute                0;
/// Array struct ns5__DNAttributeTypeAndValue* of size 0..unbounded.
    struct ns5__DNAttributeTypeAndValue*  Attribute                      0;
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DistinguishedName is a complexType.
///
struct ns5__DistinguishedName
{
/// <PRE><BLOCKQUOTE>
///   A country name as specified in
///   X.500.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__DNAttributeValue* is 0..unbounded.
   $int                                  __sizeCountry                  0;
/// Array ns5__DNAttributeValue* of size 0..unbounded.
    ns5__DNAttributeValue*               Country                        0;
/// <PRE><BLOCKQUOTE>
///   An organization name as specified in
///   X.500.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__DNAttributeValue* is 0..unbounded.
   $int                                  __sizeOrganization             0;
/// Array ns5__DNAttributeValue* of size 0..unbounded.
    ns5__DNAttributeValue*               Organization                   0;
/// <PRE><BLOCKQUOTE>
///   An organizational unit name as specified in
///   X.500.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__DNAttributeValue* is 0..unbounded.
   $int                                  __sizeOrganizationalUnit       0;
/// Array ns5__DNAttributeValue* of size 0..unbounded.
    ns5__DNAttributeValue*               OrganizationalUnit             0;
/// <PRE><BLOCKQUOTE>
///   A distinguished name qualifier as specified in
///   X.500.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__DNAttributeValue* is 0..unbounded.
   $int                                  __sizeDistinguishedNameQualifier 0;
/// Array ns5__DNAttributeValue* of size 0..unbounded.
    ns5__DNAttributeValue*               DistinguishedNameQualifier     0;
/// <PRE><BLOCKQUOTE>
///   A state or province name as specified in
///   X.500.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__DNAttributeValue* is 0..unbounded.
   $int                                  __sizeStateOrProvinceName      0;
/// Array ns5__DNAttributeValue* of size 0..unbounded.
    ns5__DNAttributeValue*               StateOrProvinceName            0;
/// <PRE><BLOCKQUOTE>
///   A common name as specified in
///   X.500.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__DNAttributeValue* is 0..unbounded.
   $int                                  __sizeCommonName               0;
/// Array ns5__DNAttributeValue* of size 0..unbounded.
    ns5__DNAttributeValue*               CommonName                     0;
/// <PRE><BLOCKQUOTE>
///   A serial number as specified in
///   X.500.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__DNAttributeValue* is 0..unbounded.
   $int                                  __sizeSerialNumber             0;
/// Array ns5__DNAttributeValue* of size 0..unbounded.
    ns5__DNAttributeValue*               SerialNumber                   0;
/// <PRE><BLOCKQUOTE>
///   A locality as specified in X.500.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__DNAttributeValue* is 0..unbounded.
   $int                                  __sizeLocality                 0;
/// Array ns5__DNAttributeValue* of size 0..unbounded.
    ns5__DNAttributeValue*               Locality                       0;
/// <PRE><BLOCKQUOTE>
///   A title as specified in X.500.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__DNAttributeValue* is 0..unbounded.
   $int                                  __sizeTitle                    0;
/// Array ns5__DNAttributeValue* of size 0..unbounded.
    ns5__DNAttributeValue*               Title                          0;
/// <PRE><BLOCKQUOTE>
///   A surname as specified in X.500.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__DNAttributeValue* is 0..unbounded.
   $int                                  __sizeSurname                  0;
/// Array ns5__DNAttributeValue* of size 0..unbounded.
    ns5__DNAttributeValue*               Surname                        0;
/// <PRE><BLOCKQUOTE>
///   A given name as specified in X.500.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__DNAttributeValue* is 0..unbounded.
   $int                                  __sizeGivenName                0;
/// Array ns5__DNAttributeValue* of size 0..unbounded.
    ns5__DNAttributeValue*               GivenName                      0;
/// <PRE><BLOCKQUOTE>
///   Initials as specified in X.500.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__DNAttributeValue* is 0..unbounded.
   $int                                  __sizeInitials                 0;
/// Array ns5__DNAttributeValue* of size 0..unbounded.
    ns5__DNAttributeValue*               Initials                       0;
/// <PRE><BLOCKQUOTE>
///   A pseudonym as specified in X.500.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__DNAttributeValue* is 0..unbounded.
   $int                                  __sizePseudonym                0;
/// Array ns5__DNAttributeValue* of size 0..unbounded.
    ns5__DNAttributeValue*               Pseudonym                      0;
/// <PRE><BLOCKQUOTE>
///   A generation qualifier as specified in
///   X.500.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__DNAttributeValue* is 0..unbounded.
   $int                                  __sizeGenerationQualifier      0;
/// Array ns5__DNAttributeValue* of size 0..unbounded.
    ns5__DNAttributeValue*               GenerationQualifier            0;
/// <PRE><BLOCKQUOTE>
///   A generic type-value pair
///   attribute.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns5__DNAttributeTypeAndValue* is 0..unbounded.
   $int                                  __sizeGenericAttribute         0;
/// Array struct ns5__DNAttributeTypeAndValue* of size 0..unbounded.
    struct ns5__DNAttributeTypeAndValue*  GenericAttribute               0;
/// <PRE><BLOCKQUOTE>
///   A multi-valued RDN
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns5__MultiValuedRDN* is 0..unbounded.
   $int                                  __sizeMultiValuedRDN           0;
/// Array struct ns5__MultiValuedRDN* of size 0..unbounded.
    struct ns5__MultiValuedRDN*          MultiValuedRDN                 0;
/// <PRE><BLOCKQUOTE>
///   Required extension point. It is recommended to not use this element, and instead use GenericAttribute and the numeric Distinguished Name Attribute Type.
/// </BLOCKQUOTE></PRE>
    struct _ns5__DistinguishedName_anyAttribute
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *anyAttribute                   0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":AlgorithmIdentifier is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   An identifier of an algorithm.
/// </BLOCKQUOTE></PRE>
struct ns5__AlgorithmIdentifier
{
/// <PRE><BLOCKQUOTE>
///   The OID of the algorithm in dot-decimal form.
/// </BLOCKQUOTE></PRE>
/// Element "algorithm" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":DotDecimalOID.
    ns5__DotDecimalOID                   algorithm                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameters of the algorithm (depending on the algorithm).
/// </BLOCKQUOTE></PRE>
/// Element "parameters" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":Base64DERencodedASN1Value.
    ns5__Base64DERencodedASN1Value*      parameters                     0;	///< Optional element.
    struct _ns5__AlgorithmIdentifier_anyParameters
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *anyParameters                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":BasicRequestAttribute is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A CSR attribute as specified in RFC 2986.
/// </BLOCKQUOTE></PRE>
struct ns5__BasicRequestAttribute
{
/// <PRE><BLOCKQUOTE>
///   The OID of the attribute.
/// </BLOCKQUOTE></PRE>
/// Element "OID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":DotDecimalOID.
    ns5__DotDecimalOID                   OID                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The value of the attribute as a base64-encoded DER representation of an ASN.1 value.
/// </BLOCKQUOTE></PRE>
/// Element "value" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":Base64DERencodedASN1Value.
    ns5__Base64DERencodedASN1Value       value                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CSRAttribute is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A CSR attribute as specified in PKCS#10.
/// </BLOCKQUOTE></PRE>
struct ns5__CSRAttribute
{
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_CSRAttribute          ;	///< Union _ns5__union_CSRAttribute selector: set to SOAP_UNION__ns5__union_CSRAttribute_<fieldname>
/// Union for choice in ns5__CSRAttribute.
    union _ns5__union_CSRAttribute
    {
/// <PRE><BLOCKQUOTE>
///   An X.509v3 extension field.
/// </BLOCKQUOTE></PRE>
/// Element "X509v3Extension" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":X509v3Extension.
    struct ns5__X509v3Extension*         X509v3Extension                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A basic CSR attribute.
/// </BLOCKQUOTE></PRE>
/// Element "BasicRequestAttribute" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":BasicRequestAttribute.
    struct ns5__BasicRequestAttribute*   BasicRequestAttribute          1;	///< Required element.
    struct _ns5__CSRAttribute_anyAttribute
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *anyAttribute                   0;	///< Optional element.
    }                                    union_CSRAttribute            ;
//  END OF CHOICE
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":X509v3Extension is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   An X.509v3 extension field as specified in RFC 5280
/// </BLOCKQUOTE></PRE>
struct ns5__X509v3Extension
{
/// <PRE><BLOCKQUOTE>
///   The OID of the extension field.
/// </BLOCKQUOTE></PRE>
/// Element "extnOID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":DotDecimalOID.
    ns5__DotDecimalOID                   extnOID                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   True if and only if the extension is critical.
/// </BLOCKQUOTE></PRE>
/// Element "critical" of XSD type xs:boolean.
    enum xsd__boolean                    critical                      ;	///< Default element value="false".
/// <PRE><BLOCKQUOTE>
///   The value of the extension field as a base64-encoded DER representation of an ASN.1 value.
/// </BLOCKQUOTE></PRE>
/// Element "extnValue" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":Base64DERencodedASN1Value.
    ns5__Base64DERencodedASN1Value       extnValue                      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":X509Certificate is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   An X.509 cerficiate as specified in RFC 5280.
/// </BLOCKQUOTE></PRE>
struct ns5__X509Certificate
{
/// <PRE><BLOCKQUOTE>
///   The ID of the certificate.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificateID.
    ns5__CertificateID                   CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ID of the key that this certificate associates to the certificate subject.
/// </BLOCKQUOTE></PRE>
/// Element "KeyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeyID.
    ns5__KeyID                           KeyID                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The client-defined alias of the certificate.
/// </BLOCKQUOTE></PRE>
/// Element "Alias" of XSD type xs:string.
    char*                                Alias                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The base64-encoded DER representation of the X.509 certificate.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateContent" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":Base64DERencodedASN1Value.
    ns5__Base64DERencodedASN1Value       CertificateContent             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificateIDs is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A sequence of certificate IDs.
/// </BLOCKQUOTE></PRE>
struct ns5__CertificateIDs
{
/// <PRE><BLOCKQUOTE>
///   A certificate ID.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__CertificateID* is 1..unbounded.
   $int                                  __sizeCertificateID            1;
/// Array ns5__CertificateID* of size 1..unbounded.
    ns5__CertificateID*                  CertificateID                  1;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificationPath is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   An X.509 certification path as defined in RFC 5280.
/// </BLOCKQUOTE></PRE>
struct ns5__CertificationPath
{
/// <PRE><BLOCKQUOTE>
///   A certificate in the certification path.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__CertificateID* is 1..unbounded.
   $int                                  __sizeCertificateID            1;
/// Array ns5__CertificateID* of size 1..unbounded.
    ns5__CertificateID*                  CertificateID                  1;
/// <PRE><BLOCKQUOTE>
///   The client-defined alias of the certification path.
/// </BLOCKQUOTE></PRE>
/// Element "Alias" of XSD type xs:string.
    char*                                Alias                          0;	///< Optional element.
    struct _ns5__CertificationPath_anyElement
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *anyElement                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":PassphraseAttribute is a complexType.
///
struct ns5__PassphraseAttribute
{
/// <PRE><BLOCKQUOTE>
///   The ID of the passphrase.
/// </BLOCKQUOTE></PRE>
/// Element "PassphraseID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":PassphraseID.
    ns5__PassphraseID                    PassphraseID                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The alias of the passphrase.
/// </BLOCKQUOTE></PRE>
/// Element "Alias" of XSD type xs:string.
    char*                                Alias                          0;	///< Optional element.
    struct _ns5__PassphraseAttribute_Extension
    {
/// @todo <any namespace="##any" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 1..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CRL is a complexType.
///
struct ns5__CRL
{
/// Element "CRLID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CRLID.
    ns5__CRLID                           CRLID                          1;	///< Required element.
/// Element "Alias" of XSD type xs:string.
    char*                                Alias                          1;	///< Required element.
/// Element "CRLContent" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":Base64DERencodedASN1Value.
    ns5__Base64DERencodedASN1Value       CRLContent                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertPathValidationParameters is a complexType.
///
struct ns5__CertPathValidationParameters
{
/// <PRE><BLOCKQUOTE>
///   True if and only if the TLS server shall not authenticate client certificates that do not contain the TLS WWW client authentication key usage extension as specified in RFC 5280, Sect. 4.2.1.12.
/// </BLOCKQUOTE></PRE>
/// Element "RequireTLSWWWClientAuthExtendedKeyUsage" of XSD type xs:boolean.
    enum xsd__boolean                    RequireTLSWWWClientAuthExtendedKeyUsage 0;	///< Default element value="false".
/// <PRE><BLOCKQUOTE>
///   True if and only if delta CRLs, if available, shall be applied to CRLs.
/// </BLOCKQUOTE></PRE>
/// Element "UseDeltaCRLs" of XSD type xs:boolean.
    enum xsd__boolean                    UseDeltaCRLs                   0;	///< Default element value="false".
    struct _ns5__CertPathValidationParameters_anyParameters
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *anyParameters                  0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":TrustAnchor is a complexType.
///
struct ns5__TrustAnchor
{
/// <PRE><BLOCKQUOTE>
///   The certificate ID of the certificate to be used as trust anchor.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificateID.
    ns5__CertificateID                   CertificateID                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertPathValidationPolicy is a complexType.
///
struct ns5__CertPathValidationPolicy
{
/// Element "CertPathValidationPolicyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertPathValidationPolicyID.
    ns5__CertPathValidationPolicyID      CertPathValidationPolicyID     1;	///< Required element.
/// Element "Alias" of XSD type xs:string.
    char*                                Alias                          0;	///< Optional element.
/// Element "Parameters" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertPathValidationParameters.
    struct ns5__CertPathValidationParameters*  Parameters                     1;	///< Required element.
/// Size of array of struct ns5__TrustAnchor* is 1..unbounded.
   $int                                  __sizeTrustAnchor              1;
/// Array struct ns5__TrustAnchor* of size 1..unbounded.
    struct ns5__TrustAnchor*             TrustAnchor                    1;
    struct _ns5__CertPathValidationPolicy_anyParameters
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *anyParameters                  0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeystoreCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The capabilities of a keystore implementation on a device.
/// </BLOCKQUOTE></PRE>
struct ns5__KeystoreCapabilities
{
/// <PRE><BLOCKQUOTE>
///   The signature algorithms supported by the keystore implementation.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns5__AlgorithmIdentifier* is 0..unbounded.
   $int                                  __sizeSignatureAlgorithms      0;
/// Array struct ns5__AlgorithmIdentifier* of size 0..unbounded.
    struct ns5__AlgorithmIdentifier*     SignatureAlgorithms            0;
    struct _ns5__KeystoreCapabilities_anyElement
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *anyElement                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of keys that the device can store simultaneously.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumNumberOfKeys" of XSD type xs:positiveInteger.
   @xsd__positiveInteger                 MaximumNumberOfKeys            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of certificates that the device can store simultaneously.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumNumberOfCertificates" of XSD type xs:positiveInteger.
   @xsd__positiveInteger                 MaximumNumberOfCertificates    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of certification paths that the device can store simultaneously.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumNumberOfCertificationPaths" of XSD type xs:positiveInteger.
   @xsd__positiveInteger                 MaximumNumberOfCertificationPaths 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication that the device supports on-board RSA key pair generation.
/// </BLOCKQUOTE></PRE>
/// Attribute "RSAKeyPairGeneration" of XSD type xs:boolean.
   @enum xsd__boolean*                   RSAKeyPairGeneration           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates which RSA key lengths are supported by the device.
/// </BLOCKQUOTE></PRE>
/// Attribute "RSAKeyLengths" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":RSAKeyLengths.
   @ns5__RSAKeyLengths                   RSAKeyLengths                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for creating PKCS#10 requests for RSA keys and uploading the certificate obtained from a CA..
/// </BLOCKQUOTE></PRE>
/// Attribute "PKCS10ExternalCertificationWithRSA" of XSD type xs:boolean.
   @enum xsd__boolean*                   PKCS10ExternalCertificationWithRSA 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for creating self-signed certificates for RSA keys.
/// </BLOCKQUOTE></PRE>
/// Attribute "SelfSignedCertificateCreationWithRSA" of XSD type xs:boolean.
   @enum xsd__boolean*                   SelfSignedCertificateCreationWithRSA 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates which X.509 versions are supported by the device.
/// </BLOCKQUOTE></PRE>
/// Attribute "X509Versions" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":X509Versions.
   @ns5__X509Versions                    X509Versions                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of passphrases that the device is able to store simultaneously.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumNumberOfPassphrases" of XSD type xs:nonNegativeInteger.
   @xsd__nonNegativeInteger              MaximumNumberOfPassphrases     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for uploading an RSA key pair in a PKCS#8 data structure.
/// </BLOCKQUOTE></PRE>
/// Attribute "PKCS8RSAKeyPairUpload" of XSD type xs:boolean.
   @enum xsd__boolean*                   PKCS8RSAKeyPairUpload          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for uploading a certificate along with an RSA private key in a PKCS#12 data structure.
/// </BLOCKQUOTE></PRE>
/// Attribute "PKCS12CertificateWithRSAPrivateKeyUpload" of XSD type xs:boolean.
   @enum xsd__boolean*                   PKCS12CertificateWithRSAPrivateKeyUpload 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates which password-based encryption algorithms are supported by the device.
/// </BLOCKQUOTE></PRE>
/// Attribute "PasswordBasedEncryptionAlgorithms" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":PasswordBasedEncryptionAlgorithms.
   @ns5__PasswordBasedEncryptionAlgorithms  PasswordBasedEncryptionAlgorithms 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates which password-based MAC algorithms are supported by the device.
/// </BLOCKQUOTE></PRE>
/// Attribute "PasswordBasedMACAlgorithms" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":PasswordBasedEncryptionAlgorithms.
   @ns5__PasswordBasedEncryptionAlgorithms  PasswordBasedMACAlgorithms     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of CRLs that the device is able to store simultaneously.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumNumberOfCRLs" of XSD type xs:nonNegativeInteger.
   @xsd__nonNegativeInteger              MaximumNumberOfCRLs            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of certification path validation policies that the device is able to store simultaneously.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumNumberOfCertificationPathValidationPolicies" of XSD type xs:nonNegativeInteger.
   @xsd__nonNegativeInteger              MaximumNumberOfCertificationPathValidationPolicies 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether a device supports checking for the TLS WWW client auth extended key usage extension while validating certification paths.
/// </BLOCKQUOTE></PRE>
/// Attribute "EnforceTLSWebClientAuthExtKeyUsage" of XSD type xs:boolean.
   @enum xsd__boolean*                   EnforceTLSWebClientAuthExtKeyUsage 0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":TLSServerCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The capabilities of a TLS server implementation on a device.
/// </BLOCKQUOTE></PRE>
struct ns5__TLSServerCapabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates which TLS versions are supported by the device.
/// </BLOCKQUOTE></PRE>
/// Attribute "TLSServerSupported" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":TLSVersions.
   @ns5__TLSVersions                     TLSServerSupported             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of certification paths that may be assigned to the TLS server simultaneously.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumNumberOfTLSCertificationPaths" of XSD type xs:positiveInteger.
   @xsd__positiveInteger                 MaximumNumberOfTLSCertificationPaths 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device supports TLS client authentication.
/// </BLOCKQUOTE></PRE>
/// Attribute "TLSClientAuthSupported" of XSD type xs:boolean.
   @enum xsd__boolean*                   TLSClientAuthSupported         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of certification path validation policies that may be assigned to the TLS server simultaneously.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumNumberOfTLSCertificationPathValidationPolicies" of XSD type xs:nonNegativeInteger.
   @xsd__nonNegativeInteger              MaximumNumberOfTLSCertificationPathValidationPolicies 0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":Capabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The capabilities of an Advanced Security Service implementation on a device.
/// </BLOCKQUOTE></PRE>
struct ns5__Capabilities
{
/// <PRE><BLOCKQUOTE>
///   The capabilities of the keystore implementation.
/// </BLOCKQUOTE></PRE>
/// Element "KeystoreCapabilities" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeystoreCapabilities.
    struct ns5__KeystoreCapabilities*    KeystoreCapabilities           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The capabilities of the TLS server implementation.
/// </BLOCKQUOTE></PRE>
/// Element "TLSServerCapabilities" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":TLSServerCapabilities.
    struct ns5__TLSServerCapabilities*   TLSServerCapabilities          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetServiceCapabilities is a complexType.
///
struct _ns5__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _ns5__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the advanced secuirty service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":Capabilities.
    struct ns5__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateRSAKeyPair
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateRSAKeyPair is a complexType.
///
struct _ns5__CreateRSAKeyPair
{
/// <PRE><BLOCKQUOTE>
///   The length of the key to be created.
/// </BLOCKQUOTE></PRE>
/// Element "KeyLength" of XSD type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              KeyLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The client-defined alias of the key.
/// </BLOCKQUOTE></PRE>
/// Element "Alias" of XSD type xs:string.
    char*                                Alias                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateRSAKeyPairResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateRSAKeyPairResponse is a complexType.
///
struct _ns5__CreateRSAKeyPairResponse
{
/// <PRE><BLOCKQUOTE>
///   The key ID of the key pair being generated.
/// </BLOCKQUOTE></PRE>
/// Element "KeyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeyID.
    ns5__KeyID                           KeyID                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Best-effort estimate of how long the key generation will take.
/// </BLOCKQUOTE></PRE>
/// Element "EstimatedCreationTime" of XSD type xs:duration.
    xsd__duration                        EstimatedCreationTime          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadKeyPairInPKCS8
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadKeyPairInPKCS8 is a complexType.
///
struct _ns5__UploadKeyPairInPKCS8
{
/// <PRE><BLOCKQUOTE>
///   The key pair to be uploaded in a PKCS#8 data structure.
/// </BLOCKQUOTE></PRE>
/// Element "KeyPair" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":Base64DERencodedASN1Value.
    ns5__Base64DERencodedASN1Value       KeyPair                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The client-defined alias of the key pair.
/// </BLOCKQUOTE></PRE>
/// Element "Alias" of XSD type xs:string.
    char*                                Alias                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The ID of the passphrase to use for decrypting the uploaded key pair.
/// </BLOCKQUOTE></PRE>
/// Element "EncryptionPassphraseID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":PassphraseID.
    ns5__PassphraseID                    EncryptionPassphraseID         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The passphrase to use for decrypting the uploaded key pair.
/// </BLOCKQUOTE></PRE>
/// Element "EncryptionPassphrase" of XSD type xs:string.
    char*                                EncryptionPassphrase           0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadKeyPairInPKCS8Response
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadKeyPairInPKCS8Response is a complexType.
///
struct _ns5__UploadKeyPairInPKCS8Response
{
/// <PRE><BLOCKQUOTE>
///   The key ID of the uploaded key pair.
/// </BLOCKQUOTE></PRE>
/// Element "KeyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeyID.
    ns5__KeyID                           KeyID                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadCertificateWithPrivateKeyInPKCS12
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadCertificateWithPrivateKeyInPKCS12 is a complexType.
///
struct _ns5__UploadCertificateWithPrivateKeyInPKCS12
{
/// <PRE><BLOCKQUOTE>
///   The certificates and key pair to be uploaded in a PKCS#12 data structure.
/// </BLOCKQUOTE></PRE>
/// Element "CertWithPrivateKey" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":Base64DERencodedASN1Value.
    ns5__Base64DERencodedASN1Value       CertWithPrivateKey             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The client-defined alias of the certification path.
/// </BLOCKQUOTE></PRE>
/// Element "CertificationPathAlias" of XSD type xs:string.
    char*                                CertificationPathAlias         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The client-defined alias of the key pair.
/// </BLOCKQUOTE></PRE>
/// Element "KeyAlias" of XSD type xs:string.
    char*                                KeyAlias                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   True if and only if the device shall behave as if
///   the client had only supplied the first certificate in the sequence of certificates.
/// </BLOCKQUOTE></PRE>
/// Element "IgnoreAdditionalCertificates" of XSD type xs:boolean.
    enum xsd__boolean                    IgnoreAdditionalCertificates   0;	///< Default element value="false".
/// <PRE><BLOCKQUOTE>
///   The ID of the passphrase to use for integrity checking of the uploaded PKCS#12 data structure.
/// </BLOCKQUOTE></PRE>
/// Element "IntegrityPassphraseID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":PassphraseID.
    ns5__PassphraseID                    IntegrityPassphraseID          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The ID of the passphrase to use for decrypting the uploaded PKCS#12 data structure.
/// </BLOCKQUOTE></PRE>
/// Element "EncryptionPassphraseID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":PassphraseID.
    ns5__PassphraseID                    EncryptionPassphraseID         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The passphrase to use for integrity checking and decrypting the uploaded PKCS#12 data structure.
/// </BLOCKQUOTE></PRE>
/// Element "Passphrase" of XSD type xs:string.
    char*                                Passphrase                     0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadCertificateWithPrivateKeyInPKCS12Response
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadCertificateWithPrivateKeyInPKCS12Response is a complexType.
///
struct _ns5__UploadCertificateWithPrivateKeyInPKCS12Response
{
/// <PRE><BLOCKQUOTE>
///   The certification path ID of the uploaded certification path.
/// </BLOCKQUOTE></PRE>
/// Element "CertificationPathID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificationPathID.
    ns5__CertificationPathID             CertificationPathID            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The key ID of the uploaded key pair.
/// </BLOCKQUOTE></PRE>
/// Element "KeyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeyID.
    ns5__KeyID                           KeyID                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetKeyStatus
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetKeyStatus is a complexType.
///
struct _ns5__GetKeyStatus
{
/// <PRE><BLOCKQUOTE>
///   The ID of the key for which to return the status.
/// </BLOCKQUOTE></PRE>
/// Element "KeyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeyID.
    ns5__KeyID                           KeyID                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetKeyStatusResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetKeyStatusResponse is a complexType.
///
struct _ns5__GetKeyStatusResponse
{
/// <PRE><BLOCKQUOTE>
///   Status of the requested key. The value should be one of the values in the tas:KeyStatus enumeration.
/// </BLOCKQUOTE></PRE>
/// Element "KeyStatus" of XSD type xs:string.
    char*                                KeyStatus                      1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetPrivateKeyStatus
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetPrivateKeyStatus is a complexType.
///
struct _ns5__GetPrivateKeyStatus
{
/// <PRE><BLOCKQUOTE>
///   The ID of the key pair for which to return whether it contains a private key.
/// </BLOCKQUOTE></PRE>
/// Element "KeyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeyID.
    ns5__KeyID                           KeyID                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetPrivateKeyStatusResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetPrivateKeyStatusResponse is a complexType.
///
struct _ns5__GetPrivateKeyStatusResponse
{
/// <PRE><BLOCKQUOTE>
///   True if and only if the key pair contains a private key.
/// </BLOCKQUOTE></PRE>
/// Element "hasPrivateKey" of XSD type xs:boolean.
    enum xsd__boolean                    hasPrivateKey                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllKeys
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllKeys is a complexType.
///
struct _ns5__GetAllKeys
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllKeysResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllKeysResponse is a complexType.
///
struct _ns5__GetAllKeysResponse
{
/// <PRE><BLOCKQUOTE>
///   Information about a key in the keystore.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns5__KeyAttribute* is 0..unbounded.
   $int                                  __sizeKeyAttribute             0;
/// Array struct ns5__KeyAttribute* of size 0..unbounded.
    struct ns5__KeyAttribute*            KeyAttribute                   0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteKey
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteKey is a complexType.
///
struct _ns5__DeleteKey
{
/// <PRE><BLOCKQUOTE>
///   The ID of the key that is to be deleted from the keystore.
/// </BLOCKQUOTE></PRE>
/// Element "KeyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeyID.
    ns5__KeyID                           KeyID                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteKeyResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteKeyResponse is a complexType.
///
struct _ns5__DeleteKeyResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreatePKCS10CSR
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreatePKCS10CSR is a complexType.
///
struct _ns5__CreatePKCS10CSR
{
/// <PRE><BLOCKQUOTE>
///   The subject to be included in the CSR.
/// </BLOCKQUOTE></PRE>
/// Element "Subject" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":DistinguishedName.
    struct ns5__DistinguishedName*       Subject                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ID of the key for which the CSR shall be created.
/// </BLOCKQUOTE></PRE>
/// Element "KeyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeyID.
    ns5__KeyID                           KeyID                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An attribute to be included in the CSR.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns5__CSRAttribute* is 0..unbounded.
   $int                                  __sizeCSRAttribute             0;
/// Array struct ns5__CSRAttribute* of size 0..unbounded.
    struct ns5__CSRAttribute*            CSRAttribute                   0;
/// <PRE><BLOCKQUOTE>
///   The signature algorithm to be used to sign the CSR. Defaults to SHA1 with RSA Encryption.
/// </BLOCKQUOTE></PRE>
/// Element "SignatureAlgorithm" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":AlgorithmIdentifier.
    struct ns5__AlgorithmIdentifier*     SignatureAlgorithm             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreatePKCS10CSRResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreatePKCS10CSRResponse is a complexType.
///
struct _ns5__CreatePKCS10CSRResponse
{
/// <PRE><BLOCKQUOTE>
///   The DER encoded PKCS#10 certification request.
/// </BLOCKQUOTE></PRE>
/// Element "PKCS10CSR" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":Base64DERencodedASN1Value.
    ns5__Base64DERencodedASN1Value       PKCS10CSR                      1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateSelfSignedCertificate
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateSelfSignedCertificate is a complexType.
///
struct _ns5__CreateSelfSignedCertificate
{
/// <PRE><BLOCKQUOTE>
///   The X.509 version that the generated certificate shall comply to.
/// </BLOCKQUOTE></PRE>
/// Element "X509Version" of XSD type xs:positiveInteger.
    xsd__positiveInteger                 X509Version                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Distinguished name of the entity that the certificate shall belong to.
/// </BLOCKQUOTE></PRE>
/// Element "Subject" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":DistinguishedName.
    struct ns5__DistinguishedName*       Subject                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ID of the key for which the certificate shall be created.
/// </BLOCKQUOTE></PRE>
/// Element "KeyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeyID.
    ns5__KeyID                           KeyID                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The client-defined alias of the certificate to be created.
/// </BLOCKQUOTE></PRE>
/// Element "Alias" of XSD type xs:string.
    char*                                Alias                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The X.509 not valid before information to be included in the certificate. Defaults to the device's current time or a time before the device's current time.
/// </BLOCKQUOTE></PRE>
/// Element "notValidBefore" of XSD type xs:dateTime.
    time_t*                              notValidBefore                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The X.509 not valid after information to be included in the certificate. Defaults to the time 99991231235959Z as specified in RFC 5280.
/// </BLOCKQUOTE></PRE>
/// Element "notValidAfter" of XSD type xs:dateTime.
    time_t*                              notValidAfter                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The signature algorithm to be used for signing the certificate. Defaults to SHA1 with RSA Encryption.
/// </BLOCKQUOTE></PRE>
/// Element "SignatureAlgorithm" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":AlgorithmIdentifier.
    struct ns5__AlgorithmIdentifier*     SignatureAlgorithm             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An X.509v3 extension to be included in the certificate.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns5__X509v3Extension* is 0..unbounded.
   $int                                  __sizeExtension                0;
/// Array struct ns5__X509v3Extension* of size 0..unbounded.
    struct ns5__X509v3Extension*         Extension                      0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateSelfSignedCertificateResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateSelfSignedCertificateResponse is a complexType.
///
struct _ns5__CreateSelfSignedCertificateResponse
{
/// <PRE><BLOCKQUOTE>
///   The ID of the generated certificate.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificateID.
    ns5__CertificateID                   CertificateID                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadCertificate
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadCertificate is a complexType.
///
struct _ns5__UploadCertificate
{
/// <PRE><BLOCKQUOTE>
///   The base64-encoded DER representation of the X.509 certificate to be uploaded.
/// </BLOCKQUOTE></PRE>
/// Element "Certificate" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":Base64DERencodedASN1Value.
    ns5__Base64DERencodedASN1Value       Certificate                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The client-defined alias of the certificate.
/// </BLOCKQUOTE></PRE>
/// Element "Alias" of XSD type xs:string.
    char*                                Alias                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The client-defined alias of the key pair.
/// </BLOCKQUOTE></PRE>
/// Element "KeyAlias" of XSD type xs:string.
    char*                                KeyAlias                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the device shall verify that a matching key pair with a private key exists in the keystore.
/// </BLOCKQUOTE></PRE>
/// Element "PrivateKeyRequired" of XSD type xs:boolean.
    enum xsd__boolean                    PrivateKeyRequired             0;	///< Default element value="false".
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadCertificateResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadCertificateResponse is a complexType.
///
struct _ns5__UploadCertificateResponse
{
/// <PRE><BLOCKQUOTE>
///   The ID of the uploaded certificate.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificateID.
    ns5__CertificateID                   CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ID of the key that the uploaded certificate certifies.
/// </BLOCKQUOTE></PRE>
/// Element "KeyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":KeyID.
    ns5__KeyID                           KeyID                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCertificate
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCertificate is a complexType.
///
struct _ns5__GetCertificate
{
/// <PRE><BLOCKQUOTE>
///   The ID of the certificate to retrieve.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificateID.
    ns5__CertificateID                   CertificateID                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCertificateResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCertificateResponse is a complexType.
///
struct _ns5__GetCertificateResponse
{
/// <PRE><BLOCKQUOTE>
///   The DER representation of the certificate.
/// </BLOCKQUOTE></PRE>
/// Element "Certificate" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":X509Certificate.
    struct ns5__X509Certificate*         Certificate                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCertificates
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCertificates is a complexType.
///
struct _ns5__GetAllCertificates
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCertificatesResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCertificatesResponse is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A list with all certificates stored in the keystore.
/// </BLOCKQUOTE></PRE>
struct _ns5__GetAllCertificatesResponse
{
/// <PRE><BLOCKQUOTE>
///   A certificate stored in the keystore.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns5__X509Certificate* is 0..unbounded.
   $int                                  __sizeCertificate              0;
/// Array struct ns5__X509Certificate* of size 0..unbounded.
    struct ns5__X509Certificate*         Certificate                    0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCertificate
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCertificate is a complexType.
///
struct _ns5__DeleteCertificate
{
/// <PRE><BLOCKQUOTE>
///   The ID of the certificate to delete.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificateID.
    ns5__CertificateID                   CertificateID                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCertificateResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCertificateResponse is a complexType.
///
struct _ns5__DeleteCertificateResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateCertificationPath
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateCertificationPath is a complexType.
///
struct _ns5__CreateCertificationPath
{
/// <PRE><BLOCKQUOTE>
///   The IDs of the certificates to include in the certification path, where each certificate signature except for the last one in the path must be verifiable with the public key certified by the next certificate in the path.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateIDs" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificateIDs.
    struct ns5__CertificateIDs*          CertificateIDs                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The client-defined alias of the certification path.
/// </BLOCKQUOTE></PRE>
/// Element "Alias" of XSD type xs:string.
    char*                                Alias                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateCertificationPathResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateCertificationPathResponse is a complexType.
///
struct _ns5__CreateCertificationPathResponse
{
/// <PRE><BLOCKQUOTE>
///   The ID of the generated certification path.
/// </BLOCKQUOTE></PRE>
/// Element "CertificationPathID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificationPathID.
    ns5__CertificationPathID             CertificationPathID            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCertificationPath
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCertificationPath is a complexType.
///
struct _ns5__GetCertificationPath
{
/// <PRE><BLOCKQUOTE>
///   The ID of the certification path to retrieve.
/// </BLOCKQUOTE></PRE>
/// Element "CertificationPathID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificationPathID.
    ns5__CertificationPathID             CertificationPathID            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCertificationPathResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCertificationPathResponse is a complexType.
///
struct _ns5__GetCertificationPathResponse
{
/// <PRE><BLOCKQUOTE>
///   The certification path that is stored under the given ID in the keystore.
/// </BLOCKQUOTE></PRE>
/// Element "CertificationPath" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificationPath.
    struct ns5__CertificationPath*       CertificationPath              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCertificationPaths
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCertificationPaths is a complexType.
///
struct _ns5__GetAllCertificationPaths
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCertificationPathsResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCertificationPathsResponse is a complexType.
///
struct _ns5__GetAllCertificationPathsResponse
{
/// <PRE><BLOCKQUOTE>
///   An ID of a certification path in the keystore.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__CertificationPathID* is 0..unbounded.
   $int                                  __sizeCertificationPathID      0;
/// Array ns5__CertificationPathID* of size 0..unbounded.
    ns5__CertificationPathID*            CertificationPathID            0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCertificationPath
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCertificationPath is a complexType.
///
struct _ns5__DeleteCertificationPath
{
/// <PRE><BLOCKQUOTE>
///   The ID of the certification path to delete.
/// </BLOCKQUOTE></PRE>
/// Element "CertificationPathID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificationPathID.
    ns5__CertificationPathID             CertificationPathID            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCertificationPathResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCertificationPathResponse is a complexType.
///
struct _ns5__DeleteCertificationPathResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadPassphrase
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadPassphrase is a complexType.
///
struct _ns5__UploadPassphrase
{
/// <PRE><BLOCKQUOTE>
///   The passphrase to upload.
/// </BLOCKQUOTE></PRE>
/// Element "Passphrase" of XSD type xs:string.
    char*                                Passphrase                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The alias for the passphrase to upload.
/// </BLOCKQUOTE></PRE>
/// Element "PassphraseAlias" of XSD type xs:string.
    char*                                PassphraseAlias                0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadPassphraseResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadPassphraseResponse is a complexType.
///
struct _ns5__UploadPassphraseResponse
{
/// <PRE><BLOCKQUOTE>
///   The PassphraseID of the uploaded passphrase.
/// </BLOCKQUOTE></PRE>
/// Element "PassphraseID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":PassphraseID.
    ns5__PassphraseID                    PassphraseID                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllPassphrases
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllPassphrases is a complexType.
///
struct _ns5__GetAllPassphrases
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllPassphrasesResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllPassphrasesResponse is a complexType.
///
struct _ns5__GetAllPassphrasesResponse
{
/// <PRE><BLOCKQUOTE>
///   A list with information about all passphrases in the keystore.
/// </BLOCKQUOTE></PRE>
/// <PRE><BLOCKQUOTE>
///   Information about a passphrase in the keystore.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns5__PassphraseAttribute* is 0..unbounded.
   $int                                  __sizePassphraseAttribute      0;
/// Array struct ns5__PassphraseAttribute* of size 0..unbounded.
    struct ns5__PassphraseAttribute*     PassphraseAttribute            0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeletePassphrase
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeletePassphrase is a complexType.
///
struct _ns5__DeletePassphrase
{
/// <PRE><BLOCKQUOTE>
///   The ID of the passphrase that is to be deleted from the keystore.
/// </BLOCKQUOTE></PRE>
/// Element "PassphraseID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":PassphraseID.
    ns5__PassphraseID                    PassphraseID                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeletePassphraseResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeletePassphraseResponse is a complexType.
///
struct _ns5__DeletePassphraseResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":AddServerCertificateAssignment
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":AddServerCertificateAssignment is a complexType.
///
struct _ns5__AddServerCertificateAssignment
{
/// Element "CertificationPathID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificationPathID.
    ns5__CertificationPathID             CertificationPathID            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":AddServerCertificateAssignmentResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":AddServerCertificateAssignmentResponse is a complexType.
///
struct _ns5__AddServerCertificateAssignmentResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":RemoveServerCertificateAssignment
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":RemoveServerCertificateAssignment is a complexType.
///
struct _ns5__RemoveServerCertificateAssignment
{
/// Element "CertificationPathID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificationPathID.
    ns5__CertificationPathID             CertificationPathID            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":RemoveServerCertificateAssignmentResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":RemoveServerCertificateAssignmentResponse is a complexType.
///
struct _ns5__RemoveServerCertificateAssignmentResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":ReplaceServerCertificateAssignment
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":ReplaceServerCertificateAssignment is a complexType.
///
struct _ns5__ReplaceServerCertificateAssignment
{
/// Element "OldCertificationPathID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificationPathID.
    ns5__CertificationPathID             OldCertificationPathID         1;	///< Required element.
/// Element "NewCertificationPathID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertificationPathID.
    ns5__CertificationPathID             NewCertificationPathID         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":ReplaceServerCertificateAssignmentResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":ReplaceServerCertificateAssignmentResponse is a complexType.
///
struct _ns5__ReplaceServerCertificateAssignmentResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAssignedServerCertificates
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAssignedServerCertificates is a complexType.
///
struct _ns5__GetAssignedServerCertificates
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAssignedServerCertificatesResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAssignedServerCertificatesResponse is a complexType.
///
struct _ns5__GetAssignedServerCertificatesResponse
{
/// <PRE><BLOCKQUOTE>
///   The IDs of all certification paths that are assigned to the TLS server on the device.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__CertificationPathID* is 0..unbounded.
   $int                                  __sizeCertificationPathID      0;
/// Array ns5__CertificationPathID* of size 0..unbounded.
    ns5__CertificationPathID*            CertificationPathID            0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadCRL
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadCRL is a complexType.
///
struct _ns5__UploadCRL
{
/// <PRE><BLOCKQUOTE>
///   The CRL to be uploaded to the device.
/// </BLOCKQUOTE></PRE>
/// Element "Crl" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":Base64DERencodedASN1Value.
    ns5__Base64DERencodedASN1Value       Crl                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The alias to assign to the uploaded CRL.
/// </BLOCKQUOTE></PRE>
/// Element "Alias" of XSD type xs:string.
    char*                                Alias                          0;	///< Optional element.
    struct _ns5__UploadCRL_anyParameters
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *anyParameters                  0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadCRLResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":UploadCRLResponse is a complexType.
///
struct _ns5__UploadCRLResponse
{
/// <PRE><BLOCKQUOTE>
///   The ID of the uploaded CRL.
/// </BLOCKQUOTE></PRE>
/// Element "CrlID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CRLID.
    ns5__CRLID                           CrlID                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCRL
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCRL is a complexType.
///
struct _ns5__GetCRL
{
/// <PRE><BLOCKQUOTE>
///   The ID of the CRL to be returned.
/// </BLOCKQUOTE></PRE>
/// Element "CrlID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CRLID.
    ns5__CRLID                           CrlID                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCRLResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCRLResponse is a complexType.
///
struct _ns5__GetCRLResponse
{
/// <PRE><BLOCKQUOTE>
///   The CRL with the requested ID.
/// </BLOCKQUOTE></PRE>
/// Element "Crl" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CRL.
    struct ns5__CRL*                     Crl                            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCRLs
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCRLs is a complexType.
///
struct _ns5__GetAllCRLs
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCRLsResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCRLsResponse is a complexType.
///
struct _ns5__GetAllCRLsResponse
{
/// <PRE><BLOCKQUOTE>
///   A list of all CRLs that are stored in the keystore on the device.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns5__CRL* is 0..unbounded.
   $int                                  __sizeCrl                      0;
/// Array struct ns5__CRL* of size 0..unbounded.
    struct ns5__CRL*                     Crl                            0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCRL
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCRL is a complexType.
///
struct _ns5__DeleteCRL
{
/// <PRE><BLOCKQUOTE>
///   The ID of the CRL to be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "CrlID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CRLID.
    ns5__CRLID                           CrlID                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCRLResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCRLResponse is a complexType.
///
struct _ns5__DeleteCRLResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateCertPathValidationPolicy
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateCertPathValidationPolicy is a complexType.
///
struct _ns5__CreateCertPathValidationPolicy
{
/// <PRE><BLOCKQUOTE>
///   The alias to assign to the created certification path validation policy.
/// </BLOCKQUOTE></PRE>
/// Element "Alias" of XSD type xs:string.
    char*                                Alias                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The parameters of the certification path validation policy to be created.
/// </BLOCKQUOTE></PRE>
/// Element "Parameters" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertPathValidationParameters.
    struct ns5__CertPathValidationParameters*  Parameters                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The trust anchors of the certification path validation policy to be created.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns5__TrustAnchor* is 1..unbounded.
   $int                                  __sizeTrustAnchor              1;
/// Array struct ns5__TrustAnchor* of size 1..unbounded.
    struct ns5__TrustAnchor*             TrustAnchor                    1;
    struct _ns5__CreateCertPathValidationPolicy_anyParameters
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *anyParameters                  0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateCertPathValidationPolicyResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":CreateCertPathValidationPolicyResponse is a complexType.
///
struct _ns5__CreateCertPathValidationPolicyResponse
{
/// <PRE><BLOCKQUOTE>
///   The ID of the created certification path validation policy.
/// </BLOCKQUOTE></PRE>
/// Element "CertPathValidationPolicyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertPathValidationPolicyID.
    ns5__CertPathValidationPolicyID      CertPathValidationPolicyID     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCertPathValidationPolicy
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCertPathValidationPolicy is a complexType.
///
struct _ns5__GetCertPathValidationPolicy
{
/// <PRE><BLOCKQUOTE>
///   The ID of the certification path validation policy to be created.
/// </BLOCKQUOTE></PRE>
/// Element "CertPathValidationPolicyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertPathValidationPolicyID.
    ns5__CertPathValidationPolicyID      CertPathValidationPolicyID     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCertPathValidationPolicyResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetCertPathValidationPolicyResponse is a complexType.
///
struct _ns5__GetCertPathValidationPolicyResponse
{
/// <PRE><BLOCKQUOTE>
///   The certification path validation policy that is stored under the requested ID.
/// </BLOCKQUOTE></PRE>
/// Element "CertPathValidationPolicy" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertPathValidationPolicy.
    struct ns5__CertPathValidationPolicy*  CertPathValidationPolicy       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCertPathValidationPolicies
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCertPathValidationPolicies is a complexType.
///
struct _ns5__GetAllCertPathValidationPolicies
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCertPathValidationPoliciesResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAllCertPathValidationPoliciesResponse is a complexType.
///
struct _ns5__GetAllCertPathValidationPoliciesResponse
{
/// <PRE><BLOCKQUOTE>
///   A list of all certification path validation policies that are stored in the keystore on the device.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns5__CertPathValidationPolicy* is 0..unbounded.
   $int                                  __sizeCertPathValidationPolicy 0;
/// Array struct ns5__CertPathValidationPolicy* of size 0..unbounded.
    struct ns5__CertPathValidationPolicy*  CertPathValidationPolicy       0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCertPathValidationPolicy
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCertPathValidationPolicy is a complexType.
///
struct _ns5__DeleteCertPathValidationPolicy
{
/// <PRE><BLOCKQUOTE>
///   The ID of the certification path validation policy to be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "CertPathValidationPolicyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertPathValidationPolicyID.
    ns5__CertPathValidationPolicyID      CertPathValidationPolicyID     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCertPathValidationPolicyResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":DeleteCertPathValidationPolicyResponse is a complexType.
///
struct _ns5__DeleteCertPathValidationPolicyResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":SetClientAuthenticationRequired
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":SetClientAuthenticationRequired is a complexType.
///
struct _ns5__SetClientAuthenticationRequired
{
/// Element "clientAuthenticationRequired" of XSD type xs:boolean.
    enum xsd__boolean                    clientAuthenticationRequired   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":SetClientAuthenticationRequiredResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":SetClientAuthenticationRequiredResponse is a complexType.
///
struct _ns5__SetClientAuthenticationRequiredResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetClientAuthenticationRequired
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetClientAuthenticationRequired is a complexType.
///
struct _ns5__GetClientAuthenticationRequired
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetClientAuthenticationRequiredResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetClientAuthenticationRequiredResponse is a complexType.
///
struct _ns5__GetClientAuthenticationRequiredResponse
{
/// Element "clientAuthenticationRequired" of XSD type xs:boolean.
    enum xsd__boolean                    clientAuthenticationRequired   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":AddCertPathValidationPolicyAssignment
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":AddCertPathValidationPolicyAssignment is a complexType.
///
struct _ns5__AddCertPathValidationPolicyAssignment
{
/// <PRE><BLOCKQUOTE>
///   The ID of the certification path validation policy to assign to the TLS server.
/// </BLOCKQUOTE></PRE>
/// Element "CertPathValidationPolicyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertPathValidationPolicyID.
    ns5__CertPathValidationPolicyID      CertPathValidationPolicyID     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":AddCertPathValidationPolicyAssignmentResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":AddCertPathValidationPolicyAssignmentResponse is a complexType.
///
struct _ns5__AddCertPathValidationPolicyAssignmentResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":RemoveCertPathValidationPolicyAssignment
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":RemoveCertPathValidationPolicyAssignment is a complexType.
///
struct _ns5__RemoveCertPathValidationPolicyAssignment
{
/// <PRE><BLOCKQUOTE>
///   The ID of the certification path validation policy to de-assign from the TLS server.
/// </BLOCKQUOTE></PRE>
/// Element "CertPathValidationPolicyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertPathValidationPolicyID.
    ns5__CertPathValidationPolicyID      CertPathValidationPolicyID     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":RemoveCertPathValidationPolicyAssignmentResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":RemoveCertPathValidationPolicyAssignmentResponse is a complexType.
///
struct _ns5__RemoveCertPathValidationPolicyAssignmentResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":ReplaceCertPathValidationPolicyAssignment
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":ReplaceCertPathValidationPolicyAssignment is a complexType.
///
struct _ns5__ReplaceCertPathValidationPolicyAssignment
{
/// <PRE><BLOCKQUOTE>
///   The ID of the certification path validation policy to be de-assigned from the TLS server.
/// </BLOCKQUOTE></PRE>
/// Element "OldCertPathValidationPolicyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertPathValidationPolicyID.
    ns5__CertPathValidationPolicyID      OldCertPathValidationPolicyID  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ID of the certification path validation policy to assign to the TLS server.
/// </BLOCKQUOTE></PRE>
/// Element "NewCertPathValidationPolicyID" of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":CertPathValidationPolicyID.
    ns5__CertPathValidationPolicyID      NewCertPathValidationPolicyID  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":ReplaceCertPathValidationPolicyAssignmentResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":ReplaceCertPathValidationPolicyAssignmentResponse is a complexType.
///
struct _ns5__ReplaceCertPathValidationPolicyAssignmentResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAssignedCertPathValidationPolicies
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAssignedCertPathValidationPolicies is a complexType.
///
struct _ns5__GetAssignedCertPathValidationPolicies
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAssignedCertPathValidationPoliciesResponse
/// @brief "http://www.onvif.org/ver10/advancedsecurity/wsdl":GetAssignedCertPathValidationPoliciesResponse is a complexType.
///
struct _ns5__GetAssignedCertPathValidationPoliciesResponse
{
/// <PRE><BLOCKQUOTE>
///   A list of IDs of the certification path validation policies that are assigned to the TLS server.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns5__CertPathValidationPolicyID* is 0..unbounded.
   $int                                  __sizeCertPathValidationPolicyID 0;
/// Array ns5__CertPathValidationPolicyID* of size 0..unbounded.
    ns5__CertPathValidationPolicyID*     CertPathValidationPolicyID     0;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/accessrules/wsdl                              *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":ServiceCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The service capabilities reflect optional functionality of a service. The information is static
///   and does not change during device operation. The following capabilities are available:
/// </BLOCKQUOTE></PRE>
struct ns6__ServiceCapabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   The maximum number of entries returned by a single Get<Entity>List or Get<Entity>
///   request. The device shall never return more than this number of entities in a single
///   response.
/// </BLOCKQUOTE></PRE>
@/// Value range is [1..].
    unsigned int                                                       
                                         MaxLimit                       1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of access profiles supported by the device.
/// </BLOCKQUOTE></PRE>
@/// Value range is [1..].
    unsigned int                                                       
                                         MaxAccessProfiles              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of access policies per access profile supported by the device.
/// </BLOCKQUOTE></PRE>
@/// Value range is [1..].
    unsigned int                                                       
                                         MaxAccessPoliciesPerAccessProfile 1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not several access policies can refer to the same access point in an
///   access profile.
/// </BLOCKQUOTE></PRE>
/// Attribute "MultipleSchedulesPerAccessPointSupported" of XSD type xs:boolean.
   @enum xsd__boolean                    MultipleSchedulesPerAccessPointSupported 1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":AccessPolicy is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The access policy is an association of an access point and a schedule. It defines when an access
///   point can be accessed using an access profile which contains this access policy. If an access
///   profile contains several access policies specifying different schedules for the same access
///   point will result in a union of the schedules.
/// </BLOCKQUOTE></PRE>
struct ns6__AccessPolicy
{
/// <PRE><BLOCKQUOTE>
///   Reference to the schedule used by the access policy
/// </BLOCKQUOTE></PRE>
/// Element "ScheduleToken" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  ScheduleToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reference to the entity used by the rule engine, the entity type may be specified by the
///   optional EntityType field explained below but is typically an access point.
/// </BLOCKQUOTE></PRE>
/// Element "Entity" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Entity                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional entity type; if missing, an access point type as defined by the ONVIF Access
///   Control service should be assumed. This can also be represented by the QName value
///   tac:AccessPoint where tac is the namespace of Access Control Service Specification.
///   This field is provided for future extensions; it will allow an access policy being
///   extended to cover entity types other than access points as well.
/// </BLOCKQUOTE></PRE>
/// Element "EntityType" of XSD type xs:QName.
    _QName                               EntityType                     0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/accessrules/wsdl":AccessPolicyExtension.
    struct ns6__AccessPolicyExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":AccessPolicyExtension is a complexType.
///
struct ns6__AccessPolicyExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":AccessProfileExtension is a complexType.
///
struct ns6__AccessProfileExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":GetServiceCapabilities is a complexType.
///
struct _ns6__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _ns6__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capability response message contains the requested access rules
///   service capabilities using a hierarchical XML capability structure.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/accessrules/wsdl":ServiceCapabilities.
    struct ns6__ServiceCapabilities*     Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfileInfo
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfileInfo is a complexType.
///
struct _ns6__GetAccessProfileInfo
{
/// <PRE><BLOCKQUOTE>
///   Tokens of AccessProfileInfo items to get.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns3__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array ns3__ReferenceToken* of size 1..unbounded.
    ns3__ReferenceToken*                 Token                          1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfileInfoResponse
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfileInfoResponse is a complexType.
///
struct _ns6__GetAccessProfileInfoResponse
{
/// <PRE><BLOCKQUOTE>
///   List of AccessProfileInfo items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns6__AccessProfileInfo* is 0..unbounded.
   $int                                  __sizeAccessProfileInfo        0;
/// Array struct ns6__AccessProfileInfo* of size 0..unbounded.
    struct ns6__AccessProfileInfo*       AccessProfileInfo              0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfileInfoList
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfileInfoList is a complexType.
///
struct _ns6__GetAccessProfileInfoList
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of entries to return. If not specified, less than one
///   or higher than what the device supports, the number of items is determined by the
///   device.
/// </BLOCKQUOTE></PRE>
/// Element "Limit" of XSD type xs:int.
    int*                                 Limit                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Start returning entries from this start reference. If not specified,
///   entries shall start from the beginning of the dataset.
/// </BLOCKQUOTE></PRE>
/// Element "StartReference" of XSD type xs:string.
    char*                                StartReference                 0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfileInfoListResponse
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfileInfoListResponse is a complexType.
///
struct _ns6__GetAccessProfileInfoListResponse
{
/// <PRE><BLOCKQUOTE>
///   StartReference to use in next call to get the following items. If
///   absent, no more items to get.
/// </BLOCKQUOTE></PRE>
/// Element "NextStartReference" of XSD type xs:string.
    char*                                NextStartReference             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of AccessProfileInfo items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns6__AccessProfileInfo* is 0..unbounded.
   $int                                  __sizeAccessProfileInfo        0;
/// Array struct ns6__AccessProfileInfo* of size 0..unbounded.
    struct ns6__AccessProfileInfo*       AccessProfileInfo              0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfiles
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfiles is a complexType.
///
struct _ns6__GetAccessProfiles
{
/// <PRE><BLOCKQUOTE>
///   Tokens of AccessProfile items to get.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns3__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array ns3__ReferenceToken* of size 1..unbounded.
    ns3__ReferenceToken*                 Token                          1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfilesResponse
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfilesResponse is a complexType.
///
struct _ns6__GetAccessProfilesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of Access Profile items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns6__AccessProfile* is 0..unbounded.
   $int                                  __sizeAccessProfile            0;
/// Array struct ns6__AccessProfile* of size 0..unbounded.
    struct ns6__AccessProfile*           AccessProfile                  0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfileList
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfileList is a complexType.
///
struct _ns6__GetAccessProfileList
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of entries to return. If not specified, less than one
///   or higher than what the device supports, the number of items is determined by the
///   device.
/// </BLOCKQUOTE></PRE>
/// Element "Limit" of XSD type xs:int.
    int*                                 Limit                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Start returning entries from this start reference. If not specified,
///   entries shall start from the beginning of the dataset.
/// </BLOCKQUOTE></PRE>
/// Element "StartReference" of XSD type xs:string.
    char*                                StartReference                 0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfileListResponse
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":GetAccessProfileListResponse is a complexType.
///
struct _ns6__GetAccessProfileListResponse
{
/// <PRE><BLOCKQUOTE>
///   StartReference to use in next call to get the following items. If
///   absent, no more items to get.
/// </BLOCKQUOTE></PRE>
/// Element "NextStartReference" of XSD type xs:string.
    char*                                NextStartReference             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of Access Profile items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns6__AccessProfile* is 0..unbounded.
   $int                                  __sizeAccessProfile            0;
/// Array struct ns6__AccessProfile* of size 0..unbounded.
    struct ns6__AccessProfile*           AccessProfile                  0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":CreateAccessProfile
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":CreateAccessProfile is a complexType.
///
struct _ns6__CreateAccessProfile
{
/// <PRE><BLOCKQUOTE>
///   The AccessProfile to create.
/// </BLOCKQUOTE></PRE>
/// Element "AccessProfile" of XSD type "http://www.onvif.org/ver10/accessrules/wsdl":AccessProfile.
    struct ns6__AccessProfile*           AccessProfile                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":CreateAccessProfileResponse
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":CreateAccessProfileResponse is a complexType.
///
struct _ns6__CreateAccessProfileResponse
{
/// <PRE><BLOCKQUOTE>
///   The Token of created AccessProfile.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":ModifyAccessProfile
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":ModifyAccessProfile is a complexType.
///
struct _ns6__ModifyAccessProfile
{
/// <PRE><BLOCKQUOTE>
///   The details of Access Profile
/// </BLOCKQUOTE></PRE>
/// Element "AccessProfile" of XSD type "http://www.onvif.org/ver10/accessrules/wsdl":AccessProfile.
    struct ns6__AccessProfile*           AccessProfile                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":ModifyAccessProfileResponse
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":ModifyAccessProfileResponse is a complexType.
///
struct _ns6__ModifyAccessProfileResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":DeleteAccessProfile
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":DeleteAccessProfile is a complexType.
///
struct _ns6__DeleteAccessProfile
{
/// <PRE><BLOCKQUOTE>
///   The token of the access profile to delete.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/accessrules/wsdl":DeleteAccessProfileResponse
/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":DeleteAccessProfileResponse is a complexType.
///
struct _ns6__DeleteAccessProfileResponse
{
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/credential/wsdl                               *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/credential/wsdl":ServiceCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The service capabilities reflect optional functionality of a service. The information is static
///   and does not change during device operation. The following capabilities are available:
/// </BLOCKQUOTE></PRE>
struct ns7__ServiceCapabilities
{
/// <PRE><BLOCKQUOTE>
///   A list of identifier types that the device supports. Supported identifiers starting with
///   the prefix pt: are reserved to define PACS specific identifier types and these reserved
///   identifier types shall all share the "pt:<Name>" syntax.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns3__Name* is 1..unbounded.
   $int                                  __sizeSupportedIdentifierType  1;
/// Array ns3__Name* of size 1..unbounded.
    ns3__Name*                           SupportedIdentifierType        1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/credential/wsdl":ServiceCapabilitiesExtension.
    struct ns7__ServiceCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of entries returned by a single Get<Entity>List or Get<Entity>
///   request.
///   The device shall never return more than this number of entities in a single response.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxLimit" of XSD type "http://www.onvif.org/ver10/pacs":PositiveInteger.
   @ns3__PositiveInteger                 MaxLimit                       1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the device supports credential validity.
/// </BLOCKQUOTE></PRE>
/// Attribute "CredentialValiditySupported" of XSD type xs:boolean.
   @enum xsd__boolean                    CredentialValiditySupported    1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the device supports validity on the association between a credential and an
///   access profile.
/// </BLOCKQUOTE></PRE>
/// Attribute "CredentialAccessProfileValiditySupported" of XSD type xs:boolean.
   @enum xsd__boolean                    CredentialAccessProfileValiditySupported 1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the device supports both date and time value for validity. If set to false,
///   then the time value is ignored.
/// </BLOCKQUOTE></PRE>
/// Attribute "ValiditySupportsTimeValue" of XSD type xs:boolean.
   @enum xsd__boolean                    ValiditySupportsTimeValue      1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum number of credential supported by the device.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxCredentials" of XSD type "http://www.onvif.org/ver10/pacs":PositiveInteger.
   @ns3__PositiveInteger                 MaxCredentials                 1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum number of access profiles for a credential.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxAccessProfilesPerCredential" of XSD type "http://www.onvif.org/ver10/pacs":PositiveInteger.
   @ns3__PositiveInteger                 MaxAccessProfilesPerCredential 1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the device supports resetting of anti-passback violations and notifying on
///   anti-passback violations.
/// </BLOCKQUOTE></PRE>
/// Attribute "ResetAntipassbackSupported" of XSD type xs:boolean.
   @enum xsd__boolean                    ResetAntipassbackSupported     1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/credential/wsdl":ServiceCapabilitiesExtension is a complexType.
///
struct ns7__ServiceCapabilitiesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/credential/wsdl":CredentialExtension is a complexType.
///
struct ns7__CredentialExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/credential/wsdl":CredentialIdentifier is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A credential identifier is a card number, unique card information, PIN or
///   biometric information such as fingerprint, iris, vein, face recognition, that can be validated
///   in an access point.
/// </BLOCKQUOTE></PRE>
struct ns7__CredentialIdentifier
{
/// <PRE><BLOCKQUOTE>
///   Contains the details of the credential identifier type. Is of type
///   CredentialIdentifierType.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/credential/wsdl":CredentialIdentifierType.
    struct ns7__CredentialIdentifierType*  Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If set to true, this credential identifier is not considered for
///   authentication.
/// </BLOCKQUOTE></PRE>
/// Element "ExemptedFromAuthentication" of XSD type xs:boolean.
    enum xsd__boolean                    ExemptedFromAuthentication     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The value of the identifier in hexadecimal representation.
/// </BLOCKQUOTE></PRE>
/// Element "Value" of XSD type xs:hexBinary.
    struct xsd__hexBinary                Value                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/credential/wsdl":CredentialIdentifierType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Specifies the name of credential identifier type and its format for the credential
///   value.
/// </BLOCKQUOTE></PRE>
struct ns7__CredentialIdentifierType
{
/// <PRE><BLOCKQUOTE>
///   The name of the credential identifier type, such as pt:Card, pt:PIN,
///   etc.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Specifies the format of the credential value for the specified identifier
///   type name.
/// </BLOCKQUOTE></PRE>
/// Element "FormatType" of XSD type xs:string.
    char*                                FormatType                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/credential/wsdl":CredentialAccessProfile is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The association between a credential and an access profile.
/// </BLOCKQUOTE></PRE>
struct ns7__CredentialAccessProfile
{
/// <PRE><BLOCKQUOTE>
///   The reference token of the associated access profile.
/// </BLOCKQUOTE></PRE>
/// Element "AccessProfileToken" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  AccessProfileToken             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The start date/time of the validity for the association between the
///   credential and the access profile. If the ValiditySupportsTimeValue capability is set to
///   false, then only date is supported (time is ignored).
/// </BLOCKQUOTE></PRE>
/// Element "ValidFrom" of XSD type xs:dateTime.
    time_t*                              ValidFrom                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The end date/time of the validity for the association between the
///   credential and the access profile. If the ValiditySupportsTimeValue capability is set to
///   false, then only date is supported (time is ignored).
/// </BLOCKQUOTE></PRE>
/// Element "ValidTo" of XSD type xs:dateTime.
    time_t*                              ValidTo                        0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/credential/wsdl":CredentialState is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The CredentialState structure contains information about the state of the credential and
///   optionally the reason of why the credential was disabled.
/// </BLOCKQUOTE></PRE>
struct ns7__CredentialState
{
/// <PRE><BLOCKQUOTE>
///   True if the credential is enabled or false if the credential is
///   disabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Predefined ONVIF reasons as mentioned in the section 4.2.1.8
///   DisabledReasons of credential service specification document. For any other reason, free
///   text can be used.
/// </BLOCKQUOTE></PRE>
/// Element "Reason" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Reason                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A structure indicating the anti-passback state. This field shall be
///   supported if the ResetAntipassbackSupported capability is set to true.
/// </BLOCKQUOTE></PRE>
/// Element "AntipassbackState" of XSD type "http://www.onvif.org/ver10/credential/wsdl":AntipassbackState.
    struct ns7__AntipassbackState*       AntipassbackState              0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/credential/wsdl":CredentialExtension.
    struct ns7__CredentialExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/credential/wsdl":CredentialStateExtension is a complexType.
///
struct ns7__CredentialStateExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/credential/wsdl":AntipassbackState is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A structure containing anti-passback related state information.
/// </BLOCKQUOTE></PRE>
struct ns7__AntipassbackState
{
/// <PRE><BLOCKQUOTE>
///   Indicates if anti-passback is violated for the credential.
/// </BLOCKQUOTE></PRE>
/// Element "AntipassbackViolated" of XSD type xs:boolean.
    enum xsd__boolean                    AntipassbackViolated           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/credential/wsdl":CredentialIdentifierFormatTypeInfo is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Contains information about a format type.
/// </BLOCKQUOTE></PRE>
struct ns7__CredentialIdentifierFormatTypeInfo
{
/// <PRE><BLOCKQUOTE>
///   A format type supported by the device. A list of supported format types is
///   provided in [ISO 16484-5:2014-09 Annex P]. The BACnet type "CUSTOM" is not used in this
///   specification. Instead device manufacturers can define their own format types.
/// </BLOCKQUOTE></PRE>
/// Element "FormatType" of XSD type xs:string.
    char*                                FormatType                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   User readable description of the credential identifier format type. It
///   shall be up to 1024 characters. For custom types, it is recommended to describe how the
///   octet string is encoded (following the structure in column Authentication Factor Value
///   Encoding of [ISO 16484-5:2014-09 Annex P]).
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/pacs":Description.
    ns3__Description                     Description                    1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/credential/wsdl":CredentialIdentifierFormatTypeInfoExtension.
    struct ns7__CredentialIdentifierFormatTypeInfoExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/credential/wsdl":CredentialIdentifierFormatTypeInfoExtension is a complexType.
///
struct ns7__CredentialIdentifierFormatTypeInfoExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetServiceCapabilities is a complexType.
///
struct _ns7__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _ns7__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capability response message contains the requested credential
///   service capabilities using a hierarchical XML capability structure.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/credential/wsdl":ServiceCapabilities.
    struct ns7__ServiceCapabilities*     Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetSupportedFormatTypes
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetSupportedFormatTypes is a complexType.
///
struct _ns7__GetSupportedFormatTypes
{
/// <PRE><BLOCKQUOTE>
///   Name of the credential identifier type
/// </BLOCKQUOTE></PRE>
/// Element "CredentialIdentifierTypeName" of XSD type xs:string.
    char*                                CredentialIdentifierTypeName   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetSupportedFormatTypesResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetSupportedFormatTypesResponse is a complexType.
///
struct _ns7__GetSupportedFormatTypesResponse
{
/// <PRE><BLOCKQUOTE>
///   Identifier format type
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns7__CredentialIdentifierFormatTypeInfo* is 1..unbounded.
   $int                                  __sizeFormatTypeInfo           1;
/// Array struct ns7__CredentialIdentifierFormatTypeInfo* of size 1..unbounded.
    struct ns7__CredentialIdentifierFormatTypeInfo*  FormatTypeInfo                 1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetCredentialInfo
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetCredentialInfo is a complexType.
///
struct _ns7__GetCredentialInfo
{
/// <PRE><BLOCKQUOTE>
///   Tokens of CredentialInfo items to get.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns3__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array ns3__ReferenceToken* of size 1..unbounded.
    ns3__ReferenceToken*                 Token                          1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetCredentialInfoResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetCredentialInfoResponse is a complexType.
///
struct _ns7__GetCredentialInfoResponse
{
/// <PRE><BLOCKQUOTE>
///   List of CredentialInfo items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns7__CredentialInfo* is 0..unbounded.
   $int                                  __sizeCredentialInfo           0;
/// Array struct ns7__CredentialInfo* of size 0..unbounded.
    struct ns7__CredentialInfo*          CredentialInfo                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetCredentialInfoList
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetCredentialInfoList is a complexType.
///
struct _ns7__GetCredentialInfoList
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of entries to return. If not specified, less than one
///   or higher than what the device supports, the number of items is determined by the
///   device.
/// </BLOCKQUOTE></PRE>
/// Element "Limit" of XSD type xs:int.
    int*                                 Limit                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Start returning entries from this start reference. If not specified,
///   entries shall start from the beginning of the dataset.
/// </BLOCKQUOTE></PRE>
/// Element "StartReference" of XSD type xs:string.
    char*                                StartReference                 0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetCredentialInfoListResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetCredentialInfoListResponse is a complexType.
///
struct _ns7__GetCredentialInfoListResponse
{
/// <PRE><BLOCKQUOTE>
///   StartReference to use in next call to get the following items. If
///   absent, no more items to get.
/// </BLOCKQUOTE></PRE>
/// Element "NextStartReference" of XSD type xs:string.
    char*                                NextStartReference             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of CredentialInfo items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns7__CredentialInfo* is 0..unbounded.
   $int                                  __sizeCredentialInfo           0;
/// Array struct ns7__CredentialInfo* of size 0..unbounded.
    struct ns7__CredentialInfo*          CredentialInfo                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetCredentials
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetCredentials is a complexType.
///
struct _ns7__GetCredentials
{
/// <PRE><BLOCKQUOTE>
///   Token of Credentials to get
/// </BLOCKQUOTE></PRE>
/// Size of array of ns3__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array ns3__ReferenceToken* of size 1..unbounded.
    ns3__ReferenceToken*                 Token                          1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetCredentialsResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetCredentialsResponse is a complexType.
///
struct _ns7__GetCredentialsResponse
{
/// <PRE><BLOCKQUOTE>
///   List of Credential items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns7__Credential* is 0..unbounded.
   $int                                  __sizeCredential               0;
/// Array struct ns7__Credential* of size 0..unbounded.
    struct ns7__Credential*              Credential                     0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetCredentialList
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetCredentialList is a complexType.
///
struct _ns7__GetCredentialList
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of entries to return. If not specified, less than one
///   or higher than what the device supports, the number of items is determined by the
///   device.
/// </BLOCKQUOTE></PRE>
/// Element "Limit" of XSD type xs:int.
    int*                                 Limit                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Start returning entries from this start reference. If not specified,
///   entries shall start from the beginning of the dataset.
/// </BLOCKQUOTE></PRE>
/// Element "StartReference" of XSD type xs:string.
    char*                                StartReference                 0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetCredentialListResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetCredentialListResponse is a complexType.
///
struct _ns7__GetCredentialListResponse
{
/// <PRE><BLOCKQUOTE>
///   StartReference to use in next call to get the following items. If
///   absent, no more items to get.
/// </BLOCKQUOTE></PRE>
/// Element "NextStartReference" of XSD type xs:string.
    char*                                NextStartReference             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of Credential items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns7__Credential* is 0..unbounded.
   $int                                  __sizeCredential               0;
/// Array struct ns7__Credential* of size 0..unbounded.
    struct ns7__Credential*              Credential                     0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":CreateCredential
/// @brief "http://www.onvif.org/ver10/credential/wsdl":CreateCredential is a complexType.
///
struct _ns7__CreateCredential
{
/// <PRE><BLOCKQUOTE>
///   The credential to create.
/// </BLOCKQUOTE></PRE>
/// Element "Credential" of XSD type "http://www.onvif.org/ver10/credential/wsdl":Credential.
    struct ns7__Credential*              Credential                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The state of the credential.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/credential/wsdl":CredentialState.
    struct ns7__CredentialState*         State                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":CreateCredentialResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":CreateCredentialResponse is a complexType.
///
struct _ns7__CreateCredentialResponse
{
/// <PRE><BLOCKQUOTE>
///   The token of the created credential
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":ModifyCredential
/// @brief "http://www.onvif.org/ver10/credential/wsdl":ModifyCredential is a complexType.
///
struct _ns7__ModifyCredential
{
/// <PRE><BLOCKQUOTE>
///   Details of the credential.
/// </BLOCKQUOTE></PRE>
/// Element "Credential" of XSD type "http://www.onvif.org/ver10/credential/wsdl":Credential.
    struct ns7__Credential*              Credential                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":ModifyCredentialResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":ModifyCredentialResponse is a complexType.
///
struct _ns7__ModifyCredentialResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":DeleteCredential
/// @brief "http://www.onvif.org/ver10/credential/wsdl":DeleteCredential is a complexType.
///
struct _ns7__DeleteCredential
{
/// <PRE><BLOCKQUOTE>
///   The token of the credential to delete.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":DeleteCredentialResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":DeleteCredentialResponse is a complexType.
///
struct _ns7__DeleteCredentialResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetCredentialState
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetCredentialState is a complexType.
///
struct _ns7__GetCredentialState
{
/// <PRE><BLOCKQUOTE>
///   Token of Credential
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetCredentialStateResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetCredentialStateResponse is a complexType.
///
struct _ns7__GetCredentialStateResponse
{
/// <PRE><BLOCKQUOTE>
///   State of the credential.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/credential/wsdl":CredentialState.
    struct ns7__CredentialState*         State                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":EnableCredential
/// @brief "http://www.onvif.org/ver10/credential/wsdl":EnableCredential is a complexType.
///
struct _ns7__EnableCredential
{
/// <PRE><BLOCKQUOTE>
///   The token of the credential
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reason for enabling the credential.
/// </BLOCKQUOTE></PRE>
/// Element "Reason" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Reason                         0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":EnableCredentialResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":EnableCredentialResponse is a complexType.
///
struct _ns7__EnableCredentialResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":DisableCredential
/// @brief "http://www.onvif.org/ver10/credential/wsdl":DisableCredential is a complexType.
///
struct _ns7__DisableCredential
{
/// <PRE><BLOCKQUOTE>
///   Token of the Credential
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reason for disabling the credential
/// </BLOCKQUOTE></PRE>
/// Element "Reason" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Reason                         0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":DisableCredentialResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":DisableCredentialResponse is a complexType.
///
struct _ns7__DisableCredentialResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":ResetAntipassbackViolation
/// @brief "http://www.onvif.org/ver10/credential/wsdl":ResetAntipassbackViolation is a complexType.
///
struct _ns7__ResetAntipassbackViolation
{
/// <PRE><BLOCKQUOTE>
///   Token of the Credential
/// </BLOCKQUOTE></PRE>
/// Element "CredentialToken" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  CredentialToken                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":ResetAntipassbackViolationResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":ResetAntipassbackViolationResponse is a complexType.
///
struct _ns7__ResetAntipassbackViolationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetCredentialIdentifiers
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetCredentialIdentifiers is a complexType.
///
struct _ns7__GetCredentialIdentifiers
{
/// <PRE><BLOCKQUOTE>
///   Token of the Credential
/// </BLOCKQUOTE></PRE>
/// Element "CredentialToken" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  CredentialToken                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetCredentialIdentifiersResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetCredentialIdentifiersResponse is a complexType.
///
struct _ns7__GetCredentialIdentifiersResponse
{
/// <PRE><BLOCKQUOTE>
///   Identifier of the credential
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns7__CredentialIdentifier* is 0..unbounded.
   $int                                  __sizeCredentialIdentifier     0;
/// Array struct ns7__CredentialIdentifier* of size 0..unbounded.
    struct ns7__CredentialIdentifier*    CredentialIdentifier           0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":SetCredentialIdentifier
/// @brief "http://www.onvif.org/ver10/credential/wsdl":SetCredentialIdentifier is a complexType.
///
struct _ns7__SetCredentialIdentifier
{
/// <PRE><BLOCKQUOTE>
///   Token of the Credential
/// </BLOCKQUOTE></PRE>
/// Element "CredentialToken" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  CredentialToken                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Identifier of the credential
/// </BLOCKQUOTE></PRE>
/// Element "CredentialIdentifier" of XSD type "http://www.onvif.org/ver10/credential/wsdl":CredentialIdentifier.
    struct ns7__CredentialIdentifier*    CredentialIdentifier           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":SetCredentialIdentifierResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":SetCredentialIdentifierResponse is a complexType.
///
struct _ns7__SetCredentialIdentifierResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":DeleteCredentialIdentifier
/// @brief "http://www.onvif.org/ver10/credential/wsdl":DeleteCredentialIdentifier is a complexType.
///
struct _ns7__DeleteCredentialIdentifier
{
/// <PRE><BLOCKQUOTE>
///   Token of the Credential
/// </BLOCKQUOTE></PRE>
/// Element "CredentialToken" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  CredentialToken                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Identifier type name of a credential
/// </BLOCKQUOTE></PRE>
/// Element "CredentialIdentifierTypeName" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            CredentialIdentifierTypeName   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":DeleteCredentialIdentifierResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":DeleteCredentialIdentifierResponse is a complexType.
///
struct _ns7__DeleteCredentialIdentifierResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetCredentialAccessProfiles
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetCredentialAccessProfiles is a complexType.
///
struct _ns7__GetCredentialAccessProfiles
{
/// <PRE><BLOCKQUOTE>
///   Token of the Credential
/// </BLOCKQUOTE></PRE>
/// Element "CredentialToken" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  CredentialToken                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":GetCredentialAccessProfilesResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":GetCredentialAccessProfilesResponse is a complexType.
///
struct _ns7__GetCredentialAccessProfilesResponse
{
/// <PRE><BLOCKQUOTE>
///   Access Profiles of the credential
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns7__CredentialAccessProfile* is 0..unbounded.
   $int                                  __sizeCredentialAccessProfile  0;
/// Array struct ns7__CredentialAccessProfile* of size 0..unbounded.
    struct ns7__CredentialAccessProfile*  CredentialAccessProfile        0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":SetCredentialAccessProfiles
/// @brief "http://www.onvif.org/ver10/credential/wsdl":SetCredentialAccessProfiles is a complexType.
///
struct _ns7__SetCredentialAccessProfiles
{
/// <PRE><BLOCKQUOTE>
///   Token of the Credential
/// </BLOCKQUOTE></PRE>
/// Element "CredentialToken" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  CredentialToken                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Access Profile of the credential
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns7__CredentialAccessProfile* is 1..unbounded.
   $int                                  __sizeCredentialAccessProfile  1;
/// Array struct ns7__CredentialAccessProfile* of size 1..unbounded.
    struct ns7__CredentialAccessProfile*  CredentialAccessProfile        1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":SetCredentialAccessProfilesResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":SetCredentialAccessProfilesResponse is a complexType.
///
struct _ns7__SetCredentialAccessProfilesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":DeleteCredentialAccessProfiles
/// @brief "http://www.onvif.org/ver10/credential/wsdl":DeleteCredentialAccessProfiles is a complexType.
///
struct _ns7__DeleteCredentialAccessProfiles
{
/// <PRE><BLOCKQUOTE>
///   Token of the Credential
/// </BLOCKQUOTE></PRE>
/// Element "CredentialToken" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  CredentialToken                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of Access Profile
/// </BLOCKQUOTE></PRE>
/// Size of array of ns3__ReferenceToken* is 1..unbounded.
   $int                                  __sizeAccessProfileToken       1;
/// Array ns3__ReferenceToken* of size 1..unbounded.
    ns3__ReferenceToken*                 AccessProfileToken             1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/credential/wsdl":DeleteCredentialAccessProfilesResponse
/// @brief "http://www.onvif.org/ver10/credential/wsdl":DeleteCredentialAccessProfilesResponse is a complexType.
///
struct _ns7__DeleteCredentialAccessProfilesResponse
{
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schedule/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schedule/wsdl":ServiceCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The service capabilities reflect optional functionality of a service.
///   The information is static and does not change during device operation.
///   The following capabilities are available:
/// </BLOCKQUOTE></PRE>
struct ns8__ServiceCapabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   The maximum number of entries returned by a single Get<Entity>List or
///   Get<Entity> request. The device shall never return more than this number
///   of entities in a single response.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxLimit" of XSD type "http://www.onvif.org/ver10/pacs":PositiveInteger.
   @ns3__PositiveInteger                 MaxLimit                       1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of schedules the device supports.
///   The device shall support at least one schedule.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxSchedules" of XSD type "http://www.onvif.org/ver10/pacs":PositiveInteger.
   @ns3__PositiveInteger                 MaxSchedules                   1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of time periods per day the device supports
///   in a schedule including special days schedule. The device shall support
///   at least one time period per day.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxTimePeriodsPerDay" of XSD type "http://www.onvif.org/ver10/pacs":PositiveInteger.
   @ns3__PositiveInteger                 MaxTimePeriodsPerDay           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of special day group entities the device supports.
///   The device shall support at least one SpecialDayGroup entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxSpecialDayGroups" of XSD type "http://www.onvif.org/ver10/pacs":PositiveInteger.
   @ns3__PositiveInteger                 MaxSpecialDayGroups            1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of days per SpecialDayGroup entity the device
///   supports. The device shall support at least one day per SpecialDayGroup entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxDaysInSpecialDayGroup" of XSD type "http://www.onvif.org/ver10/pacs":PositiveInteger.
   @ns3__PositiveInteger                 MaxDaysInSpecialDayGroup       1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of SpecialDaysSchedule entities referred by a
///   schedule that the device supports.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxSpecialDaysSchedules" of XSD type "http://www.onvif.org/ver10/pacs":PositiveInteger.
   @ns3__PositiveInteger                 MaxSpecialDaysSchedules        1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   For schedules:
///   If this capability is supported, then all iCalendar recurrence types shall
///   be supported by the device. The device shall also support the start and end dates (or
///   iCalendar occurrence count) in recurring events (see iCalendar examples in section 3).
///   If this capability is not supported, then only the weekly iCalendar recurrence
///   type shall be supported. Non-recurring events and other recurring types are
///   not supported. The device shall only accept a start date with the year 1970
///   (the month and day is needed to reflect the week day of the recurrence)
///   and will not accept an occurrence count (or iCalendar until date) in recurring events.
///   For special days (only applicable if SpecialDaysSupported is set to true):
///   If this capability is supported, then all iCalendar recurrence types shall
///   be supported by the device. The device shall also support the start and
///   end dates (or occurrence count) in recurring events.
///   If this capability is not supported, then only non-recurring special days are supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "ExtendedRecurrenceSupported" of XSD type xs:boolean.
   @enum xsd__boolean                    ExtendedRecurrenceSupported    1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   If this capability is supported, then the device shall support special days.
/// </BLOCKQUOTE></PRE>
/// Attribute "SpecialDaysSupported" of XSD type xs:boolean.
   @enum xsd__boolean                    SpecialDaysSupported           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   If this capability is set to true, the device shall implement the
///   GetScheduleState command, and shall notify subscribing clients whenever
///   schedules become active or inactive.
/// </BLOCKQUOTE></PRE>
/// Attribute "StateReportingSupported" of XSD type xs:boolean.
   @enum xsd__boolean                    StateReportingSupported        1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schedule/wsdl":ScheduleExtension is a complexType.
///
struct ns8__ScheduleExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schedule/wsdl":SpecialDaysSchedule is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A override schedule that defines alternate time periods for a group of special days.
/// </BLOCKQUOTE></PRE>
struct ns8__SpecialDaysSchedule
{
/// <PRE><BLOCKQUOTE>
///   Indicates the list of special days in a schedule.
/// </BLOCKQUOTE></PRE>
/// Element "GroupToken" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  GroupToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the alternate time periods for the list of special days
///   (overrides the regular schedule). For example, the regular schedule indicates
///   that it is active from 8AM to 5PM on Mondays. However, this particular
///   Monday is a special day, and the alternate time periods state that the
///   schedule is active from 9 AM to 11 AM and 1 PM to 4 PM.
///   If no time periods are defined, then no access is allowed.
///   Is of type TimePeriod.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns8__TimePeriod* is 0..unbounded.
   $int                                  __sizeTimeRange                0;
/// Array struct ns8__TimePeriod* of size 0..unbounded.
    struct ns8__TimePeriod*              TimeRange                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schedule/wsdl":SpecialDaysScheduleExtension.
    struct ns8__SpecialDaysScheduleExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schedule/wsdl":SpecialDaysScheduleExtension is a complexType.
///
struct ns8__SpecialDaysScheduleExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schedule/wsdl":ScheduleState is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The ScheduleState contains state information for a schedule.
/// </BLOCKQUOTE></PRE>
struct ns8__ScheduleState
{
/// <PRE><BLOCKQUOTE>
///   Indicates that the current time is within the boundaries of the schedule
///   or its special days schedules time periods. For example, if this
///   schedule is being used for triggering automatic recording on a video source,
///   the Active flag will be true when the schedule-based recording is supposed to record.
/// </BLOCKQUOTE></PRE>
/// Element "Active" of XSD type xs:boolean.
    enum xsd__boolean                    Active                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates that the current time is within the boundaries of its special
///   days schedules time periods. For example, if this schedule is being used
///   for recording at a lower frame rate on a video source during special days,
///   the SpecialDay flag will be true. If special days are not supported by the device,
///   this field may be omitted and interpreted as false by the client.
/// </BLOCKQUOTE></PRE>
/// Element "SpecialDay" of XSD type xs:boolean.
    enum xsd__boolean*                   SpecialDay                     0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schedule/wsdl":ScheduleStateExtension.
    struct ns8__ScheduleStateExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schedule/wsdl":ScheduleStateExtension is a complexType.
///
struct ns8__ScheduleStateExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schedule/wsdl":TimePeriod is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A time period defines a start and end time. For full day access, the
///   start time ="00:00:00" with no defined end time. For a time period with no
///   end time, the schedule runs until midnight. The end time must always be greater
///   than the start time, otherwise an InvalidArgVal error messages is generated by the device.
/// </BLOCKQUOTE></PRE>
struct ns8__TimePeriod
{
/// <PRE><BLOCKQUOTE>
///   Indicates the start time.
/// </BLOCKQUOTE></PRE>
/// Element "From" of XSD type xs:time.
    xsd__time                            From                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the end time. Is optional, if omitted, the period ends at midnight.
///   The end time is exclusive, meaning that that exact moment in time is not
///   part of the period. To determine if a moment in time (t) is part of a time period,
///   the formula StartTime t < EndTime is used.
/// </BLOCKQUOTE></PRE>
/// Element "Until" of XSD type xs:time.
    xsd__time                            Until                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schedule/wsdl":TimePeriodExtension.
    struct ns8__TimePeriodExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schedule/wsdl":TimePeriodExtension is a complexType.
///
struct ns8__TimePeriodExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schedule/wsdl":SpecialDayGroupExtension is a complexType.
///
struct ns8__SpecialDayGroupExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetServiceCapabilities is a complexType.
///
struct _ns8__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _ns8__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capability response message contains the requested schedule service
///   capabilities using a hierarchical XML capability structure.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/schedule/wsdl":ServiceCapabilities.
    struct ns8__ServiceCapabilities*     Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleState
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleState is a complexType.
///
struct _ns8__GetScheduleState
{
/// <PRE><BLOCKQUOTE>
///   Token of schedule instance to get ScheduleState.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleStateResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleStateResponse is a complexType.
///
struct _ns8__GetScheduleStateResponse
{
/// <PRE><BLOCKQUOTE>
///   ScheduleState item.
/// </BLOCKQUOTE></PRE>
/// Element "ScheduleState" of XSD type "http://www.onvif.org/ver10/schedule/wsdl":ScheduleState.
    struct ns8__ScheduleState*           ScheduleState                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleInfo
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleInfo is a complexType.
///
struct _ns8__GetScheduleInfo
{
/// <PRE><BLOCKQUOTE>
///   Tokens of ScheduleInfo items to get.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns3__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array ns3__ReferenceToken* of size 1..unbounded.
    ns3__ReferenceToken*                 Token                          1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleInfoResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleInfoResponse is a complexType.
///
struct _ns8__GetScheduleInfoResponse
{
/// <PRE><BLOCKQUOTE>
///   List of ScheduleInfo items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns8__ScheduleInfo* is 0..unbounded.
   $int                                  __sizeScheduleInfo             0;
/// Array struct ns8__ScheduleInfo* of size 0..unbounded.
    struct ns8__ScheduleInfo*            ScheduleInfo                   0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleInfoList
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleInfoList is a complexType.
///
struct _ns8__GetScheduleInfoList
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of entries to return. If not specified, less than one
///   or higher than what the device supports, the number of items is
///   determined by the device.
/// </BLOCKQUOTE></PRE>
/// Element "Limit" of XSD type xs:int.
    int*                                 Limit                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Start returning entries from this start reference.
///   If not specified, entries shall start from the beginning of the dataset.
/// </BLOCKQUOTE></PRE>
/// Element "StartReference" of XSD type xs:string.
    char*                                StartReference                 0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleInfoListResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleInfoListResponse is a complexType.
///
struct _ns8__GetScheduleInfoListResponse
{
/// <PRE><BLOCKQUOTE>
///   StartReference to use in next call to get the following items.
///   If absent, no more items to get.
/// </BLOCKQUOTE></PRE>
/// Element "NextStartReference" of XSD type xs:string.
    char*                                NextStartReference             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of ScheduleInfo items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns8__ScheduleInfo* is 0..unbounded.
   $int                                  __sizeScheduleInfo             0;
/// Array struct ns8__ScheduleInfo* of size 0..unbounded.
    struct ns8__ScheduleInfo*            ScheduleInfo                   0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetSchedules
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetSchedules is a complexType.
///
struct _ns8__GetSchedules
{
/// <PRE><BLOCKQUOTE>
///   Tokens of Schedule items to get
/// </BLOCKQUOTE></PRE>
/// Size of array of ns3__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array ns3__ReferenceToken* of size 1..unbounded.
    ns3__ReferenceToken*                 Token                          1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetSchedulesResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetSchedulesResponse is a complexType.
///
struct _ns8__GetSchedulesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of schedule items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns8__Schedule* is 0..unbounded.
   $int                                  __sizeSchedule                 0;
/// Array struct ns8__Schedule* of size 0..unbounded.
    struct ns8__Schedule*                Schedule                       0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleList
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleList is a complexType.
///
struct _ns8__GetScheduleList
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of entries to return.
///   If not specified, less than one or higher than what the device supports,
///   the number of items is determined by the device.
/// </BLOCKQUOTE></PRE>
/// Element "Limit" of XSD type xs:int.
    int*                                 Limit                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Start returning entries from this start reference.
///   If not specified, entries shall start from the beginning of the dataset.
/// </BLOCKQUOTE></PRE>
/// Element "StartReference" of XSD type xs:string.
    char*                                StartReference                 0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleListResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetScheduleListResponse is a complexType.
///
struct _ns8__GetScheduleListResponse
{
/// <PRE><BLOCKQUOTE>
///   StartReference to use in next call to get the following items.
///   If absent, no more items to get.
/// </BLOCKQUOTE></PRE>
/// Element "NextStartReference" of XSD type xs:string.
    char*                                NextStartReference             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of Schedule items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns8__Schedule* is 0..unbounded.
   $int                                  __sizeSchedule                 0;
/// Array struct ns8__Schedule* of size 0..unbounded.
    struct ns8__Schedule*                Schedule                       0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":CreateSchedule
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":CreateSchedule is a complexType.
///
struct _ns8__CreateSchedule
{
/// <PRE><BLOCKQUOTE>
///   The Schedule to create
/// </BLOCKQUOTE></PRE>
/// Element "Schedule" of XSD type "http://www.onvif.org/ver10/schedule/wsdl":Schedule.
    struct ns8__Schedule*                Schedule                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":CreateScheduleResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":CreateScheduleResponse is a complexType.
///
struct _ns8__CreateScheduleResponse
{
/// <PRE><BLOCKQUOTE>
///   The token of created Schedule
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":ModifySchedule
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":ModifySchedule is a complexType.
///
struct _ns8__ModifySchedule
{
/// <PRE><BLOCKQUOTE>
///   The Schedule to modify/update
/// </BLOCKQUOTE></PRE>
/// Element "Schedule" of XSD type "http://www.onvif.org/ver10/schedule/wsdl":Schedule.
    struct ns8__Schedule*                Schedule                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":ModifyScheduleResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":ModifyScheduleResponse is a complexType.
///
struct _ns8__ModifyScheduleResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":DeleteSchedule
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":DeleteSchedule is a complexType.
///
struct _ns8__DeleteSchedule
{
/// <PRE><BLOCKQUOTE>
///   The token of the schedule to delete.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":DeleteScheduleResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":DeleteScheduleResponse is a complexType.
///
struct _ns8__DeleteScheduleResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroupInfo
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroupInfo is a complexType.
///
struct _ns8__GetSpecialDayGroupInfo
{
/// <PRE><BLOCKQUOTE>
///   Tokens of SpecialDayGroupInfo items to get.
/// </BLOCKQUOTE></PRE>
/// Size of array of ns3__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array ns3__ReferenceToken* of size 1..unbounded.
    ns3__ReferenceToken*                 Token                          1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroupInfoResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroupInfoResponse is a complexType.
///
struct _ns8__GetSpecialDayGroupInfoResponse
{
/// <PRE><BLOCKQUOTE>
///   List of SpecialDayGroupInfo items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns8__SpecialDayGroupInfo* is 0..unbounded.
   $int                                  __sizeSpecialDayGroupInfo      0;
/// Array struct ns8__SpecialDayGroupInfo* of size 0..unbounded.
    struct ns8__SpecialDayGroupInfo*     SpecialDayGroupInfo            0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroupInfoList
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroupInfoList is a complexType.
///
struct _ns8__GetSpecialDayGroupInfoList
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of entries to return. If not specified, less than
///   one or higher than what the device supports, the number
///   of items is determined by the device.
/// </BLOCKQUOTE></PRE>
/// Element "Limit" of XSD type xs:int.
    int*                                 Limit                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Start returning entries from this start reference.
///   If not specified, entries shall start from the beginning of the dataset.
/// </BLOCKQUOTE></PRE>
/// Element "StartReference" of XSD type xs:string.
    char*                                StartReference                 0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroupInfoListResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroupInfoListResponse is a complexType.
///
struct _ns8__GetSpecialDayGroupInfoListResponse
{
/// <PRE><BLOCKQUOTE>
///   StartReference to use in next call to get the following items.
///   If absent, no more items to get.
/// </BLOCKQUOTE></PRE>
/// Element "NextStartReference" of XSD type xs:string.
    char*                                NextStartReference             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of SpecialDayGroupInfo items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns8__SpecialDayGroupInfo* is 0..unbounded.
   $int                                  __sizeSpecialDayGroupInfo      0;
/// Array struct ns8__SpecialDayGroupInfo* of size 0..unbounded.
    struct ns8__SpecialDayGroupInfo*     SpecialDayGroupInfo            0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroups
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroups is a complexType.
///
struct _ns8__GetSpecialDayGroups
{
/// <PRE><BLOCKQUOTE>
///   Tokens of the SpecialDayGroup items to get
/// </BLOCKQUOTE></PRE>
/// Size of array of ns3__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array ns3__ReferenceToken* of size 1..unbounded.
    ns3__ReferenceToken*                 Token                          1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroupsResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroupsResponse is a complexType.
///
struct _ns8__GetSpecialDayGroupsResponse
{
/// <PRE><BLOCKQUOTE>
///   List of SpecialDayGroup items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns8__SpecialDayGroup* is 0..unbounded.
   $int                                  __sizeSpecialDayGroup          0;
/// Array struct ns8__SpecialDayGroup* of size 0..unbounded.
    struct ns8__SpecialDayGroup*         SpecialDayGroup                0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroupList
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroupList is a complexType.
///
struct _ns8__GetSpecialDayGroupList
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of entries to return. If not specified, less than
///   one or higher than what the device supports, the number of
///   items is determined by the device.
/// </BLOCKQUOTE></PRE>
/// Element "Limit" of XSD type xs:int.
    int*                                 Limit                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Start returning entries from this start reference.
///   If not specified, entries shall start from the beginning of the dataset.
/// </BLOCKQUOTE></PRE>
/// Element "StartReference" of XSD type xs:string.
    char*                                StartReference                 0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroupListResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":GetSpecialDayGroupListResponse is a complexType.
///
struct _ns8__GetSpecialDayGroupListResponse
{
/// <PRE><BLOCKQUOTE>
///   StartReference to use in next call to get the following items. If
///   absent, no more items to get.
/// </BLOCKQUOTE></PRE>
/// Element "NextStartReference" of XSD type xs:string.
    char*                                NextStartReference             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of SpecialDayGroup items.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns8__SpecialDayGroup* is 0..unbounded.
   $int                                  __sizeSpecialDayGroup          0;
/// Array struct ns8__SpecialDayGroup* of size 0..unbounded.
    struct ns8__SpecialDayGroup*         SpecialDayGroup                0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":CreateSpecialDayGroup
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":CreateSpecialDayGroup is a complexType.
///
struct _ns8__CreateSpecialDayGroup
{
/// <PRE><BLOCKQUOTE>
///   The special day group to create.
/// </BLOCKQUOTE></PRE>
/// Element "SpecialDayGroup" of XSD type "http://www.onvif.org/ver10/schedule/wsdl":SpecialDayGroup.
    struct ns8__SpecialDayGroup*         SpecialDayGroup                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":CreateSpecialDayGroupResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":CreateSpecialDayGroupResponse is a complexType.
///
struct _ns8__CreateSpecialDayGroupResponse
{
/// <PRE><BLOCKQUOTE>
///   The token of created special day group.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":ModifySpecialDayGroup
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":ModifySpecialDayGroup is a complexType.
///
struct _ns8__ModifySpecialDayGroup
{
/// <PRE><BLOCKQUOTE>
///   The special day group to modify/update.
/// </BLOCKQUOTE></PRE>
/// Element "SpecialDayGroup" of XSD type "http://www.onvif.org/ver10/schedule/wsdl":SpecialDayGroup.
    struct ns8__SpecialDayGroup*         SpecialDayGroup                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":ModifySpecialDayGroupResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":ModifySpecialDayGroupResponse is a complexType.
///
struct _ns8__ModifySpecialDayGroupResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":DeleteSpecialDayGroup
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":DeleteSpecialDayGroup is a complexType.
///
struct _ns8__DeleteSpecialDayGroup
{
/// <PRE><BLOCKQUOTE>
///   The token of the special day group item to delete.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schedule/wsdl":DeleteSpecialDayGroupResponse
/// @brief "http://www.onvif.org/ver10/schedule/wsdl":DeleteSpecialDayGroupResponse is a complexType.
///
struct _ns8__DeleteSpecialDayGroupResponse
{
};

/// @brief "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsrfr__ResourceUnknownFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsrfr__ResourceUnknownFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsrfr__ResourceUnknownFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsrfr__ResourceUnknownFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsrfr__ResourceUnavailableFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsrfr__ResourceUnavailableFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsrfr__ResourceUnavailableFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsrfr__ResourceUnavailableFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__SubscribeCreationFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__SubscribeCreationFailedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__SubscribeCreationFailedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__InvalidFilterFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__InvalidFilterFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__InvalidFilterFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__InvalidFilterFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 1..unbounded.
   $int                                  __sizeUnknownFilter            1;
/// Array _QName* of size 1..unbounded.
    _QName*                              UnknownFilter                  1;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__TopicExpressionDialectUnknownFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__TopicExpressionDialectUnknownFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__InvalidTopicExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__InvalidTopicExpressionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__InvalidTopicExpressionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__TopicNotSupportedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__TopicNotSupportedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__TopicNotSupportedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__TopicNotSupportedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__MultipleTopicsSpecifiedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__MultipleTopicsSpecifiedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__InvalidProducerPropertiesExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__InvalidMessageContentExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__InvalidMessageContentExpressionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnrecognizedPolicyRequestFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnrecognizedPolicyRequestFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 0..unbounded.
   $int                                  __sizeUnrecognizedPolicy       0;
/// Array _QName* of size 0..unbounded.
    _QName*                              UnrecognizedPolicy             0;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnsupportedPolicyRequestFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnsupportedPolicyRequestFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 0..unbounded.
   $int                                  __sizeUnsupportedPolicy        0;
/// Array _QName* of size 0..unbounded.
    _QName*                              UnsupportedPolicy              0;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__NotifyMessageNotSupportedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__NotifyMessageNotSupportedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnacceptableInitialTerminationTimeFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Element "MinimumTime" of XSD type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of XSD type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__NoCurrentMessageOnTopicFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__NoCurrentMessageOnTopicFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnableToGetMessagesFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnableToGetMessagesFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnableToGetMessagesFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnableToGetMessagesFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnableToDestroyPullPointFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnableToDestroyPullPointFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnableToCreatePullPointFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnableToCreatePullPointFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnableToCreatePullPointFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnacceptableTerminationTimeFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnacceptableTerminationTimeFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Element "MinimumTime" of XSD type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of XSD type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnableToDestroySubscriptionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnableToDestroySubscriptionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__PauseFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__PauseFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__PauseFailedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__PauseFailedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__ResumeFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__ResumeFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__ResumeFailedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__ResumeFailedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
struct wstop__TopicNamespaceType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// Size of Topic array is 0..unbounded.
   $int                                  __sizeTopic                    0;
    struct _wstop__TopicNamespaceType_Topic
    {
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// INHERITED FROM wstop__TopicType:
/// Element "MessagePattern" of XSD type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    struct wstop__QueryExpressionType*   MessagePattern                 0;	///< Optional element.
/// Size of array of struct wstop__TopicType* is 0..unbounded.
   $int                                  __sizeTopic                    0;
/// Array struct wstop__TopicType* of size 0..unbounded.
    struct wstop__TopicType*             Topic                          0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "name" of XSD type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    _QName                                                             

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of XSD type xs:boolean.
   @enum xsd__boolean                    final_                         0;	///< Default attribute value="false".
//  END OF INHERITED FROM wstop__TopicType
/// Attribute "parent" of XSD type "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression.
   @wstop__ConcreteTopicExpression       parent                         0;	///< Optional attribute.
    }                                   *Topic                          0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "name" of XSD type xs:NCName.
   @xsd__NCName                          name                           0;	///< Optional attribute.
/// Attribute "targetNamespace" of XSD type xs:anyURI.
   @xsd__anyURI                          targetNamespace                1;	///< Required attribute.
/// Attribute "final" of XSD type xs:boolean.
   @enum xsd__boolean                    final_                         0;	///< Default attribute value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
struct wstop__TopicType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// Element "MessagePattern" of XSD type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    struct wstop__QueryExpressionType*   MessagePattern                 0;	///< Optional element.
/// Size of array of struct wstop__TopicType* is 0..unbounded.
   $int                                  __sizeTopic                    0;
/// Array struct wstop__TopicType* of size 0..unbounded.
    struct wstop__TopicType*             Topic                          0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "name" of XSD type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    _QName                                                             

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of XSD type xs:boolean.
   @enum xsd__boolean                    final_                         0;	///< Default attribute value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicSetType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
struct wstop__TopicSetType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSource is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical video input.
/// </BLOCKQUOTE></PRE>
struct tt__VideoSource
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   Frame rate in frames per second.
/// </BLOCKQUOTE></PRE>
/// Element "Framerate" of XSD type xs:float.
    float                                Framerate                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Horizontal and vertical resolution
/// </BLOCKQUOTE></PRE>
/// Element "Resolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor.
/// </BLOCKQUOTE></PRE>
/// Element "Imaging" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettings.
    struct tt__ImagingSettings*          Imaging                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceExtension.
    struct tt__VideoSourceExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSource is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio input.
/// </BLOCKQUOTE></PRE>
struct tt__AudioSource
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   number of available audio channels. (1: mono, 2: stereo)
/// </BLOCKQUOTE></PRE>
/// Element "Channels" of XSD type xs:int.
    int                                  Channels                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__VideoSourceConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Reference to the physical input.
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rectangle specifying the Video capturing area. The capturing area shall not be larger than the whole Video source area.
/// </BLOCKQUOTE></PRE>
/// Element "Bounds" of XSD type "http://www.onvif.org/ver10/schema":IntRectangle.
    struct tt__IntRectangle*             Bounds                         1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension.
    struct tt__VideoSourceConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__VideoEncoderConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Used video codec, either Jpeg, H.264 or Mpeg4
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configured video resolution
/// </BLOCKQUOTE></PRE>
/// Element "Resolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// </BLOCKQUOTE></PRE>
/// Element "Quality" of XSD type xs:float.
    float                                Quality                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rate control related parameters.
/// </BLOCKQUOTE></PRE>
/// Element "RateControl" of XSD type "http://www.onvif.org/ver10/schema":VideoRateControl.
    struct tt__VideoRateControl*         RateControl                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Mpeg4 related parameters.
/// </BLOCKQUOTE></PRE>
/// Element "MPEG4" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Configuration.
    struct tt__Mpeg4Configuration*       MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure H.264 related parameters.
/// </BLOCKQUOTE></PRE>
/// Element "H264" of XSD type "http://www.onvif.org/ver10/schema":H264Configuration.
    struct tt__H264Configuration*        H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related video stream
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions2 is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":JpegOptions.
///
struct tt__JpegOptions2
{
/// INHERITED FROM tt__JpegOptions:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
//  END OF INHERITED FROM tt__JpegOptions
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "BitrateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options2 is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Options.
///
struct tt__Mpeg4Options2
{
/// INHERITED FROM tt__Mpeg4Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__Mpeg4Profile* is 1..unbounded.
   $int                                  __sizeMpeg4ProfilesSupported   1;
/// Array enum tt__Mpeg4Profile* of size 1..unbounded.
    enum tt__Mpeg4Profile*               Mpeg4ProfilesSupported         1;
//  END OF INHERITED FROM tt__Mpeg4Options
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "BitrateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options2 is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":H264Options.
///
struct tt__H264Options2
{
/// INHERITED FROM tt__H264Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__H264Profile* is 1..unbounded.
   $int                                  __sizeH264ProfilesSupported    1;
/// Array enum tt__H264Profile* of size 1..unbounded.
    enum tt__H264Profile*                H264ProfilesSupported          1;
//  END OF INHERITED FROM tt__H264Options
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "BitrateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__AudioSourceConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the Audio Source the configuration applies to
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__AudioEncoderConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Audio codec used for encoding the audio input (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output sample rate in kHz.
/// </BLOCKQUOTE></PRE>
/// Element "SampleRate" of XSD type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__VideoAnalyticsConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// Element "AnalyticsEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    struct tt__AnalyticsEngineConfiguration*  AnalyticsEngineConfiguration   1;	///< Required element.
/// Element "RuleEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RuleEngineConfiguration.
    struct tt__RuleEngineConfiguration*  RuleEngineConfiguration        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__MetadataConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   optional element to configure which PTZ related data is to include in the metadata stream
/// </BLOCKQUOTE></PRE>
/// Element "PTZStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZFilter.
    struct tt__PTZFilter*                PTZStatus                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure the streaming of events. A client might be interested in receiving all, none or some of the events produced by the device:<ul>
///   <li>To get all events: Include the Events element but do not include a filter.</li>
///   <li>To get no events: Do not include the Events element.</li>
///   <li>To get only some events: Include the Events element and include a filter in the element.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Events" of XSD type "http://www.onvif.org/ver10/schema":EventSubscription.
    struct tt__EventSubscription*        Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines whether the streamed metadata will include metadata from the analytics engines (video, cell motion, audio etc.)
/// </BLOCKQUOTE></PRE>
/// Element "Analytics" of XSD type xs:boolean.
    enum xsd__boolean*                   Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "AnalyticsEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    struct tt__AnalyticsEngineConfiguration*  AnalyticsEngineConfiguration   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension.
    struct tt__MetadataConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure compression type of Metadata payload. Use values from enumeration MetadataCompressionType.
/// </BLOCKQUOTE></PRE>
/// Attribute "CompressionType" of XSD type xs:string.
   @char*                                CompressionType                0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical video outputs.
/// </BLOCKQUOTE></PRE>
struct tt__VideoOutput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// Element "Layout" of XSD type "http://www.onvif.org/ver10/schema":Layout.
    struct tt__Layout*                   Layout                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Resolution of the display in Pixel.
/// </BLOCKQUOTE></PRE>
/// Element "Resolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          Resolution                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Refresh rate of the display in Hertz.
/// </BLOCKQUOTE></PRE>
/// Element "RefreshRate" of XSD type xs:float.
    float*                               RefreshRate                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Aspect ratio of the display as physical extent of width divided by height.
/// </BLOCKQUOTE></PRE>
/// Element "AspectRatio" of XSD type xs:float.
    float*                               AspectRatio                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoOutputExtension.
    struct tt__VideoOutputExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__VideoOutputConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the Video Output the configuration applies to
/// </BLOCKQUOTE></PRE>
/// Element "OutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio outputs.
/// </BLOCKQUOTE></PRE>
struct tt__AudioOutput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutputConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__AudioOutputConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the phsycial Audio output.
/// </BLOCKQUOTE></PRE>
/// Element "OutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An audio channel MAY support different types of audio transmission. While for full duplex
///   operation no special handling is required, in half duplex operation the transmission direction
///   needs to be switched.
///   The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
///   direction is currently active. An NVC can switch between different modes by setting the
///   AudioOutputConfiguration.<br/>
///   The following modes for the Send-Primacy are defined:<ul>
///   <li>www.onvif.org/ver20/HalfDuplex/Server
///   The server is allowed to send audio data to the client. The client shall not send
///   audio data via the backchannel to the NVT in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Client
///   The client is allowed to send audio data via the backchannel to the server. The
///   NVT shall not send audio data to the client in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Auto
///   It is up to the device how to deal with sending and receiving audio data.</li>
///   </ul>
///   Acoustic echo cancellation is out of ONVIF scope.
/// </BLOCKQUOTE></PRE>
/// Element "SendPrimacy" of XSD type xs:anyURI.
    xsd__anyURI                          SendPrimacy                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Volume setting of the output. The applicable range is defined via the option AudioOutputOptions.OutputLevelRange.
/// </BLOCKQUOTE></PRE>
/// Element "OutputLevel" of XSD type xs:int.
    int                                  OutputLevel                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// <PRE><BLOCKQUOTE>
///   The Audio Decoder Configuration does not contain any that parameter to configure the
///   decoding .A decoder shall decode every data it receives (according to its capabilities).
/// </BLOCKQUOTE></PRE>
struct tt__AudioDecoderConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterface is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
struct tt__NetworkInterface
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface information
/// </BLOCKQUOTE></PRE>
/// Element "Info" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo.
    struct tt__NetworkInterfaceInfo*     Info                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Link" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceLink.
    struct tt__NetworkInterfaceLink*     Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4" of XSD type "http://www.onvif.org/ver10/schema":IPv4NetworkInterface.
    struct tt__IPv4NetworkInterface*     IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv6" of XSD type "http://www.onvif.org/ver10/schema":IPv6NetworkInterface.
    struct tt__IPv6NetworkInterface*     IPv6                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension.
    struct tt__NetworkInterfaceExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateUsage is a complexType with simpleContent.
///
struct tt__CertificateUsage
{
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Attribute "Critical" of XSD type xs:boolean.
   @enum xsd__boolean                    Critical                       1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":RelayOutput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
struct tt__RelayOutput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// Element "Properties" of XSD type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    struct tt__RelayOutputSettings*      Properties                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DigitalInput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
struct tt__DigitalInput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNode is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
struct tt__PTZNode
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   A unique identifier that is used to reference PTZ Nodes.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of Coordinate Systems available for the PTZ Node. For each Coordinate System, the PTZ Node MUST specify its allowed range.
/// </BLOCKQUOTE></PRE>
/// Element "SupportedPTZSpaces" of XSD type "http://www.onvif.org/ver10/schema":PTZSpaces.
    struct tt__PTZSpaces*                SupportedPTZSpaces             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   All preset operations MUST be available for this PTZ Node if one preset is supported.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumNumberOfPresets" of XSD type xs:int.
    int                                  MaximumNumberOfPresets         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A boolean operator specifying the availability of a home position. If set to true, the Home Position Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Element "HomeSupported" of XSD type xs:boolean.
    enum xsd__boolean                    HomeSupported                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of supported Auxiliary commands. If the list is not empty, the Auxiliary Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__AuxiliaryData* is 0..unbounded.
   $int                                  __sizeAuxiliaryCommands        0;
/// Array tt__AuxiliaryData* of size 0..unbounded.
    tt__AuxiliaryData*                   AuxiliaryCommands              0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZNodeExtension.
    struct tt__PTZNodeExtension*         Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indication whether the HomePosition of a Node is fixed or it can be changed via the SetHomePosition command.
/// </BLOCKQUOTE></PRE>
/// Attribute "FixedHomePosition" of XSD type xs:boolean.
   @enum xsd__boolean*                   FixedHomePosition              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__PTZConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   A mandatory reference to the PTZ Node that the PTZ Configuration belongs to.
/// </BLOCKQUOTE></PRE>
/// Element "NodeToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute Pan/Tilt movements, it shall specify one Absolute Pan/Tilt Position Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultAbsolutePantTiltPositionSpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultAbsolutePantTiltPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute zoom movements, it shall specify one Absolute Zoom Position Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultAbsoluteZoomPositionSpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultAbsoluteZoomPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative Pan/Tilt movements, it shall specify one RelativePan/Tilt Translation Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultRelativePanTiltTranslationSpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultRelativePanTiltTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative zoom movements, it shall specify one Relative Zoom Translation Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultRelativeZoomTranslationSpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultRelativeZoomTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous Pan/Tilt movements, it shall specify one Continuous Pan/Tilt Velocity Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultContinuousPanTiltVelocitySpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultContinuousPanTiltVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous zoom movements, it shall specify one Continuous Zoom Velocity Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultContinuousZoomVelocitySpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultContinuousZoomVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute or relative PTZ movements, it shall specify corresponding default Pan/Tilt and Zoom speeds.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultPTZSpeed" of XSD type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 DefaultPTZSpeed                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous movements, it shall specify a default timeout, after which the movement stops.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultPTZTimeout" of XSD type xs:duration.
    xsd__duration*                       DefaultPTZTimeout              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Pan/Tilt limits element should be present for a PTZ Node that supports an absolute Pan/Tilt. If the element is present it signals the support for configurable Pan/Tilt limits. If limits are enabled, the Pan/Tilt movements shall always stay within the specified range. The Pan/Tilt limits are disabled by setting the limits to INF or +INF.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltLimits" of XSD type "http://www.onvif.org/ver10/schema":PanTiltLimits.
    struct tt__PanTiltLimits*            PanTiltLimits                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Zoom limits element should be present for a PTZ Node that supports absolute zoom. If the element is present it signals the supports for configurable Zoom limits. If limits are enabled the zoom movements shall always stay within the specified range. The Zoom limits are disabled by settings the limits to -INF and +INF.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomLimits" of XSD type "http://www.onvif.org/ver10/schema":ZoomLimits.
    struct tt__ZoomLimits*               ZoomLimits                     0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension.
    struct tt__PTZConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when moving.
/// </BLOCKQUOTE></PRE>
/// Attribute "MoveRamp" of XSD type xs:int.
   @int*                                 MoveRamp                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when recalling presets.
/// </BLOCKQUOTE></PRE>
/// Attribute "PresetRamp" of XSD type xs:int.
   @int*                                 PresetRamp                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when executing PresetTours.
/// </BLOCKQUOTE></PRE>
/// Attribute "PresetTourRamp" of XSD type xs:int.
   @int*                                 PresetTourRamp                 0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Object is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
///
struct tt__Object
{
/// INHERITED FROM tt__ObjectId:
/// Attribute "ObjectId" of XSD type xs:integer.
   @xsd__integer                         ObjectId                       0;	///< Optional attribute.
//  END OF INHERITED FROM tt__ObjectId
/// Element "Appearance" of XSD type "http://www.onvif.org/ver10/schema":Appearance.
    struct tt__Appearance*               Appearance                     0;	///< Optional element.
/// Element "Behaviour" of XSD type "http://www.onvif.org/ver10/schema":Behaviour.
    struct tt__Behaviour*                Behaviour                      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ObjectExtension.
    struct tt__ObjectExtension*          Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":EventFilter is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
///
struct tt__EventFilter
{
/// INHERITED FROM wsnt__FilterType:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
//  END OF INHERITED FROM wsnt__FilterType
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngine is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__AnalyticsEngine
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// Element "AnalyticsEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration.
    struct tt__AnalyticsDeviceEngineConfiguration*  AnalyticsEngineConfiguration   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__AnalyticsEngineInput
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// Element "SourceIdentification" of XSD type "http://www.onvif.org/ver10/schema":SourceIdentification.
    struct tt__SourceIdentification*     SourceIdentification           1;	///< Required element.
/// Element "VideoInput" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    struct tt__VideoEncoderConfiguration*  VideoInput                     1;	///< Required element.
/// Element "MetadataInput" of XSD type "http://www.onvif.org/ver10/schema":MetadataInput.
    struct tt__MetadataInput*            MetadataInput                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineControl is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__AnalyticsEngineControl
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the analytics engine (AnalyticsEngine) being controlled.
/// </BLOCKQUOTE></PRE>
/// Element "EngineToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of the analytics engine configuration (VideoAnalyticsConfiguration) in effect.
/// </BLOCKQUOTE></PRE>
/// Element "EngineConfigToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineConfigToken              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Tokens of the input (AnalyticsEngineInput) configuration applied.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeInputToken               1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  InputToken                     1;
/// <PRE><BLOCKQUOTE>
///   Tokens of the receiver providing media input data. The order of ReceiverToken shall exactly match the order of InputToken.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeReceiverToken            1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  ReceiverToken                  1;
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      0;	///< Optional element.
/// Element "Subscription" of XSD type "http://www.onvif.org/ver10/schema":Config.
    struct tt__Config*                   Subscription                   1;	///< Required element.
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ModeOfOperation.
    enum tt__ModeOfOperation             Mode                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
struct tt__OSDConfiguration
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   Reference to the video source configuration.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":OSDReference.
    struct tt__OSDReference*             VideoSourceConfigurationToken  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Type of OSD.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":OSDType.
    enum tt__OSDType                     Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Position configuration of OSD.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":OSDPosConfiguration.
    struct tt__OSDPosConfiguration*      Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Text configuration of OSD. It shall be present when the value of Type field is Text.
/// </BLOCKQUOTE></PRE>
/// Element "TextString" of XSD type "http://www.onvif.org/ver10/schema":OSDTextConfiguration.
    struct tt__OSDTextConfiguration*     TextString                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image configuration of OSD. It shall be present when the value of Type field is Image
/// </BLOCKQUOTE></PRE>
/// Element "Image" of XSD type "http://www.onvif.org/ver10/schema":OSDImgConfiguration.
    struct tt__OSDImgConfiguration*      Image                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDConfigurationExtension.
    struct tt__OSDConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPort is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Lists all available serial ports of a device
/// </BLOCKQUOTE></PRE>
struct tmd__SerialPort
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   :token                         1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
struct tds__StorageConfiguration
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   :token                         1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// Element "Data" of XSD type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    struct tds__StorageConfigurationData*  Data                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":AccessPointInfoBase is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/pacs":DataEntity.
///
/// <PRE><BLOCKQUOTE>
///   Used as extension base for AccessPointInfo.
/// </BLOCKQUOTE></PRE>
struct ns2__AccessPointInfoBase
{
/// INHERITED FROM ns3__DataEntity:
/// <PRE><BLOCKQUOTE>
///   A service-unique identifier of the item.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns3__ReferenceToken                  :token                         1;	///< Required attribute.
//  END OF INHERITED FROM ns3__DataEntity
/// <PRE><BLOCKQUOTE>
///   A user readable name. It shall be up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional user readable description for the AccessPoint. It shall be up to 1024 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/pacs":Description.
    ns3__Description                     Description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional reference to the Area from which access is requested.
/// </BLOCKQUOTE></PRE>
/// Element "AreaFrom" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  AreaFrom                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional reference to the Area to which access is requested.
/// </BLOCKQUOTE></PRE>
/// Element "AreaTo" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  AreaTo                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional entity type; if missing, a Door type as defined by the ONVIF DoorControl service should be assumed. This can also be represented by the QName value "tdc:Door" - where tdc is the namespace of the Door Control service: "http://www.onvif.org/ver10/doorcontrol/wsdl". This field is provided for future extensions; it will allow an AccessPoint being extended to cover entity types other than Doors as well.
/// </BLOCKQUOTE></PRE>
/// Element "EntityType" of XSD type xs:QName.
    _QName                               EntityType                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Reference to the entity used to control access; the entity type may be specified by the optional EntityType field explained below but is typically a Door.
/// </BLOCKQUOTE></PRE>
/// Element "Entity" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Entity                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":AreaInfoBase is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/pacs":DataEntity.
///
/// <PRE><BLOCKQUOTE>
///   Basic information about an Area. Used as extension base.
/// </BLOCKQUOTE></PRE>
struct ns2__AreaInfoBase
{
/// INHERITED FROM ns3__DataEntity:
/// <PRE><BLOCKQUOTE>
///   A service-unique identifier of the item.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns3__ReferenceToken                  :token                         1;	///< Required attribute.
//  END OF INHERITED FROM ns3__DataEntity
/// <PRE><BLOCKQUOTE>
///   User readable name. It shall be up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   User readable description for the Area. It shall be up to 1024 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/pacs":Description.
    ns3__Description                     Description                    0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorInfoBase is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/pacs":DataEntity.
///
/// <PRE><BLOCKQUOTE>
///   Used as extension base.
/// </BLOCKQUOTE></PRE>
struct ns4__DoorInfoBase
{
/// INHERITED FROM ns3__DataEntity:
/// <PRE><BLOCKQUOTE>
///   A service-unique identifier of the item.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns3__ReferenceToken                  :token                         1;	///< Required attribute.
//  END OF INHERITED FROM ns3__DataEntity
/// <PRE><BLOCKQUOTE>
///   A user readable name. It shall be up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A user readable description. It shall be up to 1024 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/pacs":Description.
    ns3__Description                     Description                    0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":AccessProfileInfo is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/pacs":DataEntity.
///
/// <PRE><BLOCKQUOTE>
///   The AccessProfileInfo structure contains basic information about an access profile. The device
///   shall provide the following fields for each AccessProfileInfo.
/// </BLOCKQUOTE></PRE>
struct ns6__AccessProfileInfo
{
/// INHERITED FROM ns3__DataEntity:
/// <PRE><BLOCKQUOTE>
///   A service-unique identifier of the item.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns3__ReferenceToken                  :token                         1;	///< Required attribute.
//  END OF INHERITED FROM ns3__DataEntity
/// <PRE><BLOCKQUOTE>
///   A user readable name. It shall be up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   User readable description for the access profile. It shall be up
///   to 1024 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/pacs":Description.
    ns3__Description                     Description                    0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/credential/wsdl":CredentialInfo is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/pacs":DataEntity.
///
/// <PRE><BLOCKQUOTE>
///   The CredentialInfo type represents the credential as a logical object. The structure contains
///   the basic information of a specific credential instance. The device shall provide the following
///   fields for each credential.
/// </BLOCKQUOTE></PRE>
struct ns7__CredentialInfo
{
/// INHERITED FROM ns3__DataEntity:
/// <PRE><BLOCKQUOTE>
///   A service-unique identifier of the item.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns3__ReferenceToken                  :token                         1;	///< Required attribute.
//  END OF INHERITED FROM ns3__DataEntity
/// <PRE><BLOCKQUOTE>
///   User readable description for the credential. It shall be up to 1024 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/pacs":Description.
    ns3__Description                     Description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   An external reference to a person holding this credential. The
///   reference is a username or used ID in an external system, such as a directory
///   service.
/// </BLOCKQUOTE></PRE>

/// </BLOCKQUOTE></PRE>

/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
    char*                                                              
                                         CredentialHolderReference      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The start date/time validity of the credential. If the
///   ValiditySupportsTimeValue capability is set to false, then only date is
///   supported (time is ignored).
/// </BLOCKQUOTE></PRE>
/// Element "ValidFrom" of XSD type xs:dateTime.
    time_t*                              ValidFrom                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The expiration date/time validity of the credential. If the
///   ValiditySupportsTimeValue capability is set to false, then only date is
///   supported (time is ignored).
/// </BLOCKQUOTE></PRE>
/// Element "ValidTo" of XSD type xs:dateTime.
    time_t*                              ValidTo                        0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schedule/wsdl":ScheduleInfo is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/pacs":DataEntity.
///
/// <PRE><BLOCKQUOTE>
///   The ScheduleInfo type represents the schedule as a physical object.
///   The structure contains information of a specific schedule instance.
/// </BLOCKQUOTE></PRE>
struct ns8__ScheduleInfo
{
/// INHERITED FROM ns3__DataEntity:
/// <PRE><BLOCKQUOTE>
///   A service-unique identifier of the item.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns3__ReferenceToken                  :token                         1;	///< Required attribute.
//  END OF INHERITED FROM ns3__DataEntity
/// <PRE><BLOCKQUOTE>
///   A user readable name. It shall be up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   User readable description for the schedule. It shall be up to 1024 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/pacs":Description.
    ns3__Description                     Description                    0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schedule/wsdl":SpecialDayGroupInfo is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/pacs":DataEntity.
///
/// <PRE><BLOCKQUOTE>
///   The SpecialDayGroupInfo structure contains the basic information about the special days list.
/// </BLOCKQUOTE></PRE>
struct ns8__SpecialDayGroupInfo
{
/// INHERITED FROM ns3__DataEntity:
/// <PRE><BLOCKQUOTE>
///   A service-unique identifier of the item.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns3__ReferenceToken                  :token                         1;	///< Required attribute.
//  END OF INHERITED FROM ns3__DataEntity
/// <PRE><BLOCKQUOTE>
///   User readable name. It shall be up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   User readable description for the special days. It shall be up to 1024
///   characters.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/pacs":Description.
    ns3__Description                     Description                    0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDReference is a complexType with simpleContent.
///
struct tt__OSDReference
{
/// __item wraps ""http://www.onvif.org/ver10/schema":ReferenceToken" simpleContent.
    tt__ReferenceToken                   __item                        ;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":AccessPointInfo is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/accesscontrol/wsdl":AccessPointInfoBase.
///
/// <PRE><BLOCKQUOTE>
///   The AccessPointInfo structure contains basic information about an AccessPoint instance.
///   An AccessPoint defines an entity a Credential can be granted or denied access to. The
///   AccessPointInfo provides basic information on how access is controlled in one direction for a
///   door (from which area to which area).
///   </p><p>
///   door is the typical device involved, but other type of
///   devices may be supported as well.
///   Multiple AccessPoints may cover the same Door.
///   A typical case is one AccessPoint for entry and another for exit, both referencing
///   the same Door.
///   </p><p>
///   An ONVIF compliant device shall provide the following fields for each AccessPoint instance:
/// </BLOCKQUOTE></PRE>
struct ns2__AccessPointInfo
{
/// INHERITED FROM ns3__DataEntity:
/// <PRE><BLOCKQUOTE>
///   A service-unique identifier of the item.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns3__ReferenceToken                  :token                         1;	///< Required attribute.
//  END OF INHERITED FROM ns3__DataEntity
/// INHERITED FROM ns2__AccessPointInfoBase:
/// <PRE><BLOCKQUOTE>
///   A user readable name. It shall be up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional user readable description for the AccessPoint. It shall be up to 1024 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/pacs":Description.
    ns3__Description                     Description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional reference to the Area from which access is requested.
/// </BLOCKQUOTE></PRE>
/// Element "AreaFrom" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  AreaFrom                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional reference to the Area to which access is requested.
/// </BLOCKQUOTE></PRE>
/// Element "AreaTo" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  AreaTo                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional entity type; if missing, a Door type as defined by the ONVIF DoorControl service should be assumed. This can also be represented by the QName value "tdc:Door" - where tdc is the namespace of the Door Control service: "http://www.onvif.org/ver10/doorcontrol/wsdl". This field is provided for future extensions; it will allow an AccessPoint being extended to cover entity types other than Doors as well.
/// </BLOCKQUOTE></PRE>
/// Element "EntityType" of XSD type xs:QName.
    _QName                               EntityType                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Reference to the entity used to control access; the entity type may be specified by the optional EntityType field explained below but is typically a Door.
/// </BLOCKQUOTE></PRE>
/// Element "Entity" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
    ns3__ReferenceToken                  Entity                         1;	///< Required element.
//  END OF INHERITED FROM ns2__AccessPointInfoBase
/// <PRE><BLOCKQUOTE>
///   The capabilities for the AccessPoint.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/accesscontrol/wsdl":AccessPointCapabilities.
    struct ns2__AccessPointCapabilities*  Capabilities                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/accesscontrol/wsdl":AreaInfo is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/accesscontrol/wsdl":AreaInfoBase.
///
/// <PRE><BLOCKQUOTE>
///   The AreaInfo structure contains basic information about an Area.
///   An ONVIF compliant device shall provide the following fields for each Area:
/// </BLOCKQUOTE></PRE>
struct ns2__AreaInfo
{
/// INHERITED FROM ns3__DataEntity:
/// <PRE><BLOCKQUOTE>
///   A service-unique identifier of the item.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns3__ReferenceToken                  :token                         1;	///< Required attribute.
//  END OF INHERITED FROM ns3__DataEntity
/// INHERITED FROM ns2__AreaInfoBase:
/// <PRE><BLOCKQUOTE>
///   User readable name. It shall be up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   User readable description for the Area. It shall be up to 1024 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/pacs":Description.
    ns3__Description                     Description                    0;	///< Optional element.
//  END OF INHERITED FROM ns2__AreaInfoBase
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorInfo is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorInfoBase.
///
/// <PRE><BLOCKQUOTE>
///   The DoorInfo type represents the Door as a physical object.
///   The structure contains information and capabilities of a specific door instance.
///   An ONVIF compliant device shall provide the following fields for each Door instance:
/// </BLOCKQUOTE></PRE>
struct ns4__DoorInfo
{
/// INHERITED FROM ns3__DataEntity:
/// <PRE><BLOCKQUOTE>
///   A service-unique identifier of the item.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns3__ReferenceToken                  :token                         1;	///< Required attribute.
//  END OF INHERITED FROM ns3__DataEntity
/// INHERITED FROM ns4__DoorInfoBase:
/// <PRE><BLOCKQUOTE>
///   A user readable name. It shall be up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A user readable description. It shall be up to 1024 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/pacs":Description.
    ns3__Description                     Description                    0;	///< Optional element.
//  END OF INHERITED FROM ns4__DoorInfoBase
/// <PRE><BLOCKQUOTE>
///   The capabilities of the Door.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/doorcontrol/wsdl":DoorCapabilities.
    struct ns4__DoorCapabilities*        Capabilities                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/accessrules/wsdl":AccessProfile is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/accessrules/wsdl":AccessProfileInfo.
///
/// <PRE><BLOCKQUOTE>
///   The access profile structure contains information about the collection of access policies. The
///   device shall include all properties of the AccessProfileInfo structure and also a list of access
///   policies.
/// </BLOCKQUOTE></PRE>
struct ns6__AccessProfile
{
/// INHERITED FROM ns3__DataEntity:
/// <PRE><BLOCKQUOTE>
///   A service-unique identifier of the item.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns3__ReferenceToken                  :token                         1;	///< Required attribute.
//  END OF INHERITED FROM ns3__DataEntity
/// INHERITED FROM ns6__AccessProfileInfo:
/// <PRE><BLOCKQUOTE>
///   A user readable name. It shall be up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   User readable description for the access profile. It shall be up
///   to 1024 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/pacs":Description.
    ns3__Description                     Description                    0;	///< Optional element.
//  END OF INHERITED FROM ns6__AccessProfileInfo
/// <PRE><BLOCKQUOTE>
///   A list of access policy structures, where each access policy
///   defines during which schedule an access point can be accessed.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns6__AccessPolicy* is 0..unbounded.
   $int                                  __sizeAccessPolicy             0;
/// Array struct ns6__AccessPolicy* of size 0..unbounded.
    struct ns6__AccessPolicy*            AccessPolicy                   0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/accessrules/wsdl":AccessProfileExtension.
    struct ns6__AccessProfileExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/credential/wsdl":Credential is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/credential/wsdl":CredentialInfo.
///
/// <PRE><BLOCKQUOTE>
///   A Credential is a physical/tangible object, a piece of knowledge, or a facet of a person's
///   physical being, that enables an individual access to a given physical facility or computer-based
///   information system. A credential holds one or more credential identifiers. To gain access one or
///   more identifiers may be required.
/// </BLOCKQUOTE></PRE>
struct ns7__Credential
{
/// INHERITED FROM ns3__DataEntity:
/// <PRE><BLOCKQUOTE>
///   A service-unique identifier of the item.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns3__ReferenceToken                  :token                         1;	///< Required attribute.
//  END OF INHERITED FROM ns3__DataEntity
/// INHERITED FROM ns7__CredentialInfo:
/// <PRE><BLOCKQUOTE>
///   User readable description for the credential. It shall be up to 1024 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/pacs":Description.
    ns3__Description                     Description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   An external reference to a person holding this credential. The
///   reference is a username or used ID in an external system, such as a directory
///   service.
/// </BLOCKQUOTE></PRE>

/// </BLOCKQUOTE></PRE>

/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
    char*                                                              
                                         CredentialHolderReference      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The start date/time validity of the credential. If the
///   ValiditySupportsTimeValue capability is set to false, then only date is
///   supported (time is ignored).
/// </BLOCKQUOTE></PRE>
/// Element "ValidFrom" of XSD type xs:dateTime.
    time_t*                              ValidFrom                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The expiration date/time validity of the credential. If the
///   ValiditySupportsTimeValue capability is set to false, then only date is
///   supported (time is ignored).
/// </BLOCKQUOTE></PRE>
/// Element "ValidTo" of XSD type xs:dateTime.
    time_t*                              ValidTo                        0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM ns7__CredentialInfo
/// <PRE><BLOCKQUOTE>
///   A list of credential identifier structures. At least one
///   credential identifier is required. Maximum one credential identifier structure
///   per type is allowed.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns7__CredentialIdentifier* is 1..unbounded.
   $int                                  __sizeCredentialIdentifier     1;
/// Array struct ns7__CredentialIdentifier* of size 1..unbounded.
    struct ns7__CredentialIdentifier*    CredentialIdentifier           1;
/// <PRE><BLOCKQUOTE>
///   A list of credential access profile structures.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns7__CredentialAccessProfile* is 0..unbounded.
   $int                                  __sizeCredentialAccessProfile  0;
/// Array struct ns7__CredentialAccessProfile* of size 0..unbounded.
    struct ns7__CredentialAccessProfile*  CredentialAccessProfile        0;
/// <PRE><BLOCKQUOTE>
///   A list of credential attributes as name value pairs. Key names
///   starting with the prefix pt: are reserved to define PACS specific attributes
///   following the "pt:<Name>" syntax.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns3__Attribute* is 0..unbounded.
   $int                                  __sizeAttribute                0;
/// Array struct ns3__Attribute* of size 0..unbounded.
    struct ns3__Attribute*               Attribute                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/credential/wsdl":CredentialExtension.
    struct ns7__CredentialExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schedule/wsdl":Schedule is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schedule/wsdl":ScheduleInfo.
///
/// <PRE><BLOCKQUOTE>
///   The schedule structure shall include all properties of the ScheduleInfo structure
///   and also the standard events (iCalendar format) and a list of SpecialDaysSchedule instances.
/// </BLOCKQUOTE></PRE>
struct ns8__Schedule
{
/// INHERITED FROM ns3__DataEntity:
/// <PRE><BLOCKQUOTE>
///   A service-unique identifier of the item.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns3__ReferenceToken                  :token                         1;	///< Required attribute.
//  END OF INHERITED FROM ns3__DataEntity
/// INHERITED FROM ns8__ScheduleInfo:
/// <PRE><BLOCKQUOTE>
///   A user readable name. It shall be up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   User readable description for the schedule. It shall be up to 1024 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/pacs":Description.
    ns3__Description                     Description                    0;	///< Optional element.
//  END OF INHERITED FROM ns8__ScheduleInfo
/// <PRE><BLOCKQUOTE>
///   An iCalendar structure that defines a number of events. Events
///   can be recurring or non-recurring. The events can, for instance,
///   be used to control when a camera should record or when a facility
///   is accessible. Some devices might not be able to fully support
///   all the features of iCalendar. Setting the service capability
///   ExtendedRecurrenceSupported to false will enable more devices
///   to be ONVIF compliant. Is of type string (but contains an iCalendar structure).
/// </BLOCKQUOTE></PRE>
/// Element "Standard" of XSD type xs:string.
    char*                                Standard                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   For devices that are not able to support all the features of iCalendar,
///   supporting special days is essential. Each SpecialDaysSchedule
///   instance defines an alternate set of time periods that overrides
///   the regular schedule for a specified list of special days.
///   Is of type SpecialDaysSchedule.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct ns8__SpecialDaysSchedule* is 0..unbounded.
   $int                                  __sizeSpecialDays              0;
/// Array struct ns8__SpecialDaysSchedule* of size 0..unbounded.
    struct ns8__SpecialDaysSchedule*     SpecialDays                    0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schedule/wsdl":ScheduleExtension.
    struct ns8__ScheduleExtension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schedule/wsdl":SpecialDayGroup is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schedule/wsdl":SpecialDayGroupInfo.
///
/// <PRE><BLOCKQUOTE>
///   The special day group structure shall include all properties of the SpecialDayGroupInfo
///   structure and also a set of special days. A special day group are days (or parts of days)
///   that require the regular schedule to be overridden with an alternate schedule.
///   For example holidays, half-days, working Sundays, etc.
/// </BLOCKQUOTE></PRE>
struct ns8__SpecialDayGroup
{
/// INHERITED FROM ns3__DataEntity:
/// <PRE><BLOCKQUOTE>
///   A service-unique identifier of the item.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns3__ReferenceToken                  :token                         1;	///< Required attribute.
//  END OF INHERITED FROM ns3__DataEntity
/// INHERITED FROM ns8__SpecialDayGroupInfo:
/// <PRE><BLOCKQUOTE>
///   User readable name. It shall be up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/pacs":Name.
    ns3__Name                            Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   User readable description for the special days. It shall be up to 1024
///   characters.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/pacs":Description.
    ns3__Description                     Description                    0;	///< Optional element.
//  END OF INHERITED FROM ns8__SpecialDayGroupInfo
/// <PRE><BLOCKQUOTE>
///   An iCalendar structure that contains a group of special days.
///   Is of type string (containing an iCalendar structure).
/// </BLOCKQUOTE></PRE>
/// Element "Days" of XSD type xs:string.
    char*                                Days                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schedule/wsdl":SpecialDayGroupExtension.
    struct ns8__SpecialDayGroupExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/events/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault of XSD type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFault of XSD type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of XSD type xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of XSD type xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of XSD type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of XSD type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of XSD type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of XSD type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of XSD type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of XSD type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of XSD type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of XSD type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of XSD type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of XSD type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/display/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/display/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/display/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoSourceConfiguration of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioSourceConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":PTZConfiguration of XSD type "http://www.onvif.org/ver10/schema":PTZConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":MetadataConfiguration of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioOutputConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polygon of XSD type "http://www.onvif.org/ver10/schema":Polygon.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polyline of XSD type "http://www.onvif.org/ver10/schema":Polyline.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":MetadataStream of XSD type "http://www.onvif.org/ver10/schema":MetadataStream.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Capabilities of XSD type "http://www.onvif.org/ver20/imaging/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Capabilities of XSD type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/receiver/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/recording/wsdl                                *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/recording/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/recording/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/search/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Hello of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":HelloType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":HelloResponse of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Probe of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":ProbeResponse of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchesType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Bye of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ByeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":ByeResponse of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/replay/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/replay/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/replay/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":Capabilities of XSD type "http://www.onvif.org/ver20/analytics/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/analyticsdevice/wsdl                          *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/analyticsdevice/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/analyticsdevice/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/analyticsdevice/wsdl                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/actionengine/wsdl                             *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/actionengine/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/actionengine/wsdl":ActionEngineCapabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/actionengine/wsdl                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/accesscontrol/wsdl                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/accesscontrol/wsdl                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/pacs                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/pacs                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/doorcontrol/wsdl                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/doorcontrol/wsdl                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/advancedsecurity/wsdl                         *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/advancedsecurity/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/advancedsecurity/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/advancedsecurity/wsdl                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/accessrules/wsdl                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/accessrules/wsdl                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/credential/wsdl                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/credential/wsdl                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schedule/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schedule/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	ActionEngineBinding 
//gsoap ns1  service type:	ActionEnginePort 
//gsoap ns1  service namespace:	http://www.onvif.org/ver10/actionengine/wsdl 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns2  service name:	PACSBinding 
//gsoap ns2  service type:	PACSPort 
//gsoap ns2  service namespace:	http://www.onvif.org/ver10/accesscontrol/wsdl 
//gsoap ns2  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns4  service name:	DoorControlBinding 
//gsoap ns4  service type:	DoorControlPort 
//gsoap ns4  service namespace:	http://www.onvif.org/ver10/doorcontrol/wsdl 
//gsoap ns4  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns5  service name:	AdvancedSecurityServiceBinding 
//gsoap ns5  service type:	AdvancedSecurityService 
//gsoap ns5  service namespace:	http://www.onvif.org/ver10/advancedsecurity/wsdl 
//gsoap ns5  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns6  service name:	AccessRulesBinding 
//gsoap ns6  service type:	AccessRulesPort 
//gsoap ns6  service namespace:	http://www.onvif.org/ver10/accessrules/wsdl 
//gsoap ns6  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns7  service name:	CredentialBinding 
//gsoap ns7  service type:	CredentialPort 
//gsoap ns7  service namespace:	http://www.onvif.org/ver10/credential/wsdl 
//gsoap ns7  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns8  service name:	ScheduleBinding 
//gsoap ns8  service type:	SchedulePort 
//gsoap ns8  service namespace:	http://www.onvif.org/ver10/schedule/wsdl 
//gsoap ns8  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tad  service name:	AnalyticsDeviceBinding 
//gsoap tad  service type:	AnalyticsDevicePort 
//gsoap tad  service namespace:	http://www.onvif.org/ver10/analyticsdevice/wsdl 
//gsoap tad  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tan  service name:	RuleEngineBinding 
//gsoap tan  service type:	RuleEnginePort 
//gsoap tan  service namespace:	http://www.onvif.org/ver20/analytics/wsdl 
//gsoap tan  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tdn  service name:	RemoteDiscoveryBinding 
//gsoap tdn  service type:	RemoteDiscoveryPort 
//gsoap tdn  service namespace:	http://www.onvif.org/ver10/network/wsdl 
//gsoap tdn  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tds  service name:	DeviceBinding 
//gsoap tds  service type:	Device 
//gsoap tds  service namespace:	http://www.onvif.org/ver10/device/wsdl 
//gsoap tds  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tev  service name:	PullPointSubscriptionBinding 
//gsoap tev  service type:	PullPointSubscription 
//gsoap tev  service namespace:	http://www.onvif.org/ver10/events/wsdl 
//gsoap tev  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap timg service name:	ImagingBinding 
//gsoap timg service type:	ImagingPort 
//gsoap timg service namespace:	http://www.onvif.org/ver20/imaging/wsdl 
//gsoap timg service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tls  service name:	DisplayBinding 
//gsoap tls  service type:	DisplayPort 
//gsoap tls  service namespace:	http://www.onvif.org/ver10/display/wsdl 
//gsoap tls  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tmd  service name:	DeviceIOBinding 
//gsoap tmd  service type:	DeviceIOPort 
//gsoap tmd  service namespace:	http://www.onvif.org/ver10/deviceIO/wsdl 
//gsoap tmd  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tptz service name:	PTZBinding 
//gsoap tptz service type:	PTZ 
//gsoap tptz service namespace:	http://www.onvif.org/ver20/ptz/wsdl 
//gsoap tptz service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trc  service name:	RecordingBinding 
//gsoap trc  service type:	RecordingPort 
//gsoap trc  service namespace:	http://www.onvif.org/ver10/recording/wsdl 
//gsoap trc  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trp  service name:	ReplayBinding 
//gsoap trp  service type:	ReplayPort 
//gsoap trp  service namespace:	http://www.onvif.org/ver10/replay/wsdl 
//gsoap trp  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trt  service name:	MediaBinding 
//gsoap trt  service type:	Media 
//gsoap trt  service namespace:	http://www.onvif.org/ver10/media/wsdl 
//gsoap trt  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trv  service name:	ReceiverBinding 
//gsoap trv  service type:	ReceiverPort 
//gsoap trv  service namespace:	http://www.onvif.org/ver10/receiver/wsdl 
//gsoap trv  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tse  service name:	SearchBinding 
//gsoap tse  service type:	SearchPort 
//gsoap tse  service namespace:	http://www.onvif.org/ver10/search/wsdl 
//gsoap tse  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage WSDL Definitions

@section WSDL_bindings Service Bindings

  - @ref ActionEngineBinding

  - @ref PACSBinding

  - @ref DoorControlBinding

  - @ref AdvancedSecurityServiceBinding

  - @ref AccessRulesBinding

  - @ref CredentialBinding

  - @ref ScheduleBinding

  - @ref AnalyticsDeviceBinding

  - @ref RuleEngineBinding

  - @ref RemoteDiscoveryBinding

  - @ref DeviceBinding

  - @ref PullPointSubscriptionBinding

  - @ref ImagingBinding

  - @ref DisplayBinding

  - @ref DeviceIOBinding

  - @ref PTZBinding

  - @ref RecordingBinding

  - @ref ReplayBinding

  - @ref MediaBinding

  - @ref ReceiverBinding

  - @ref SearchBinding

@section WSDL_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page ActionEngineBinding Binding "ActionEngineBinding"

@section ActionEngineBinding_operations Operations of Binding "ActionEngineBinding"

  - @ref __ns1__GetSupportedActions

  - @ref __ns1__GetActions

  - @ref __ns1__CreateActions

  - @ref __ns1__DeleteActions

  - @ref __ns1__ModifyActions

  - @ref __ns1__GetServiceCapabilities

  - @ref __ns1__GetActionTriggers

  - @ref __ns1__CreateActionTriggers

  - @ref __ns1__DeleteActionTriggers

  - @ref __ns1__ModifyActionTriggers

@section ActionEngineBinding_ports Endpoints of Binding "ActionEngineBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page PACSBinding Binding "PACSBinding"

@section PACSBinding_operations Operations of Binding "PACSBinding"

  - @ref __ns2__GetServiceCapabilities

  - @ref __ns2__GetAccessPointInfoList

  - @ref __ns2__GetAccessPointInfo

  - @ref __ns2__GetAreaInfoList

  - @ref __ns2__GetAreaInfo

  - @ref __ns2__GetAccessPointState

  - @ref __ns2__EnableAccessPoint

  - @ref __ns2__DisableAccessPoint

  - @ref __ns2__ExternalAuthorization

@section PACSBinding_ports Endpoints of Binding "PACSBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page DoorControlBinding Binding "DoorControlBinding"

@section DoorControlBinding_operations Operations of Binding "DoorControlBinding"

  - @ref __ns4__GetServiceCapabilities

  - @ref __ns4__GetDoorInfoList

  - @ref __ns4__GetDoorInfo

  - @ref __ns4__GetDoorState

  - @ref __ns4__AccessDoor

  - @ref __ns4__LockDoor

  - @ref __ns4__UnlockDoor

  - @ref __ns4__BlockDoor

  - @ref __ns4__LockDownDoor

  - @ref __ns4__LockDownReleaseDoor

  - @ref __ns4__LockOpenDoor

  - @ref __ns4__LockOpenReleaseDoor

  - @ref __ns4__DoubleLockDoor

@section DoorControlBinding_ports Endpoints of Binding "DoorControlBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page AdvancedSecurityServiceBinding Binding "AdvancedSecurityServiceBinding"

@section AdvancedSecurityServiceBinding_operations Operations of Binding "AdvancedSecurityServiceBinding"

  - @ref __ns5__GetServiceCapabilities

  - @ref __ns5__CreateRSAKeyPair

  - @ref __ns5__UploadKeyPairInPKCS8

  - @ref __ns5__UploadCertificateWithPrivateKeyInPKCS12

  - @ref __ns5__GetKeyStatus

  - @ref __ns5__GetPrivateKeyStatus

  - @ref __ns5__GetAllKeys

  - @ref __ns5__DeleteKey

  - @ref __ns5__CreatePKCS10CSR

  - @ref __ns5__CreateSelfSignedCertificate

  - @ref __ns5__UploadCertificate

  - @ref __ns5__GetCertificate

  - @ref __ns5__GetAllCertificates

  - @ref __ns5__DeleteCertificate

  - @ref __ns5__CreateCertificationPath

  - @ref __ns5__GetCertificationPath

  - @ref __ns5__GetAllCertificationPaths

  - @ref __ns5__DeleteCertificationPath

  - @ref __ns5__UploadPassphrase

  - @ref __ns5__GetAllPassphrases

  - @ref __ns5__DeletePassphrase

  - @ref __ns5__UploadCRL

  - @ref __ns5__GetCRL

  - @ref __ns5__GetAllCRLs

  - @ref __ns5__DeleteCRL

  - @ref __ns5__CreateCertPathValidationPolicy

  - @ref __ns5__GetCertPathValidationPolicy

  - @ref __ns5__GetAllCertPathValidationPolicies

  - @ref __ns5__DeleteCertPathValidationPolicy

  - @ref __ns5__AddServerCertificateAssignment

  - @ref __ns5__RemoveServerCertificateAssignment

  - @ref __ns5__ReplaceServerCertificateAssignment

  - @ref __ns5__GetAssignedServerCertificates

  - @ref __ns5__SetClientAuthenticationRequired

  - @ref __ns5__GetClientAuthenticationRequired

  - @ref __ns5__AddCertPathValidationPolicyAssignment

  - @ref __ns5__RemoveCertPathValidationPolicyAssignment

  - @ref __ns5__ReplaceCertPathValidationPolicyAssignment

  - @ref __ns5__GetAssignedCertPathValidationPolicies

@section AdvancedSecurityServiceBinding_ports Endpoints of Binding "AdvancedSecurityServiceBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page AccessRulesBinding Binding "AccessRulesBinding"

@section AccessRulesBinding_operations Operations of Binding "AccessRulesBinding"

  - @ref __ns6__GetServiceCapabilities

  - @ref __ns6__GetAccessProfileInfo

  - @ref __ns6__GetAccessProfileInfoList

  - @ref __ns6__GetAccessProfiles

  - @ref __ns6__GetAccessProfileList

  - @ref __ns6__CreateAccessProfile

  - @ref __ns6__ModifyAccessProfile

  - @ref __ns6__DeleteAccessProfile

@section AccessRulesBinding_ports Endpoints of Binding "AccessRulesBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page CredentialBinding Binding "CredentialBinding"

@section CredentialBinding_operations Operations of Binding "CredentialBinding"

  - @ref __ns7__GetServiceCapabilities

  - @ref __ns7__GetSupportedFormatTypes

  - @ref __ns7__GetCredentialInfo

  - @ref __ns7__GetCredentialInfoList

  - @ref __ns7__GetCredentials

  - @ref __ns7__GetCredentialList

  - @ref __ns7__CreateCredential

  - @ref __ns7__ModifyCredential

  - @ref __ns7__DeleteCredential

  - @ref __ns7__GetCredentialState

  - @ref __ns7__EnableCredential

  - @ref __ns7__DisableCredential

  - @ref __ns7__ResetAntipassbackViolation

  - @ref __ns7__GetCredentialIdentifiers

  - @ref __ns7__SetCredentialIdentifier

  - @ref __ns7__DeleteCredentialIdentifier

  - @ref __ns7__GetCredentialAccessProfiles

  - @ref __ns7__SetCredentialAccessProfiles

  - @ref __ns7__DeleteCredentialAccessProfiles

@section CredentialBinding_ports Endpoints of Binding "CredentialBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page ScheduleBinding Binding "ScheduleBinding"

@section ScheduleBinding_operations Operations of Binding "ScheduleBinding"

  - @ref __ns8__GetServiceCapabilities

  - @ref __ns8__GetScheduleState

  - @ref __ns8__GetScheduleInfo

  - @ref __ns8__GetScheduleInfoList

  - @ref __ns8__GetSchedules

  - @ref __ns8__GetScheduleList

  - @ref __ns8__CreateSchedule

  - @ref __ns8__ModifySchedule

  - @ref __ns8__DeleteSchedule

  - @ref __ns8__GetSpecialDayGroupInfo

  - @ref __ns8__GetSpecialDayGroupInfoList

  - @ref __ns8__GetSpecialDayGroups

  - @ref __ns8__GetSpecialDayGroupList

  - @ref __ns8__CreateSpecialDayGroup

  - @ref __ns8__ModifySpecialDayGroup

  - @ref __ns8__DeleteSpecialDayGroup

@section ScheduleBinding_ports Endpoints of Binding "ScheduleBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page AnalyticsDeviceBinding Binding "AnalyticsDeviceBinding"

@section AnalyticsDeviceBinding_operations Operations of Binding "AnalyticsDeviceBinding"

  - @ref __tad__GetServiceCapabilities

  - @ref __tad__DeleteAnalyticsEngineControl

  - @ref __tad__CreateAnalyticsEngineControl

  - @ref __tad__SetAnalyticsEngineControl

  - @ref __tad__GetAnalyticsEngineControl

  - @ref __tad__GetAnalyticsEngineControls

  - @ref __tad__GetAnalyticsEngine

  - @ref __tad__GetAnalyticsEngines

  - @ref __tad__SetVideoAnalyticsConfiguration

  - @ref __tad__SetAnalyticsEngineInput

  - @ref __tad__GetAnalyticsEngineInput

  - @ref __tad__GetAnalyticsEngineInputs

  - @ref __tad__GetAnalyticsDeviceStreamUri

  - @ref __tad__GetVideoAnalyticsConfiguration

  - @ref __tad__CreateAnalyticsEngineInputs

  - @ref __tad__DeleteAnalyticsEngineInputs

  - @ref __tad__GetAnalyticsState

@section AnalyticsDeviceBinding_ports Endpoints of Binding "AnalyticsDeviceBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page RuleEngineBinding Binding "RuleEngineBinding"

@section RuleEngineBinding_operations Operations of Binding "RuleEngineBinding"

  - @ref __tan__GetSupportedRules

  - @ref __tan__CreateRules

  - @ref __tan__DeleteRules

  - @ref __tan__GetRules

  - @ref __tan__ModifyRules

  - @ref __tan__GetServiceCapabilities

  - @ref __tan__GetSupportedAnalyticsModules

  - @ref __tan__CreateAnalyticsModules

  - @ref __tan__DeleteAnalyticsModules

  - @ref __tan__GetAnalyticsModules

  - @ref __tan__ModifyAnalyticsModules

@section RuleEngineBinding_ports Endpoints of Binding "RuleEngineBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page RemoteDiscoveryBinding Binding "RemoteDiscoveryBinding"

@section RemoteDiscoveryBinding_operations Operations of Binding "RemoteDiscoveryBinding"

  - @ref __tdn__Hello

  - @ref __tdn__Bye

  - @ref __tdn__Probe

@section RemoteDiscoveryBinding_ports Endpoints of Binding "RemoteDiscoveryBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_operations Operations of Binding "DeviceBinding"

  - @ref __tds__GetServices

  - @ref __tds__GetServiceCapabilities

  - @ref __tds__GetDeviceInformation

  - @ref __tds__SetSystemDateAndTime

  - @ref __tds__GetSystemDateAndTime

  - @ref __tds__SetSystemFactoryDefault

  - @ref __tds__UpgradeSystemFirmware

  - @ref __tds__SystemReboot

  - @ref __tds__RestoreSystem

  - @ref __tds__GetSystemBackup

  - @ref __tds__GetSystemLog

  - @ref __tds__GetSystemSupportInformation

  - @ref __tds__GetScopes

  - @ref __tds__SetScopes

  - @ref __tds__AddScopes

  - @ref __tds__RemoveScopes

  - @ref __tds__GetDiscoveryMode

  - @ref __tds__SetDiscoveryMode

  - @ref __tds__GetRemoteDiscoveryMode

  - @ref __tds__SetRemoteDiscoveryMode

  - @ref __tds__GetDPAddresses

  - @ref __tds__GetEndpointReference

  - @ref __tds__GetRemoteUser

  - @ref __tds__SetRemoteUser

  - @ref __tds__GetUsers

  - @ref __tds__CreateUsers

  - @ref __tds__DeleteUsers

  - @ref __tds__SetUser

  - @ref __tds__GetWsdlUrl

  - @ref __tds__GetCapabilities

  - @ref __tds__SetDPAddresses

  - @ref __tds__GetHostname

  - @ref __tds__SetHostname

  - @ref __tds__SetHostnameFromDHCP

  - @ref __tds__GetDNS

  - @ref __tds__SetDNS

  - @ref __tds__GetNTP

  - @ref __tds__SetNTP

  - @ref __tds__GetDynamicDNS

  - @ref __tds__SetDynamicDNS

  - @ref __tds__GetNetworkInterfaces

  - @ref __tds__SetNetworkInterfaces

  - @ref __tds__GetNetworkProtocols

  - @ref __tds__SetNetworkProtocols

  - @ref __tds__GetNetworkDefaultGateway

  - @ref __tds__SetNetworkDefaultGateway

  - @ref __tds__GetZeroConfiguration

  - @ref __tds__SetZeroConfiguration

  - @ref __tds__GetIPAddressFilter

  - @ref __tds__SetIPAddressFilter

  - @ref __tds__AddIPAddressFilter

  - @ref __tds__RemoveIPAddressFilter

  - @ref __tds__GetAccessPolicy

  - @ref __tds__SetAccessPolicy

  - @ref __tds__CreateCertificate

  - @ref __tds__GetCertificates

  - @ref __tds__GetCertificatesStatus

  - @ref __tds__SetCertificatesStatus

  - @ref __tds__DeleteCertificates

  - @ref __tds__GetPkcs10Request

  - @ref __tds__LoadCertificates

  - @ref __tds__GetClientCertificateMode

  - @ref __tds__SetClientCertificateMode

  - @ref __tds__GetRelayOutputs

  - @ref __tds__SetRelayOutputSettings

  - @ref __tds__SetRelayOutputState

  - @ref __tds__SendAuxiliaryCommand

  - @ref __tds__GetCACertificates

  - @ref __tds__LoadCertificateWithPrivateKey

  - @ref __tds__GetCertificateInformation

  - @ref __tds__LoadCACertificates

  - @ref __tds__CreateDot1XConfiguration

  - @ref __tds__SetDot1XConfiguration

  - @ref __tds__GetDot1XConfiguration

  - @ref __tds__GetDot1XConfigurations

  - @ref __tds__DeleteDot1XConfiguration

  - @ref __tds__GetDot11Capabilities

  - @ref __tds__GetDot11Status

  - @ref __tds__ScanAvailableDot11Networks

  - @ref __tds__GetSystemUris

  - @ref __tds__StartFirmwareUpgrade

  - @ref __tds__StartSystemRestore

  - @ref __tds__GetStorageConfigurations

  - @ref __tds__CreateStorageConfiguration

  - @ref __tds__GetStorageConfiguration

  - @ref __tds__SetStorageConfiguration

  - @ref __tds__DeleteStorageConfiguration

@section DeviceBinding_ports Endpoints of Binding "DeviceBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page PullPointSubscriptionBinding Binding "PullPointSubscriptionBinding"

@section PullPointSubscriptionBinding_operations Operations of Binding "PullPointSubscriptionBinding"

  - @ref __tev__PullMessages

  - @ref __tev__Seek

  - @ref __tev__SetSynchronizationPoint

  - @ref __tev__GetServiceCapabilities

  - @ref __tev__CreatePullPointSubscription

  - @ref __tev__GetEventProperties

  - @ref __tev__Renew

  - @ref __tev__Unsubscribe

  - @ref __tev__Subscribe

  - @ref __tev__GetCurrentMessage

  - @ref __tev__Notify

  - @ref __tev__GetMessages

  - @ref __tev__DestroyPullPoint

  - @ref __tev__Notify_

  - @ref __tev__CreatePullPoint

  - @ref __tev__Renew_

  - @ref __tev__Unsubscribe_

  - @ref __tev__PauseSubscription

  - @ref __tev__ResumeSubscription

@section PullPointSubscriptionBinding_ports Endpoints of Binding "PullPointSubscriptionBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page ImagingBinding Binding "ImagingBinding"

@section ImagingBinding_operations Operations of Binding "ImagingBinding"

  - @ref __timg__GetServiceCapabilities

  - @ref __timg__GetImagingSettings

  - @ref __timg__SetImagingSettings

  - @ref __timg__GetOptions

  - @ref __timg__Move

  - @ref __timg__Stop

  - @ref __timg__GetStatus

  - @ref __timg__GetMoveOptions

@section ImagingBinding_ports Endpoints of Binding "ImagingBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page DisplayBinding Binding "DisplayBinding"

@section DisplayBinding_operations Operations of Binding "DisplayBinding"

  - @ref __tls__GetServiceCapabilities

  - @ref __tls__GetLayout

  - @ref __tls__SetLayout

  - @ref __tls__GetDisplayOptions

  - @ref __tls__GetPaneConfigurations

  - @ref __tls__GetPaneConfiguration

  - @ref __tls__SetPaneConfigurations

  - @ref __tls__SetPaneConfiguration

  - @ref __tls__CreatePaneConfiguration

  - @ref __tls__DeletePaneConfiguration

@section DisplayBinding_ports Endpoints of Binding "DisplayBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page DeviceIOBinding Binding "DeviceIOBinding"

@section DeviceIOBinding_operations Operations of Binding "DeviceIOBinding"

  - @ref __tmd__GetServiceCapabilities

  - @ref __tmd__GetRelayOutputOptions

  - @ref __tmd__GetAudioSources

  - @ref __tmd__GetAudioOutputs

  - @ref __tmd__GetVideoSources

  - @ref __tmd__GetVideoOutputs

  - @ref __tmd__GetVideoSourceConfiguration

  - @ref __tmd__GetVideoOutputConfiguration

  - @ref __tmd__GetAudioSourceConfiguration

  - @ref __tmd__GetAudioOutputConfiguration

  - @ref __tmd__SetVideoSourceConfiguration

  - @ref __tmd__SetVideoOutputConfiguration

  - @ref __tmd__SetAudioSourceConfiguration

  - @ref __tmd__SetAudioOutputConfiguration

  - @ref __tmd__GetVideoSourceConfigurationOptions

  - @ref __tmd__GetVideoOutputConfigurationOptions

  - @ref __tmd__GetAudioSourceConfigurationOptions

  - @ref __tmd__GetAudioOutputConfigurationOptions

  - @ref __tmd__GetRelayOutputs

  - @ref __tmd__SetRelayOutputSettings

  - @ref __tmd__SetRelayOutputState

  - @ref __tmd__GetDigitalInputs

  - @ref __tmd__GetSerialPorts

  - @ref __tmd__GetSerialPortConfiguration

  - @ref __tmd__SetSerialPortConfiguration

  - @ref __tmd__GetSerialPortConfigurationOptions

  - @ref __tmd__SendReceiveSerialCommand

@section DeviceIOBinding_ports Endpoints of Binding "DeviceIOBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page PTZBinding Binding "PTZBinding"

@section PTZBinding_operations Operations of Binding "PTZBinding"

  - @ref __tptz__GetServiceCapabilities

  - @ref __tptz__GetConfigurations

  - @ref __tptz__GetPresets

  - @ref __tptz__SetPreset

  - @ref __tptz__RemovePreset

  - @ref __tptz__GotoPreset

  - @ref __tptz__GetStatus

  - @ref __tptz__GetConfiguration

  - @ref __tptz__GetNodes

  - @ref __tptz__GetNode

  - @ref __tptz__SetConfiguration

  - @ref __tptz__GetConfigurationOptions

  - @ref __tptz__GotoHomePosition

  - @ref __tptz__SetHomePosition

  - @ref __tptz__ContinuousMove

  - @ref __tptz__RelativeMove

  - @ref __tptz__SendAuxiliaryCommand

  - @ref __tptz__AbsoluteMove

  - @ref __tptz__Stop

  - @ref __tptz__GetPresetTours

  - @ref __tptz__GetPresetTour

  - @ref __tptz__GetPresetTourOptions

  - @ref __tptz__CreatePresetTour

  - @ref __tptz__ModifyPresetTour

  - @ref __tptz__OperatePresetTour

  - @ref __tptz__RemovePresetTour

  - @ref __tptz__GetCompatibleConfigurations

@section PTZBinding_ports Endpoints of Binding "PTZBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page RecordingBinding Binding "RecordingBinding"

@section RecordingBinding_operations Operations of Binding "RecordingBinding"

  - @ref __trc__GetServiceCapabilities

  - @ref __trc__CreateRecording

  - @ref __trc__DeleteRecording

  - @ref __trc__GetRecordings

  - @ref __trc__SetRecordingConfiguration

  - @ref __trc__GetRecordingConfiguration

  - @ref __trc__GetRecordingOptions

  - @ref __trc__CreateTrack

  - @ref __trc__DeleteTrack

  - @ref __trc__GetTrackConfiguration

  - @ref __trc__SetTrackConfiguration

  - @ref __trc__CreateRecordingJob

  - @ref __trc__DeleteRecordingJob

  - @ref __trc__GetRecordingJobs

  - @ref __trc__SetRecordingJobConfiguration

  - @ref __trc__GetRecordingJobConfiguration

  - @ref __trc__SetRecordingJobMode

  - @ref __trc__GetRecordingJobState

  - @ref __trc__ExportRecordedData

  - @ref __trc__StopExportRecordedData

  - @ref __trc__GetExportRecordedDataState

@section RecordingBinding_ports Endpoints of Binding "RecordingBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page ReplayBinding Binding "ReplayBinding"

@section ReplayBinding_operations Operations of Binding "ReplayBinding"

  - @ref __trp__GetServiceCapabilities

  - @ref __trp__GetReplayUri

  - @ref __trp__GetReplayConfiguration

  - @ref __trp__SetReplayConfiguration

@section ReplayBinding_ports Endpoints of Binding "ReplayBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page MediaBinding Binding "MediaBinding"

@section MediaBinding_operations Operations of Binding "MediaBinding"

  - @ref __trt__GetServiceCapabilities

  - @ref __trt__GetVideoSources

  - @ref __trt__GetAudioSources

  - @ref __trt__GetAudioOutputs

  - @ref __trt__CreateProfile

  - @ref __trt__GetProfile

  - @ref __trt__GetProfiles

  - @ref __trt__AddVideoEncoderConfiguration

  - @ref __trt__AddVideoSourceConfiguration

  - @ref __trt__AddAudioEncoderConfiguration

  - @ref __trt__AddAudioSourceConfiguration

  - @ref __trt__AddPTZConfiguration

  - @ref __trt__AddVideoAnalyticsConfiguration

  - @ref __trt__AddMetadataConfiguration

  - @ref __trt__AddAudioOutputConfiguration

  - @ref __trt__AddAudioDecoderConfiguration

  - @ref __trt__RemoveVideoEncoderConfiguration

  - @ref __trt__RemoveVideoSourceConfiguration

  - @ref __trt__RemoveAudioEncoderConfiguration

  - @ref __trt__RemoveAudioSourceConfiguration

  - @ref __trt__RemovePTZConfiguration

  - @ref __trt__RemoveVideoAnalyticsConfiguration

  - @ref __trt__RemoveMetadataConfiguration

  - @ref __trt__RemoveAudioOutputConfiguration

  - @ref __trt__RemoveAudioDecoderConfiguration

  - @ref __trt__DeleteProfile

  - @ref __trt__GetVideoSourceConfigurations

  - @ref __trt__GetVideoEncoderConfigurations

  - @ref __trt__GetAudioSourceConfigurations

  - @ref __trt__GetAudioEncoderConfigurations

  - @ref __trt__GetVideoAnalyticsConfigurations

  - @ref __trt__GetMetadataConfigurations

  - @ref __trt__GetAudioOutputConfigurations

  - @ref __trt__GetAudioDecoderConfigurations

  - @ref __trt__GetVideoSourceConfiguration

  - @ref __trt__GetVideoEncoderConfiguration

  - @ref __trt__GetAudioSourceConfiguration

  - @ref __trt__GetAudioEncoderConfiguration

  - @ref __trt__GetVideoAnalyticsConfiguration

  - @ref __trt__GetMetadataConfiguration

  - @ref __trt__GetAudioOutputConfiguration

  - @ref __trt__GetAudioDecoderConfiguration

  - @ref __trt__GetCompatibleVideoEncoderConfigurations

  - @ref __trt__GetCompatibleVideoSourceConfigurations

  - @ref __trt__GetCompatibleAudioEncoderConfigurations

  - @ref __trt__GetCompatibleAudioSourceConfigurations

  - @ref __trt__GetCompatibleVideoAnalyticsConfigurations

  - @ref __trt__GetCompatibleMetadataConfigurations

  - @ref __trt__GetCompatibleAudioOutputConfigurations

  - @ref __trt__GetCompatibleAudioDecoderConfigurations

  - @ref __trt__SetVideoSourceConfiguration

  - @ref __trt__SetVideoEncoderConfiguration

  - @ref __trt__SetAudioSourceConfiguration

  - @ref __trt__SetAudioEncoderConfiguration

  - @ref __trt__SetVideoAnalyticsConfiguration

  - @ref __trt__SetMetadataConfiguration

  - @ref __trt__SetAudioOutputConfiguration

  - @ref __trt__SetAudioDecoderConfiguration

  - @ref __trt__GetVideoSourceConfigurationOptions

  - @ref __trt__GetVideoEncoderConfigurationOptions

  - @ref __trt__GetAudioSourceConfigurationOptions

  - @ref __trt__GetAudioEncoderConfigurationOptions

  - @ref __trt__GetMetadataConfigurationOptions

  - @ref __trt__GetAudioOutputConfigurationOptions

  - @ref __trt__GetAudioDecoderConfigurationOptions

  - @ref __trt__GetGuaranteedNumberOfVideoEncoderInstances

  - @ref __trt__GetStreamUri

  - @ref __trt__StartMulticastStreaming

  - @ref __trt__StopMulticastStreaming

  - @ref __trt__SetSynchronizationPoint

  - @ref __trt__GetSnapshotUri

  - @ref __trt__GetVideoSourceModes

  - @ref __trt__SetVideoSourceMode

  - @ref __trt__GetOSDs

  - @ref __trt__GetOSD

  - @ref __trt__GetOSDOptions

  - @ref __trt__SetOSD

  - @ref __trt__CreateOSD

  - @ref __trt__DeleteOSD

@section MediaBinding_ports Endpoints of Binding "MediaBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page ReceiverBinding Binding "ReceiverBinding"

@section ReceiverBinding_operations Operations of Binding "ReceiverBinding"

  - @ref __trv__GetServiceCapabilities

  - @ref __trv__GetReceivers

  - @ref __trv__GetReceiver

  - @ref __trv__CreateReceiver

  - @ref __trv__DeleteReceiver

  - @ref __trv__ConfigureReceiver

  - @ref __trv__SetReceiverMode

  - @ref __trv__GetReceiverState

@section ReceiverBinding_ports Endpoints of Binding "ReceiverBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page SearchBinding Binding "SearchBinding"

@section SearchBinding_operations Operations of Binding "SearchBinding"

  - @ref __tse__GetServiceCapabilities

  - @ref __tse__GetRecordingSummary

  - @ref __tse__GetRecordingInformation

  - @ref __tse__GetMediaAttributes

  - @ref __tse__FindRecordings

  - @ref __tse__GetRecordingSearchResults

  - @ref __tse__FindEvents

  - @ref __tse__GetEventSearchResults

  - @ref __tse__FindPTZPosition

  - @ref __tse__GetPTZPositionSearchResults

  - @ref __tse__GetSearchState

  - @ref __tse__EndSearch

  - @ref __tse__FindMetadata

  - @ref __tse__GetMetadataSearchResults

@section SearchBinding_ports Endpoints of Binding "SearchBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use wsdl2h option -j to omit these declarations.

*/
struct SOAP_ENV__Detail
{
/// xsd:anyAttribute omitted: to parse attribute content of the Detail element into DOM anyAttribute, use wsdl2h option -d.
/// SOAP Fault message "InvalidFilterFault" part "InvalidFilterFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault".
    struct wsnt__InvalidFilterFaultType*  wsnt__InvalidFilterFault      ;
/// SOAP Fault message "InvalidMessageContentExpressionFault" part "InvalidMessageContentExpressionFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault".
    struct wsnt__InvalidMessageContentExpressionFaultType*  wsnt__InvalidMessageContentExpressionFault;
/// SOAP Fault message "InvalidProducerPropertiesExpressionFault" part "InvalidProducerPropertiesExpressionFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault".
    struct wsnt__InvalidProducerPropertiesExpressionFaultType*  wsnt__InvalidProducerPropertiesExpressionFault;
/// SOAP Fault message "InvalidTopicExpressionFault" part "InvalidTopicExpressionFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault".
    struct wsnt__InvalidTopicExpressionFaultType*  wsnt__InvalidTopicExpressionFault;
/// SOAP Fault message "MultipleTopicsSpecifiedFault" part "MultipleTopicsSpecifiedFault" element ""http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault".
    struct wsnt__MultipleTopicsSpecifiedFaultType*  wsnt__MultipleTopicsSpecifiedFault;
/// SOAP Fault message "NoCurrentMessageOnTopicFault" part "NoCurrentMessageOnTopicFault" element ""http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault".
    struct wsnt__NoCurrentMessageOnTopicFaultType*  wsnt__NoCurrentMessageOnTopicFault;
/// SOAP Fault message "NotifyMessageNotSupportedFault" part "NotifyMessageNotSupportedFault" element ""http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault".
    struct wsnt__NotifyMessageNotSupportedFaultType*  wsnt__NotifyMessageNotSupportedFault;
/// SOAP Fault message "PauseFailedFault" part "PauseFailedFault" element ""http://docs.oasis-open.org/wsn/b-2":PauseFailedFault".
    struct wsnt__PauseFailedFaultType*   wsnt__PauseFailedFault        ;
/// SOAP Fault message "PullMessagesFaultResponse" part "parameters" element ""http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse".
    struct _tev__PullMessagesFaultResponse*  tev__PullMessagesFaultResponse;
/// SOAP Fault message "ResourceUnknownFault" part "ResourceUnknownFault" element ""http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault".
    struct wsrfr__ResourceUnknownFaultType*  wsrfr__ResourceUnknownFault   ;
/// SOAP Fault message "ResumeFailedFault" part "ResumeFailedFault" element ""http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault".
    struct wsnt__ResumeFailedFaultType*  wsnt__ResumeFailedFault       ;
/// SOAP Fault message "SubscribeCreationFailedFault" part "SubscribeCreationFailedFault" element ""http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault".
    struct wsnt__SubscribeCreationFailedFaultType*  wsnt__SubscribeCreationFailedFault;
/// SOAP Fault message "TopicExpressionDialectUnknownFault" part "TopicExpressionDialectUnknownFault" element ""http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault".
    struct wsnt__TopicExpressionDialectUnknownFaultType*  wsnt__TopicExpressionDialectUnknownFault;
/// SOAP Fault message "TopicNotSupportedFault" part "TopicNotSupportedFault" element ""http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault".
    struct wsnt__TopicNotSupportedFaultType*  wsnt__TopicNotSupportedFault  ;
/// SOAP Fault message "UnableToCreatePullPointFault" part "UnableToCreatePullPointFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault".
    struct wsnt__UnableToCreatePullPointFaultType*  wsnt__UnableToCreatePullPointFault;
/// SOAP Fault message "UnableToDestroyPullPointFault" part "UnableToDestroyPullPointFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault".
    struct wsnt__UnableToDestroyPullPointFaultType*  wsnt__UnableToDestroyPullPointFault;
/// SOAP Fault message "UnableToDestroySubscriptionFault" part "UnableToDestroySubscriptionFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault".
    struct wsnt__UnableToDestroySubscriptionFaultType*  wsnt__UnableToDestroySubscriptionFault;
/// SOAP Fault message "UnableToGetMessagesFault" part "UnableToGetMessagesFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault".
    struct wsnt__UnableToGetMessagesFaultType*  wsnt__UnableToGetMessagesFault;
/// SOAP Fault message "UnacceptableInitialTerminationTimeFault" part "UnacceptableInitialTerminationTimeFault" element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault".
    struct wsnt__UnacceptableInitialTerminationTimeFaultType*  wsnt__UnacceptableInitialTerminationTimeFault;
/// SOAP Fault message "UnacceptableTerminationTimeFault" part "UnacceptableTerminationTimeFault" element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault".
    struct wsnt__UnacceptableTerminationTimeFaultType*  wsnt__UnacceptableTerminationTimeFault;
/// SOAP Fault message "UnrecognizedPolicyRequestFault" part "UnrecognizedPolicyRequestFault" element ""http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault".
    struct wsnt__UnrecognizedPolicyRequestFaultType*  wsnt__UnrecognizedPolicyRequestFault;
/// SOAP Fault message "UnsupportedPolicyRequestFault" part "UnsupportedPolicyRequestFault" element ""http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault".
    struct wsnt__UnsupportedPolicyRequestFaultType*  wsnt__UnsupportedPolicyRequestFault;
    int                                  __type                        ;	///< set to SOAP_TYPE_X for a serializable type X
    void                                *fault                         ;	///< points to serializable object of type X or NULL
    _XML                                 __any                         ;	///< Catch any other content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ActionEngineBinding                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSupportedActions                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetSupportedActions" of service binding "ActionEngineBinding".
 The service provider returns the supported action types. 
		            <br/>The response returns a list of Action Descriptions
according to the Action Description Language. 
		            <br/>The response also contains a list of URLs that
provide the location of the schema files. These schema files describe the types
and elements used in the Action Descriptions. If action descriptions reference
types or elements of the ONVIF schema file, the ONVIF schema file shall be explicitly
listed.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/actionengine/wsdl/GetSupportedActions"

  - Addressing input action: "http://www.onvif.org/ver10/actionengine/wsdl/GetSupportedActions"

  - Addressing output action: "http://www.onvif.org/ver10/actionengine/wsdl/GetSupportedActionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSupportedActions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetSupportedActions*   ns1__GetSupportedActions,
    // output parameters:
    struct _ns1__GetSupportedActionsResponse*ns1__GetSupportedActionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSupportedActions(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetSupportedActions*   ns1__GetSupportedActions,
    // output parameters:
    struct _ns1__GetSupportedActionsResponse*ns1__GetSupportedActionsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetSupportedActions SOAP
//gsoap ns1  service method-style:	GetSupportedActions document
//gsoap ns1  service method-encoding:	GetSupportedActions literal
//gsoap ns1  service method-input-action:	GetSupportedActions http://www.onvif.org/ver10/actionengine/wsdl/GetSupportedActions
//gsoap ns1  service method-output-action:	GetSupportedActions http://www.onvif.org/ver10/actionengine/wsdl/GetSupportedActionsResponse
int __ns1__GetSupportedActions(
    struct _ns1__GetSupportedActions*   ns1__GetSupportedActions,	///< Input parameter
    struct _ns1__GetSupportedActionsResponse*ns1__GetSupportedActionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetActions                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetActions" of service binding "ActionEngineBinding".
 The service provider returns currently installed Actions.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/actionengine/wsdl/GetActions"

  - Addressing input action: "http://www.onvif.org/ver10/actionengine/wsdl/GetActions"

  - Addressing output action: "http://www.onvif.org/ver10/actionengine/wsdl/GetActionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetActions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetActions*            ns1__GetActions,
    // output parameters:
    struct _ns1__GetActionsResponse    *ns1__GetActionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetActions(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetActions*            ns1__GetActions,
    // output parameters:
    struct _ns1__GetActionsResponse    *ns1__GetActionsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetActions SOAP
//gsoap ns1  service method-style:	GetActions document
//gsoap ns1  service method-encoding:	GetActions literal
//gsoap ns1  service method-input-action:	GetActions http://www.onvif.org/ver10/actionengine/wsdl/GetActions
//gsoap ns1  service method-output-action:	GetActions http://www.onvif.org/ver10/actionengine/wsdl/GetActionsResponse
int __ns1__GetActions(
    struct _ns1__GetActions*            ns1__GetActions,	///< Input parameter
    struct _ns1__GetActionsResponse    *ns1__GetActionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CreateActions                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__CreateActions" of service binding "ActionEngineBinding".
 The create action operation adds actions to configuration. The create action operation
is atomic. If a service provider can not create all of requested actions, the service
provider responds with a fault message.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/actionengine/wsdl/CreateActions"

  - Addressing input action: "http://www.onvif.org/ver10/actionengine/wsdl/CreateActions"

  - Addressing output action: "http://www.onvif.org/ver10/actionengine/wsdl/CreateActionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CreateActions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__CreateActions*         ns1__CreateActions,
    // output parameters:
    struct _ns1__CreateActionsResponse *ns1__CreateActionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CreateActions(
    struct soap *soap,
    // input parameters:
    struct _ns1__CreateActions*         ns1__CreateActions,
    // output parameters:
    struct _ns1__CreateActionsResponse *ns1__CreateActionsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	CreateActions SOAP
//gsoap ns1  service method-style:	CreateActions document
//gsoap ns1  service method-encoding:	CreateActions literal
//gsoap ns1  service method-input-action:	CreateActions http://www.onvif.org/ver10/actionengine/wsdl/CreateActions
//gsoap ns1  service method-output-action:	CreateActions http://www.onvif.org/ver10/actionengine/wsdl/CreateActionsResponse
int __ns1__CreateActions(
    struct _ns1__CreateActions*         ns1__CreateActions,	///< Input parameter
    struct _ns1__CreateActionsResponse *ns1__CreateActionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteActions                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__DeleteActions" of service binding "ActionEngineBinding".
The delete operation deletes actions. The delete action operation is atomic. If
a service provider can not delete all of requested actions, the service provider
responds with a fault message. 

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/actionengine/wsdl/DeleteActions"

  - Addressing input action: "http://www.onvif.org/ver10/actionengine/wsdl/DeleteActions"

  - Addressing output action: "http://www.onvif.org/ver10/actionengine/wsdl/DeleteActionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteActions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__DeleteActions*         ns1__DeleteActions,
    // output parameters:
    struct _ns1__DeleteActionsResponse *ns1__DeleteActionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteActions(
    struct soap *soap,
    // input parameters:
    struct _ns1__DeleteActions*         ns1__DeleteActions,
    // output parameters:
    struct _ns1__DeleteActionsResponse *ns1__DeleteActionsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	DeleteActions SOAP
//gsoap ns1  service method-style:	DeleteActions document
//gsoap ns1  service method-encoding:	DeleteActions literal
//gsoap ns1  service method-input-action:	DeleteActions http://www.onvif.org/ver10/actionengine/wsdl/DeleteActions
//gsoap ns1  service method-output-action:	DeleteActions http://www.onvif.org/ver10/actionengine/wsdl/DeleteActionsResponse
int __ns1__DeleteActions(
    struct _ns1__DeleteActions*         ns1__DeleteActions,	///< Input parameter
    struct _ns1__DeleteActionsResponse *ns1__DeleteActionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyActions                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__ModifyActions" of service binding "ActionEngineBinding".
The modify action operation modifies action configurations. <br/> The modify action
operation is atomic. If a service provider can not modify all of requested action
configurations, the service provider responds with a fault message. <br/>All action
parameters, except the action type, can be modified. The service provider shall
return InvalidAction error if the request attempts to change the action type with
modify action request.  

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/actionengine/wsdl/ModifyActions"

  - Addressing input action: "http://www.onvif.org/ver10/actionengine/wsdl/ModifyActions"

  - Addressing output action: "http://www.onvif.org/ver10/actionengine/wsdl/ModifyActionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyActions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__ModifyActions*         ns1__ModifyActions,
    // output parameters:
    struct _ns1__ModifyActionsResponse *ns1__ModifyActionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyActions(
    struct soap *soap,
    // input parameters:
    struct _ns1__ModifyActions*         ns1__ModifyActions,
    // output parameters:
    struct _ns1__ModifyActionsResponse *ns1__ModifyActionsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	ModifyActions SOAP
//gsoap ns1  service method-style:	ModifyActions document
//gsoap ns1  service method-encoding:	ModifyActions literal
//gsoap ns1  service method-input-action:	ModifyActions http://www.onvif.org/ver10/actionengine/wsdl/ModifyActions
//gsoap ns1  service method-output-action:	ModifyActions http://www.onvif.org/ver10/actionengine/wsdl/ModifyActionsResponse
int __ns1__ModifyActions(
    struct _ns1__ModifyActions*         ns1__ModifyActions,	///< Input parameter
    struct _ns1__ModifyActionsResponse *ns1__ModifyActionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetServiceCapabilities" of service binding "ActionEngineBinding".
 The get capabilities operation returns the Action Engine capabilities

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/actionengine/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/actionengine/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/actionengine/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetServiceCapabilities* ns1__GetServiceCapabilities,
    // output parameters:
    struct _ns1__GetServiceCapabilitiesResponse*ns1__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetServiceCapabilities* ns1__GetServiceCapabilities,
    // output parameters:
    struct _ns1__GetServiceCapabilitiesResponse*ns1__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetServiceCapabilities SOAP
//gsoap ns1  service method-style:	GetServiceCapabilities document
//gsoap ns1  service method-encoding:	GetServiceCapabilities literal
//gsoap ns1  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/actionengine/wsdl/GetServiceCapabilities
//gsoap ns1  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/actionengine/wsdl/GetServiceCapabilitiesResponse
int __ns1__GetServiceCapabilities(
    struct _ns1__GetServiceCapabilities* ns1__GetServiceCapabilities,	///< Input parameter
    struct _ns1__GetServiceCapabilitiesResponse*ns1__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetActionTriggers                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetActionTriggers" of service binding "ActionEngineBinding".
The service provider returns existing action triggers 

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/actionengine/wsdl/GetActionTriggers"

  - Addressing input action: "http://www.onvif.org/ver10/actionengine/wsdl/GetActionTriggers"

  - Addressing output action: "http://www.onvif.org/ver10/actionengine/wsdl/GetActionTriggersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetActionTriggers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetActionTriggers*     ns1__GetActionTriggers,
    // output parameters:
    struct _ns1__GetActionTriggersResponse*ns1__GetActionTriggersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetActionTriggers(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetActionTriggers*     ns1__GetActionTriggers,
    // output parameters:
    struct _ns1__GetActionTriggersResponse*ns1__GetActionTriggersResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetActionTriggers SOAP
//gsoap ns1  service method-style:	GetActionTriggers document
//gsoap ns1  service method-encoding:	GetActionTriggers literal
//gsoap ns1  service method-input-action:	GetActionTriggers http://www.onvif.org/ver10/actionengine/wsdl/GetActionTriggers
//gsoap ns1  service method-output-action:	GetActionTriggers http://www.onvif.org/ver10/actionengine/wsdl/GetActionTriggersResponse
int __ns1__GetActionTriggers(
    struct _ns1__GetActionTriggers*     ns1__GetActionTriggers,	///< Input parameter
    struct _ns1__GetActionTriggersResponse*ns1__GetActionTriggersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CreateActionTriggers                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__CreateActionTriggers" of service binding "ActionEngineBinding".
 Creates action triggers. The create action triggers operation is atomic. If a service
provider can not create all of requested action triggers, the service provider
responds with a fault message.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/actionengine/wsdl/CreateActionTriggers"

  - Addressing input action: "http://www.onvif.org/ver10/actionengine/wsdl/CreateActionTriggers"

  - Addressing output action: "http://www.onvif.org/ver10/actionengine/wsdl/CreateActionTriggersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CreateActionTriggers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__CreateActionTriggers*  ns1__CreateActionTriggers,
    // output parameters:
    struct _ns1__CreateActionTriggersResponse*ns1__CreateActionTriggersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CreateActionTriggers(
    struct soap *soap,
    // input parameters:
    struct _ns1__CreateActionTriggers*  ns1__CreateActionTriggers,
    // output parameters:
    struct _ns1__CreateActionTriggersResponse*ns1__CreateActionTriggersResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	CreateActionTriggers SOAP
//gsoap ns1  service method-style:	CreateActionTriggers document
//gsoap ns1  service method-encoding:	CreateActionTriggers literal
//gsoap ns1  service method-input-action:	CreateActionTriggers http://www.onvif.org/ver10/actionengine/wsdl/CreateActionTriggers
//gsoap ns1  service method-output-action:	CreateActionTriggers http://www.onvif.org/ver10/actionengine/wsdl/CreateActionTriggersResponse
int __ns1__CreateActionTriggers(
    struct _ns1__CreateActionTriggers*  ns1__CreateActionTriggers,	///< Input parameter
    struct _ns1__CreateActionTriggersResponse*ns1__CreateActionTriggersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteActionTriggers                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__DeleteActionTriggers" of service binding "ActionEngineBinding".
Deletes action triggers. The delete action triggers operation is atomic. If a service
provider can not delete all of requested action triggers, the service provider
responds with a fault message.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/actionengine/wsdl/DeleteActionTriggers"

  - Addressing input action: "http://www.onvif.org/ver10/actionengine/wsdl/DeleteActionTriggers"

  - Addressing output action: "http://www.onvif.org/ver10/actionengine/wsdl/DeleteActionTriggersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteActionTriggers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__DeleteActionTriggers*  ns1__DeleteActionTriggers,
    // output parameters:
    struct _ns1__DeleteActionTriggersResponse*ns1__DeleteActionTriggersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteActionTriggers(
    struct soap *soap,
    // input parameters:
    struct _ns1__DeleteActionTriggers*  ns1__DeleteActionTriggers,
    // output parameters:
    struct _ns1__DeleteActionTriggersResponse*ns1__DeleteActionTriggersResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	DeleteActionTriggers SOAP
//gsoap ns1  service method-style:	DeleteActionTriggers document
//gsoap ns1  service method-encoding:	DeleteActionTriggers literal
//gsoap ns1  service method-input-action:	DeleteActionTriggers http://www.onvif.org/ver10/actionengine/wsdl/DeleteActionTriggers
//gsoap ns1  service method-output-action:	DeleteActionTriggers http://www.onvif.org/ver10/actionengine/wsdl/DeleteActionTriggersResponse
int __ns1__DeleteActionTriggers(
    struct _ns1__DeleteActionTriggers*  ns1__DeleteActionTriggers,	///< Input parameter
    struct _ns1__DeleteActionTriggersResponse*ns1__DeleteActionTriggersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyActionTriggers                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__ModifyActionTriggers" of service binding "ActionEngineBinding".
Modifies existing action triggers. The modify action triggers operation is atomic.
If a service provider can not modify all of requested action trigger configurations,
the service provider responds with a fault message.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/actionengine/wsdl/ModifyActionTriggers"

  - Addressing input action: "http://www.onvif.org/ver10/actionengine/wsdl/ModifyActionTriggers"

  - Addressing output action: "http://www.onvif.org/ver10/actionengine/wsdl/ModifyActionTriggersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyActionTriggers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__ModifyActionTriggers*  ns1__ModifyActionTriggers,
    // output parameters:
    struct _ns1__ModifyActionTriggersResponse*ns1__ModifyActionTriggersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyActionTriggers(
    struct soap *soap,
    // input parameters:
    struct _ns1__ModifyActionTriggers*  ns1__ModifyActionTriggers,
    // output parameters:
    struct _ns1__ModifyActionTriggersResponse*ns1__ModifyActionTriggersResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	ModifyActionTriggers SOAP
//gsoap ns1  service method-style:	ModifyActionTriggers document
//gsoap ns1  service method-encoding:	ModifyActionTriggers literal
//gsoap ns1  service method-input-action:	ModifyActionTriggers http://www.onvif.org/ver10/actionengine/wsdl/ModifyActionTriggers
//gsoap ns1  service method-output-action:	ModifyActionTriggers http://www.onvif.org/ver10/actionengine/wsdl/ModifyActionTriggersResponse
int __ns1__ModifyActionTriggers(
    struct _ns1__ModifyActionTriggers*  ns1__ModifyActionTriggers,	///< Input parameter
    struct _ns1__ModifyActionTriggersResponse*ns1__ModifyActionTriggersResponse	///< Output parameter
);

/**

@page ActionEngineBinding Binding "ActionEngineBinding"

@section ActionEngineBinding_policy_enablers Policy Enablers of Binding "ActionEngineBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PACSBinding                                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns2__GetServiceCapabilities" of service binding "PACSBinding".
This operation returns the capabilities of the Access Control service.
</p><p>
An ONVIF compliant device which provides the Access Control service shall
implement this method.


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns2__GetServiceCapabilities* ns2__GetServiceCapabilities,
    // output parameters:
    struct _ns2__GetServiceCapabilitiesResponse*ns2__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _ns2__GetServiceCapabilities* ns2__GetServiceCapabilities,
    // output parameters:
    struct _ns2__GetServiceCapabilitiesResponse*ns2__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap ns2  service method-protocol:	GetServiceCapabilities SOAP
//gsoap ns2  service method-style:	GetServiceCapabilities document
//gsoap ns2  service method-encoding:	GetServiceCapabilities literal
//gsoap ns2  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/accesscontrol/wsdl/GetServiceCapabilities
//gsoap ns2  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/accesscontrol/wsdl/GetServiceCapabilitiesResponse
int __ns2__GetServiceCapabilities(
    struct _ns2__GetServiceCapabilities* ns2__GetServiceCapabilities,	///< Input parameter
    struct _ns2__GetServiceCapabilitiesResponse*ns2__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__GetAccessPointInfoList                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns2__GetAccessPointInfoList" of service binding "PACSBinding".
This operation requests a list of all AccessPointInfo items provided by the device.
An ONVIF compliant device which provides the Access Control service shall implement
this method.
</p><p>
A call to this method shall return a StartReference when not all data is returned
and more
data is available. The reference shall be valid for retrieving the next set of
data.
Please refer section [Retrieving system configuration] for more details.
</p><p>
The number of items returned shall not be greater than Limit parameter.
</p><p>


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfoList"

  - Addressing input action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfoList"

  - Addressing output action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfoListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__GetAccessPointInfoList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns2__GetAccessPointInfoList* ns2__GetAccessPointInfoList,
    // output parameters:
    struct _ns2__GetAccessPointInfoListResponse*ns2__GetAccessPointInfoListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__GetAccessPointInfoList(
    struct soap *soap,
    // input parameters:
    struct _ns2__GetAccessPointInfoList* ns2__GetAccessPointInfoList,
    // output parameters:
    struct _ns2__GetAccessPointInfoListResponse*ns2__GetAccessPointInfoListResponse
  );
@endcode

*/

//gsoap ns2  service method-protocol:	GetAccessPointInfoList SOAP
//gsoap ns2  service method-style:	GetAccessPointInfoList document
//gsoap ns2  service method-encoding:	GetAccessPointInfoList literal
//gsoap ns2  service method-input-action:	GetAccessPointInfoList http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfoList
//gsoap ns2  service method-output-action:	GetAccessPointInfoList http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfoListResponse
int __ns2__GetAccessPointInfoList(
    struct _ns2__GetAccessPointInfoList* ns2__GetAccessPointInfoList,	///< Input parameter
    struct _ns2__GetAccessPointInfoListResponse*ns2__GetAccessPointInfoListResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__GetAccessPointInfo                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns2__GetAccessPointInfo" of service binding "PACSBinding".
This operation requests a list of AccessPointInfo items matching the given tokens.
</p><p>
An ONVIF compliant device which provides Access Control service shall implement
this method.
</p><p>
The device shall ignore tokens it cannot resolve and shall return an empty list
if there
are no items matching specified tokens. The device shall not return a fault in
this case.
</p><p>
If the number of requested items is greater than MaxLimit, a TooManyItems
fault shall be returned.
</p><p>


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfo"

  - Addressing input action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfo"

  - Addressing output action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__GetAccessPointInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns2__GetAccessPointInfo*    ns2__GetAccessPointInfo,
    // output parameters:
    struct _ns2__GetAccessPointInfoResponse*ns2__GetAccessPointInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__GetAccessPointInfo(
    struct soap *soap,
    // input parameters:
    struct _ns2__GetAccessPointInfo*    ns2__GetAccessPointInfo,
    // output parameters:
    struct _ns2__GetAccessPointInfoResponse*ns2__GetAccessPointInfoResponse
  );
@endcode

*/

//gsoap ns2  service method-protocol:	GetAccessPointInfo SOAP
//gsoap ns2  service method-style:	GetAccessPointInfo document
//gsoap ns2  service method-encoding:	GetAccessPointInfo literal
//gsoap ns2  service method-input-action:	GetAccessPointInfo http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfo
//gsoap ns2  service method-output-action:	GetAccessPointInfo http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfoResponse
int __ns2__GetAccessPointInfo(
    struct _ns2__GetAccessPointInfo*    ns2__GetAccessPointInfo,	///< Input parameter
    struct _ns2__GetAccessPointInfoResponse*ns2__GetAccessPointInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__GetAreaInfoList                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns2__GetAreaInfoList" of service binding "PACSBinding".
This operation requests a list of all AreaInfo items provided by the device.
An ONVIF compliant device which provides the Access Control service shall implement
this method.
</p><p>
A call to this method shall return a StartReference when not all data is returned
and more
data is available. The reference shall be valid for retrieving the next set of
data.
Please refer section [Retrieving system configuration] for more details.
</p><p>
The number of items returned shall not be greater than Limit parameter.
</p><p>



  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfoList"

  - Addressing input action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfoList"

  - Addressing output action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfoListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__GetAreaInfoList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns2__GetAreaInfoList*       ns2__GetAreaInfoList,
    // output parameters:
    struct _ns2__GetAreaInfoListResponse*ns2__GetAreaInfoListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__GetAreaInfoList(
    struct soap *soap,
    // input parameters:
    struct _ns2__GetAreaInfoList*       ns2__GetAreaInfoList,
    // output parameters:
    struct _ns2__GetAreaInfoListResponse*ns2__GetAreaInfoListResponse
  );
@endcode

*/

//gsoap ns2  service method-protocol:	GetAreaInfoList SOAP
//gsoap ns2  service method-style:	GetAreaInfoList document
//gsoap ns2  service method-encoding:	GetAreaInfoList literal
//gsoap ns2  service method-input-action:	GetAreaInfoList http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfoList
//gsoap ns2  service method-output-action:	GetAreaInfoList http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfoListResponse
int __ns2__GetAreaInfoList(
    struct _ns2__GetAreaInfoList*       ns2__GetAreaInfoList,	///< Input parameter
    struct _ns2__GetAreaInfoListResponse*ns2__GetAreaInfoListResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__GetAreaInfo                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns2__GetAreaInfo" of service binding "PACSBinding".
This operation requests a list of AreaInfo items matching the given tokens.
</p><p>
An ONVIF compliant device which provides Access Control service shall implement
this method.
</p><p>
The device shall ignore tokens it cannot resolve and shall return an empty list
if there
are no items matching specified tokens. The device shall not return a fault in
this case.
</p><p>
If the number of requested items is greater than MaxLimit, a TooManyItems
fault shall be returned.
</p><p>


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfo"

  - Addressing input action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfo"

  - Addressing output action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__GetAreaInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns2__GetAreaInfo*           ns2__GetAreaInfo,
    // output parameters:
    struct _ns2__GetAreaInfoResponse   *ns2__GetAreaInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__GetAreaInfo(
    struct soap *soap,
    // input parameters:
    struct _ns2__GetAreaInfo*           ns2__GetAreaInfo,
    // output parameters:
    struct _ns2__GetAreaInfoResponse   *ns2__GetAreaInfoResponse
  );
@endcode

*/

//gsoap ns2  service method-protocol:	GetAreaInfo SOAP
//gsoap ns2  service method-style:	GetAreaInfo document
//gsoap ns2  service method-encoding:	GetAreaInfo literal
//gsoap ns2  service method-input-action:	GetAreaInfo http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfo
//gsoap ns2  service method-output-action:	GetAreaInfo http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfoResponse
int __ns2__GetAreaInfo(
    struct _ns2__GetAreaInfo*           ns2__GetAreaInfo,	///< Input parameter
    struct _ns2__GetAreaInfoResponse   *ns2__GetAreaInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__GetAccessPointState                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns2__GetAccessPointState" of service binding "PACSBinding".
This operation requests the AccessPointState for the AccessPoint instance specified
by Token.
</p><p>
An ONVIF compliant device that provides Access Control service shall implement
this method.


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointState"

  - Addressing input action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointState"

  - Addressing output action: "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__GetAccessPointState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns2__GetAccessPointState*   ns2__GetAccessPointState,
    // output parameters:
    struct _ns2__GetAccessPointStateResponse*ns2__GetAccessPointStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__GetAccessPointState(
    struct soap *soap,
    // input parameters:
    struct _ns2__GetAccessPointState*   ns2__GetAccessPointState,
    // output parameters:
    struct _ns2__GetAccessPointStateResponse*ns2__GetAccessPointStateResponse
  );
@endcode

*/

//gsoap ns2  service method-protocol:	GetAccessPointState SOAP
//gsoap ns2  service method-style:	GetAccessPointState document
//gsoap ns2  service method-encoding:	GetAccessPointState literal
//gsoap ns2  service method-input-action:	GetAccessPointState http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointState
//gsoap ns2  service method-output-action:	GetAccessPointState http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointStateResponse
int __ns2__GetAccessPointState(
    struct _ns2__GetAccessPointState*   ns2__GetAccessPointState,	///< Input parameter
    struct _ns2__GetAccessPointStateResponse*ns2__GetAccessPointStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__EnableAccessPoint                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns2__EnableAccessPoint" of service binding "PACSBinding".
This operation allows enabling an access point.
</p><p>
A device that signals support for DisableAccessPoint capability for a particular
AccessPoint
instance shall implement this command.
</p><p>


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accesscontrol/wsdl/EnableAccessPoint"

  - Addressing input action: "http://www.onvif.org/ver10/accesscontrol/wsdl/EnableAccessPoint"

  - Addressing output action: "http://www.onvif.org/ver10/accesscontrol/wsdl/EnableAccessPointResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__EnableAccessPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns2__EnableAccessPoint*     ns2__EnableAccessPoint,
    // output parameters:
    struct _ns2__EnableAccessPointResponse*ns2__EnableAccessPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__EnableAccessPoint(
    struct soap *soap,
    // input parameters:
    struct _ns2__EnableAccessPoint*     ns2__EnableAccessPoint,
    // output parameters:
    struct _ns2__EnableAccessPointResponse*ns2__EnableAccessPointResponse
  );
@endcode

*/

//gsoap ns2  service method-protocol:	EnableAccessPoint SOAP
//gsoap ns2  service method-style:	EnableAccessPoint document
//gsoap ns2  service method-encoding:	EnableAccessPoint literal
//gsoap ns2  service method-input-action:	EnableAccessPoint http://www.onvif.org/ver10/accesscontrol/wsdl/EnableAccessPoint
//gsoap ns2  service method-output-action:	EnableAccessPoint http://www.onvif.org/ver10/accesscontrol/wsdl/EnableAccessPointResponse
int __ns2__EnableAccessPoint(
    struct _ns2__EnableAccessPoint*     ns2__EnableAccessPoint,	///< Input parameter
    struct _ns2__EnableAccessPointResponse*ns2__EnableAccessPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__DisableAccessPoint                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns2__DisableAccessPoint" of service binding "PACSBinding".
This operation allows disabling an access point.
</p><p>
A device that signals support for DisableAccessPoint capability for a particular
AccessPoint
instance shall implement this command.
</p><p>


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accesscontrol/wsdl/DisableAccessPoint"

  - Addressing input action: "http://www.onvif.org/ver10/accesscontrol/wsdl/DisableAccessPoint"

  - Addressing output action: "http://www.onvif.org/ver10/accesscontrol/wsdl/DisableAccessPointResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__DisableAccessPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns2__DisableAccessPoint*    ns2__DisableAccessPoint,
    // output parameters:
    struct _ns2__DisableAccessPointResponse*ns2__DisableAccessPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__DisableAccessPoint(
    struct soap *soap,
    // input parameters:
    struct _ns2__DisableAccessPoint*    ns2__DisableAccessPoint,
    // output parameters:
    struct _ns2__DisableAccessPointResponse*ns2__DisableAccessPointResponse
  );
@endcode

*/

//gsoap ns2  service method-protocol:	DisableAccessPoint SOAP
//gsoap ns2  service method-style:	DisableAccessPoint document
//gsoap ns2  service method-encoding:	DisableAccessPoint literal
//gsoap ns2  service method-input-action:	DisableAccessPoint http://www.onvif.org/ver10/accesscontrol/wsdl/DisableAccessPoint
//gsoap ns2  service method-output-action:	DisableAccessPoint http://www.onvif.org/ver10/accesscontrol/wsdl/DisableAccessPointResponse
int __ns2__DisableAccessPoint(
    struct _ns2__DisableAccessPoint*    ns2__DisableAccessPoint,	///< Input parameter
    struct _ns2__DisableAccessPointResponse*ns2__DisableAccessPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__ExternalAuthorization                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns2__ExternalAuthorization" of service binding "PACSBinding".
This operation allows to Deny or Grant decision at an AccessPoint instance.
</p><p>
A device that signals support for ExternalAuthorization capability for a particular
AccessPoint instance shall implement this method.


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accesscontrol/wsdl/ExternalAuthorization"

  - Addressing input action: "http://www.onvif.org/ver10/accesscontrol/wsdl/ExternalAuthorization"

  - Addressing output action: "http://www.onvif.org/ver10/accesscontrol/wsdl/ExternalAuthorizationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__ExternalAuthorization(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns2__ExternalAuthorization* ns2__ExternalAuthorization,
    // output parameters:
    struct _ns2__ExternalAuthorizationResponse*ns2__ExternalAuthorizationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__ExternalAuthorization(
    struct soap *soap,
    // input parameters:
    struct _ns2__ExternalAuthorization* ns2__ExternalAuthorization,
    // output parameters:
    struct _ns2__ExternalAuthorizationResponse*ns2__ExternalAuthorizationResponse
  );
@endcode

*/

//gsoap ns2  service method-protocol:	ExternalAuthorization SOAP
//gsoap ns2  service method-style:	ExternalAuthorization document
//gsoap ns2  service method-encoding:	ExternalAuthorization literal
//gsoap ns2  service method-input-action:	ExternalAuthorization http://www.onvif.org/ver10/accesscontrol/wsdl/ExternalAuthorization
//gsoap ns2  service method-output-action:	ExternalAuthorization http://www.onvif.org/ver10/accesscontrol/wsdl/ExternalAuthorizationResponse
int __ns2__ExternalAuthorization(
    struct _ns2__ExternalAuthorization* ns2__ExternalAuthorization,	///< Input parameter
    struct _ns2__ExternalAuthorizationResponse*ns2__ExternalAuthorizationResponse	///< Output parameter
);

/**

@page PACSBinding Binding "PACSBinding"

@section PACSBinding_policy_enablers Policy Enablers of Binding "PACSBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DoorControlBinding                                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns4__GetServiceCapabilities" of service binding "DoorControlBinding".
This operation returns the capabilities of the service.
</p><p>
An ONVIF compliant device which provides the Door Control service shall implement
this method.


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/doorcontrol/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/doorcontrol/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/doorcontrol/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns4__GetServiceCapabilities* ns4__GetServiceCapabilities,
    // output parameters:
    struct _ns4__GetServiceCapabilitiesResponse*ns4__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _ns4__GetServiceCapabilities* ns4__GetServiceCapabilities,
    // output parameters:
    struct _ns4__GetServiceCapabilitiesResponse*ns4__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap ns4  service method-protocol:	GetServiceCapabilities SOAP
//gsoap ns4  service method-style:	GetServiceCapabilities document
//gsoap ns4  service method-encoding:	GetServiceCapabilities literal
//gsoap ns4  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/doorcontrol/wsdl/GetServiceCapabilities
//gsoap ns4  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/doorcontrol/wsdl/GetServiceCapabilitiesResponse
int __ns4__GetServiceCapabilities(
    struct _ns4__GetServiceCapabilities* ns4__GetServiceCapabilities,	///< Input parameter
    struct _ns4__GetServiceCapabilitiesResponse*ns4__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetDoorInfoList                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns4__GetDoorInfoList" of service binding "DoorControlBinding".
This operation requests a list of all DoorInfo items provided by the device.
An ONVIF compliant device that provides Door Control service shall implement
this method.
</p><p>

A call to this method shall return a StartReference when not all data  is returned
and more data is available.
The reference shall be valid for retrieving the next set of data.
Please refer section 4.8.3 of Access Control Service Specification for more details.
The number of items returned shall not be greater than Limit parameter.
</p><p>


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorInfoList"

  - Addressing input action: "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorInfoList"

  - Addressing output action: "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorInfoListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetDoorInfoList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns4__GetDoorInfoList*       ns4__GetDoorInfoList,
    // output parameters:
    struct _ns4__GetDoorInfoListResponse*ns4__GetDoorInfoListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetDoorInfoList(
    struct soap *soap,
    // input parameters:
    struct _ns4__GetDoorInfoList*       ns4__GetDoorInfoList,
    // output parameters:
    struct _ns4__GetDoorInfoListResponse*ns4__GetDoorInfoListResponse
  );
@endcode

*/

//gsoap ns4  service method-protocol:	GetDoorInfoList SOAP
//gsoap ns4  service method-style:	GetDoorInfoList document
//gsoap ns4  service method-encoding:	GetDoorInfoList literal
//gsoap ns4  service method-input-action:	GetDoorInfoList http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorInfoList
//gsoap ns4  service method-output-action:	GetDoorInfoList http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorInfoListResponse
int __ns4__GetDoorInfoList(
    struct _ns4__GetDoorInfoList*       ns4__GetDoorInfoList,	///< Input parameter
    struct _ns4__GetDoorInfoListResponse*ns4__GetDoorInfoListResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetDoorInfo                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns4__GetDoorInfo" of service binding "DoorControlBinding".
This operation requests a list of DoorInfo items matching the given tokens.
An ONVIF-compliant device that provides Door Control service shall implement this
method.
</p><p>

The device shall ignore tokens it cannot resolve and may return an empty list
if there are no items matching specified tokens.
If the number of requested items is greater than MaxLimit, a TooManyItems fault
shall be returned.
</p><p>


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorInfo"

  - Addressing input action: "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorInfo"

  - Addressing output action: "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetDoorInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns4__GetDoorInfo*           ns4__GetDoorInfo,
    // output parameters:
    struct _ns4__GetDoorInfoResponse   *ns4__GetDoorInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetDoorInfo(
    struct soap *soap,
    // input parameters:
    struct _ns4__GetDoorInfo*           ns4__GetDoorInfo,
    // output parameters:
    struct _ns4__GetDoorInfoResponse   *ns4__GetDoorInfoResponse
  );
@endcode

*/

//gsoap ns4  service method-protocol:	GetDoorInfo SOAP
//gsoap ns4  service method-style:	GetDoorInfo document
//gsoap ns4  service method-encoding:	GetDoorInfo literal
//gsoap ns4  service method-input-action:	GetDoorInfo http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorInfo
//gsoap ns4  service method-output-action:	GetDoorInfo http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorInfoResponse
int __ns4__GetDoorInfo(
    struct _ns4__GetDoorInfo*           ns4__GetDoorInfo,	///< Input parameter
    struct _ns4__GetDoorInfoResponse   *ns4__GetDoorInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetDoorState                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns4__GetDoorState" of service binding "DoorControlBinding".
This operation requests the state of a Door specified by the Token.
</p><p>
A device implementing the Door Control service shall be capable of reporting
the status of a door using a DoorState structure available from the
GetDoorState command.


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorState"

  - Addressing input action: "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorState"

  - Addressing output action: "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetDoorState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns4__GetDoorState*          ns4__GetDoorState,
    // output parameters:
    struct _ns4__GetDoorStateResponse  *ns4__GetDoorStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetDoorState(
    struct soap *soap,
    // input parameters:
    struct _ns4__GetDoorState*          ns4__GetDoorState,
    // output parameters:
    struct _ns4__GetDoorStateResponse  *ns4__GetDoorStateResponse
  );
@endcode

*/

//gsoap ns4  service method-protocol:	GetDoorState SOAP
//gsoap ns4  service method-style:	GetDoorState document
//gsoap ns4  service method-encoding:	GetDoorState literal
//gsoap ns4  service method-input-action:	GetDoorState http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorState
//gsoap ns4  service method-output-action:	GetDoorState http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorStateResponse
int __ns4__GetDoorState(
    struct _ns4__GetDoorState*          ns4__GetDoorState,	///< Input parameter
    struct _ns4__GetDoorStateResponse  *ns4__GetDoorStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__AccessDoor                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns4__AccessDoor" of service binding "DoorControlBinding".
This operation allows momentarily accessing a Door.
It invokes the functionality typically used when a card holder presents a
card to a card reader at the door and is granted access.
</p><p>
The DoorMode shall change to Accessed state. Please refer to Accessed mode in section
[DoorMode] for more details.
</p><p>
The Door shall remain accessible for the defined time. When the time span
elapses, the DoorMode shall change back to its previous state.
</p><p>
If the request cannot be fulfilled, a Failure fault shall be returned.
</p><p>
Please refer to section [DoorMode] for details about Door Modes restrictions.
</p><p>
A device that signals support for Access capability for a particular Door
instance shall implement this method. A device that signals support for
AccessTimingOverride capability for a particular Door instance shall also
provide optional timing parameters (AccessTime, OpenTooLongTime and
PreAlarmTime) when performing AccessDoor command.
</p><p>
The device shall take the best effort approach for parameters not supported,
it must fallback to preconfigured time or limit the time to the closest
supported time if the specified time is out of range.


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/doorcontrol/wsdl/AccessDoor"

  - Addressing input action: "http://www.onvif.org/ver10/doorcontrol/wsdl/AccessDoor"

  - Addressing output action: "http://www.onvif.org/ver10/doorcontrol/wsdl/AccessDoorResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__AccessDoor(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns4__AccessDoor*            ns4__AccessDoor,
    // output parameters:
    struct _ns4__AccessDoorResponse    *ns4__AccessDoorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__AccessDoor(
    struct soap *soap,
    // input parameters:
    struct _ns4__AccessDoor*            ns4__AccessDoor,
    // output parameters:
    struct _ns4__AccessDoorResponse    *ns4__AccessDoorResponse
  );
@endcode

*/

//gsoap ns4  service method-protocol:	AccessDoor SOAP
//gsoap ns4  service method-style:	AccessDoor document
//gsoap ns4  service method-encoding:	AccessDoor literal
//gsoap ns4  service method-input-action:	AccessDoor http://www.onvif.org/ver10/doorcontrol/wsdl/AccessDoor
//gsoap ns4  service method-output-action:	AccessDoor http://www.onvif.org/ver10/doorcontrol/wsdl/AccessDoorResponse
int __ns4__AccessDoor(
    struct _ns4__AccessDoor*            ns4__AccessDoor,	///< Input parameter
    struct _ns4__AccessDoorResponse    *ns4__AccessDoorResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__LockDoor                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns4__LockDoor" of service binding "DoorControlBinding".
This operation allows locking a Door.
The DoorMode shall change to Locked state.
Please refer to Locked mode in section [DoorMode] for more details.
</p><p>
A device that signals support for Lock capability for a particular Door
instance shall implement this method.
</p><p>
If the request cannot be fulfilled, a Failure fault shall be returned.
Please refer to section [DoorMode] for more details about Door Modes restrictions.


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/doorcontrol/wsdl/LockDoor"

  - Addressing input action: "http://www.onvif.org/ver10/doorcontrol/wsdl/LockDoor"

  - Addressing output action: "http://www.onvif.org/ver10/doorcontrol/wsdl/LockDoorResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__LockDoor(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns4__LockDoor*              ns4__LockDoor,
    // output parameters:
    struct _ns4__LockDoorResponse      *ns4__LockDoorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__LockDoor(
    struct soap *soap,
    // input parameters:
    struct _ns4__LockDoor*              ns4__LockDoor,
    // output parameters:
    struct _ns4__LockDoorResponse      *ns4__LockDoorResponse
  );
@endcode

*/

//gsoap ns4  service method-protocol:	LockDoor SOAP
//gsoap ns4  service method-style:	LockDoor document
//gsoap ns4  service method-encoding:	LockDoor literal
//gsoap ns4  service method-input-action:	LockDoor http://www.onvif.org/ver10/doorcontrol/wsdl/LockDoor
//gsoap ns4  service method-output-action:	LockDoor http://www.onvif.org/ver10/doorcontrol/wsdl/LockDoorResponse
int __ns4__LockDoor(
    struct _ns4__LockDoor*              ns4__LockDoor,	///< Input parameter
    struct _ns4__LockDoorResponse      *ns4__LockDoorResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__UnlockDoor                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns4__UnlockDoor" of service binding "DoorControlBinding".
This operation allows unlocking a Door.
The DoorMode shall change to Unlocked state.
Please refer to Unlocked mode in section [DoorMode] for more details.
</p><p>
A device that signals support for Unlock capability for a particular Door
instance shall implement this method.
</p><p>
If the request cannot be fulfilled, a Failure fault shall be returned.
Please refer to section [DoorMode] for more details about Door Modes restrictions.


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/doorcontrol/wsdl/UnlockDoor"

  - Addressing input action: "http://www.onvif.org/ver10/doorcontrol/wsdl/UnlockDoor"

  - Addressing output action: "http://www.onvif.org/ver10/doorcontrol/wsdl/UnlockDoorResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__UnlockDoor(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns4__UnlockDoor*            ns4__UnlockDoor,
    // output parameters:
    struct _ns4__UnlockDoorResponse    *ns4__UnlockDoorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__UnlockDoor(
    struct soap *soap,
    // input parameters:
    struct _ns4__UnlockDoor*            ns4__UnlockDoor,
    // output parameters:
    struct _ns4__UnlockDoorResponse    *ns4__UnlockDoorResponse
  );
@endcode

*/

//gsoap ns4  service method-protocol:	UnlockDoor SOAP
//gsoap ns4  service method-style:	UnlockDoor document
//gsoap ns4  service method-encoding:	UnlockDoor literal
//gsoap ns4  service method-input-action:	UnlockDoor http://www.onvif.org/ver10/doorcontrol/wsdl/UnlockDoor
//gsoap ns4  service method-output-action:	UnlockDoor http://www.onvif.org/ver10/doorcontrol/wsdl/UnlockDoorResponse
int __ns4__UnlockDoor(
    struct _ns4__UnlockDoor*            ns4__UnlockDoor,	///< Input parameter
    struct _ns4__UnlockDoorResponse    *ns4__UnlockDoorResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__BlockDoor                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns4__BlockDoor" of service binding "DoorControlBinding".
This operation allows blocking a Door and preventing momentary access (AccessDoor
command).
The DoorMode shall change to Blocked state.
Please refer to Blocked mode in section [DoorMode] for more details.
</p><p>
A device that signals support for Block capability for a particular Door
instance shall implement this method.
</p><p>
If the request cannot be fulfilled, a Failure fault shall be returned.
Please refer to section [DoorMode] for more details about Door Modes restrictions.


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/doorcontrol/wsdl/BlockDoor"

  - Addressing input action: "http://www.onvif.org/ver10/doorcontrol/wsdl/BlockDoor"

  - Addressing output action: "http://www.onvif.org/ver10/doorcontrol/wsdl/BlockDoorResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__BlockDoor(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns4__BlockDoor*             ns4__BlockDoor,
    // output parameters:
    struct _ns4__BlockDoorResponse     *ns4__BlockDoorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__BlockDoor(
    struct soap *soap,
    // input parameters:
    struct _ns4__BlockDoor*             ns4__BlockDoor,
    // output parameters:
    struct _ns4__BlockDoorResponse     *ns4__BlockDoorResponse
  );
@endcode

*/

//gsoap ns4  service method-protocol:	BlockDoor SOAP
//gsoap ns4  service method-style:	BlockDoor document
//gsoap ns4  service method-encoding:	BlockDoor literal
//gsoap ns4  service method-input-action:	BlockDoor http://www.onvif.org/ver10/doorcontrol/wsdl/BlockDoor
//gsoap ns4  service method-output-action:	BlockDoor http://www.onvif.org/ver10/doorcontrol/wsdl/BlockDoorResponse
int __ns4__BlockDoor(
    struct _ns4__BlockDoor*             ns4__BlockDoor,	///< Input parameter
    struct _ns4__BlockDoorResponse     *ns4__BlockDoorResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__LockDownDoor                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns4__LockDownDoor" of service binding "DoorControlBinding".
This operation allows locking and preventing other actions until a LockDownRelease
command is invoked.
The DoorMode shall change to LockedDown state.
Please refer to LockedDown mode in section [DoorMode] for more details.
</p><p>
The device shall ignore other door control commands until a LockDownRelease command
is performed.
</p><p>
A device that signals support for LockDown capability for a particular Door
instance shall implement this method.
</p><p>
If a device supports DoubleLock capability for a particular Door instance,
that operation may be engaged as well.
</p><p>
If the request cannot be fulfilled, a Failure fault shall be returned.
Please refer to section [DoorMode] for more details about Door Modes restrictions.


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/doorcontrol/wsdl/LockDownDoor"

  - Addressing input action: "http://www.onvif.org/ver10/doorcontrol/wsdl/LockDownDoor"

  - Addressing output action: "http://www.onvif.org/ver10/doorcontrol/wsdl/LockDownDoorResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__LockDownDoor(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns4__LockDownDoor*          ns4__LockDownDoor,
    // output parameters:
    struct _ns4__LockDownDoorResponse  *ns4__LockDownDoorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__LockDownDoor(
    struct soap *soap,
    // input parameters:
    struct _ns4__LockDownDoor*          ns4__LockDownDoor,
    // output parameters:
    struct _ns4__LockDownDoorResponse  *ns4__LockDownDoorResponse
  );
@endcode

*/

//gsoap ns4  service method-protocol:	LockDownDoor SOAP
//gsoap ns4  service method-style:	LockDownDoor document
//gsoap ns4  service method-encoding:	LockDownDoor literal
//gsoap ns4  service method-input-action:	LockDownDoor http://www.onvif.org/ver10/doorcontrol/wsdl/LockDownDoor
//gsoap ns4  service method-output-action:	LockDownDoor http://www.onvif.org/ver10/doorcontrol/wsdl/LockDownDoorResponse
int __ns4__LockDownDoor(
    struct _ns4__LockDownDoor*          ns4__LockDownDoor,	///< Input parameter
    struct _ns4__LockDownDoorResponse  *ns4__LockDownDoorResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__LockDownReleaseDoor                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns4__LockDownReleaseDoor" of service binding "DoorControlBinding".
This operation allows releasing the LockedDown state of a Door.
The DoorMode shall change back to its previous/next state.
It is not defined what the previous/next state shall be, but typically - Locked.
</p><p>
This method shall only succeed if the current DoorMode is LockedDown.


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/doorcontrol/wsdl/LockDownReleaseDoor"

  - Addressing input action: "http://www.onvif.org/ver10/doorcontrol/wsdl/LockDownReleaseDoor"

  - Addressing output action: "http://www.onvif.org/ver10/doorcontrol/wsdl/LockDownReleaseDoorResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__LockDownReleaseDoor(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns4__LockDownReleaseDoor*   ns4__LockDownReleaseDoor,
    // output parameters:
    struct _ns4__LockDownReleaseDoorResponse*ns4__LockDownReleaseDoorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__LockDownReleaseDoor(
    struct soap *soap,
    // input parameters:
    struct _ns4__LockDownReleaseDoor*   ns4__LockDownReleaseDoor,
    // output parameters:
    struct _ns4__LockDownReleaseDoorResponse*ns4__LockDownReleaseDoorResponse
  );
@endcode

*/

//gsoap ns4  service method-protocol:	LockDownReleaseDoor SOAP
//gsoap ns4  service method-style:	LockDownReleaseDoor document
//gsoap ns4  service method-encoding:	LockDownReleaseDoor literal
//gsoap ns4  service method-input-action:	LockDownReleaseDoor http://www.onvif.org/ver10/doorcontrol/wsdl/LockDownReleaseDoor
//gsoap ns4  service method-output-action:	LockDownReleaseDoor http://www.onvif.org/ver10/doorcontrol/wsdl/LockDownReleaseDoorResponse
int __ns4__LockDownReleaseDoor(
    struct _ns4__LockDownReleaseDoor*   ns4__LockDownReleaseDoor,	///< Input parameter
    struct _ns4__LockDownReleaseDoorResponse*ns4__LockDownReleaseDoorResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__LockOpenDoor                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns4__LockOpenDoor" of service binding "DoorControlBinding".
This operation allows unlocking a Door and preventing other actions until LockOpenRelease
method is invoked.
The DoorMode shall change to LockedOpen state.
Please refer to LockedOpen mode in section [DoorMode] for more details.
</p><p>
The device shall ignore other door control commands until a LockOpenRelease command
is performed.
</p><p>
A device that signals support for LockOpen capability for a particular Door instance
shall implement this method.
</p><p>
If the request cannot be fulfilled, a Failure fault shall be returned.
Please refer to section [DoorMode] for more details about Door Modes restrictions.


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/doorcontrol/wsdl/LockOpenDoor"

  - Addressing input action: "http://www.onvif.org/ver10/doorcontrol/wsdl/LockOpenDoor"

  - Addressing output action: "http://www.onvif.org/ver10/doorcontrol/wsdl/LockOpenDoorResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__LockOpenDoor(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns4__LockOpenDoor*          ns4__LockOpenDoor,
    // output parameters:
    struct _ns4__LockOpenDoorResponse  *ns4__LockOpenDoorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__LockOpenDoor(
    struct soap *soap,
    // input parameters:
    struct _ns4__LockOpenDoor*          ns4__LockOpenDoor,
    // output parameters:
    struct _ns4__LockOpenDoorResponse  *ns4__LockOpenDoorResponse
  );
@endcode

*/

//gsoap ns4  service method-protocol:	LockOpenDoor SOAP
//gsoap ns4  service method-style:	LockOpenDoor document
//gsoap ns4  service method-encoding:	LockOpenDoor literal
//gsoap ns4  service method-input-action:	LockOpenDoor http://www.onvif.org/ver10/doorcontrol/wsdl/LockOpenDoor
//gsoap ns4  service method-output-action:	LockOpenDoor http://www.onvif.org/ver10/doorcontrol/wsdl/LockOpenDoorResponse
int __ns4__LockOpenDoor(
    struct _ns4__LockOpenDoor*          ns4__LockOpenDoor,	///< Input parameter
    struct _ns4__LockOpenDoorResponse  *ns4__LockOpenDoorResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__LockOpenReleaseDoor                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns4__LockOpenReleaseDoor" of service binding "DoorControlBinding".
This operation allows releasing the LockedOpen state of a Door.
The DoorMode shall change state from the LockedOpen state back to its previous/next
state.
It is not defined what the previous/next state shall be, but typically - Unlocked.
</p><p>
This method shall only succeed if the current DoorMode is LockedOpen.


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/doorcontrol/wsdl/LockOpenReleaseDoor"

  - Addressing input action: "http://www.onvif.org/ver10/doorcontrol/wsdl/LockOpenReleaseDoor"

  - Addressing output action: "http://www.onvif.org/ver10/doorcontrol/wsdl/LockOpenReleaseDoorResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__LockOpenReleaseDoor(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns4__LockOpenReleaseDoor*   ns4__LockOpenReleaseDoor,
    // output parameters:
    struct _ns4__LockOpenReleaseDoorResponse*ns4__LockOpenReleaseDoorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__LockOpenReleaseDoor(
    struct soap *soap,
    // input parameters:
    struct _ns4__LockOpenReleaseDoor*   ns4__LockOpenReleaseDoor,
    // output parameters:
    struct _ns4__LockOpenReleaseDoorResponse*ns4__LockOpenReleaseDoorResponse
  );
@endcode

*/

//gsoap ns4  service method-protocol:	LockOpenReleaseDoor SOAP
//gsoap ns4  service method-style:	LockOpenReleaseDoor document
//gsoap ns4  service method-encoding:	LockOpenReleaseDoor literal
//gsoap ns4  service method-input-action:	LockOpenReleaseDoor http://www.onvif.org/ver10/doorcontrol/wsdl/LockOpenReleaseDoor
//gsoap ns4  service method-output-action:	LockOpenReleaseDoor http://www.onvif.org/ver10/doorcontrol/wsdl/LockOpenReleaseDoorResponse
int __ns4__LockOpenReleaseDoor(
    struct _ns4__LockOpenReleaseDoor*   ns4__LockOpenReleaseDoor,	///< Input parameter
    struct _ns4__LockOpenReleaseDoorResponse*ns4__LockOpenReleaseDoorResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__DoubleLockDoor                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns4__DoubleLockDoor" of service binding "DoorControlBinding".
This operation is used for securely locking a Door.
A call to this method shall change DoorMode state to DoubleLocked.
Please refer to DoubleLocked mode in section [DoorMode] for more details.
</p><p>
A device that signals support for DoubleLock capability for a particular
Door instance shall implement this method. Otherwise this method can be
performed as a standard Lock operation (see [LockDoor command]).
</p><p>
If the door has an extra lock that shall be locked as well.
</p><p>
If the request cannot be fulfilled, a Failure fault shall be returned.


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/doorcontrol/wsdl/DoubleLockDoor"

  - Addressing input action: "http://www.onvif.org/ver10/doorcontrol/wsdl/DoubleLockDoor"

  - Addressing output action: "http://www.onvif.org/ver10/doorcontrol/wsdl/DoubleLockDoorResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__DoubleLockDoor(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns4__DoubleLockDoor*        ns4__DoubleLockDoor,
    // output parameters:
    struct _ns4__DoubleLockDoorResponse*ns4__DoubleLockDoorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__DoubleLockDoor(
    struct soap *soap,
    // input parameters:
    struct _ns4__DoubleLockDoor*        ns4__DoubleLockDoor,
    // output parameters:
    struct _ns4__DoubleLockDoorResponse*ns4__DoubleLockDoorResponse
  );
@endcode

*/

//gsoap ns4  service method-protocol:	DoubleLockDoor SOAP
//gsoap ns4  service method-style:	DoubleLockDoor document
//gsoap ns4  service method-encoding:	DoubleLockDoor literal
//gsoap ns4  service method-input-action:	DoubleLockDoor http://www.onvif.org/ver10/doorcontrol/wsdl/DoubleLockDoor
//gsoap ns4  service method-output-action:	DoubleLockDoor http://www.onvif.org/ver10/doorcontrol/wsdl/DoubleLockDoorResponse
int __ns4__DoubleLockDoor(
    struct _ns4__DoubleLockDoor*        ns4__DoubleLockDoor,	///< Input parameter
    struct _ns4__DoubleLockDoorResponse*ns4__DoubleLockDoorResponse	///< Output parameter
);

/**

@page DoorControlBinding Binding "DoorControlBinding"

@section DoorControlBinding_policy_enablers Policy Enablers of Binding "DoorControlBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   AdvancedSecurityServiceBinding                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetServiceCapabilities" of service binding "AdvancedSecurityServiceBinding".
Returns the capabilities of the advanced security service. The result is returned
in a typed answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetServiceCapabilities* ns5__GetServiceCapabilities,
    // output parameters:
    struct _ns5__GetServiceCapabilitiesResponse*ns5__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetServiceCapabilities* ns5__GetServiceCapabilities,
    // output parameters:
    struct _ns5__GetServiceCapabilitiesResponse*ns5__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetServiceCapabilities SOAP
//gsoap ns5  service method-style:	GetServiceCapabilities document
//gsoap ns5  service method-encoding:	GetServiceCapabilities literal
//gsoap ns5  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/advancedsecurity/wsdl/GetServiceCapabilities
//gsoap ns5  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/advancedsecurity/wsdl/GetServiceCapabilitiesResponse
int __ns5__GetServiceCapabilities(
    struct _ns5__GetServiceCapabilities* ns5__GetServiceCapabilities,	///< Input parameter
    struct _ns5__GetServiceCapabilitiesResponse*ns5__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__CreateRSAKeyPair                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__CreateRSAKeyPair" of service binding "AdvancedSecurityServiceBinding".
				This operation triggers the asynchronous generation
of an RSA key pair of a particular key length (specified as the number of bits)
as specified in [RFC 3447], with a suitable key generation mechanism on the device.
				Keys, especially RSA key pairs, are uniquely identified
using key IDs.<br/>
				If the device does not have not enough storage capacity
for storing the key pair to be created, the maximum number of keys reached fault
shall be produced and no key pair shall be generated.
				Otherwise, the operation generates a keyID for the
new key and associates the generating status to it.<br/>
				Immediately after key generation has started, the
device shall return the keyID to the client and continue to generate the key pair.
				The client may query the device with the GetKeyStatus
operation whether the generation has finished.
				The client may also subscribe to Key Status events
to be notified about key status changes.<br/>
				The device also returns a best-effort estimate of
how much time it requires to create the key pair.
				A client may use this information as an indication
how long to wait before querying the device whether key generation is completed.<br/>
				After the key has been successfully created, the
device shall assign it the ok status. If the key generation fails, the device shall
assign the key the corrupt status.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateRSAKeyPair"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateRSAKeyPair"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateRSAKeyPairResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__CreateRSAKeyPair(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__CreateRSAKeyPair*      ns5__CreateRSAKeyPair,
    // output parameters:
    struct _ns5__CreateRSAKeyPairResponse*ns5__CreateRSAKeyPairResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__CreateRSAKeyPair(
    struct soap *soap,
    // input parameters:
    struct _ns5__CreateRSAKeyPair*      ns5__CreateRSAKeyPair,
    // output parameters:
    struct _ns5__CreateRSAKeyPairResponse*ns5__CreateRSAKeyPairResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	CreateRSAKeyPair SOAP
//gsoap ns5  service method-style:	CreateRSAKeyPair document
//gsoap ns5  service method-encoding:	CreateRSAKeyPair literal
//gsoap ns5  service method-input-action:	CreateRSAKeyPair http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateRSAKeyPair
//gsoap ns5  service method-output-action:	CreateRSAKeyPair http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateRSAKeyPairResponse
int __ns5__CreateRSAKeyPair(
    struct _ns5__CreateRSAKeyPair*      ns5__CreateRSAKeyPair,	///< Input parameter
    struct _ns5__CreateRSAKeyPairResponse*ns5__CreateRSAKeyPairResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__UploadKeyPairInPKCS8                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__UploadKeyPairInPKCS8" of service binding "AdvancedSecurityServiceBinding".
        This operation uploads a key pair in a PKCS#8 data structure as specified
in [RFC 5958, RFC 5959].<br/>
        If an encryption passphrase ID is supplied in the request, the device shall
assume that the KeyPair parameter contains an EncryptedPrivateKeyInfo ASN.1
        structure that is encrypted under the passphrase in the keystore that corresponds
to the supplied ID, where the EncryptedPrivateKeyInfo structure contains
        both the private key and the corresponding public key. If no encryption
passphrase ID is supplied, the device shall assume that the KeyPair parameter contains
a
        OneAsymmetricKey ASN.1 structure which contains both the private key and
the corresponding public key.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadKeyPairInPKCS8"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadKeyPairInPKCS8"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadKeyPairInPKCS8Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__UploadKeyPairInPKCS8(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__UploadKeyPairInPKCS8*  ns5__UploadKeyPairInPKCS8,
    // output parameters:
    struct _ns5__UploadKeyPairInPKCS8Response*ns5__UploadKeyPairInPKCS8Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__UploadKeyPairInPKCS8(
    struct soap *soap,
    // input parameters:
    struct _ns5__UploadKeyPairInPKCS8*  ns5__UploadKeyPairInPKCS8,
    // output parameters:
    struct _ns5__UploadKeyPairInPKCS8Response*ns5__UploadKeyPairInPKCS8Response
  );
@endcode

*/

//gsoap ns5  service method-protocol:	UploadKeyPairInPKCS8 SOAP
//gsoap ns5  service method-style:	UploadKeyPairInPKCS8 document
//gsoap ns5  service method-encoding:	UploadKeyPairInPKCS8 literal
//gsoap ns5  service method-input-action:	UploadKeyPairInPKCS8 http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadKeyPairInPKCS8
//gsoap ns5  service method-output-action:	UploadKeyPairInPKCS8 http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadKeyPairInPKCS8Response
int __ns5__UploadKeyPairInPKCS8(
    struct _ns5__UploadKeyPairInPKCS8*  ns5__UploadKeyPairInPKCS8,	///< Input parameter
    struct _ns5__UploadKeyPairInPKCS8Response*ns5__UploadKeyPairInPKCS8Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__UploadCertificateWithPrivateKeyInPKCS12                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__UploadCertificateWithPrivateKeyInPKCS12" of service binding "AdvancedSecurityServiceBinding".
        This operation uploads a certification path consisting of X.509 certificates
as specified by [RFC 5280] in DER encoding along with a private key to a devices
keystore.
        Certificates and private key are supplied in the form of a PKCS#12 file
as specified in [PKCS#12].<br/>
        The device shall support PKCS#12 files that contain the following safe
bags:<br/>
        *	one or more instances of CertBag [PKCS#12, Sect. 4.2.3]
        *	either exactly one instance of KeyBag [PKCS#12, Sect. 4.3.1] or
exactly one instance of PKCS8ShroudedKeyBag [PKCS#12, Sect. 4.2.2].<br/>
        If the IgnoreAdditionalCertificates parameter has the value true, the device
shall behave as if the client had supplied only the first CertBag in the sequence
of CertBag instances.
        The device shall support PKCS#12 passphrase integrity mode for integrity
protection of the PKCS#12 PFX as specified in [PKCS#12, Sect. 4].
        The device shall support PKCS8ShroudedKeyBags that are encrypted with the
same passphrase as the CertBag instances.
        If an integrity passphrase ID is supplied, the device shall use the corresponding
passphrase in the keystore to check the integrity of the supplied PKCS#12 PFX.
        If an integrity passphrase ID is supplied, but the supplied PKCS#12 PFX
has no integrity protection, the device shall produce a BadPKCS12File fault and
shall
        not store the uploaded certificates nor the uploaded key pair in the keystore.
        If an encryption passphrase ID is supplied, the device shall use the corresponding
passphrase in the keystore to decrypt the PKCS8ShroudedKeyBag and the CertBag instances.
        If an EncryptionPassphraseID is supplied, but a CertBag is not encrypted,
the device shall ignore the supplied EncryptionPassphraseID when processing this
CertBag.
        If an EncryptionPassphraseID is supplied, but a KeyBag is provided instead
of a PKCS8ShroudedKeyBag, the device shall ignore the supplied EncryptionPassphraseID
when processing the KeyBag.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificateWithPrivateKeyInPKCS12"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificateWithPrivateKeyInPKCS12"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificateWithPrivateKeyInPKCS12Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__UploadCertificateWithPrivateKeyInPKCS12(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__UploadCertificateWithPrivateKeyInPKCS12* ns5__UploadCertificateWithPrivateKeyInPKCS12,
    // output parameters:
    struct _ns5__UploadCertificateWithPrivateKeyInPKCS12Response*ns5__UploadCertificateWithPrivateKeyInPKCS12Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__UploadCertificateWithPrivateKeyInPKCS12(
    struct soap *soap,
    // input parameters:
    struct _ns5__UploadCertificateWithPrivateKeyInPKCS12* ns5__UploadCertificateWithPrivateKeyInPKCS12,
    // output parameters:
    struct _ns5__UploadCertificateWithPrivateKeyInPKCS12Response*ns5__UploadCertificateWithPrivateKeyInPKCS12Response
  );
@endcode

*/

//gsoap ns5  service method-protocol:	UploadCertificateWithPrivateKeyInPKCS12 SOAP
//gsoap ns5  service method-style:	UploadCertificateWithPrivateKeyInPKCS12 document
//gsoap ns5  service method-encoding:	UploadCertificateWithPrivateKeyInPKCS12 literal
//gsoap ns5  service method-input-action:	UploadCertificateWithPrivateKeyInPKCS12 http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificateWithPrivateKeyInPKCS12
//gsoap ns5  service method-output-action:	UploadCertificateWithPrivateKeyInPKCS12 http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificateWithPrivateKeyInPKCS12Response
int __ns5__UploadCertificateWithPrivateKeyInPKCS12(
    struct _ns5__UploadCertificateWithPrivateKeyInPKCS12* ns5__UploadCertificateWithPrivateKeyInPKCS12,	///< Input parameter
    struct _ns5__UploadCertificateWithPrivateKeyInPKCS12Response*ns5__UploadCertificateWithPrivateKeyInPKCS12Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetKeyStatus                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetKeyStatus" of service binding "AdvancedSecurityServiceBinding".
				This operation returns the status of a key.<br/>
				Keys are uniquely identified using key IDs. If no
key is stored under the requested key ID in the keystore, an InvalidKeyID fault
is produced.
				Otherwise, the status of the key is returned.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetKeyStatus"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetKeyStatus"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetKeyStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetKeyStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetKeyStatus*          ns5__GetKeyStatus,
    // output parameters:
    struct _ns5__GetKeyStatusResponse  *ns5__GetKeyStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetKeyStatus(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetKeyStatus*          ns5__GetKeyStatus,
    // output parameters:
    struct _ns5__GetKeyStatusResponse  *ns5__GetKeyStatusResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetKeyStatus SOAP
//gsoap ns5  service method-style:	GetKeyStatus document
//gsoap ns5  service method-encoding:	GetKeyStatus literal
//gsoap ns5  service method-input-action:	GetKeyStatus http://www.onvif.org/ver10/advancedsecurity/wsdl/GetKeyStatus
//gsoap ns5  service method-output-action:	GetKeyStatus http://www.onvif.org/ver10/advancedsecurity/wsdl/GetKeyStatusResponse
int __ns5__GetKeyStatus(
    struct _ns5__GetKeyStatus*          ns5__GetKeyStatus,	///< Input parameter
    struct _ns5__GetKeyStatusResponse  *ns5__GetKeyStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetPrivateKeyStatus                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetPrivateKeyStatus" of service binding "AdvancedSecurityServiceBinding".
				This operation returns whether a key pair contains
a private key.<br/>
				Keys are uniquely identified using key IDs. If no
key is stored under the requested key ID in the keystore or the key identified
by the requested key ID does not identify a key pair,
				the device shall produce an InvalidKeyID fault.
				Otherwise, this operation returns true if the key
pair identified by the key ID contains a private key, and false otherwise.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetPrivateKeyStatus"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetPrivateKeyStatus"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetPrivateKeyStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetPrivateKeyStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetPrivateKeyStatus*   ns5__GetPrivateKeyStatus,
    // output parameters:
    struct _ns5__GetPrivateKeyStatusResponse*ns5__GetPrivateKeyStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetPrivateKeyStatus(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetPrivateKeyStatus*   ns5__GetPrivateKeyStatus,
    // output parameters:
    struct _ns5__GetPrivateKeyStatusResponse*ns5__GetPrivateKeyStatusResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetPrivateKeyStatus SOAP
//gsoap ns5  service method-style:	GetPrivateKeyStatus document
//gsoap ns5  service method-encoding:	GetPrivateKeyStatus literal
//gsoap ns5  service method-input-action:	GetPrivateKeyStatus http://www.onvif.org/ver10/advancedsecurity/wsdl/GetPrivateKeyStatus
//gsoap ns5  service method-output-action:	GetPrivateKeyStatus http://www.onvif.org/ver10/advancedsecurity/wsdl/GetPrivateKeyStatusResponse
int __ns5__GetPrivateKeyStatus(
    struct _ns5__GetPrivateKeyStatus*   ns5__GetPrivateKeyStatus,	///< Input parameter
    struct _ns5__GetPrivateKeyStatusResponse*ns5__GetPrivateKeyStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetAllKeys                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetAllKeys" of service binding "AdvancedSecurityServiceBinding".
				This operation returns information about all keys
that are stored in the devices keystore.<br/>
				This operation may be used, e.g., if a client lost
track of which keys are present on the device.
				If no key is stored on the device, an empty list
is returned.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllKeys"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllKeys"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllKeysResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetAllKeys(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetAllKeys*            ns5__GetAllKeys,
    // output parameters:
    struct _ns5__GetAllKeysResponse    *ns5__GetAllKeysResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetAllKeys(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetAllKeys*            ns5__GetAllKeys,
    // output parameters:
    struct _ns5__GetAllKeysResponse    *ns5__GetAllKeysResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetAllKeys SOAP
//gsoap ns5  service method-style:	GetAllKeys document
//gsoap ns5  service method-encoding:	GetAllKeys literal
//gsoap ns5  service method-input-action:	GetAllKeys http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllKeys
//gsoap ns5  service method-output-action:	GetAllKeys http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllKeysResponse
int __ns5__GetAllKeys(
    struct _ns5__GetAllKeys*            ns5__GetAllKeys,	///< Input parameter
    struct _ns5__GetAllKeysResponse    *ns5__GetAllKeysResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__DeleteKey                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__DeleteKey" of service binding "AdvancedSecurityServiceBinding".
				This operation deletes a key from the devices
keystore.<br/>
				Keys are uniquely identified using key IDs. If no
key is stored under the requested key ID in the keystore, a device shall produce
an InvalidArgVal fault.
				If a reference exists for the specified key, a device
shall produce the corresponding fault and shall not delete the key.
				If there is a key under the requested key ID stored
in the keystore and the key could not be deleted, a device shall produce a KeyDeletion
fault.
				If the key has the status generating, a device shall
abort the generation of the key and delete from the keystore all data generated
for this key.
				After a key is successfully deleted, the device
may assign its former ID to other keys.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteKey"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteKey"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteKeyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__DeleteKey(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__DeleteKey*             ns5__DeleteKey,
    // output parameters:
    struct _ns5__DeleteKeyResponse     *ns5__DeleteKeyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__DeleteKey(
    struct soap *soap,
    // input parameters:
    struct _ns5__DeleteKey*             ns5__DeleteKey,
    // output parameters:
    struct _ns5__DeleteKeyResponse     *ns5__DeleteKeyResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	DeleteKey SOAP
//gsoap ns5  service method-style:	DeleteKey document
//gsoap ns5  service method-encoding:	DeleteKey literal
//gsoap ns5  service method-input-action:	DeleteKey http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteKey
//gsoap ns5  service method-output-action:	DeleteKey http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteKeyResponse
int __ns5__DeleteKey(
    struct _ns5__DeleteKey*             ns5__DeleteKey,	///< Input parameter
    struct _ns5__DeleteKeyResponse     *ns5__DeleteKeyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__CreatePKCS10CSR                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__CreatePKCS10CSR" of service binding "AdvancedSecurityServiceBinding".
				This operation generates a DER-encoded PKCS#10 v1.7
certification request (sometimes also called certificate signing request or CSR)
as specified in RFC 2986 
				for a public key on the device.<br/>
				The key pair that contains the public key for which
a certification request shall be produced is specified by its key ID.
				If no key is stored under the requested KeyID or
the key specified by the requested KeyID is not an asymmetric key pair, an invalid
key ID fault shall be produced and 
				no CSR shall be generated.<br/>
				
				A device that supports this command shall as minimum
support the sha-1WithRSAEncryption signature algorithm as specified in RFC 3279.

				If the specified signature algorithm is not supported
by the device, an UnsupportedSignatureAlgorithm fault shall be produced and no
CSR shall be generated.<br/>
				
				If the public key identified by the requested Key
ID is an invalid input to the specified signature algorithm, a KeySignatureAlgorithmMismatch
fault shall be produced 
				and no CSR shall be generated.
				If the key pair does not have status ok, a device
shall produce an InvalidKeyStatus fault and no CSR shall be generated.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreatePKCS10CSR"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreatePKCS10CSR"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreatePKCS10CSRResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__CreatePKCS10CSR(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__CreatePKCS10CSR*       ns5__CreatePKCS10CSR,
    // output parameters:
    struct _ns5__CreatePKCS10CSRResponse*ns5__CreatePKCS10CSRResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__CreatePKCS10CSR(
    struct soap *soap,
    // input parameters:
    struct _ns5__CreatePKCS10CSR*       ns5__CreatePKCS10CSR,
    // output parameters:
    struct _ns5__CreatePKCS10CSRResponse*ns5__CreatePKCS10CSRResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	CreatePKCS10CSR SOAP
//gsoap ns5  service method-style:	CreatePKCS10CSR document
//gsoap ns5  service method-encoding:	CreatePKCS10CSR literal
//gsoap ns5  service method-input-action:	CreatePKCS10CSR http://www.onvif.org/ver10/advancedsecurity/wsdl/CreatePKCS10CSR
//gsoap ns5  service method-output-action:	CreatePKCS10CSR http://www.onvif.org/ver10/advancedsecurity/wsdl/CreatePKCS10CSRResponse
int __ns5__CreatePKCS10CSR(
    struct _ns5__CreatePKCS10CSR*       ns5__CreatePKCS10CSR,	///< Input parameter
    struct _ns5__CreatePKCS10CSRResponse*ns5__CreatePKCS10CSRResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__CreateSelfSignedCertificate                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__CreateSelfSignedCertificate" of service binding "AdvancedSecurityServiceBinding".
				This operation generates for a public key on the
device a self-signed X.509 certificate that complies to RFC 5280.<br/>
				The X509Version parameter specifies the version
of X.509 that the generated certificate shall comply to.
				A device that supports this command shall support
the generation of X.509v3 certificates as specified in RFC 5280 and may additionally
be able to handle other X.509 certificate formats
				as indicated by the X.509Versions capability.<br/>
				The key pair that contains the public key for which
a self-signed certificate shall be produced is specified by its key pair ID.
				The subject parameter describes the entity that
the public key belongs to.
				If the key pair does not have status ok, a device
shall produce an InvalidKeyStatus fault and no certificate shall be generated.
				
				The signature algorithm parameter determines which
signature algorithm shall be used for signing the certification request with the
public key specified by the key ID parameter.
				A device that supports this command shall as minimum
support the sha-1WithRSAEncryption signature algorithm as specified in RFC 3279.

				The Extensions parameter specifies potential X509v3
extensions that shall be contained in the certificate.
				A device that supports this command shall support
the extensions that are defined in [RFC 5280], Sect. 4.2] as mandatory for CAs
that issue self-signed certificates.<br/>
				
				Certificates are uniquely identified using certificate
IDs. If the command was successful, the device generates a new ID for the generated
certificate and returns this ID.<br/>
				If the device does not have not enough storage capacity
for storing the certificate to be created, the maximum number of certificates reached
fault shall be produced and no certificate shall be generated.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateSelfSignedCertificate"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateSelfSignedCertificate"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateSelfSignedCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__CreateSelfSignedCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__CreateSelfSignedCertificate* ns5__CreateSelfSignedCertificate,
    // output parameters:
    struct _ns5__CreateSelfSignedCertificateResponse*ns5__CreateSelfSignedCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__CreateSelfSignedCertificate(
    struct soap *soap,
    // input parameters:
    struct _ns5__CreateSelfSignedCertificate* ns5__CreateSelfSignedCertificate,
    // output parameters:
    struct _ns5__CreateSelfSignedCertificateResponse*ns5__CreateSelfSignedCertificateResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	CreateSelfSignedCertificate SOAP
//gsoap ns5  service method-style:	CreateSelfSignedCertificate document
//gsoap ns5  service method-encoding:	CreateSelfSignedCertificate literal
//gsoap ns5  service method-input-action:	CreateSelfSignedCertificate http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateSelfSignedCertificate
//gsoap ns5  service method-output-action:	CreateSelfSignedCertificate http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateSelfSignedCertificateResponse
int __ns5__CreateSelfSignedCertificate(
    struct _ns5__CreateSelfSignedCertificate* ns5__CreateSelfSignedCertificate,	///< Input parameter
    struct _ns5__CreateSelfSignedCertificateResponse*ns5__CreateSelfSignedCertificateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__UploadCertificate                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__UploadCertificate" of service binding "AdvancedSecurityServiceBinding".
				This operation uploads an X.509 certificate as specified
by [RFC 5280] in DER encoding and the public key in the certificate to a devices
keystore.<br/>
				A device that supports this command shall be able
to handle X.509v3 certificates as specified in RFC 5280 and may additionally be
able to handle other X.509 certificate formats as indicated by the X.509Versions
capability.
				A device that supports this command shall support
sha1-WithRSAEncryption as certificate signature algorithm.<br/>
				
				Certificates are uniquely identified using certificate
IDs, and key pairs are uniquely identified using key IDs.
				The device shall generate a new certificate ID for
the uploaded certificate.<br/>
				Certain certificate usages, e.g. TLS server authentication,
require the private key that corresponds to the public key in the certificate to
be present in the keystore.
				In such cases, the client may indicate that it expects
the device to produce a fault if the matching private key for
				the uploaded certificate is not present in the keystore
by setting the PrivateKeyRequired argument in the upload request to true.<br/>
				
				The uploaded certificate has to be linked to a key
pair in the keystore.
				If no private key is required for the public key
in the certificate and a key pair exists in the keystore with a public key equal
to the public key in the certificate,
				the uploaded certificate is linked to the key pair
identified by the supplied key ID by adding a reference from the certificate to
the key pair.
				If no private key is required for the public key
in the certificate and no key pair exists with the public key equal to the public
key in the certificate,
				a new key pair with status ok is created with the
public key from the certificate, and this key pair is linked to the uploaded certificate
by adding a reference from 
				the certificate to the key pair.
				If a private key is required for the public key
in the certificate, and a key pair exists in the keystore with a private key that
matches the public key in the certificate,
				the uploaded certificate is linked to this keypair
by adding a reference from the certificate to the key pair.
				If a private key is required for the public key
and no such keypair exists in the keystore, the NoMatchingPrivateKey fault shall
be produced and the certificate
				shall not be stored in the keystore.
				If the key pair that the certificate shall be linked
to does not have status ok, an InvalidKeyID fault is produced, and the uploaded
certificate is not stored in the keystore.
				If the device cannot process the uploaded certificate,
a BadCertificate fault is produced and neither the uploaded certificate nor the
public key are stored in the devices keystore.
				The BadCertificate fault shall not be produced based
on the mere fact that the devices current time lies outside the interval defined
by the notBefore and notAfter fields as specified by [RFC 5280], Sect. 4.1 .
				This operation shall not mark the uploaded certificate
as trusted.<br/>
				
				If the device does not have not enough storage capacity
for storing the certificate to be uploaded, the maximum number of certificates
reached fault shall be produced
				and no certificate shall be uploaded.
				If the device does not have not enough storage capacity
for storing the key pair that eventually has to be created, the device shall generate
a maximum number of keys reached fault.
				Furthermore the device shall not generate a key
pair and no certificate shall be stored.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificate"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificate"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__UploadCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__UploadCertificate*     ns5__UploadCertificate,
    // output parameters:
    struct _ns5__UploadCertificateResponse*ns5__UploadCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__UploadCertificate(
    struct soap *soap,
    // input parameters:
    struct _ns5__UploadCertificate*     ns5__UploadCertificate,
    // output parameters:
    struct _ns5__UploadCertificateResponse*ns5__UploadCertificateResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	UploadCertificate SOAP
//gsoap ns5  service method-style:	UploadCertificate document
//gsoap ns5  service method-encoding:	UploadCertificate literal
//gsoap ns5  service method-input-action:	UploadCertificate http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificate
//gsoap ns5  service method-output-action:	UploadCertificate http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificateResponse
int __ns5__UploadCertificate(
    struct _ns5__UploadCertificate*     ns5__UploadCertificate,	///< Input parameter
    struct _ns5__UploadCertificateResponse*ns5__UploadCertificateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetCertificate                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetCertificate" of service binding "AdvancedSecurityServiceBinding".
				This operation returns a specific certificate from
the devices keystore.<br/>
				Certificates are uniquely identified using certificate
IDs. If no certificate is stored under the requested certificate ID in the keystore,
an InvalidArgVal fault is produced.
				It shall be noted that this command does not return
the private key that is associated to the public key in the certificate.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificate"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificate"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetCertificate*        ns5__GetCertificate,
    // output parameters:
    struct _ns5__GetCertificateResponse*ns5__GetCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetCertificate(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetCertificate*        ns5__GetCertificate,
    // output parameters:
    struct _ns5__GetCertificateResponse*ns5__GetCertificateResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetCertificate SOAP
//gsoap ns5  service method-style:	GetCertificate document
//gsoap ns5  service method-encoding:	GetCertificate literal
//gsoap ns5  service method-input-action:	GetCertificate http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificate
//gsoap ns5  service method-output-action:	GetCertificate http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificateResponse
int __ns5__GetCertificate(
    struct _ns5__GetCertificate*        ns5__GetCertificate,	///< Input parameter
    struct _ns5__GetCertificateResponse*ns5__GetCertificateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetAllCertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetAllCertificates" of service binding "AdvancedSecurityServiceBinding".
				This operation returns the IDs of all certificates
that are stored in the devices keystore.<br/>
				This operation may be used, e.g.,  if a client lost
track of which certificates are present on the device.
				If no certificate is stored in the devices keystore,
an empty list is returned.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetAllCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetAllCertificates*    ns5__GetAllCertificates,
    // output parameters:
    struct _ns5__GetAllCertificatesResponse*ns5__GetAllCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetAllCertificates(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetAllCertificates*    ns5__GetAllCertificates,
    // output parameters:
    struct _ns5__GetAllCertificatesResponse*ns5__GetAllCertificatesResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetAllCertificates SOAP
//gsoap ns5  service method-style:	GetAllCertificates document
//gsoap ns5  service method-encoding:	GetAllCertificates literal
//gsoap ns5  service method-input-action:	GetAllCertificates http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificates
//gsoap ns5  service method-output-action:	GetAllCertificates http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificatesResponse
int __ns5__GetAllCertificates(
    struct _ns5__GetAllCertificates*    ns5__GetAllCertificates,	///< Input parameter
    struct _ns5__GetAllCertificatesResponse*ns5__GetAllCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__DeleteCertificate                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__DeleteCertificate" of service binding "AdvancedSecurityServiceBinding".
				This operation deletes a certificate from the devices
keystore.<br/>
				The operation shall not delete the public key that
is contained in the certificate from the keystore.
				Certificates are uniquely identified using certificate
IDs. If no certificate is stored under the requested certificate ID in the keystore,
an InvalidArgVal fault is produced.
				If there is a certificate under the requested certificate
ID stored in the keystore and the certificate could not be deleted, a CertificateDeletion
fault is produced.
				If a reference exists for the specified certificate,
the certificate shall not be deleted and the corresponding fault shall be produced.
				After a certificate has been  successfully deleted,
the device may assign its former ID to other certificates.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificate"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificate"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__DeleteCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__DeleteCertificate*     ns5__DeleteCertificate,
    // output parameters:
    struct _ns5__DeleteCertificateResponse*ns5__DeleteCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__DeleteCertificate(
    struct soap *soap,
    // input parameters:
    struct _ns5__DeleteCertificate*     ns5__DeleteCertificate,
    // output parameters:
    struct _ns5__DeleteCertificateResponse*ns5__DeleteCertificateResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	DeleteCertificate SOAP
//gsoap ns5  service method-style:	DeleteCertificate document
//gsoap ns5  service method-encoding:	DeleteCertificate literal
//gsoap ns5  service method-input-action:	DeleteCertificate http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificate
//gsoap ns5  service method-output-action:	DeleteCertificate http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificateResponse
int __ns5__DeleteCertificate(
    struct _ns5__DeleteCertificate*     ns5__DeleteCertificate,	///< Input parameter
    struct _ns5__DeleteCertificateResponse*ns5__DeleteCertificateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__CreateCertificationPath                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__CreateCertificationPath" of service binding "AdvancedSecurityServiceBinding".
				This operation creates a sequence of certificates
that may be used, e.g., for certification path validation or for TLS server authentication.<br/>
				Certification paths are uniquely identified using
certification path IDs. Certificates are uniquely identified using certificate
IDs.
				A certification path contains a sequence of certificate
IDs.
				If there is a certificate ID in the sequence of
supplied certificate IDs for which no certificate exists in the devices keystore,
the corresponding fault shall be produced
				and no certification path shall be created.<br/>
				
				The signature of each certificate in the certification
path except for the last one must be verifiable with the public key contained in
the next certificate in the path.
				If there is a certificate ID in the request other
than the last ID for which the corresponding certificate cannot be verified with
the public key in the certificate identified 
				by the next certificate ID, an InvalidCertificateChain
fault shall be produced and no certification path shall be created.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertificationPath"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertificationPath"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertificationPathResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__CreateCertificationPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__CreateCertificationPath* ns5__CreateCertificationPath,
    // output parameters:
    struct _ns5__CreateCertificationPathResponse*ns5__CreateCertificationPathResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__CreateCertificationPath(
    struct soap *soap,
    // input parameters:
    struct _ns5__CreateCertificationPath* ns5__CreateCertificationPath,
    // output parameters:
    struct _ns5__CreateCertificationPathResponse*ns5__CreateCertificationPathResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	CreateCertificationPath SOAP
//gsoap ns5  service method-style:	CreateCertificationPath document
//gsoap ns5  service method-encoding:	CreateCertificationPath literal
//gsoap ns5  service method-input-action:	CreateCertificationPath http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertificationPath
//gsoap ns5  service method-output-action:	CreateCertificationPath http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertificationPathResponse
int __ns5__CreateCertificationPath(
    struct _ns5__CreateCertificationPath* ns5__CreateCertificationPath,	///< Input parameter
    struct _ns5__CreateCertificationPathResponse*ns5__CreateCertificationPathResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetCertificationPath                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetCertificationPath" of service binding "AdvancedSecurityServiceBinding".
				This operation returns a specific certification
path from the devices keystore.<br/>
				Certification paths are uniquely identified using
certification path IDs.
				If no certification path is stored under the requested
ID in the keystore, an InvalidArgVal fault is produced.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificationPath"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificationPath"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificationPathResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetCertificationPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetCertificationPath*  ns5__GetCertificationPath,
    // output parameters:
    struct _ns5__GetCertificationPathResponse*ns5__GetCertificationPathResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetCertificationPath(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetCertificationPath*  ns5__GetCertificationPath,
    // output parameters:
    struct _ns5__GetCertificationPathResponse*ns5__GetCertificationPathResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetCertificationPath SOAP
//gsoap ns5  service method-style:	GetCertificationPath document
//gsoap ns5  service method-encoding:	GetCertificationPath literal
//gsoap ns5  service method-input-action:	GetCertificationPath http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificationPath
//gsoap ns5  service method-output-action:	GetCertificationPath http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificationPathResponse
int __ns5__GetCertificationPath(
    struct _ns5__GetCertificationPath*  ns5__GetCertificationPath,	///< Input parameter
    struct _ns5__GetCertificationPathResponse*ns5__GetCertificationPathResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetAllCertificationPaths                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetAllCertificationPaths" of service binding "AdvancedSecurityServiceBinding".
				This operation returns the IDs of all certification
paths that are stored in the devices keystore.<br/>
				This operation may be used, e.g., if a client lost
track of which certificates are present on the device.
				If no certification path is stored on the device,
an empty list is returned.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificationPaths"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificationPaths"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificationPathsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetAllCertificationPaths(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetAllCertificationPaths* ns5__GetAllCertificationPaths,
    // output parameters:
    struct _ns5__GetAllCertificationPathsResponse*ns5__GetAllCertificationPathsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetAllCertificationPaths(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetAllCertificationPaths* ns5__GetAllCertificationPaths,
    // output parameters:
    struct _ns5__GetAllCertificationPathsResponse*ns5__GetAllCertificationPathsResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetAllCertificationPaths SOAP
//gsoap ns5  service method-style:	GetAllCertificationPaths document
//gsoap ns5  service method-encoding:	GetAllCertificationPaths literal
//gsoap ns5  service method-input-action:	GetAllCertificationPaths http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificationPaths
//gsoap ns5  service method-output-action:	GetAllCertificationPaths http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificationPathsResponse
int __ns5__GetAllCertificationPaths(
    struct _ns5__GetAllCertificationPaths* ns5__GetAllCertificationPaths,	///< Input parameter
    struct _ns5__GetAllCertificationPathsResponse*ns5__GetAllCertificationPathsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__DeleteCertificationPath                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__DeleteCertificationPath" of service binding "AdvancedSecurityServiceBinding".
				This operation deletes a certification path from
the devices keystore.<br/>
				This operation shall not delete the certificates
that are referenced by the certification path.
				Certification paths are uniquely identified using
certification path IDs.
				If no certification path is stored under the requested
certification path ID in the keystore, an InvalidArgVal fault is produced.
				If there is a certification path under the requested
certification path ID stored in the keystore and the certification path could not
be deleted,
				a CertificationPathDeletion fault is produced.
				If a reference exists for the specified certification
path, the certification path shall not be deleted and the corresponding fault shall
be produced.
				After a certification path is successfully deleted,
the device may assign its former ID to other certification paths.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificationPath"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificationPath"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificationPathResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__DeleteCertificationPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__DeleteCertificationPath* ns5__DeleteCertificationPath,
    // output parameters:
    struct _ns5__DeleteCertificationPathResponse*ns5__DeleteCertificationPathResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__DeleteCertificationPath(
    struct soap *soap,
    // input parameters:
    struct _ns5__DeleteCertificationPath* ns5__DeleteCertificationPath,
    // output parameters:
    struct _ns5__DeleteCertificationPathResponse*ns5__DeleteCertificationPathResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	DeleteCertificationPath SOAP
//gsoap ns5  service method-style:	DeleteCertificationPath document
//gsoap ns5  service method-encoding:	DeleteCertificationPath literal
//gsoap ns5  service method-input-action:	DeleteCertificationPath http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificationPath
//gsoap ns5  service method-output-action:	DeleteCertificationPath http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificationPathResponse
int __ns5__DeleteCertificationPath(
    struct _ns5__DeleteCertificationPath* ns5__DeleteCertificationPath,	///< Input parameter
    struct _ns5__DeleteCertificationPathResponse*ns5__DeleteCertificationPathResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__UploadPassphrase                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__UploadPassphrase" of service binding "AdvancedSecurityServiceBinding".
        This operation uploads a passphrase to the keystore of the device.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadPassphrase"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadPassphrase"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadPassphraseResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__UploadPassphrase(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__UploadPassphrase*      ns5__UploadPassphrase,
    // output parameters:
    struct _ns5__UploadPassphraseResponse*ns5__UploadPassphraseResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__UploadPassphrase(
    struct soap *soap,
    // input parameters:
    struct _ns5__UploadPassphrase*      ns5__UploadPassphrase,
    // output parameters:
    struct _ns5__UploadPassphraseResponse*ns5__UploadPassphraseResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	UploadPassphrase SOAP
//gsoap ns5  service method-style:	UploadPassphrase document
//gsoap ns5  service method-encoding:	UploadPassphrase literal
//gsoap ns5  service method-input-action:	UploadPassphrase http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadPassphrase
//gsoap ns5  service method-output-action:	UploadPassphrase http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadPassphraseResponse
int __ns5__UploadPassphrase(
    struct _ns5__UploadPassphrase*      ns5__UploadPassphrase,	///< Input parameter
    struct _ns5__UploadPassphraseResponse*ns5__UploadPassphraseResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetAllPassphrases                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetAllPassphrases" of service binding "AdvancedSecurityServiceBinding".
        This operation returns information about all passphrases that are stored
in the keystore of the device.
        This operation may be used, e.g., if a client lost track of which passphrases
are present on the device.
        If no passphrase is stored on the device, the device shall return an empty
list.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllPassphrases"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllPassphrases"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllPassphrasesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetAllPassphrases(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetAllPassphrases*     ns5__GetAllPassphrases,
    // output parameters:
    struct _ns5__GetAllPassphrasesResponse*ns5__GetAllPassphrasesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetAllPassphrases(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetAllPassphrases*     ns5__GetAllPassphrases,
    // output parameters:
    struct _ns5__GetAllPassphrasesResponse*ns5__GetAllPassphrasesResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetAllPassphrases SOAP
//gsoap ns5  service method-style:	GetAllPassphrases document
//gsoap ns5  service method-encoding:	GetAllPassphrases literal
//gsoap ns5  service method-input-action:	GetAllPassphrases http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllPassphrases
//gsoap ns5  service method-output-action:	GetAllPassphrases http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllPassphrasesResponse
int __ns5__GetAllPassphrases(
    struct _ns5__GetAllPassphrases*     ns5__GetAllPassphrases,	///< Input parameter
    struct _ns5__GetAllPassphrasesResponse*ns5__GetAllPassphrasesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__DeletePassphrase                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__DeletePassphrase" of service binding "AdvancedSecurityServiceBinding".
        This operation deletes a passphrase from the keystore of the device.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeletePassphrase"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeletePassphrase"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeletePassphraseResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__DeletePassphrase(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__DeletePassphrase*      ns5__DeletePassphrase,
    // output parameters:
    struct _ns5__DeletePassphraseResponse*ns5__DeletePassphraseResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__DeletePassphrase(
    struct soap *soap,
    // input parameters:
    struct _ns5__DeletePassphrase*      ns5__DeletePassphrase,
    // output parameters:
    struct _ns5__DeletePassphraseResponse*ns5__DeletePassphraseResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	DeletePassphrase SOAP
//gsoap ns5  service method-style:	DeletePassphrase document
//gsoap ns5  service method-encoding:	DeletePassphrase literal
//gsoap ns5  service method-input-action:	DeletePassphrase http://www.onvif.org/ver10/advancedsecurity/wsdl/DeletePassphrase
//gsoap ns5  service method-output-action:	DeletePassphrase http://www.onvif.org/ver10/advancedsecurity/wsdl/DeletePassphraseResponse
int __ns5__DeletePassphrase(
    struct _ns5__DeletePassphrase*      ns5__DeletePassphrase,	///< Input parameter
    struct _ns5__DeletePassphraseResponse*ns5__DeletePassphraseResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__UploadCRL                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__UploadCRL" of service binding "AdvancedSecurityServiceBinding".
        This operation uploads a certificate revocation list (CRL) as specified
in [RFC 5280] to the keystore on the device.
        If the device does not have enough storage space to store the CRL to be
uploaded, the device shall produce a MaximumNumberOfCRLsReached fault and shall
not store the supplied CRL.
        If the device is not able to process the supplied CRL, the device shall
produce a BadCRL fault and shall not store the supplied CRL.
        If the device does not support the signature algorithm that was used to
sign the supplied CRL, the device shall produce an UnsupportedSignatureAlgorithm
fault and shall not store the supplied CRL.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCRL"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCRL"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCRLResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__UploadCRL(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__UploadCRL*             ns5__UploadCRL,
    // output parameters:
    struct _ns5__UploadCRLResponse     *ns5__UploadCRLResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__UploadCRL(
    struct soap *soap,
    // input parameters:
    struct _ns5__UploadCRL*             ns5__UploadCRL,
    // output parameters:
    struct _ns5__UploadCRLResponse     *ns5__UploadCRLResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	UploadCRL SOAP
//gsoap ns5  service method-style:	UploadCRL document
//gsoap ns5  service method-encoding:	UploadCRL literal
//gsoap ns5  service method-input-action:	UploadCRL http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCRL
//gsoap ns5  service method-output-action:	UploadCRL http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCRLResponse
int __ns5__UploadCRL(
    struct _ns5__UploadCRL*             ns5__UploadCRL,	///< Input parameter
    struct _ns5__UploadCRLResponse     *ns5__UploadCRLResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetCRL                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetCRL" of service binding "AdvancedSecurityServiceBinding".
        This operation returns a specific certificate revocation list (CRL) from
the keystore on the device.
        Certification revocation lists are uniquely identified using CRLIDs. If
no CRL is stored under the requested CRLID, the device shall produce a CRLID fault.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCRL"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCRL"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCRLResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetCRL(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetCRL*                ns5__GetCRL,
    // output parameters:
    struct _ns5__GetCRLResponse        *ns5__GetCRLResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetCRL(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetCRL*                ns5__GetCRL,
    // output parameters:
    struct _ns5__GetCRLResponse        *ns5__GetCRLResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetCRL SOAP
//gsoap ns5  service method-style:	GetCRL document
//gsoap ns5  service method-encoding:	GetCRL literal
//gsoap ns5  service method-input-action:	GetCRL http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCRL
//gsoap ns5  service method-output-action:	GetCRL http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCRLResponse
int __ns5__GetCRL(
    struct _ns5__GetCRL*                ns5__GetCRL,	///< Input parameter
    struct _ns5__GetCRLResponse        *ns5__GetCRLResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetAllCRLs                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetAllCRLs" of service binding "AdvancedSecurityServiceBinding".
        This operation returns all certificate revocation lists (CRLs) that are
stored in the keystore on the device.
        If no certificate revocation list is stored in the devices keystore,
an empty list is returned.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCRLs"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCRLs"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCRLsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetAllCRLs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetAllCRLs*            ns5__GetAllCRLs,
    // output parameters:
    struct _ns5__GetAllCRLsResponse    *ns5__GetAllCRLsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetAllCRLs(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetAllCRLs*            ns5__GetAllCRLs,
    // output parameters:
    struct _ns5__GetAllCRLsResponse    *ns5__GetAllCRLsResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetAllCRLs SOAP
//gsoap ns5  service method-style:	GetAllCRLs document
//gsoap ns5  service method-encoding:	GetAllCRLs literal
//gsoap ns5  service method-input-action:	GetAllCRLs http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCRLs
//gsoap ns5  service method-output-action:	GetAllCRLs http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCRLsResponse
int __ns5__GetAllCRLs(
    struct _ns5__GetAllCRLs*            ns5__GetAllCRLs,	///< Input parameter
    struct _ns5__GetAllCRLsResponse    *ns5__GetAllCRLsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__DeleteCRL                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__DeleteCRL" of service binding "AdvancedSecurityServiceBinding".
        This operation deletes a certificate revocation list (CRL) from the keystore
on the device.
        Certification revocation lists are uniquely identified using CRLIDs. If
no CRL is stored under the requested CRLID, the device shall produce a CRLID fault.
        If a reference exists for the specified CRL, the device shall produce a
ReferenceExists fault and shall not delete the CRL.
        After a CRL has been successfully deleted, a device may assign its former
ID to other CRLs.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCRL"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCRL"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCRLResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__DeleteCRL(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__DeleteCRL*             ns5__DeleteCRL,
    // output parameters:
    struct _ns5__DeleteCRLResponse     *ns5__DeleteCRLResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__DeleteCRL(
    struct soap *soap,
    // input parameters:
    struct _ns5__DeleteCRL*             ns5__DeleteCRL,
    // output parameters:
    struct _ns5__DeleteCRLResponse     *ns5__DeleteCRLResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	DeleteCRL SOAP
//gsoap ns5  service method-style:	DeleteCRL document
//gsoap ns5  service method-encoding:	DeleteCRL literal
//gsoap ns5  service method-input-action:	DeleteCRL http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCRL
//gsoap ns5  service method-output-action:	DeleteCRL http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCRLResponse
int __ns5__DeleteCRL(
    struct _ns5__DeleteCRL*             ns5__DeleteCRL,	///< Input parameter
    struct _ns5__DeleteCRLResponse     *ns5__DeleteCRLResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__CreateCertPathValidationPolicy                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__CreateCertPathValidationPolicy" of service binding "AdvancedSecurityServiceBinding".
        This operation creates a certification path validation policy.
        Certification path validation policies are uniquely identified using certification
path validation policy IDs. The device shall generate a new certification path
validation policy ID for the created certification path validation policy.
        For the certification path validation parameters that are not represented
in the certPathValidationParameters data type, the device shall use the default
values specified in Sect. 3.
        If the device does not have enough storage capacity for storing the certification
path validation policy to be created, the device shall produce a maximum number
of certification path validation policies reached fault and shall not create a
certification path validation policy.
        If there is at least one trust anchor certificate ID in the request for
which there exists no certificate in the devices keystore, the device shall
produce a CertificateID fault and shall not create a certification path validation
policy.
        If the device cannot process the supplied certification path validation
parameters, the device shall produce a CertPathValidationParameters fault and shall
not create a certification path validation policy.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertPathValidationPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertPathValidationPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertPathValidationPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__CreateCertPathValidationPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__CreateCertPathValidationPolicy* ns5__CreateCertPathValidationPolicy,
    // output parameters:
    struct _ns5__CreateCertPathValidationPolicyResponse*ns5__CreateCertPathValidationPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__CreateCertPathValidationPolicy(
    struct soap *soap,
    // input parameters:
    struct _ns5__CreateCertPathValidationPolicy* ns5__CreateCertPathValidationPolicy,
    // output parameters:
    struct _ns5__CreateCertPathValidationPolicyResponse*ns5__CreateCertPathValidationPolicyResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	CreateCertPathValidationPolicy SOAP
//gsoap ns5  service method-style:	CreateCertPathValidationPolicy document
//gsoap ns5  service method-encoding:	CreateCertPathValidationPolicy literal
//gsoap ns5  service method-input-action:	CreateCertPathValidationPolicy http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertPathValidationPolicy
//gsoap ns5  service method-output-action:	CreateCertPathValidationPolicy http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertPathValidationPolicyResponse
int __ns5__CreateCertPathValidationPolicy(
    struct _ns5__CreateCertPathValidationPolicy* ns5__CreateCertPathValidationPolicy,	///< Input parameter
    struct _ns5__CreateCertPathValidationPolicyResponse*ns5__CreateCertPathValidationPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetCertPathValidationPolicy                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetCertPathValidationPolicy" of service binding "AdvancedSecurityServiceBinding".
        This operation returns a certification path validation policy from the
keystore on the device.
        Certification path validation policies are uniquely identified using certification
path validation policy IDs. If no certification path validation policy is stored
under the requested certification path validation policy ID, the device shall produce
a CertPathValidationPolicyID fault.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertPathValidationPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertPathValidationPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertPathValidationPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetCertPathValidationPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetCertPathValidationPolicy* ns5__GetCertPathValidationPolicy,
    // output parameters:
    struct _ns5__GetCertPathValidationPolicyResponse*ns5__GetCertPathValidationPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetCertPathValidationPolicy(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetCertPathValidationPolicy* ns5__GetCertPathValidationPolicy,
    // output parameters:
    struct _ns5__GetCertPathValidationPolicyResponse*ns5__GetCertPathValidationPolicyResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetCertPathValidationPolicy SOAP
//gsoap ns5  service method-style:	GetCertPathValidationPolicy document
//gsoap ns5  service method-encoding:	GetCertPathValidationPolicy literal
//gsoap ns5  service method-input-action:	GetCertPathValidationPolicy http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertPathValidationPolicy
//gsoap ns5  service method-output-action:	GetCertPathValidationPolicy http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertPathValidationPolicyResponse
int __ns5__GetCertPathValidationPolicy(
    struct _ns5__GetCertPathValidationPolicy* ns5__GetCertPathValidationPolicy,	///< Input parameter
    struct _ns5__GetCertPathValidationPolicyResponse*ns5__GetCertPathValidationPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetAllCertPathValidationPolicies                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetAllCertPathValidationPolicies" of service binding "AdvancedSecurityServiceBinding".
        This operation returns all certification path validation policies that
are stored in the keystore on the device.
        If no certification path validation policy is stored in the devices
keystore, an empty list is returned.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertPathValidationPolicies"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertPathValidationPolicies"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertPathValidationPoliciesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetAllCertPathValidationPolicies(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetAllCertPathValidationPolicies* ns5__GetAllCertPathValidationPolicies,
    // output parameters:
    struct _ns5__GetAllCertPathValidationPoliciesResponse*ns5__GetAllCertPathValidationPoliciesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetAllCertPathValidationPolicies(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetAllCertPathValidationPolicies* ns5__GetAllCertPathValidationPolicies,
    // output parameters:
    struct _ns5__GetAllCertPathValidationPoliciesResponse*ns5__GetAllCertPathValidationPoliciesResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetAllCertPathValidationPolicies SOAP
//gsoap ns5  service method-style:	GetAllCertPathValidationPolicies document
//gsoap ns5  service method-encoding:	GetAllCertPathValidationPolicies literal
//gsoap ns5  service method-input-action:	GetAllCertPathValidationPolicies http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertPathValidationPolicies
//gsoap ns5  service method-output-action:	GetAllCertPathValidationPolicies http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertPathValidationPoliciesResponse
int __ns5__GetAllCertPathValidationPolicies(
    struct _ns5__GetAllCertPathValidationPolicies* ns5__GetAllCertPathValidationPolicies,	///< Input parameter
    struct _ns5__GetAllCertPathValidationPoliciesResponse*ns5__GetAllCertPathValidationPoliciesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__DeleteCertPathValidationPolicy                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__DeleteCertPathValidationPolicy" of service binding "AdvancedSecurityServiceBinding".
        This operation deletes a certification path validation policy from the
keystore on the device.
        Certification path validation policies are uniquely identified using certification
path validation policy IDs. If no certification path validation policy is stored
under the requested certification path validation policy ID, the device shall produce
an InvalidCertPathValidationPolicyID fault.
        If a reference exists for the requested certification path validation policy,
the device shall produce a ReferenceExists fault and shall not delete the certification
path validation policy.
        After the certification path validation policy has been deleted, the device
may assign its former ID to other certification path validation policies.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertPathValidationPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertPathValidationPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertPathValidationPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__DeleteCertPathValidationPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__DeleteCertPathValidationPolicy* ns5__DeleteCertPathValidationPolicy,
    // output parameters:
    struct _ns5__DeleteCertPathValidationPolicyResponse*ns5__DeleteCertPathValidationPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__DeleteCertPathValidationPolicy(
    struct soap *soap,
    // input parameters:
    struct _ns5__DeleteCertPathValidationPolicy* ns5__DeleteCertPathValidationPolicy,
    // output parameters:
    struct _ns5__DeleteCertPathValidationPolicyResponse*ns5__DeleteCertPathValidationPolicyResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	DeleteCertPathValidationPolicy SOAP
//gsoap ns5  service method-style:	DeleteCertPathValidationPolicy document
//gsoap ns5  service method-encoding:	DeleteCertPathValidationPolicy literal
//gsoap ns5  service method-input-action:	DeleteCertPathValidationPolicy http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertPathValidationPolicy
//gsoap ns5  service method-output-action:	DeleteCertPathValidationPolicy http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertPathValidationPolicyResponse
int __ns5__DeleteCertPathValidationPolicy(
    struct _ns5__DeleteCertPathValidationPolicy* ns5__DeleteCertPathValidationPolicy,	///< Input parameter
    struct _ns5__DeleteCertPathValidationPolicyResponse*ns5__DeleteCertPathValidationPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__AddServerCertificateAssignment                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__AddServerCertificateAssignment" of service binding "AdvancedSecurityServiceBinding".
				This operation assigns a key pair and certificate
along with a certification path (certificate chain) to the TLS server on the device.
				The TLS server shall use this information for key
exchange during the TLS handshake, particularly for constructing server certificate
messages as specified in RFC 4346 and RFC 2246.<br/>
				
				Certification paths are identified by their certification
path IDs in the keystore. The first certificate in the certification path must
be the TLS server certificate.
				Since each certificate has exactly one associated
key pair, a reference to the key pair that is associated with the server certificate
is not supplied explicitly.
				Devices shall obtain the private key or results
of operations under the private key by suitable internal interaction with the keystore.<br/>
				If a device chooses to perform a TLS key exchange
based on the supplied certification path,  it shall use the key pair that is associated
with the server certificate for 
				key exchange and transmit the certification path
to TLS clients as-is, i.e., the device shall not check conformance of the certification
path to RFC 4346 norRFC 2246.
				In order to use the server certificate during the
TLS handshake, the corresponding private key is required.
				Therefore, if the key pair that is associated with
the server certificate, i.e., the first certificate in the certification path,
does not have an associated private key, 
				the NoPrivateKey fault is produced and the certification
path is not associated to the TLS server.<br/>
				A TLS server may present different certification
paths to different clients during the TLS handshake instead of presenting the same
certification path to all clients.
				Therefore more than one certification path may be
assigned to the TLS server.<br/>
				If the maximum number of certification paths that
may be assigned to the TLS server simultaneously is reached, the device shall generate
a MaximumNumberOfCertificationPathsReached 
				fault and the requested certification path shall
not be assigned to the TLS server.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddServerCertificateAssignment"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddServerCertificateAssignment"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddServerCertificateAssignmentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__AddServerCertificateAssignment(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__AddServerCertificateAssignment* ns5__AddServerCertificateAssignment,
    // output parameters:
    struct _ns5__AddServerCertificateAssignmentResponse*ns5__AddServerCertificateAssignmentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__AddServerCertificateAssignment(
    struct soap *soap,
    // input parameters:
    struct _ns5__AddServerCertificateAssignment* ns5__AddServerCertificateAssignment,
    // output parameters:
    struct _ns5__AddServerCertificateAssignmentResponse*ns5__AddServerCertificateAssignmentResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	AddServerCertificateAssignment SOAP
//gsoap ns5  service method-style:	AddServerCertificateAssignment document
//gsoap ns5  service method-encoding:	AddServerCertificateAssignment literal
//gsoap ns5  service method-input-action:	AddServerCertificateAssignment http://www.onvif.org/ver10/advancedsecurity/wsdl/AddServerCertificateAssignment
//gsoap ns5  service method-output-action:	AddServerCertificateAssignment http://www.onvif.org/ver10/advancedsecurity/wsdl/AddServerCertificateAssignmentResponse
int __ns5__AddServerCertificateAssignment(
    struct _ns5__AddServerCertificateAssignment* ns5__AddServerCertificateAssignment,	///< Input parameter
    struct _ns5__AddServerCertificateAssignmentResponse*ns5__AddServerCertificateAssignmentResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__RemoveServerCertificateAssignment                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__RemoveServerCertificateAssignment" of service binding "AdvancedSecurityServiceBinding".
				This operation removes a key pair and certificate
assignment (including certification path) to the TLS server on the device.<br/>
				Certification paths are identified using certification
path IDs. If the supplied certification path ID is not associated to the TLS server,
an InvalidArgVal fault is produced.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveServerCertificateAssignment"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveServerCertificateAssignment"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveServerCertificateAssignmentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__RemoveServerCertificateAssignment(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__RemoveServerCertificateAssignment* ns5__RemoveServerCertificateAssignment,
    // output parameters:
    struct _ns5__RemoveServerCertificateAssignmentResponse*ns5__RemoveServerCertificateAssignmentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__RemoveServerCertificateAssignment(
    struct soap *soap,
    // input parameters:
    struct _ns5__RemoveServerCertificateAssignment* ns5__RemoveServerCertificateAssignment,
    // output parameters:
    struct _ns5__RemoveServerCertificateAssignmentResponse*ns5__RemoveServerCertificateAssignmentResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	RemoveServerCertificateAssignment SOAP
//gsoap ns5  service method-style:	RemoveServerCertificateAssignment document
//gsoap ns5  service method-encoding:	RemoveServerCertificateAssignment literal
//gsoap ns5  service method-input-action:	RemoveServerCertificateAssignment http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveServerCertificateAssignment
//gsoap ns5  service method-output-action:	RemoveServerCertificateAssignment http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveServerCertificateAssignmentResponse
int __ns5__RemoveServerCertificateAssignment(
    struct _ns5__RemoveServerCertificateAssignment* ns5__RemoveServerCertificateAssignment,	///< Input parameter
    struct _ns5__RemoveServerCertificateAssignmentResponse*ns5__RemoveServerCertificateAssignmentResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__ReplaceServerCertificateAssignment                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__ReplaceServerCertificateAssignment" of service binding "AdvancedSecurityServiceBinding".
				This operation replaces an existing key pair and
certificate assignment to the TLS server on the device by a new key pair and certificate
assignment (including certification paths).<br/>
				
				After the replacement, the TLS server shall use
the new certificate and certification path exactly in those cases in which it would
have used the old certificate and certification path.
				Therefore, especially in the case that several server
certificates are assigned to the TLS server, clients that wish to replace an old
certificate assignment by a new assignment
				should use this operation instead of a combination
of the Add TLS Server Certificate Assignment and the Remove TLS Server Certificate
Assignment operations.<br/>
				
				Certification paths are identified using certification
path IDs. If the supplied old certification path ID is not associated to the TLS
server, or no certification path exists
				under the new certification path ID, the corresponding
InvalidArgVal faults are produced and the associations are unchanged.
				The first certificate in the new certification path
must be the TLS server certificate.<br/>
				Since each certificate has exactly one associated
key pair, a reference to the key pair that is associated with the new server certificate
is not supplied explicitly.
				Devices shall obtain the private key or results
of operations under the private key by suitable internal interaction with the keystore.<br/>
				If a device chooses to perform a TLS key exchange
based on the new certification path,  it shall use the key pair that is associated
with the server certificate
				for key exchange and transmit the certification
path to TLS clients as-is, i.e., the device shall not check conformance of the
certification path to RFC 4346 norRFC 2246.
				In order to use the server certificate during the
TLS handshake, the corresponding private key is required.
				Therefore, if the key pair that is associated with
the server certificate, i.e., the first certificate in the certification path,
does not have an associated private key,
				the NoPrivateKey fault is produced and the certification
path is not associated to the TLS server.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceServerCertificateAssignment"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceServerCertificateAssignment"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceServerCertificateAssignmentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__ReplaceServerCertificateAssignment(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__ReplaceServerCertificateAssignment* ns5__ReplaceServerCertificateAssignment,
    // output parameters:
    struct _ns5__ReplaceServerCertificateAssignmentResponse*ns5__ReplaceServerCertificateAssignmentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__ReplaceServerCertificateAssignment(
    struct soap *soap,
    // input parameters:
    struct _ns5__ReplaceServerCertificateAssignment* ns5__ReplaceServerCertificateAssignment,
    // output parameters:
    struct _ns5__ReplaceServerCertificateAssignmentResponse*ns5__ReplaceServerCertificateAssignmentResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	ReplaceServerCertificateAssignment SOAP
//gsoap ns5  service method-style:	ReplaceServerCertificateAssignment document
//gsoap ns5  service method-encoding:	ReplaceServerCertificateAssignment literal
//gsoap ns5  service method-input-action:	ReplaceServerCertificateAssignment http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceServerCertificateAssignment
//gsoap ns5  service method-output-action:	ReplaceServerCertificateAssignment http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceServerCertificateAssignmentResponse
int __ns5__ReplaceServerCertificateAssignment(
    struct _ns5__ReplaceServerCertificateAssignment* ns5__ReplaceServerCertificateAssignment,	///< Input parameter
    struct _ns5__ReplaceServerCertificateAssignmentResponse*ns5__ReplaceServerCertificateAssignmentResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetAssignedServerCertificates                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetAssignedServerCertificates" of service binding "AdvancedSecurityServiceBinding".
				This operation returns the IDs of all key pairs
and certificates (including certification paths) that are assigned to the TLS server
on the device.<br/>
				This operation may be used, e.g., if a client lost
track of the certification path assignments on the device.
				If no certification path is assigned to the TLS
server, an empty list is returned.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedServerCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedServerCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedServerCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetAssignedServerCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetAssignedServerCertificates* ns5__GetAssignedServerCertificates,
    // output parameters:
    struct _ns5__GetAssignedServerCertificatesResponse*ns5__GetAssignedServerCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetAssignedServerCertificates(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetAssignedServerCertificates* ns5__GetAssignedServerCertificates,
    // output parameters:
    struct _ns5__GetAssignedServerCertificatesResponse*ns5__GetAssignedServerCertificatesResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetAssignedServerCertificates SOAP
//gsoap ns5  service method-style:	GetAssignedServerCertificates document
//gsoap ns5  service method-encoding:	GetAssignedServerCertificates literal
//gsoap ns5  service method-input-action:	GetAssignedServerCertificates http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedServerCertificates
//gsoap ns5  service method-output-action:	GetAssignedServerCertificates http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedServerCertificatesResponse
int __ns5__GetAssignedServerCertificates(
    struct _ns5__GetAssignedServerCertificates* ns5__GetAssignedServerCertificates,	///< Input parameter
    struct _ns5__GetAssignedServerCertificatesResponse*ns5__GetAssignedServerCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__SetClientAuthenticationRequired                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__SetClientAuthenticationRequired" of service binding "AdvancedSecurityServiceBinding".
        This operation activates or deactivates TLS client authentication for the
TLS server on the device.
        The TLS server on the device shall require client authentication if and
only if clientAuthenticationRequired is set to true.
        If TLS client authentication is requested to be enabled and no certification
path validation policy is assigned to the TLS server, the device shall return an
EnablingTLSClientAuthenticationFailed fault and shall not enable TLS client authentication.
        The device shall execute this command regardless of the TLS enabled/disabled
state configured in the ONVIF Device Management Service.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/SetClientAuthenticationRequired"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/SetClientAuthenticationRequired"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/SetClientAuthenticationRequiredResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__SetClientAuthenticationRequired(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__SetClientAuthenticationRequired* ns5__SetClientAuthenticationRequired,
    // output parameters:
    struct _ns5__SetClientAuthenticationRequiredResponse*ns5__SetClientAuthenticationRequiredResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__SetClientAuthenticationRequired(
    struct soap *soap,
    // input parameters:
    struct _ns5__SetClientAuthenticationRequired* ns5__SetClientAuthenticationRequired,
    // output parameters:
    struct _ns5__SetClientAuthenticationRequiredResponse*ns5__SetClientAuthenticationRequiredResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	SetClientAuthenticationRequired SOAP
//gsoap ns5  service method-style:	SetClientAuthenticationRequired document
//gsoap ns5  service method-encoding:	SetClientAuthenticationRequired literal
//gsoap ns5  service method-input-action:	SetClientAuthenticationRequired http://www.onvif.org/ver10/advancedsecurity/wsdl/SetClientAuthenticationRequired
//gsoap ns5  service method-output-action:	SetClientAuthenticationRequired http://www.onvif.org/ver10/advancedsecurity/wsdl/SetClientAuthenticationRequiredResponse
int __ns5__SetClientAuthenticationRequired(
    struct _ns5__SetClientAuthenticationRequired* ns5__SetClientAuthenticationRequired,	///< Input parameter
    struct _ns5__SetClientAuthenticationRequiredResponse*ns5__SetClientAuthenticationRequiredResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetClientAuthenticationRequired                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetClientAuthenticationRequired" of service binding "AdvancedSecurityServiceBinding".
        This operation returns whether TLS client authentication is active.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetClientAuthenticationRequired"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetClientAuthenticationRequired"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetClientAuthenticationRequiredResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetClientAuthenticationRequired(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetClientAuthenticationRequired* ns5__GetClientAuthenticationRequired,
    // output parameters:
    struct _ns5__GetClientAuthenticationRequiredResponse*ns5__GetClientAuthenticationRequiredResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetClientAuthenticationRequired(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetClientAuthenticationRequired* ns5__GetClientAuthenticationRequired,
    // output parameters:
    struct _ns5__GetClientAuthenticationRequiredResponse*ns5__GetClientAuthenticationRequiredResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetClientAuthenticationRequired SOAP
//gsoap ns5  service method-style:	GetClientAuthenticationRequired document
//gsoap ns5  service method-encoding:	GetClientAuthenticationRequired literal
//gsoap ns5  service method-input-action:	GetClientAuthenticationRequired http://www.onvif.org/ver10/advancedsecurity/wsdl/GetClientAuthenticationRequired
//gsoap ns5  service method-output-action:	GetClientAuthenticationRequired http://www.onvif.org/ver10/advancedsecurity/wsdl/GetClientAuthenticationRequiredResponse
int __ns5__GetClientAuthenticationRequired(
    struct _ns5__GetClientAuthenticationRequired* ns5__GetClientAuthenticationRequired,	///< Input parameter
    struct _ns5__GetClientAuthenticationRequiredResponse*ns5__GetClientAuthenticationRequiredResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__AddCertPathValidationPolicyAssignment                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__AddCertPathValidationPolicyAssignment" of service binding "AdvancedSecurityServiceBinding".
        This operation assigns a certification path validation policy to the TLS
server on the device. The TLS server shall enforce the policy when authenticating
TLS clients and consider a client authentic if and only if the algorithm returns
valid.
        If no certification path validation policy is stored under the requested
CertPathValidationPolicyID, the device shall produce a CertPathValidationPolicyID
fault.
        A TLS server may use different certification path validation policies to
authenticate clients. Therefore more than one certification path validation policy
may be assigned to the TLS server. If the maximum number of certification path
validation policies that may be assigned to the  TLS server simultaneously is reached,
the device shall produce a MaximumNumberOfTLSCertPathValidationPoliciesReached
fault and shall not assign the requested certification path validation policy to
the TLS server.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddCertPathValidationPolicyAssignment"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddCertPathValidationPolicyAssignment"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddCertPathValidationPolicyAssignmentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__AddCertPathValidationPolicyAssignment(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__AddCertPathValidationPolicyAssignment* ns5__AddCertPathValidationPolicyAssignment,
    // output parameters:
    struct _ns5__AddCertPathValidationPolicyAssignmentResponse*ns5__AddCertPathValidationPolicyAssignmentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__AddCertPathValidationPolicyAssignment(
    struct soap *soap,
    // input parameters:
    struct _ns5__AddCertPathValidationPolicyAssignment* ns5__AddCertPathValidationPolicyAssignment,
    // output parameters:
    struct _ns5__AddCertPathValidationPolicyAssignmentResponse*ns5__AddCertPathValidationPolicyAssignmentResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	AddCertPathValidationPolicyAssignment SOAP
//gsoap ns5  service method-style:	AddCertPathValidationPolicyAssignment document
//gsoap ns5  service method-encoding:	AddCertPathValidationPolicyAssignment literal
//gsoap ns5  service method-input-action:	AddCertPathValidationPolicyAssignment http://www.onvif.org/ver10/advancedsecurity/wsdl/AddCertPathValidationPolicyAssignment
//gsoap ns5  service method-output-action:	AddCertPathValidationPolicyAssignment http://www.onvif.org/ver10/advancedsecurity/wsdl/AddCertPathValidationPolicyAssignmentResponse
int __ns5__AddCertPathValidationPolicyAssignment(
    struct _ns5__AddCertPathValidationPolicyAssignment* ns5__AddCertPathValidationPolicyAssignment,	///< Input parameter
    struct _ns5__AddCertPathValidationPolicyAssignmentResponse*ns5__AddCertPathValidationPolicyAssignmentResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__RemoveCertPathValidationPolicyAssignment                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__RemoveCertPathValidationPolicyAssignment" of service binding "AdvancedSecurityServiceBinding".
        This operation removes a certification path validation policy assignment
from the TLS server on the device.
        If the certification path validation policy identified by the requested
CertPathValidationPolicyID is not associated to the TLS server, the device shall
produce a CertPathValidationPolicy fault.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveCertPathValidationPolicyAssignment"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveCertPathValidationPolicyAssignment"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveCertPathValidationPolicyAssignmentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__RemoveCertPathValidationPolicyAssignment(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__RemoveCertPathValidationPolicyAssignment* ns5__RemoveCertPathValidationPolicyAssignment,
    // output parameters:
    struct _ns5__RemoveCertPathValidationPolicyAssignmentResponse*ns5__RemoveCertPathValidationPolicyAssignmentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__RemoveCertPathValidationPolicyAssignment(
    struct soap *soap,
    // input parameters:
    struct _ns5__RemoveCertPathValidationPolicyAssignment* ns5__RemoveCertPathValidationPolicyAssignment,
    // output parameters:
    struct _ns5__RemoveCertPathValidationPolicyAssignmentResponse*ns5__RemoveCertPathValidationPolicyAssignmentResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	RemoveCertPathValidationPolicyAssignment SOAP
//gsoap ns5  service method-style:	RemoveCertPathValidationPolicyAssignment document
//gsoap ns5  service method-encoding:	RemoveCertPathValidationPolicyAssignment literal
//gsoap ns5  service method-input-action:	RemoveCertPathValidationPolicyAssignment http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveCertPathValidationPolicyAssignment
//gsoap ns5  service method-output-action:	RemoveCertPathValidationPolicyAssignment http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveCertPathValidationPolicyAssignmentResponse
int __ns5__RemoveCertPathValidationPolicyAssignment(
    struct _ns5__RemoveCertPathValidationPolicyAssignment* ns5__RemoveCertPathValidationPolicyAssignment,	///< Input parameter
    struct _ns5__RemoveCertPathValidationPolicyAssignmentResponse*ns5__RemoveCertPathValidationPolicyAssignmentResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__ReplaceCertPathValidationPolicyAssignment                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__ReplaceCertPathValidationPolicyAssignment" of service binding "AdvancedSecurityServiceBinding".
        This operation replaces a certification path validation policy assignment
to the TLS server on the device with another certification path validation policy
assignment.
        If the certification path validation policy identified by the requested
OldCertPathValidationPolicyID is not associated to the TLS server, the device shall
produce an OldCertPathValidationPolicyID fault and shall not associate the certification
path validation policy identified by the NewCertPathValidationPolicyID to the TLS
server.
        If no certification path validation policy exists under the requested NewCertPathValidationPolicyID
in the devices keystore, the device shall produce a NewCertPathValidationPolicyID
fault and shall not remove the association of the old certification path validation
policy to the TLS server.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceCertPathValidationPolicyAssignment"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceCertPathValidationPolicyAssignment"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceCertPathValidationPolicyAssignmentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__ReplaceCertPathValidationPolicyAssignment(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__ReplaceCertPathValidationPolicyAssignment* ns5__ReplaceCertPathValidationPolicyAssignment,
    // output parameters:
    struct _ns5__ReplaceCertPathValidationPolicyAssignmentResponse*ns5__ReplaceCertPathValidationPolicyAssignmentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__ReplaceCertPathValidationPolicyAssignment(
    struct soap *soap,
    // input parameters:
    struct _ns5__ReplaceCertPathValidationPolicyAssignment* ns5__ReplaceCertPathValidationPolicyAssignment,
    // output parameters:
    struct _ns5__ReplaceCertPathValidationPolicyAssignmentResponse*ns5__ReplaceCertPathValidationPolicyAssignmentResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	ReplaceCertPathValidationPolicyAssignment SOAP
//gsoap ns5  service method-style:	ReplaceCertPathValidationPolicyAssignment document
//gsoap ns5  service method-encoding:	ReplaceCertPathValidationPolicyAssignment literal
//gsoap ns5  service method-input-action:	ReplaceCertPathValidationPolicyAssignment http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceCertPathValidationPolicyAssignment
//gsoap ns5  service method-output-action:	ReplaceCertPathValidationPolicyAssignment http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceCertPathValidationPolicyAssignmentResponse
int __ns5__ReplaceCertPathValidationPolicyAssignment(
    struct _ns5__ReplaceCertPathValidationPolicyAssignment* ns5__ReplaceCertPathValidationPolicyAssignment,	///< Input parameter
    struct _ns5__ReplaceCertPathValidationPolicyAssignmentResponse*ns5__ReplaceCertPathValidationPolicyAssignmentResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetAssignedCertPathValidationPolicies                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns5__GetAssignedCertPathValidationPolicies" of service binding "AdvancedSecurityServiceBinding".
        This operation returns the IDs of all certification path validation policies
that are assigned to the TLS server on the device.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedCertPathValidationPolicies"

  - Addressing input action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedCertPathValidationPolicies"

  - Addressing output action: "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedCertPathValidationPoliciesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetAssignedCertPathValidationPolicies(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns5__GetAssignedCertPathValidationPolicies* ns5__GetAssignedCertPathValidationPolicies,
    // output parameters:
    struct _ns5__GetAssignedCertPathValidationPoliciesResponse*ns5__GetAssignedCertPathValidationPoliciesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetAssignedCertPathValidationPolicies(
    struct soap *soap,
    // input parameters:
    struct _ns5__GetAssignedCertPathValidationPolicies* ns5__GetAssignedCertPathValidationPolicies,
    // output parameters:
    struct _ns5__GetAssignedCertPathValidationPoliciesResponse*ns5__GetAssignedCertPathValidationPoliciesResponse
  );
@endcode

*/

//gsoap ns5  service method-protocol:	GetAssignedCertPathValidationPolicies SOAP
//gsoap ns5  service method-style:	GetAssignedCertPathValidationPolicies document
//gsoap ns5  service method-encoding:	GetAssignedCertPathValidationPolicies literal
//gsoap ns5  service method-input-action:	GetAssignedCertPathValidationPolicies http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedCertPathValidationPolicies
//gsoap ns5  service method-output-action:	GetAssignedCertPathValidationPolicies http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedCertPathValidationPoliciesResponse
int __ns5__GetAssignedCertPathValidationPolicies(
    struct _ns5__GetAssignedCertPathValidationPolicies* ns5__GetAssignedCertPathValidationPolicies,	///< Input parameter
    struct _ns5__GetAssignedCertPathValidationPoliciesResponse*ns5__GetAssignedCertPathValidationPoliciesResponse	///< Output parameter
);

/**

@page AdvancedSecurityServiceBinding Binding "AdvancedSecurityServiceBinding"

@section AdvancedSecurityServiceBinding_policy_enablers Policy Enablers of Binding "AdvancedSecurityServiceBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   AccessRulesBinding                                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns6__GetServiceCapabilities" of service binding "AccessRulesBinding".
This operation returns the capabilities of the access rules service.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accessrules/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/accessrules/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/accessrules/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns6__GetServiceCapabilities* ns6__GetServiceCapabilities,
    // output parameters:
    struct _ns6__GetServiceCapabilitiesResponse*ns6__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _ns6__GetServiceCapabilities* ns6__GetServiceCapabilities,
    // output parameters:
    struct _ns6__GetServiceCapabilitiesResponse*ns6__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap ns6  service method-protocol:	GetServiceCapabilities SOAP
//gsoap ns6  service method-style:	GetServiceCapabilities document
//gsoap ns6  service method-encoding:	GetServiceCapabilities literal
//gsoap ns6  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/accessrules/wsdl/GetServiceCapabilities
//gsoap ns6  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/accessrules/wsdl/GetServiceCapabilitiesResponse
int __ns6__GetServiceCapabilities(
    struct _ns6__GetServiceCapabilities* ns6__GetServiceCapabilities,	///< Input parameter
    struct _ns6__GetServiceCapabilitiesResponse*ns6__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__GetAccessProfileInfo                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns6__GetAccessProfileInfo" of service binding "AccessRulesBinding".

				This operation requests a list of AccessProfileInfo
items matching the given tokens. The device shall
				ignore tokens it cannot resolve and shall return
an empty list if there are no items matching specified
				tokens. The device shall not return a fault in this
case.
				If the number of requested items is greater than
MaxLimit, a TooManyItems fault shall be returned.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfo"

  - Addressing input action: "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfo"

  - Addressing output action: "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__GetAccessProfileInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns6__GetAccessProfileInfo*  ns6__GetAccessProfileInfo,
    // output parameters:
    struct _ns6__GetAccessProfileInfoResponse*ns6__GetAccessProfileInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__GetAccessProfileInfo(
    struct soap *soap,
    // input parameters:
    struct _ns6__GetAccessProfileInfo*  ns6__GetAccessProfileInfo,
    // output parameters:
    struct _ns6__GetAccessProfileInfoResponse*ns6__GetAccessProfileInfoResponse
  );
@endcode

*/

//gsoap ns6  service method-protocol:	GetAccessProfileInfo SOAP
//gsoap ns6  service method-style:	GetAccessProfileInfo document
//gsoap ns6  service method-encoding:	GetAccessProfileInfo literal
//gsoap ns6  service method-input-action:	GetAccessProfileInfo http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfo
//gsoap ns6  service method-output-action:	GetAccessProfileInfo http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfoResponse
int __ns6__GetAccessProfileInfo(
    struct _ns6__GetAccessProfileInfo*  ns6__GetAccessProfileInfo,	///< Input parameter
    struct _ns6__GetAccessProfileInfoResponse*ns6__GetAccessProfileInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__GetAccessProfileInfoList                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns6__GetAccessProfileInfoList" of service binding "AccessRulesBinding".

				This operation requests a list of all of AccessProfileInfo
items provided by the device.
				A call to this method shall return a StartReference
when not all data is returned and more data is
				available. The reference shall be valid for retrieving
the next set of data. Please refer Access Control
				Service Specification for more details.
				The number of items returned shall not be greater
than Limit parameter.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfoList"

  - Addressing input action: "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfoList"

  - Addressing output action: "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfoListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__GetAccessProfileInfoList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns6__GetAccessProfileInfoList* ns6__GetAccessProfileInfoList,
    // output parameters:
    struct _ns6__GetAccessProfileInfoListResponse*ns6__GetAccessProfileInfoListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__GetAccessProfileInfoList(
    struct soap *soap,
    // input parameters:
    struct _ns6__GetAccessProfileInfoList* ns6__GetAccessProfileInfoList,
    // output parameters:
    struct _ns6__GetAccessProfileInfoListResponse*ns6__GetAccessProfileInfoListResponse
  );
@endcode

*/

//gsoap ns6  service method-protocol:	GetAccessProfileInfoList SOAP
//gsoap ns6  service method-style:	GetAccessProfileInfoList document
//gsoap ns6  service method-encoding:	GetAccessProfileInfoList literal
//gsoap ns6  service method-input-action:	GetAccessProfileInfoList http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfoList
//gsoap ns6  service method-output-action:	GetAccessProfileInfoList http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfoListResponse
int __ns6__GetAccessProfileInfoList(
    struct _ns6__GetAccessProfileInfoList* ns6__GetAccessProfileInfoList,	///< Input parameter
    struct _ns6__GetAccessProfileInfoListResponse*ns6__GetAccessProfileInfoListResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__GetAccessProfiles                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns6__GetAccessProfiles" of service binding "AccessRulesBinding".

				This operation returns the specified access profile
item matching the given tokens.
				The device shall ignore tokens it cannot resolve
and shall return an empty list if there are no items
				matching specified tokens. The device shall not
return a fault in this case.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfiles"

  - Addressing input action: "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfiles"

  - Addressing output action: "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__GetAccessProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns6__GetAccessProfiles*     ns6__GetAccessProfiles,
    // output parameters:
    struct _ns6__GetAccessProfilesResponse*ns6__GetAccessProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__GetAccessProfiles(
    struct soap *soap,
    // input parameters:
    struct _ns6__GetAccessProfiles*     ns6__GetAccessProfiles,
    // output parameters:
    struct _ns6__GetAccessProfilesResponse*ns6__GetAccessProfilesResponse
  );
@endcode

*/

//gsoap ns6  service method-protocol:	GetAccessProfiles SOAP
//gsoap ns6  service method-style:	GetAccessProfiles document
//gsoap ns6  service method-encoding:	GetAccessProfiles literal
//gsoap ns6  service method-input-action:	GetAccessProfiles http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfiles
//gsoap ns6  service method-output-action:	GetAccessProfiles http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfilesResponse
int __ns6__GetAccessProfiles(
    struct _ns6__GetAccessProfiles*     ns6__GetAccessProfiles,	///< Input parameter
    struct _ns6__GetAccessProfilesResponse*ns6__GetAccessProfilesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__GetAccessProfileList                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns6__GetAccessProfileList" of service binding "AccessRulesBinding".

				This operation requests a list of all of access
profile items provided by the device.
				A call to this method shall return a StartReference
when not all data is returned and more data is
				available. The reference shall be valid for retrieving
the next set of data. Please refer Access Control
				Service Specification for more details.
				The number of items returned shall not be greater
the Limit parameter.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileList"

  - Addressing input action: "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileList"

  - Addressing output action: "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__GetAccessProfileList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns6__GetAccessProfileList*  ns6__GetAccessProfileList,
    // output parameters:
    struct _ns6__GetAccessProfileListResponse*ns6__GetAccessProfileListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__GetAccessProfileList(
    struct soap *soap,
    // input parameters:
    struct _ns6__GetAccessProfileList*  ns6__GetAccessProfileList,
    // output parameters:
    struct _ns6__GetAccessProfileListResponse*ns6__GetAccessProfileListResponse
  );
@endcode

*/

//gsoap ns6  service method-protocol:	GetAccessProfileList SOAP
//gsoap ns6  service method-style:	GetAccessProfileList document
//gsoap ns6  service method-encoding:	GetAccessProfileList literal
//gsoap ns6  service method-input-action:	GetAccessProfileList http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileList
//gsoap ns6  service method-output-action:	GetAccessProfileList http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileListResponse
int __ns6__GetAccessProfileList(
    struct _ns6__GetAccessProfileList*  ns6__GetAccessProfileList,	///< Input parameter
    struct _ns6__GetAccessProfileListResponse*ns6__GetAccessProfileListResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__CreateAccessProfile                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns6__CreateAccessProfile" of service binding "AccessRulesBinding".

				This operation creates the specified access profile.
The token field of the access profile shall be
				empty, the service shall allocate a token for the
access profile. The allocated token shall be returned
				in the response. If the client sends any value in
the token field, the device shall return InvalidArgVal
				as generic fault code.
				In an access profile, if several access policies
specifying different schedules for the same access
				point will result in a union of the schedule.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accessrules/wsdl/CreateAccessProfile"

  - Addressing input action: "http://www.onvif.org/ver10/accessrules/wsdl/CreateAccessProfile"

  - Addressing output action: "http://www.onvif.org/ver10/accessrules/wsdl/CreateAccessProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__CreateAccessProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns6__CreateAccessProfile*   ns6__CreateAccessProfile,
    // output parameters:
    struct _ns6__CreateAccessProfileResponse*ns6__CreateAccessProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__CreateAccessProfile(
    struct soap *soap,
    // input parameters:
    struct _ns6__CreateAccessProfile*   ns6__CreateAccessProfile,
    // output parameters:
    struct _ns6__CreateAccessProfileResponse*ns6__CreateAccessProfileResponse
  );
@endcode

*/

//gsoap ns6  service method-protocol:	CreateAccessProfile SOAP
//gsoap ns6  service method-style:	CreateAccessProfile document
//gsoap ns6  service method-encoding:	CreateAccessProfile literal
//gsoap ns6  service method-input-action:	CreateAccessProfile http://www.onvif.org/ver10/accessrules/wsdl/CreateAccessProfile
//gsoap ns6  service method-output-action:	CreateAccessProfile http://www.onvif.org/ver10/accessrules/wsdl/CreateAccessProfileResponse
int __ns6__CreateAccessProfile(
    struct _ns6__CreateAccessProfile*   ns6__CreateAccessProfile,	///< Input parameter
    struct _ns6__CreateAccessProfileResponse*ns6__CreateAccessProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__ModifyAccessProfile                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns6__ModifyAccessProfile" of service binding "AccessRulesBinding".

				This operation will modify the access profile for
the specified access profile token. If several access
				policies specifying different schedules for the
same access point will result in a union of the
				schedule.
				If the device could not store the access profile
information then a fault will be generated.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accessrules/wsdl/ModifyAccessProfile"

  - Addressing input action: "http://www.onvif.org/ver10/accessrules/wsdl/ModifyAccessProfile"

  - Addressing output action: "http://www.onvif.org/ver10/accessrules/wsdl/ModifyAccessProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__ModifyAccessProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns6__ModifyAccessProfile*   ns6__ModifyAccessProfile,
    // output parameters:
    struct _ns6__ModifyAccessProfileResponse*ns6__ModifyAccessProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__ModifyAccessProfile(
    struct soap *soap,
    // input parameters:
    struct _ns6__ModifyAccessProfile*   ns6__ModifyAccessProfile,
    // output parameters:
    struct _ns6__ModifyAccessProfileResponse*ns6__ModifyAccessProfileResponse
  );
@endcode

*/

//gsoap ns6  service method-protocol:	ModifyAccessProfile SOAP
//gsoap ns6  service method-style:	ModifyAccessProfile document
//gsoap ns6  service method-encoding:	ModifyAccessProfile literal
//gsoap ns6  service method-input-action:	ModifyAccessProfile http://www.onvif.org/ver10/accessrules/wsdl/ModifyAccessProfile
//gsoap ns6  service method-output-action:	ModifyAccessProfile http://www.onvif.org/ver10/accessrules/wsdl/ModifyAccessProfileResponse
int __ns6__ModifyAccessProfile(
    struct _ns6__ModifyAccessProfile*   ns6__ModifyAccessProfile,	///< Input parameter
    struct _ns6__ModifyAccessProfileResponse*ns6__ModifyAccessProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__DeleteAccessProfile                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns6__DeleteAccessProfile" of service binding "AccessRulesBinding".

				This operation will delete the specified access
profile.
				If it is associated with one or more entities some
devices may not be able to delete the access profile,
				and consequently a ReferenceInUse fault shall be
generated.
				If the access profile is deleted, all access policies
associated to the access profile will also be
				deleted.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/accessrules/wsdl/DeleteAccessProfile"

  - Addressing input action: "http://www.onvif.org/ver10/accessrules/wsdl/DeleteAccessProfile"

  - Addressing output action: "http://www.onvif.org/ver10/accessrules/wsdl/DeleteAccessProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__DeleteAccessProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns6__DeleteAccessProfile*   ns6__DeleteAccessProfile,
    // output parameters:
    struct _ns6__DeleteAccessProfileResponse*ns6__DeleteAccessProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__DeleteAccessProfile(
    struct soap *soap,
    // input parameters:
    struct _ns6__DeleteAccessProfile*   ns6__DeleteAccessProfile,
    // output parameters:
    struct _ns6__DeleteAccessProfileResponse*ns6__DeleteAccessProfileResponse
  );
@endcode

*/

//gsoap ns6  service method-protocol:	DeleteAccessProfile SOAP
//gsoap ns6  service method-style:	DeleteAccessProfile document
//gsoap ns6  service method-encoding:	DeleteAccessProfile literal
//gsoap ns6  service method-input-action:	DeleteAccessProfile http://www.onvif.org/ver10/accessrules/wsdl/DeleteAccessProfile
//gsoap ns6  service method-output-action:	DeleteAccessProfile http://www.onvif.org/ver10/accessrules/wsdl/DeleteAccessProfileResponse
int __ns6__DeleteAccessProfile(
    struct _ns6__DeleteAccessProfile*   ns6__DeleteAccessProfile,	///< Input parameter
    struct _ns6__DeleteAccessProfileResponse*ns6__DeleteAccessProfileResponse	///< Output parameter
);

/**

@page AccessRulesBinding Binding "AccessRulesBinding"

@section AccessRulesBinding_policy_enablers Policy Enablers of Binding "AccessRulesBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   CredentialBinding                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__GetServiceCapabilities" of service binding "CredentialBinding".
This operation returns the capabilities of the credential service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__GetServiceCapabilities* ns7__GetServiceCapabilities,
    // output parameters:
    struct _ns7__GetServiceCapabilitiesResponse*ns7__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _ns7__GetServiceCapabilities* ns7__GetServiceCapabilities,
    // output parameters:
    struct _ns7__GetServiceCapabilitiesResponse*ns7__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	GetServiceCapabilities SOAP
//gsoap ns7  service method-style:	GetServiceCapabilities document
//gsoap ns7  service method-encoding:	GetServiceCapabilities literal
//gsoap ns7  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/credential/wsdl/GetServiceCapabilities
//gsoap ns7  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/credential/wsdl/GetServiceCapabilitiesResponse
int __ns7__GetServiceCapabilities(
    struct _ns7__GetServiceCapabilities* ns7__GetServiceCapabilities,	///< Input parameter
    struct _ns7__GetServiceCapabilitiesResponse*ns7__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetSupportedFormatTypes                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__GetSupportedFormatTypes" of service binding "CredentialBinding".

				This method returns all the supported format types
of a specified identifier type that is supported by
				the device.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/GetSupportedFormatTypes"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/GetSupportedFormatTypes"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/GetSupportedFormatTypesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetSupportedFormatTypes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__GetSupportedFormatTypes* ns7__GetSupportedFormatTypes,
    // output parameters:
    struct _ns7__GetSupportedFormatTypesResponse*ns7__GetSupportedFormatTypesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetSupportedFormatTypes(
    struct soap *soap,
    // input parameters:
    struct _ns7__GetSupportedFormatTypes* ns7__GetSupportedFormatTypes,
    // output parameters:
    struct _ns7__GetSupportedFormatTypesResponse*ns7__GetSupportedFormatTypesResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	GetSupportedFormatTypes SOAP
//gsoap ns7  service method-style:	GetSupportedFormatTypes document
//gsoap ns7  service method-encoding:	GetSupportedFormatTypes literal
//gsoap ns7  service method-input-action:	GetSupportedFormatTypes http://www.onvif.org/ver10/credential/wsdl/GetSupportedFormatTypes
//gsoap ns7  service method-output-action:	GetSupportedFormatTypes http://www.onvif.org/ver10/credential/wsdl/GetSupportedFormatTypesResponse
int __ns7__GetSupportedFormatTypes(
    struct _ns7__GetSupportedFormatTypes* ns7__GetSupportedFormatTypes,	///< Input parameter
    struct _ns7__GetSupportedFormatTypesResponse*ns7__GetSupportedFormatTypesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetCredentialInfo                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__GetCredentialInfo" of service binding "CredentialBinding".

				This method returns a list of credential info items
matching the given tokens. Only found credentials
				shall be returned i.e., the returned number of elements
can differ from the requested number of
				elements.
				The device shall ignore tokens it cannot resolve
and may return an empty list if there are no
				credentials matching the specified token. If the
number of requested items are greater than MaxLimit, a
				TooManyItems fault shall be returned.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialInfo"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialInfo"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetCredentialInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__GetCredentialInfo*     ns7__GetCredentialInfo,
    // output parameters:
    struct _ns7__GetCredentialInfoResponse*ns7__GetCredentialInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetCredentialInfo(
    struct soap *soap,
    // input parameters:
    struct _ns7__GetCredentialInfo*     ns7__GetCredentialInfo,
    // output parameters:
    struct _ns7__GetCredentialInfoResponse*ns7__GetCredentialInfoResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	GetCredentialInfo SOAP
//gsoap ns7  service method-style:	GetCredentialInfo document
//gsoap ns7  service method-encoding:	GetCredentialInfo literal
//gsoap ns7  service method-input-action:	GetCredentialInfo http://www.onvif.org/ver10/credential/wsdl/GetCredentialInfo
//gsoap ns7  service method-output-action:	GetCredentialInfo http://www.onvif.org/ver10/credential/wsdl/GetCredentialInfoResponse
int __ns7__GetCredentialInfo(
    struct _ns7__GetCredentialInfo*     ns7__GetCredentialInfo,	///< Input parameter
    struct _ns7__GetCredentialInfoResponse*ns7__GetCredentialInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetCredentialInfoList                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__GetCredentialInfoList" of service binding "CredentialBinding".

				This operation requests a list of all credential
info items provided by the device.
				A call to this method shall return a StartReference
when not all data is returned and more data is
				available. The reference shall be valid for retrieving
the next set of data. Please refer section 4.8.3
				in [Access Control Service Specification] for more
details.
				The number of items returned shall not be greater
than the Limit parameter.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialInfoList"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialInfoList"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialInfoListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetCredentialInfoList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__GetCredentialInfoList* ns7__GetCredentialInfoList,
    // output parameters:
    struct _ns7__GetCredentialInfoListResponse*ns7__GetCredentialInfoListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetCredentialInfoList(
    struct soap *soap,
    // input parameters:
    struct _ns7__GetCredentialInfoList* ns7__GetCredentialInfoList,
    // output parameters:
    struct _ns7__GetCredentialInfoListResponse*ns7__GetCredentialInfoListResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	GetCredentialInfoList SOAP
//gsoap ns7  service method-style:	GetCredentialInfoList document
//gsoap ns7  service method-encoding:	GetCredentialInfoList literal
//gsoap ns7  service method-input-action:	GetCredentialInfoList http://www.onvif.org/ver10/credential/wsdl/GetCredentialInfoList
//gsoap ns7  service method-output-action:	GetCredentialInfoList http://www.onvif.org/ver10/credential/wsdl/GetCredentialInfoListResponse
int __ns7__GetCredentialInfoList(
    struct _ns7__GetCredentialInfoList* ns7__GetCredentialInfoList,	///< Input parameter
    struct _ns7__GetCredentialInfoListResponse*ns7__GetCredentialInfoListResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetCredentials                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__GetCredentials" of service binding "CredentialBinding".

				This operation returns the specified credential
items matching the given tokens.
				The device shall ignore tokens it cannot resolve
and shall return an empty list if there are no items
				matching specified tokens. The device shall not
return a fault in this case.
				If the number of requested items is greater than
MaxLimit, a TooManyItems fault shall be returned.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentials"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentials"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetCredentials(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__GetCredentials*        ns7__GetCredentials,
    // output parameters:
    struct _ns7__GetCredentialsResponse*ns7__GetCredentialsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetCredentials(
    struct soap *soap,
    // input parameters:
    struct _ns7__GetCredentials*        ns7__GetCredentials,
    // output parameters:
    struct _ns7__GetCredentialsResponse*ns7__GetCredentialsResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	GetCredentials SOAP
//gsoap ns7  service method-style:	GetCredentials document
//gsoap ns7  service method-encoding:	GetCredentials literal
//gsoap ns7  service method-input-action:	GetCredentials http://www.onvif.org/ver10/credential/wsdl/GetCredentials
//gsoap ns7  service method-output-action:	GetCredentials http://www.onvif.org/ver10/credential/wsdl/GetCredentialsResponse
int __ns7__GetCredentials(
    struct _ns7__GetCredentials*        ns7__GetCredentials,	///< Input parameter
    struct _ns7__GetCredentialsResponse*ns7__GetCredentialsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetCredentialList                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__GetCredentialList" of service binding "CredentialBinding".

				This operation requests a list of all credential
items provided by the device.
				A call to this method shall return a StartReference
when not all data is returned and more data is
				available. The reference shall be valid for retrieving
the next set of data. Please refer section 4.8.3
				in [Access Control Service Specification] for more
details. The number of items returned shall not be
				greater the Limit parameter.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialList"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialList"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetCredentialList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__GetCredentialList*     ns7__GetCredentialList,
    // output parameters:
    struct _ns7__GetCredentialListResponse*ns7__GetCredentialListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetCredentialList(
    struct soap *soap,
    // input parameters:
    struct _ns7__GetCredentialList*     ns7__GetCredentialList,
    // output parameters:
    struct _ns7__GetCredentialListResponse*ns7__GetCredentialListResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	GetCredentialList SOAP
//gsoap ns7  service method-style:	GetCredentialList document
//gsoap ns7  service method-encoding:	GetCredentialList literal
//gsoap ns7  service method-input-action:	GetCredentialList http://www.onvif.org/ver10/credential/wsdl/GetCredentialList
//gsoap ns7  service method-output-action:	GetCredentialList http://www.onvif.org/ver10/credential/wsdl/GetCredentialListResponse
int __ns7__GetCredentialList(
    struct _ns7__GetCredentialList*     ns7__GetCredentialList,	///< Input parameter
    struct _ns7__GetCredentialListResponse*ns7__GetCredentialListResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__CreateCredential                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__CreateCredential" of service binding "CredentialBinding".

				This operation creates a credential. A call to this
method takes a credential structure and a credential
				state structure as input parameters. The credential
state can be created in disabled or enabled state.
				The token field of the credential shall be empty,
the device shall allocate a token for the credential.
				The allocated token shall be returned in the response.
If the client sends any value in the token field,
				the device shall return InvalidArgVal as generic
fault code.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/CreateCredential"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/CreateCredential"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/CreateCredentialResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__CreateCredential(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__CreateCredential*      ns7__CreateCredential,
    // output parameters:
    struct _ns7__CreateCredentialResponse*ns7__CreateCredentialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__CreateCredential(
    struct soap *soap,
    // input parameters:
    struct _ns7__CreateCredential*      ns7__CreateCredential,
    // output parameters:
    struct _ns7__CreateCredentialResponse*ns7__CreateCredentialResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	CreateCredential SOAP
//gsoap ns7  service method-style:	CreateCredential document
//gsoap ns7  service method-encoding:	CreateCredential literal
//gsoap ns7  service method-input-action:	CreateCredential http://www.onvif.org/ver10/credential/wsdl/CreateCredential
//gsoap ns7  service method-output-action:	CreateCredential http://www.onvif.org/ver10/credential/wsdl/CreateCredentialResponse
int __ns7__CreateCredential(
    struct _ns7__CreateCredential*      ns7__CreateCredential,	///< Input parameter
    struct _ns7__CreateCredentialResponse*ns7__CreateCredentialResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__ModifyCredential                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__ModifyCredential" of service binding "CredentialBinding".

				This operation modifies the specified credential.
When an existing credential is modified, the state is
				not modified explicitly. The only way for a client
to change the state of a credential is to explicitly
				call the EnableCredential, DisableCredential or
ResetAntipassback command.
				All existing credential identifiers and credential
access profiles are removed and replaced with the
				specified entities.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/ModifyCredential"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/ModifyCredential"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/ModifyCredentialResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__ModifyCredential(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__ModifyCredential*      ns7__ModifyCredential,
    // output parameters:
    struct _ns7__ModifyCredentialResponse*ns7__ModifyCredentialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__ModifyCredential(
    struct soap *soap,
    // input parameters:
    struct _ns7__ModifyCredential*      ns7__ModifyCredential,
    // output parameters:
    struct _ns7__ModifyCredentialResponse*ns7__ModifyCredentialResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	ModifyCredential SOAP
//gsoap ns7  service method-style:	ModifyCredential document
//gsoap ns7  service method-encoding:	ModifyCredential literal
//gsoap ns7  service method-input-action:	ModifyCredential http://www.onvif.org/ver10/credential/wsdl/ModifyCredential
//gsoap ns7  service method-output-action:	ModifyCredential http://www.onvif.org/ver10/credential/wsdl/ModifyCredentialResponse
int __ns7__ModifyCredential(
    struct _ns7__ModifyCredential*      ns7__ModifyCredential,	///< Input parameter
    struct _ns7__ModifyCredentialResponse*ns7__ModifyCredentialResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__DeleteCredential                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__DeleteCredential" of service binding "CredentialBinding".

				This method deletes the specified credential.
				If it is referred to by another entity some devices
may not be able to delete the credential, and
				consequently a ReferenceInUse fault shall be generated.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/DeleteCredential"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/DeleteCredential"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__DeleteCredential(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__DeleteCredential*      ns7__DeleteCredential,
    // output parameters:
    struct _ns7__DeleteCredentialResponse*ns7__DeleteCredentialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__DeleteCredential(
    struct soap *soap,
    // input parameters:
    struct _ns7__DeleteCredential*      ns7__DeleteCredential,
    // output parameters:
    struct _ns7__DeleteCredentialResponse*ns7__DeleteCredentialResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	DeleteCredential SOAP
//gsoap ns7  service method-style:	DeleteCredential document
//gsoap ns7  service method-encoding:	DeleteCredential literal
//gsoap ns7  service method-input-action:	DeleteCredential http://www.onvif.org/ver10/credential/wsdl/DeleteCredential
//gsoap ns7  service method-output-action:	DeleteCredential http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialResponse
int __ns7__DeleteCredential(
    struct _ns7__DeleteCredential*      ns7__DeleteCredential,	///< Input parameter
    struct _ns7__DeleteCredentialResponse*ns7__DeleteCredentialResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetCredentialState                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__GetCredentialState" of service binding "CredentialBinding".

				This method returns the state for the specified
credential.
				If the capability ResetAntipassbackSupported is
set to true, then the device shall supply the
				anti-passback state in the returned credential state
structure.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialState"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialState"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetCredentialState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__GetCredentialState*    ns7__GetCredentialState,
    // output parameters:
    struct _ns7__GetCredentialStateResponse*ns7__GetCredentialStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetCredentialState(
    struct soap *soap,
    // input parameters:
    struct _ns7__GetCredentialState*    ns7__GetCredentialState,
    // output parameters:
    struct _ns7__GetCredentialStateResponse*ns7__GetCredentialStateResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	GetCredentialState SOAP
//gsoap ns7  service method-style:	GetCredentialState document
//gsoap ns7  service method-encoding:	GetCredentialState literal
//gsoap ns7  service method-input-action:	GetCredentialState http://www.onvif.org/ver10/credential/wsdl/GetCredentialState
//gsoap ns7  service method-output-action:	GetCredentialState http://www.onvif.org/ver10/credential/wsdl/GetCredentialStateResponse
int __ns7__GetCredentialState(
    struct _ns7__GetCredentialState*    ns7__GetCredentialState,	///< Input parameter
    struct _ns7__GetCredentialStateResponse*ns7__GetCredentialStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__EnableCredential                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__EnableCredential" of service binding "CredentialBinding".

				This method is used to enable a credential.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/EnableCredential"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/EnableCredential"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/EnableCredentialResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__EnableCredential(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__EnableCredential*      ns7__EnableCredential,
    // output parameters:
    struct _ns7__EnableCredentialResponse*ns7__EnableCredentialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__EnableCredential(
    struct soap *soap,
    // input parameters:
    struct _ns7__EnableCredential*      ns7__EnableCredential,
    // output parameters:
    struct _ns7__EnableCredentialResponse*ns7__EnableCredentialResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	EnableCredential SOAP
//gsoap ns7  service method-style:	EnableCredential document
//gsoap ns7  service method-encoding:	EnableCredential literal
//gsoap ns7  service method-input-action:	EnableCredential http://www.onvif.org/ver10/credential/wsdl/EnableCredential
//gsoap ns7  service method-output-action:	EnableCredential http://www.onvif.org/ver10/credential/wsdl/EnableCredentialResponse
int __ns7__EnableCredential(
    struct _ns7__EnableCredential*      ns7__EnableCredential,	///< Input parameter
    struct _ns7__EnableCredentialResponse*ns7__EnableCredentialResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__DisableCredential                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__DisableCredential" of service binding "CredentialBinding".

				This method is used to disable a credential.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/DisableCredential"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/DisableCredential"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/DisableCredentialResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__DisableCredential(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__DisableCredential*     ns7__DisableCredential,
    // output parameters:
    struct _ns7__DisableCredentialResponse*ns7__DisableCredentialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__DisableCredential(
    struct soap *soap,
    // input parameters:
    struct _ns7__DisableCredential*     ns7__DisableCredential,
    // output parameters:
    struct _ns7__DisableCredentialResponse*ns7__DisableCredentialResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	DisableCredential SOAP
//gsoap ns7  service method-style:	DisableCredential document
//gsoap ns7  service method-encoding:	DisableCredential literal
//gsoap ns7  service method-input-action:	DisableCredential http://www.onvif.org/ver10/credential/wsdl/DisableCredential
//gsoap ns7  service method-output-action:	DisableCredential http://www.onvif.org/ver10/credential/wsdl/DisableCredentialResponse
int __ns7__DisableCredential(
    struct _ns7__DisableCredential*     ns7__DisableCredential,	///< Input parameter
    struct _ns7__DisableCredentialResponse*ns7__DisableCredentialResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__ResetAntipassbackViolation                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__ResetAntipassbackViolation" of service binding "CredentialBinding".

				This method is used to reset anti-passback violations
for a specified credential.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/ResetAntipassbackViolation"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/ResetAntipassbackViolation"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/ResetAntipassbackViolationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__ResetAntipassbackViolation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__ResetAntipassbackViolation* ns7__ResetAntipassbackViolation,
    // output parameters:
    struct _ns7__ResetAntipassbackViolationResponse*ns7__ResetAntipassbackViolationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__ResetAntipassbackViolation(
    struct soap *soap,
    // input parameters:
    struct _ns7__ResetAntipassbackViolation* ns7__ResetAntipassbackViolation,
    // output parameters:
    struct _ns7__ResetAntipassbackViolationResponse*ns7__ResetAntipassbackViolationResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	ResetAntipassbackViolation SOAP
//gsoap ns7  service method-style:	ResetAntipassbackViolation document
//gsoap ns7  service method-encoding:	ResetAntipassbackViolation literal
//gsoap ns7  service method-input-action:	ResetAntipassbackViolation http://www.onvif.org/ver10/credential/wsdl/ResetAntipassbackViolation
//gsoap ns7  service method-output-action:	ResetAntipassbackViolation http://www.onvif.org/ver10/credential/wsdl/ResetAntipassbackViolationResponse
int __ns7__ResetAntipassbackViolation(
    struct _ns7__ResetAntipassbackViolation* ns7__ResetAntipassbackViolation,	///< Input parameter
    struct _ns7__ResetAntipassbackViolationResponse*ns7__ResetAntipassbackViolationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetCredentialIdentifiers                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__GetCredentialIdentifiers" of service binding "CredentialBinding".

				This method returns all the credential identifiers
for a credential.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialIdentifiers"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialIdentifiers"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialIdentifiersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetCredentialIdentifiers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__GetCredentialIdentifiers* ns7__GetCredentialIdentifiers,
    // output parameters:
    struct _ns7__GetCredentialIdentifiersResponse*ns7__GetCredentialIdentifiersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetCredentialIdentifiers(
    struct soap *soap,
    // input parameters:
    struct _ns7__GetCredentialIdentifiers* ns7__GetCredentialIdentifiers,
    // output parameters:
    struct _ns7__GetCredentialIdentifiersResponse*ns7__GetCredentialIdentifiersResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	GetCredentialIdentifiers SOAP
//gsoap ns7  service method-style:	GetCredentialIdentifiers document
//gsoap ns7  service method-encoding:	GetCredentialIdentifiers literal
//gsoap ns7  service method-input-action:	GetCredentialIdentifiers http://www.onvif.org/ver10/credential/wsdl/GetCredentialIdentifiers
//gsoap ns7  service method-output-action:	GetCredentialIdentifiers http://www.onvif.org/ver10/credential/wsdl/GetCredentialIdentifiersResponse
int __ns7__GetCredentialIdentifiers(
    struct _ns7__GetCredentialIdentifiers* ns7__GetCredentialIdentifiers,	///< Input parameter
    struct _ns7__GetCredentialIdentifiersResponse*ns7__GetCredentialIdentifiersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__SetCredentialIdentifier                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__SetCredentialIdentifier" of service binding "CredentialBinding".

				This operation creates or updates a credential identifier
for a credential.
				If the type of specified credential identifier already
exists, the current credential identifier of that
				type is replaced. Otherwise the credential identifier
is added.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/SetCredentialIdentifier"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/SetCredentialIdentifier"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/SetCredentialIdentifierResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__SetCredentialIdentifier(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__SetCredentialIdentifier* ns7__SetCredentialIdentifier,
    // output parameters:
    struct _ns7__SetCredentialIdentifierResponse*ns7__SetCredentialIdentifierResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__SetCredentialIdentifier(
    struct soap *soap,
    // input parameters:
    struct _ns7__SetCredentialIdentifier* ns7__SetCredentialIdentifier,
    // output parameters:
    struct _ns7__SetCredentialIdentifierResponse*ns7__SetCredentialIdentifierResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	SetCredentialIdentifier SOAP
//gsoap ns7  service method-style:	SetCredentialIdentifier document
//gsoap ns7  service method-encoding:	SetCredentialIdentifier literal
//gsoap ns7  service method-input-action:	SetCredentialIdentifier http://www.onvif.org/ver10/credential/wsdl/SetCredentialIdentifier
//gsoap ns7  service method-output-action:	SetCredentialIdentifier http://www.onvif.org/ver10/credential/wsdl/SetCredentialIdentifierResponse
int __ns7__SetCredentialIdentifier(
    struct _ns7__SetCredentialIdentifier* ns7__SetCredentialIdentifier,	///< Input parameter
    struct _ns7__SetCredentialIdentifierResponse*ns7__SetCredentialIdentifierResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__DeleteCredentialIdentifier                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__DeleteCredentialIdentifier" of service binding "CredentialBinding".

				This method deletes all the identifier values for
the specified type. However, if the identifier type
				name doesnt exist in the device, it will be silently
ignored without any response.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialIdentifier"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialIdentifier"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialIdentifierResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__DeleteCredentialIdentifier(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__DeleteCredentialIdentifier* ns7__DeleteCredentialIdentifier,
    // output parameters:
    struct _ns7__DeleteCredentialIdentifierResponse*ns7__DeleteCredentialIdentifierResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__DeleteCredentialIdentifier(
    struct soap *soap,
    // input parameters:
    struct _ns7__DeleteCredentialIdentifier* ns7__DeleteCredentialIdentifier,
    // output parameters:
    struct _ns7__DeleteCredentialIdentifierResponse*ns7__DeleteCredentialIdentifierResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	DeleteCredentialIdentifier SOAP
//gsoap ns7  service method-style:	DeleteCredentialIdentifier document
//gsoap ns7  service method-encoding:	DeleteCredentialIdentifier literal
//gsoap ns7  service method-input-action:	DeleteCredentialIdentifier http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialIdentifier
//gsoap ns7  service method-output-action:	DeleteCredentialIdentifier http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialIdentifierResponse
int __ns7__DeleteCredentialIdentifier(
    struct _ns7__DeleteCredentialIdentifier* ns7__DeleteCredentialIdentifier,	///< Input parameter
    struct _ns7__DeleteCredentialIdentifierResponse*ns7__DeleteCredentialIdentifierResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetCredentialAccessProfiles                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__GetCredentialAccessProfiles" of service binding "CredentialBinding".

				This method returns all the credential access profiles
for a credential.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialAccessProfiles"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialAccessProfiles"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/GetCredentialAccessProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetCredentialAccessProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__GetCredentialAccessProfiles* ns7__GetCredentialAccessProfiles,
    // output parameters:
    struct _ns7__GetCredentialAccessProfilesResponse*ns7__GetCredentialAccessProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetCredentialAccessProfiles(
    struct soap *soap,
    // input parameters:
    struct _ns7__GetCredentialAccessProfiles* ns7__GetCredentialAccessProfiles,
    // output parameters:
    struct _ns7__GetCredentialAccessProfilesResponse*ns7__GetCredentialAccessProfilesResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	GetCredentialAccessProfiles SOAP
//gsoap ns7  service method-style:	GetCredentialAccessProfiles document
//gsoap ns7  service method-encoding:	GetCredentialAccessProfiles literal
//gsoap ns7  service method-input-action:	GetCredentialAccessProfiles http://www.onvif.org/ver10/credential/wsdl/GetCredentialAccessProfiles
//gsoap ns7  service method-output-action:	GetCredentialAccessProfiles http://www.onvif.org/ver10/credential/wsdl/GetCredentialAccessProfilesResponse
int __ns7__GetCredentialAccessProfiles(
    struct _ns7__GetCredentialAccessProfiles* ns7__GetCredentialAccessProfiles,	///< Input parameter
    struct _ns7__GetCredentialAccessProfilesResponse*ns7__GetCredentialAccessProfilesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__SetCredentialAccessProfiles                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__SetCredentialAccessProfiles" of service binding "CredentialBinding".

				This operation add or updates the credential access
profiles for a credential.
				The device shall update the credential access profile
if the access profile token in the specified
				credential access profile matches. Otherwise the
credential access profile is added.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/SetCredentialAccessProfiles"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/SetCredentialAccessProfiles"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/SetCredentialAccessProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__SetCredentialAccessProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__SetCredentialAccessProfiles* ns7__SetCredentialAccessProfiles,
    // output parameters:
    struct _ns7__SetCredentialAccessProfilesResponse*ns7__SetCredentialAccessProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__SetCredentialAccessProfiles(
    struct soap *soap,
    // input parameters:
    struct _ns7__SetCredentialAccessProfiles* ns7__SetCredentialAccessProfiles,
    // output parameters:
    struct _ns7__SetCredentialAccessProfilesResponse*ns7__SetCredentialAccessProfilesResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	SetCredentialAccessProfiles SOAP
//gsoap ns7  service method-style:	SetCredentialAccessProfiles document
//gsoap ns7  service method-encoding:	SetCredentialAccessProfiles literal
//gsoap ns7  service method-input-action:	SetCredentialAccessProfiles http://www.onvif.org/ver10/credential/wsdl/SetCredentialAccessProfiles
//gsoap ns7  service method-output-action:	SetCredentialAccessProfiles http://www.onvif.org/ver10/credential/wsdl/SetCredentialAccessProfilesResponse
int __ns7__SetCredentialAccessProfiles(
    struct _ns7__SetCredentialAccessProfiles* ns7__SetCredentialAccessProfiles,	///< Input parameter
    struct _ns7__SetCredentialAccessProfilesResponse*ns7__SetCredentialAccessProfilesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__DeleteCredentialAccessProfiles                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns7__DeleteCredentialAccessProfiles" of service binding "CredentialBinding".

				This method deletes all the credential access profiles
for the specified token.
				However, if no matching credential access profiles
are found, the corresponding access profile tokens
				are silently ignored without any response.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialAccessProfiles"

  - Addressing input action: "http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialAccessProfiles"

  - Addressing output action: "http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialAccessProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__DeleteCredentialAccessProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns7__DeleteCredentialAccessProfiles* ns7__DeleteCredentialAccessProfiles,
    // output parameters:
    struct _ns7__DeleteCredentialAccessProfilesResponse*ns7__DeleteCredentialAccessProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__DeleteCredentialAccessProfiles(
    struct soap *soap,
    // input parameters:
    struct _ns7__DeleteCredentialAccessProfiles* ns7__DeleteCredentialAccessProfiles,
    // output parameters:
    struct _ns7__DeleteCredentialAccessProfilesResponse*ns7__DeleteCredentialAccessProfilesResponse
  );
@endcode

*/

//gsoap ns7  service method-protocol:	DeleteCredentialAccessProfiles SOAP
//gsoap ns7  service method-style:	DeleteCredentialAccessProfiles document
//gsoap ns7  service method-encoding:	DeleteCredentialAccessProfiles literal
//gsoap ns7  service method-input-action:	DeleteCredentialAccessProfiles http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialAccessProfiles
//gsoap ns7  service method-output-action:	DeleteCredentialAccessProfiles http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialAccessProfilesResponse
int __ns7__DeleteCredentialAccessProfiles(
    struct _ns7__DeleteCredentialAccessProfiles* ns7__DeleteCredentialAccessProfiles,	///< Input parameter
    struct _ns7__DeleteCredentialAccessProfilesResponse*ns7__DeleteCredentialAccessProfilesResponse	///< Output parameter
);

/**

@page CredentialBinding Binding "CredentialBinding"

@section CredentialBinding_policy_enablers Policy Enablers of Binding "CredentialBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ScheduleBinding                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__GetServiceCapabilities" of service binding "ScheduleBinding".

				This operation returns the capabilities of the schedule
service.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__GetServiceCapabilities* ns8__GetServiceCapabilities,
    // output parameters:
    struct _ns8__GetServiceCapabilitiesResponse*ns8__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _ns8__GetServiceCapabilities* ns8__GetServiceCapabilities,
    // output parameters:
    struct _ns8__GetServiceCapabilitiesResponse*ns8__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	GetServiceCapabilities SOAP
//gsoap ns8  service method-style:	GetServiceCapabilities document
//gsoap ns8  service method-encoding:	GetServiceCapabilities literal
//gsoap ns8  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/schedule/wsdl/GetServiceCapabilities
//gsoap ns8  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/schedule/wsdl/GetServiceCapabilitiesResponse
int __ns8__GetServiceCapabilities(
    struct _ns8__GetServiceCapabilities* ns8__GetServiceCapabilities,	///< Input parameter
    struct _ns8__GetServiceCapabilitiesResponse*ns8__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetScheduleState                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__GetScheduleState" of service binding "ScheduleBinding".

				This operation requests the ScheduleState for the
schedule instance specified by the given token.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleState"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleState"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetScheduleState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__GetScheduleState*      ns8__GetScheduleState,
    // output parameters:
    struct _ns8__GetScheduleStateResponse*ns8__GetScheduleStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetScheduleState(
    struct soap *soap,
    // input parameters:
    struct _ns8__GetScheduleState*      ns8__GetScheduleState,
    // output parameters:
    struct _ns8__GetScheduleStateResponse*ns8__GetScheduleStateResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	GetScheduleState SOAP
//gsoap ns8  service method-style:	GetScheduleState document
//gsoap ns8  service method-encoding:	GetScheduleState literal
//gsoap ns8  service method-input-action:	GetScheduleState http://www.onvif.org/ver10/schedule/wsdl/GetScheduleState
//gsoap ns8  service method-output-action:	GetScheduleState http://www.onvif.org/ver10/schedule/wsdl/GetScheduleStateResponse
int __ns8__GetScheduleState(
    struct _ns8__GetScheduleState*      ns8__GetScheduleState,	///< Input parameter
    struct _ns8__GetScheduleStateResponse*ns8__GetScheduleStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetScheduleInfo                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__GetScheduleInfo" of service binding "ScheduleBinding".

				This method returns a list of schedule info items,
specified in the request.
				Only found schedules shall be returned, i.e., the
returned numbers of elements can
				differ from the requested element.
				The device shall ignore tokens it cannot resolve
and shall return an empty list if
				there are no items matching the specified tokens.
				If the number of requested items is greater than
MaxLimit, a TooManyItems fault shall be returned.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfo"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfo"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetScheduleInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__GetScheduleInfo*       ns8__GetScheduleInfo,
    // output parameters:
    struct _ns8__GetScheduleInfoResponse*ns8__GetScheduleInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetScheduleInfo(
    struct soap *soap,
    // input parameters:
    struct _ns8__GetScheduleInfo*       ns8__GetScheduleInfo,
    // output parameters:
    struct _ns8__GetScheduleInfoResponse*ns8__GetScheduleInfoResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	GetScheduleInfo SOAP
//gsoap ns8  service method-style:	GetScheduleInfo document
//gsoap ns8  service method-encoding:	GetScheduleInfo literal
//gsoap ns8  service method-input-action:	GetScheduleInfo http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfo
//gsoap ns8  service method-output-action:	GetScheduleInfo http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfoResponse
int __ns8__GetScheduleInfo(
    struct _ns8__GetScheduleInfo*       ns8__GetScheduleInfo,	///< Input parameter
    struct _ns8__GetScheduleInfoResponse*ns8__GetScheduleInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetScheduleInfoList                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__GetScheduleInfoList" of service binding "ScheduleBinding".

				This operation requests a list of all of ScheduleInfo
items provided by the device.
				A call to this method shall return a StartReference
when not all data is returned
				and more data is available. The reference shall
be valid for retrieving the next set of data.
				Please refer Access Control Service Specification
for more details.
				The number of items returned shall not be greater
the Limit parameter.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfoList"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfoList"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfoListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetScheduleInfoList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__GetScheduleInfoList*   ns8__GetScheduleInfoList,
    // output parameters:
    struct _ns8__GetScheduleInfoListResponse*ns8__GetScheduleInfoListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetScheduleInfoList(
    struct soap *soap,
    // input parameters:
    struct _ns8__GetScheduleInfoList*   ns8__GetScheduleInfoList,
    // output parameters:
    struct _ns8__GetScheduleInfoListResponse*ns8__GetScheduleInfoListResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	GetScheduleInfoList SOAP
//gsoap ns8  service method-style:	GetScheduleInfoList document
//gsoap ns8  service method-encoding:	GetScheduleInfoList literal
//gsoap ns8  service method-input-action:	GetScheduleInfoList http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfoList
//gsoap ns8  service method-output-action:	GetScheduleInfoList http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfoListResponse
int __ns8__GetScheduleInfoList(
    struct _ns8__GetScheduleInfoList*   ns8__GetScheduleInfoList,	///< Input parameter
    struct _ns8__GetScheduleInfoListResponse*ns8__GetScheduleInfoListResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetSchedules                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__GetSchedules" of service binding "ScheduleBinding".

				This operation returns the specified schedule item
matching the given tokens.
				The device shall ignore tokens it cannot resolve
and shall return an empty list
				if there are no items matching the specified tokens.
				If the number of requested items is greater than
MaxLimit, a TooManyItems fault shall be returned
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/GetSchedules"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/GetSchedules"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/GetSchedulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetSchedules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__GetSchedules*          ns8__GetSchedules,
    // output parameters:
    struct _ns8__GetSchedulesResponse  *ns8__GetSchedulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetSchedules(
    struct soap *soap,
    // input parameters:
    struct _ns8__GetSchedules*          ns8__GetSchedules,
    // output parameters:
    struct _ns8__GetSchedulesResponse  *ns8__GetSchedulesResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	GetSchedules SOAP
//gsoap ns8  service method-style:	GetSchedules document
//gsoap ns8  service method-encoding:	GetSchedules literal
//gsoap ns8  service method-input-action:	GetSchedules http://www.onvif.org/ver10/schedule/wsdl/GetSchedules
//gsoap ns8  service method-output-action:	GetSchedules http://www.onvif.org/ver10/schedule/wsdl/GetSchedulesResponse
int __ns8__GetSchedules(
    struct _ns8__GetSchedules*          ns8__GetSchedules,	///< Input parameter
    struct _ns8__GetSchedulesResponse  *ns8__GetSchedulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetScheduleList                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__GetScheduleList" of service binding "ScheduleBinding".

				This operation requests a list of all of Schedule
items provided by the device.
				A call to this method shall return a StartReference
when not all data is returned
				and more data is available. The reference shall
be valid for retrieving the next set of data.
				Please refer Access Control Service Specification
for more details.
				The number of items returned shall not be greater
the Limit parameter.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleList"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleList"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetScheduleList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__GetScheduleList*       ns8__GetScheduleList,
    // output parameters:
    struct _ns8__GetScheduleListResponse*ns8__GetScheduleListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetScheduleList(
    struct soap *soap,
    // input parameters:
    struct _ns8__GetScheduleList*       ns8__GetScheduleList,
    // output parameters:
    struct _ns8__GetScheduleListResponse*ns8__GetScheduleListResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	GetScheduleList SOAP
//gsoap ns8  service method-style:	GetScheduleList document
//gsoap ns8  service method-encoding:	GetScheduleList literal
//gsoap ns8  service method-input-action:	GetScheduleList http://www.onvif.org/ver10/schedule/wsdl/GetScheduleList
//gsoap ns8  service method-output-action:	GetScheduleList http://www.onvif.org/ver10/schedule/wsdl/GetScheduleListResponse
int __ns8__GetScheduleList(
    struct _ns8__GetScheduleList*       ns8__GetScheduleList,	///< Input parameter
    struct _ns8__GetScheduleListResponse*ns8__GetScheduleListResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__CreateSchedule                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__CreateSchedule" of service binding "ScheduleBinding".

				This operation creates the specified schedule. The
token field of the schedule structure
				shall be empty, the device shall allocate a token
for the schedule. The allocated token
				shall be returned in the response. If the client
sends any value in the token field,
				the device shall return InvalidArgVal as generic
fault code.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/CreateSchedule"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/CreateSchedule"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/CreateScheduleResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__CreateSchedule(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__CreateSchedule*        ns8__CreateSchedule,
    // output parameters:
    struct _ns8__CreateScheduleResponse*ns8__CreateScheduleResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__CreateSchedule(
    struct soap *soap,
    // input parameters:
    struct _ns8__CreateSchedule*        ns8__CreateSchedule,
    // output parameters:
    struct _ns8__CreateScheduleResponse*ns8__CreateScheduleResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	CreateSchedule SOAP
//gsoap ns8  service method-style:	CreateSchedule document
//gsoap ns8  service method-encoding:	CreateSchedule literal
//gsoap ns8  service method-input-action:	CreateSchedule http://www.onvif.org/ver10/schedule/wsdl/CreateSchedule
//gsoap ns8  service method-output-action:	CreateSchedule http://www.onvif.org/ver10/schedule/wsdl/CreateScheduleResponse
int __ns8__CreateSchedule(
    struct _ns8__CreateSchedule*        ns8__CreateSchedule,	///< Input parameter
    struct _ns8__CreateScheduleResponse*ns8__CreateScheduleResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__ModifySchedule                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__ModifySchedule" of service binding "ScheduleBinding".

				This operation modifies or updates the specified
schedule.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/ModifySchedule"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/ModifySchedule"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/ModifyScheduleResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__ModifySchedule(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__ModifySchedule*        ns8__ModifySchedule,
    // output parameters:
    struct _ns8__ModifyScheduleResponse*ns8__ModifyScheduleResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__ModifySchedule(
    struct soap *soap,
    // input parameters:
    struct _ns8__ModifySchedule*        ns8__ModifySchedule,
    // output parameters:
    struct _ns8__ModifyScheduleResponse*ns8__ModifyScheduleResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	ModifySchedule SOAP
//gsoap ns8  service method-style:	ModifySchedule document
//gsoap ns8  service method-encoding:	ModifySchedule literal
//gsoap ns8  service method-input-action:	ModifySchedule http://www.onvif.org/ver10/schedule/wsdl/ModifySchedule
//gsoap ns8  service method-output-action:	ModifySchedule http://www.onvif.org/ver10/schedule/wsdl/ModifyScheduleResponse
int __ns8__ModifySchedule(
    struct _ns8__ModifySchedule*        ns8__ModifySchedule,	///< Input parameter
    struct _ns8__ModifyScheduleResponse*ns8__ModifyScheduleResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__DeleteSchedule                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__DeleteSchedule" of service binding "ScheduleBinding".

				This operation will delete the specified schedule.
				If it is associated with one or more entities some
devices may not be able to delete the schedule,
				and consequently a ReferenceInUse fault shall be
generated.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/DeleteSchedule"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/DeleteSchedule"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/DeleteScheduleResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__DeleteSchedule(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__DeleteSchedule*        ns8__DeleteSchedule,
    // output parameters:
    struct _ns8__DeleteScheduleResponse*ns8__DeleteScheduleResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__DeleteSchedule(
    struct soap *soap,
    // input parameters:
    struct _ns8__DeleteSchedule*        ns8__DeleteSchedule,
    // output parameters:
    struct _ns8__DeleteScheduleResponse*ns8__DeleteScheduleResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	DeleteSchedule SOAP
//gsoap ns8  service method-style:	DeleteSchedule document
//gsoap ns8  service method-encoding:	DeleteSchedule literal
//gsoap ns8  service method-input-action:	DeleteSchedule http://www.onvif.org/ver10/schedule/wsdl/DeleteSchedule
//gsoap ns8  service method-output-action:	DeleteSchedule http://www.onvif.org/ver10/schedule/wsdl/DeleteScheduleResponse
int __ns8__DeleteSchedule(
    struct _ns8__DeleteSchedule*        ns8__DeleteSchedule,	///< Input parameter
    struct _ns8__DeleteScheduleResponse*ns8__DeleteScheduleResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetSpecialDayGroupInfo                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__GetSpecialDayGroupInfo" of service binding "ScheduleBinding".

				This operation requests a list of SpecialDayGroupInfo
items matching the given tokens.
				The device shall ignore tokens it cannot resolve
and shall return an empty list if
				there are no items matching specified tokens. The
device shall not return a fault in this case.
				If the number of requested items is greater than
MaxLimit, a TooManyItems fault shall be returned.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfo"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfo"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetSpecialDayGroupInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__GetSpecialDayGroupInfo* ns8__GetSpecialDayGroupInfo,
    // output parameters:
    struct _ns8__GetSpecialDayGroupInfoResponse*ns8__GetSpecialDayGroupInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetSpecialDayGroupInfo(
    struct soap *soap,
    // input parameters:
    struct _ns8__GetSpecialDayGroupInfo* ns8__GetSpecialDayGroupInfo,
    // output parameters:
    struct _ns8__GetSpecialDayGroupInfoResponse*ns8__GetSpecialDayGroupInfoResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	GetSpecialDayGroupInfo SOAP
//gsoap ns8  service method-style:	GetSpecialDayGroupInfo document
//gsoap ns8  service method-encoding:	GetSpecialDayGroupInfo literal
//gsoap ns8  service method-input-action:	GetSpecialDayGroupInfo http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfo
//gsoap ns8  service method-output-action:	GetSpecialDayGroupInfo http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfoResponse
int __ns8__GetSpecialDayGroupInfo(
    struct _ns8__GetSpecialDayGroupInfo* ns8__GetSpecialDayGroupInfo,	///< Input parameter
    struct _ns8__GetSpecialDayGroupInfoResponse*ns8__GetSpecialDayGroupInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetSpecialDayGroupInfoList                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__GetSpecialDayGroupInfoList" of service binding "ScheduleBinding".

				This operation requests a list of all of SpecialDayGroupInfo
items provided by the device.
				A call to this method shall return a StartReference
when not all data is returned and
				more data is available. The reference shall be valid
for retrieving the next set of data.
				The number of items returned shall not be greater
than Limit parameter.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfoList"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfoList"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfoListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetSpecialDayGroupInfoList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__GetSpecialDayGroupInfoList* ns8__GetSpecialDayGroupInfoList,
    // output parameters:
    struct _ns8__GetSpecialDayGroupInfoListResponse*ns8__GetSpecialDayGroupInfoListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetSpecialDayGroupInfoList(
    struct soap *soap,
    // input parameters:
    struct _ns8__GetSpecialDayGroupInfoList* ns8__GetSpecialDayGroupInfoList,
    // output parameters:
    struct _ns8__GetSpecialDayGroupInfoListResponse*ns8__GetSpecialDayGroupInfoListResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	GetSpecialDayGroupInfoList SOAP
//gsoap ns8  service method-style:	GetSpecialDayGroupInfoList document
//gsoap ns8  service method-encoding:	GetSpecialDayGroupInfoList literal
//gsoap ns8  service method-input-action:	GetSpecialDayGroupInfoList http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfoList
//gsoap ns8  service method-output-action:	GetSpecialDayGroupInfoList http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfoListResponse
int __ns8__GetSpecialDayGroupInfoList(
    struct _ns8__GetSpecialDayGroupInfoList* ns8__GetSpecialDayGroupInfoList,	///< Input parameter
    struct _ns8__GetSpecialDayGroupInfoListResponse*ns8__GetSpecialDayGroupInfoListResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetSpecialDayGroups                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__GetSpecialDayGroups" of service binding "ScheduleBinding".

				This operation returns the specified special day
group item matching the given token.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroups"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroups"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetSpecialDayGroups(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__GetSpecialDayGroups*   ns8__GetSpecialDayGroups,
    // output parameters:
    struct _ns8__GetSpecialDayGroupsResponse*ns8__GetSpecialDayGroupsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetSpecialDayGroups(
    struct soap *soap,
    // input parameters:
    struct _ns8__GetSpecialDayGroups*   ns8__GetSpecialDayGroups,
    // output parameters:
    struct _ns8__GetSpecialDayGroupsResponse*ns8__GetSpecialDayGroupsResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	GetSpecialDayGroups SOAP
//gsoap ns8  service method-style:	GetSpecialDayGroups document
//gsoap ns8  service method-encoding:	GetSpecialDayGroups literal
//gsoap ns8  service method-input-action:	GetSpecialDayGroups http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroups
//gsoap ns8  service method-output-action:	GetSpecialDayGroups http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupsResponse
int __ns8__GetSpecialDayGroups(
    struct _ns8__GetSpecialDayGroups*   ns8__GetSpecialDayGroups,	///< Input parameter
    struct _ns8__GetSpecialDayGroupsResponse*ns8__GetSpecialDayGroupsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetSpecialDayGroupList                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__GetSpecialDayGroupList" of service binding "ScheduleBinding".

				This operation requests a list of all of SpecialDayGroupList
items provided by the device.
				A call to this method shall return a StartReference
when not all data is returned and
				more data is available. The reference shall be valid
for retrieving the next set of data.
				Please refer Access Control Service Specification
for more details.
				The number of items returned shall not be greater
the Limit parameter.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupList"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupList"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetSpecialDayGroupList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__GetSpecialDayGroupList* ns8__GetSpecialDayGroupList,
    // output parameters:
    struct _ns8__GetSpecialDayGroupListResponse*ns8__GetSpecialDayGroupListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetSpecialDayGroupList(
    struct soap *soap,
    // input parameters:
    struct _ns8__GetSpecialDayGroupList* ns8__GetSpecialDayGroupList,
    // output parameters:
    struct _ns8__GetSpecialDayGroupListResponse*ns8__GetSpecialDayGroupListResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	GetSpecialDayGroupList SOAP
//gsoap ns8  service method-style:	GetSpecialDayGroupList document
//gsoap ns8  service method-encoding:	GetSpecialDayGroupList literal
//gsoap ns8  service method-input-action:	GetSpecialDayGroupList http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupList
//gsoap ns8  service method-output-action:	GetSpecialDayGroupList http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupListResponse
int __ns8__GetSpecialDayGroupList(
    struct _ns8__GetSpecialDayGroupList* ns8__GetSpecialDayGroupList,	///< Input parameter
    struct _ns8__GetSpecialDayGroupListResponse*ns8__GetSpecialDayGroupListResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__CreateSpecialDayGroup                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__CreateSpecialDayGroup" of service binding "ScheduleBinding".

				This operation creates the specified special day
group. The token field of the
				SpecialDayGroup structure shall be empty, the device
shall allocate a token for the
				special day group. The allocated token shall be
returned in the response.
				If there is any value in the token field, the device
shall return InvalidArgVal as generic fault code.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/CreateSpecialDayGroup"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/CreateSpecialDayGroup"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/CreateSpecialDayGroupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__CreateSpecialDayGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__CreateSpecialDayGroup* ns8__CreateSpecialDayGroup,
    // output parameters:
    struct _ns8__CreateSpecialDayGroupResponse*ns8__CreateSpecialDayGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__CreateSpecialDayGroup(
    struct soap *soap,
    // input parameters:
    struct _ns8__CreateSpecialDayGroup* ns8__CreateSpecialDayGroup,
    // output parameters:
    struct _ns8__CreateSpecialDayGroupResponse*ns8__CreateSpecialDayGroupResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	CreateSpecialDayGroup SOAP
//gsoap ns8  service method-style:	CreateSpecialDayGroup document
//gsoap ns8  service method-encoding:	CreateSpecialDayGroup literal
//gsoap ns8  service method-input-action:	CreateSpecialDayGroup http://www.onvif.org/ver10/schedule/wsdl/CreateSpecialDayGroup
//gsoap ns8  service method-output-action:	CreateSpecialDayGroup http://www.onvif.org/ver10/schedule/wsdl/CreateSpecialDayGroupResponse
int __ns8__CreateSpecialDayGroup(
    struct _ns8__CreateSpecialDayGroup* ns8__CreateSpecialDayGroup,	///< Input parameter
    struct _ns8__CreateSpecialDayGroupResponse*ns8__CreateSpecialDayGroupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__ModifySpecialDayGroup                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__ModifySpecialDayGroup" of service binding "ScheduleBinding".

				This operation updates the specified special day
group.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/ModifySpecialDayGroup"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/ModifySpecialDayGroup"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/ModifySpecialDayGroupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__ModifySpecialDayGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__ModifySpecialDayGroup* ns8__ModifySpecialDayGroup,
    // output parameters:
    struct _ns8__ModifySpecialDayGroupResponse*ns8__ModifySpecialDayGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__ModifySpecialDayGroup(
    struct soap *soap,
    // input parameters:
    struct _ns8__ModifySpecialDayGroup* ns8__ModifySpecialDayGroup,
    // output parameters:
    struct _ns8__ModifySpecialDayGroupResponse*ns8__ModifySpecialDayGroupResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	ModifySpecialDayGroup SOAP
//gsoap ns8  service method-style:	ModifySpecialDayGroup document
//gsoap ns8  service method-encoding:	ModifySpecialDayGroup literal
//gsoap ns8  service method-input-action:	ModifySpecialDayGroup http://www.onvif.org/ver10/schedule/wsdl/ModifySpecialDayGroup
//gsoap ns8  service method-output-action:	ModifySpecialDayGroup http://www.onvif.org/ver10/schedule/wsdl/ModifySpecialDayGroupResponse
int __ns8__ModifySpecialDayGroup(
    struct _ns8__ModifySpecialDayGroup* ns8__ModifySpecialDayGroup,	///< Input parameter
    struct _ns8__ModifySpecialDayGroupResponse*ns8__ModifySpecialDayGroupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__DeleteSpecialDayGroup                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns8__DeleteSpecialDayGroup" of service binding "ScheduleBinding".

				This method deletes the specified special day group.
				If it is associated with one or more schedules some
devices may not be able to delete
				the special day group, and consequently a ReferenceInUse
fault must be generated.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/schedule/wsdl/DeleteSpecialDayGroup"

  - Addressing input action: "http://www.onvif.org/ver10/schedule/wsdl/DeleteSpecialDayGroup"

  - Addressing output action: "http://www.onvif.org/ver10/schedule/wsdl/DeleteSpecialDayGroupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__DeleteSpecialDayGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns8__DeleteSpecialDayGroup* ns8__DeleteSpecialDayGroup,
    // output parameters:
    struct _ns8__DeleteSpecialDayGroupResponse*ns8__DeleteSpecialDayGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__DeleteSpecialDayGroup(
    struct soap *soap,
    // input parameters:
    struct _ns8__DeleteSpecialDayGroup* ns8__DeleteSpecialDayGroup,
    // output parameters:
    struct _ns8__DeleteSpecialDayGroupResponse*ns8__DeleteSpecialDayGroupResponse
  );
@endcode

*/

//gsoap ns8  service method-protocol:	DeleteSpecialDayGroup SOAP
//gsoap ns8  service method-style:	DeleteSpecialDayGroup document
//gsoap ns8  service method-encoding:	DeleteSpecialDayGroup literal
//gsoap ns8  service method-input-action:	DeleteSpecialDayGroup http://www.onvif.org/ver10/schedule/wsdl/DeleteSpecialDayGroup
//gsoap ns8  service method-output-action:	DeleteSpecialDayGroup http://www.onvif.org/ver10/schedule/wsdl/DeleteSpecialDayGroupResponse
int __ns8__DeleteSpecialDayGroup(
    struct _ns8__DeleteSpecialDayGroup* ns8__DeleteSpecialDayGroup,	///< Input parameter
    struct _ns8__DeleteSpecialDayGroupResponse*ns8__DeleteSpecialDayGroupResponse	///< Output parameter
);

/**

@page ScheduleBinding Binding "ScheduleBinding"

@section ScheduleBinding_policy_enablers Policy Enablers of Binding "ScheduleBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   AnalyticsDeviceBinding                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__GetServiceCapabilities" of service binding "AnalyticsDeviceBinding".
Returns the capabilities of the analytics device service. The result is returned
in a typed answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__GetServiceCapabilities* tad__GetServiceCapabilities,
    // output parameters:
    struct _tad__GetServiceCapabilitiesResponse*tad__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tad__GetServiceCapabilities* tad__GetServiceCapabilities,
    // output parameters:
    struct _tad__GetServiceCapabilitiesResponse*tad__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tad  service method-style:	GetServiceCapabilities document
//gsoap tad  service method-encoding:	GetServiceCapabilities literal
//gsoap tad  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/analyticsdevice/wsdl/GetServiceCapabilities
//gsoap tad  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/analyticsdevice/wsdl/GetServiceCapabilitiesResponse
int __tad__GetServiceCapabilities(
    struct _tad__GetServiceCapabilities* tad__GetServiceCapabilities,	///< Input parameter
    struct _tad__GetServiceCapabilitiesResponse*tad__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__DeleteAnalyticsEngineControl                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__DeleteAnalyticsEngineControl" of service binding "AnalyticsDeviceBinding".
DeleteAnalyticsEngineControl shall delete a control object .

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/DeleteAnalyticsEngineControl"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/DeleteAnalyticsEngineControl"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/DeleteAnalyticsEngineControlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__DeleteAnalyticsEngineControl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__DeleteAnalyticsEngineControl* tad__DeleteAnalyticsEngineControl,
    // output parameters:
    struct _tad__DeleteAnalyticsEngineControlResponse*tad__DeleteAnalyticsEngineControlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__DeleteAnalyticsEngineControl(
    struct soap *soap,
    // input parameters:
    struct _tad__DeleteAnalyticsEngineControl* tad__DeleteAnalyticsEngineControl,
    // output parameters:
    struct _tad__DeleteAnalyticsEngineControlResponse*tad__DeleteAnalyticsEngineControlResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	DeleteAnalyticsEngineControl SOAP
//gsoap tad  service method-style:	DeleteAnalyticsEngineControl document
//gsoap tad  service method-encoding:	DeleteAnalyticsEngineControl literal
//gsoap tad  service method-input-action:	DeleteAnalyticsEngineControl http://www.onvif.org/ver10/analyticsdevice/wsdl/DeleteAnalyticsEngineControl
//gsoap tad  service method-output-action:	DeleteAnalyticsEngineControl http://www.onvif.org/ver10/analyticsdevice/wsdl/DeleteAnalyticsEngineControlResponse
int __tad__DeleteAnalyticsEngineControl(
    struct _tad__DeleteAnalyticsEngineControl* tad__DeleteAnalyticsEngineControl,	///< Input parameter
    struct _tad__DeleteAnalyticsEngineControlResponse*tad__DeleteAnalyticsEngineControlResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__CreateAnalyticsEngineControl                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__CreateAnalyticsEngineControl" of service binding "AnalyticsDeviceBinding".
CreateAnalyticsEngineControl shall create a new control object.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/CreateAnalyticsEngineControl"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/CreateAnalyticsEngineControl"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/CreateAnalyticsEngineControlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__CreateAnalyticsEngineControl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__CreateAnalyticsEngineControl* tad__CreateAnalyticsEngineControl,
    // output parameters:
    struct _tad__CreateAnalyticsEngineControlResponse*tad__CreateAnalyticsEngineControlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__CreateAnalyticsEngineControl(
    struct soap *soap,
    // input parameters:
    struct _tad__CreateAnalyticsEngineControl* tad__CreateAnalyticsEngineControl,
    // output parameters:
    struct _tad__CreateAnalyticsEngineControlResponse*tad__CreateAnalyticsEngineControlResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	CreateAnalyticsEngineControl SOAP
//gsoap tad  service method-style:	CreateAnalyticsEngineControl document
//gsoap tad  service method-encoding:	CreateAnalyticsEngineControl literal
//gsoap tad  service method-input-action:	CreateAnalyticsEngineControl http://www.onvif.org/ver10/analyticsdevice/wsdl/CreateAnalyticsEngineControl
//gsoap tad  service method-output-action:	CreateAnalyticsEngineControl http://www.onvif.org/ver10/analyticsdevice/wsdl/CreateAnalyticsEngineControlResponse
int __tad__CreateAnalyticsEngineControl(
    struct _tad__CreateAnalyticsEngineControl* tad__CreateAnalyticsEngineControl,	///< Input parameter
    struct _tad__CreateAnalyticsEngineControlResponse*tad__CreateAnalyticsEngineControlResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__SetAnalyticsEngineControl                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__SetAnalyticsEngineControl" of service binding "AnalyticsDeviceBinding".
This command modifies the AnalyticsEngineControl configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/SetAnalyticsEngineControl"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/SetAnalyticsEngineControl"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/SetAnalyticsEngineControlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__SetAnalyticsEngineControl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__SetAnalyticsEngineControl* tad__SetAnalyticsEngineControl,
    // output parameters:
    struct _tad__SetAnalyticsEngineControlResponse*tad__SetAnalyticsEngineControlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__SetAnalyticsEngineControl(
    struct soap *soap,
    // input parameters:
    struct _tad__SetAnalyticsEngineControl* tad__SetAnalyticsEngineControl,
    // output parameters:
    struct _tad__SetAnalyticsEngineControlResponse*tad__SetAnalyticsEngineControlResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	SetAnalyticsEngineControl SOAP
//gsoap tad  service method-style:	SetAnalyticsEngineControl document
//gsoap tad  service method-encoding:	SetAnalyticsEngineControl literal
//gsoap tad  service method-input-action:	SetAnalyticsEngineControl http://www.onvif.org/ver10/analyticsdevice/wsdl/SetAnalyticsEngineControl
//gsoap tad  service method-output-action:	SetAnalyticsEngineControl http://www.onvif.org/ver10/analyticsdevice/wsdl/SetAnalyticsEngineControlResponse
int __tad__SetAnalyticsEngineControl(
    struct _tad__SetAnalyticsEngineControl* tad__SetAnalyticsEngineControl,	///< Input parameter
    struct _tad__SetAnalyticsEngineControlResponse*tad__SetAnalyticsEngineControlResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__GetAnalyticsEngineControl                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__GetAnalyticsEngineControl" of service binding "AnalyticsDeviceBinding".
The GetAnalyticsEngineControl command fetches the analytics engine control if the
analytics engine control token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineControl"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineControl"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineControlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__GetAnalyticsEngineControl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__GetAnalyticsEngineControl* tad__GetAnalyticsEngineControl,
    // output parameters:
    struct _tad__GetAnalyticsEngineControlResponse*tad__GetAnalyticsEngineControlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__GetAnalyticsEngineControl(
    struct soap *soap,
    // input parameters:
    struct _tad__GetAnalyticsEngineControl* tad__GetAnalyticsEngineControl,
    // output parameters:
    struct _tad__GetAnalyticsEngineControlResponse*tad__GetAnalyticsEngineControlResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	GetAnalyticsEngineControl SOAP
//gsoap tad  service method-style:	GetAnalyticsEngineControl document
//gsoap tad  service method-encoding:	GetAnalyticsEngineControl literal
//gsoap tad  service method-input-action:	GetAnalyticsEngineControl http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineControl
//gsoap tad  service method-output-action:	GetAnalyticsEngineControl http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineControlResponse
int __tad__GetAnalyticsEngineControl(
    struct _tad__GetAnalyticsEngineControl* tad__GetAnalyticsEngineControl,	///< Input parameter
    struct _tad__GetAnalyticsEngineControlResponse*tad__GetAnalyticsEngineControlResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__GetAnalyticsEngineControls                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__GetAnalyticsEngineControls" of service binding "AnalyticsDeviceBinding".
This operation lists all available analytics engine controls for the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineControls"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineControls"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineControlsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__GetAnalyticsEngineControls(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__GetAnalyticsEngineControls* tad__GetAnalyticsEngineControls,
    // output parameters:
    struct _tad__GetAnalyticsEngineControlsResponse*tad__GetAnalyticsEngineControlsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__GetAnalyticsEngineControls(
    struct soap *soap,
    // input parameters:
    struct _tad__GetAnalyticsEngineControls* tad__GetAnalyticsEngineControls,
    // output parameters:
    struct _tad__GetAnalyticsEngineControlsResponse*tad__GetAnalyticsEngineControlsResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	GetAnalyticsEngineControls SOAP
//gsoap tad  service method-style:	GetAnalyticsEngineControls document
//gsoap tad  service method-encoding:	GetAnalyticsEngineControls literal
//gsoap tad  service method-input-action:	GetAnalyticsEngineControls http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineControls
//gsoap tad  service method-output-action:	GetAnalyticsEngineControls http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineControlsResponse
int __tad__GetAnalyticsEngineControls(
    struct _tad__GetAnalyticsEngineControls* tad__GetAnalyticsEngineControls,	///< Input parameter
    struct _tad__GetAnalyticsEngineControlsResponse*tad__GetAnalyticsEngineControlsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__GetAnalyticsEngine                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__GetAnalyticsEngine" of service binding "AnalyticsDeviceBinding".
The GetAnalyticsEngine command fetches the analytics engine configuration if the
token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngine"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngine"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__GetAnalyticsEngine(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__GetAnalyticsEngine*    tad__GetAnalyticsEngine,
    // output parameters:
    struct _tad__GetAnalyticsEngineResponse*tad__GetAnalyticsEngineResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__GetAnalyticsEngine(
    struct soap *soap,
    // input parameters:
    struct _tad__GetAnalyticsEngine*    tad__GetAnalyticsEngine,
    // output parameters:
    struct _tad__GetAnalyticsEngineResponse*tad__GetAnalyticsEngineResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	GetAnalyticsEngine SOAP
//gsoap tad  service method-style:	GetAnalyticsEngine document
//gsoap tad  service method-encoding:	GetAnalyticsEngine literal
//gsoap tad  service method-input-action:	GetAnalyticsEngine http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngine
//gsoap tad  service method-output-action:	GetAnalyticsEngine http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineResponse
int __tad__GetAnalyticsEngine(
    struct _tad__GetAnalyticsEngine*    tad__GetAnalyticsEngine,	///< Input parameter
    struct _tad__GetAnalyticsEngineResponse*tad__GetAnalyticsEngineResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__GetAnalyticsEngines                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__GetAnalyticsEngines" of service binding "AnalyticsDeviceBinding".
This operation lists all available analytics engine configurations for the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngines"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngines"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEnginesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__GetAnalyticsEngines(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__GetAnalyticsEngines*   tad__GetAnalyticsEngines,
    // output parameters:
    struct _tad__GetAnalyticsEnginesResponse*tad__GetAnalyticsEnginesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__GetAnalyticsEngines(
    struct soap *soap,
    // input parameters:
    struct _tad__GetAnalyticsEngines*   tad__GetAnalyticsEngines,
    // output parameters:
    struct _tad__GetAnalyticsEnginesResponse*tad__GetAnalyticsEnginesResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	GetAnalyticsEngines SOAP
//gsoap tad  service method-style:	GetAnalyticsEngines document
//gsoap tad  service method-encoding:	GetAnalyticsEngines literal
//gsoap tad  service method-input-action:	GetAnalyticsEngines http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngines
//gsoap tad  service method-output-action:	GetAnalyticsEngines http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEnginesResponse
int __tad__GetAnalyticsEngines(
    struct _tad__GetAnalyticsEngines*   tad__GetAnalyticsEngines,	///< Input parameter
    struct _tad__GetAnalyticsEnginesResponse*tad__GetAnalyticsEnginesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__SetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__SetVideoAnalyticsConfiguration" of service binding "AnalyticsDeviceBinding".
A video analytics configuration is modified using this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/SetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__SetVideoAnalyticsConfiguration* tad__SetVideoAnalyticsConfiguration,
    // output parameters:
    struct _tad__SetVideoAnalyticsConfigurationResponse*tad__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tad__SetVideoAnalyticsConfiguration* tad__SetVideoAnalyticsConfiguration,
    // output parameters:
    struct _tad__SetVideoAnalyticsConfigurationResponse*tad__SetVideoAnalyticsConfigurationResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	SetVideoAnalyticsConfiguration SOAP
//gsoap tad  service method-style:	SetVideoAnalyticsConfiguration document
//gsoap tad  service method-encoding:	SetVideoAnalyticsConfiguration literal
//gsoap tad  service method-input-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/analyticsdevice/wsdl/SetVideoAnalyticsConfiguration
//gsoap tad  service method-output-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/analyticsdevice/wsdl/SetVideoAnalyticsConfigurationResponse
int __tad__SetVideoAnalyticsConfiguration(
    struct _tad__SetVideoAnalyticsConfiguration* tad__SetVideoAnalyticsConfiguration,	///< Input parameter
    struct _tad__SetVideoAnalyticsConfigurationResponse*tad__SetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__SetAnalyticsEngineInput                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__SetAnalyticsEngineInput" of service binding "AnalyticsDeviceBinding".
This command modifies the analytics engine input configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/SetAnalyticsEngineInput"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/SetAnalyticsEngineInput"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/SetAnalyticsEngineInputResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__SetAnalyticsEngineInput(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__SetAnalyticsEngineInput* tad__SetAnalyticsEngineInput,
    // output parameters:
    struct _tad__SetAnalyticsEngineInputResponse*tad__SetAnalyticsEngineInputResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__SetAnalyticsEngineInput(
    struct soap *soap,
    // input parameters:
    struct _tad__SetAnalyticsEngineInput* tad__SetAnalyticsEngineInput,
    // output parameters:
    struct _tad__SetAnalyticsEngineInputResponse*tad__SetAnalyticsEngineInputResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	SetAnalyticsEngineInput SOAP
//gsoap tad  service method-style:	SetAnalyticsEngineInput document
//gsoap tad  service method-encoding:	SetAnalyticsEngineInput literal
//gsoap tad  service method-input-action:	SetAnalyticsEngineInput http://www.onvif.org/ver10/analyticsdevice/wsdl/SetAnalyticsEngineInput
//gsoap tad  service method-output-action:	SetAnalyticsEngineInput http://www.onvif.org/ver10/analyticsdevice/wsdl/SetAnalyticsEngineInputResponse
int __tad__SetAnalyticsEngineInput(
    struct _tad__SetAnalyticsEngineInput* tad__SetAnalyticsEngineInput,	///< Input parameter
    struct _tad__SetAnalyticsEngineInputResponse*tad__SetAnalyticsEngineInputResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__GetAnalyticsEngineInput                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__GetAnalyticsEngineInput" of service binding "AnalyticsDeviceBinding".
The GetAnalyticsEngineInput command fetches the input configuration if the analytics
engine input configuration token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineInput"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineInput"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineInputResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__GetAnalyticsEngineInput(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__GetAnalyticsEngineInput* tad__GetAnalyticsEngineInput,
    // output parameters:
    struct _tad__GetAnalyticsEngineInputResponse*tad__GetAnalyticsEngineInputResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__GetAnalyticsEngineInput(
    struct soap *soap,
    // input parameters:
    struct _tad__GetAnalyticsEngineInput* tad__GetAnalyticsEngineInput,
    // output parameters:
    struct _tad__GetAnalyticsEngineInputResponse*tad__GetAnalyticsEngineInputResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	GetAnalyticsEngineInput SOAP
//gsoap tad  service method-style:	GetAnalyticsEngineInput document
//gsoap tad  service method-encoding:	GetAnalyticsEngineInput literal
//gsoap tad  service method-input-action:	GetAnalyticsEngineInput http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineInput
//gsoap tad  service method-output-action:	GetAnalyticsEngineInput http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineInputResponse
int __tad__GetAnalyticsEngineInput(
    struct _tad__GetAnalyticsEngineInput* tad__GetAnalyticsEngineInput,	///< Input parameter
    struct _tad__GetAnalyticsEngineInputResponse*tad__GetAnalyticsEngineInputResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__GetAnalyticsEngineInputs                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__GetAnalyticsEngineInputs" of service binding "AnalyticsDeviceBinding".
This operation lists all available analytics engine input configurations for the
device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineInputs"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineInputs"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineInputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__GetAnalyticsEngineInputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__GetAnalyticsEngineInputs* tad__GetAnalyticsEngineInputs,
    // output parameters:
    struct _tad__GetAnalyticsEngineInputsResponse*tad__GetAnalyticsEngineInputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__GetAnalyticsEngineInputs(
    struct soap *soap,
    // input parameters:
    struct _tad__GetAnalyticsEngineInputs* tad__GetAnalyticsEngineInputs,
    // output parameters:
    struct _tad__GetAnalyticsEngineInputsResponse*tad__GetAnalyticsEngineInputsResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	GetAnalyticsEngineInputs SOAP
//gsoap tad  service method-style:	GetAnalyticsEngineInputs document
//gsoap tad  service method-encoding:	GetAnalyticsEngineInputs literal
//gsoap tad  service method-input-action:	GetAnalyticsEngineInputs http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineInputs
//gsoap tad  service method-output-action:	GetAnalyticsEngineInputs http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineInputsResponse
int __tad__GetAnalyticsEngineInputs(
    struct _tad__GetAnalyticsEngineInputs* tad__GetAnalyticsEngineInputs,	///< Input parameter
    struct _tad__GetAnalyticsEngineInputsResponse*tad__GetAnalyticsEngineInputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__GetAnalyticsDeviceStreamUri                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__GetAnalyticsDeviceStreamUri" of service binding "AnalyticsDeviceBinding".
This operation requests a URI that can be used to initiate a live stream using RTSP
as the control protocol if the token of the AnalyticsEngineControl is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsDeviceStreamUri"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsDeviceStreamUri"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsDeviceStreamUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__GetAnalyticsDeviceStreamUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__GetAnalyticsDeviceStreamUri* tad__GetAnalyticsDeviceStreamUri,
    // output parameters:
    struct _tad__GetAnalyticsDeviceStreamUriResponse*tad__GetAnalyticsDeviceStreamUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__GetAnalyticsDeviceStreamUri(
    struct soap *soap,
    // input parameters:
    struct _tad__GetAnalyticsDeviceStreamUri* tad__GetAnalyticsDeviceStreamUri,
    // output parameters:
    struct _tad__GetAnalyticsDeviceStreamUriResponse*tad__GetAnalyticsDeviceStreamUriResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	GetAnalyticsDeviceStreamUri SOAP
//gsoap tad  service method-style:	GetAnalyticsDeviceStreamUri document
//gsoap tad  service method-encoding:	GetAnalyticsDeviceStreamUri literal
//gsoap tad  service method-input-action:	GetAnalyticsDeviceStreamUri http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsDeviceStreamUri
//gsoap tad  service method-output-action:	GetAnalyticsDeviceStreamUri http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsDeviceStreamUriResponse
int __tad__GetAnalyticsDeviceStreamUri(
    struct _tad__GetAnalyticsDeviceStreamUri* tad__GetAnalyticsDeviceStreamUri,	///< Input parameter
    struct _tad__GetAnalyticsDeviceStreamUriResponse*tad__GetAnalyticsDeviceStreamUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__GetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__GetVideoAnalyticsConfiguration" of service binding "AnalyticsDeviceBinding".
The GetVideoAnalyticsConfiguration command fetches the video analytics configuration
if the video analytics configuration token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__GetVideoAnalyticsConfiguration* tad__GetVideoAnalyticsConfiguration,
    // output parameters:
    struct _tad__GetVideoAnalyticsConfigurationResponse*tad__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tad__GetVideoAnalyticsConfiguration* tad__GetVideoAnalyticsConfiguration,
    // output parameters:
    struct _tad__GetVideoAnalyticsConfigurationResponse*tad__GetVideoAnalyticsConfigurationResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	GetVideoAnalyticsConfiguration SOAP
//gsoap tad  service method-style:	GetVideoAnalyticsConfiguration document
//gsoap tad  service method-encoding:	GetVideoAnalyticsConfiguration literal
//gsoap tad  service method-input-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/analyticsdevice/wsdl/GetVideoAnalyticsConfiguration
//gsoap tad  service method-output-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/analyticsdevice/wsdl/GetVideoAnalyticsConfigurationResponse
int __tad__GetVideoAnalyticsConfiguration(
    struct _tad__GetVideoAnalyticsConfiguration* tad__GetVideoAnalyticsConfiguration,	///< Input parameter
    struct _tad__GetVideoAnalyticsConfigurationResponse*tad__GetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__CreateAnalyticsEngineInputs                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__CreateAnalyticsEngineInputs" of service binding "AnalyticsDeviceBinding".
This command generates one or more analytics engine input configurations.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/CreateAnalyticsEngineInputs"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/CreateAnalyticsEngineInputs"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/CreateAnalyticsEngineInputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__CreateAnalyticsEngineInputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__CreateAnalyticsEngineInputs* tad__CreateAnalyticsEngineInputs,
    // output parameters:
    struct _tad__CreateAnalyticsEngineInputsResponse*tad__CreateAnalyticsEngineInputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__CreateAnalyticsEngineInputs(
    struct soap *soap,
    // input parameters:
    struct _tad__CreateAnalyticsEngineInputs* tad__CreateAnalyticsEngineInputs,
    // output parameters:
    struct _tad__CreateAnalyticsEngineInputsResponse*tad__CreateAnalyticsEngineInputsResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	CreateAnalyticsEngineInputs SOAP
//gsoap tad  service method-style:	CreateAnalyticsEngineInputs document
//gsoap tad  service method-encoding:	CreateAnalyticsEngineInputs literal
//gsoap tad  service method-input-action:	CreateAnalyticsEngineInputs http://www.onvif.org/ver10/analyticsdevice/wsdl/CreateAnalyticsEngineInputs
//gsoap tad  service method-output-action:	CreateAnalyticsEngineInputs http://www.onvif.org/ver10/analyticsdevice/wsdl/CreateAnalyticsEngineInputsResponse
int __tad__CreateAnalyticsEngineInputs(
    struct _tad__CreateAnalyticsEngineInputs* tad__CreateAnalyticsEngineInputs,	///< Input parameter
    struct _tad__CreateAnalyticsEngineInputsResponse*tad__CreateAnalyticsEngineInputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__DeleteAnalyticsEngineInputs                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__DeleteAnalyticsEngineInputs" of service binding "AnalyticsDeviceBinding".
This command deletes analytics engine input configurations if the tokens are known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/DeleteAnalyticsEngineInputs"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/DeleteAnalyticsEngineInputs"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/DeleteAnalyticsEngineInputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__DeleteAnalyticsEngineInputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__DeleteAnalyticsEngineInputs* tad__DeleteAnalyticsEngineInputs,
    // output parameters:
    struct _tad__DeleteAnalyticsEngineInputsResponse*tad__DeleteAnalyticsEngineInputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__DeleteAnalyticsEngineInputs(
    struct soap *soap,
    // input parameters:
    struct _tad__DeleteAnalyticsEngineInputs* tad__DeleteAnalyticsEngineInputs,
    // output parameters:
    struct _tad__DeleteAnalyticsEngineInputsResponse*tad__DeleteAnalyticsEngineInputsResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	DeleteAnalyticsEngineInputs SOAP
//gsoap tad  service method-style:	DeleteAnalyticsEngineInputs document
//gsoap tad  service method-encoding:	DeleteAnalyticsEngineInputs literal
//gsoap tad  service method-input-action:	DeleteAnalyticsEngineInputs http://www.onvif.org/ver10/analyticsdevice/wsdl/DeleteAnalyticsEngineInputs
//gsoap tad  service method-output-action:	DeleteAnalyticsEngineInputs http://www.onvif.org/ver10/analyticsdevice/wsdl/DeleteAnalyticsEngineInputsResponse
int __tad__DeleteAnalyticsEngineInputs(
    struct _tad__DeleteAnalyticsEngineInputs* tad__DeleteAnalyticsEngineInputs,	///< Input parameter
    struct _tad__DeleteAnalyticsEngineInputsResponse*tad__DeleteAnalyticsEngineInputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tad__GetAnalyticsState                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tad__GetAnalyticsState" of service binding "AnalyticsDeviceBinding".
GetAnalyticsState returns status information of the referenced AnalyticsEngineControl
object.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsState"

  - Addressing input action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsState"

  - Addressing output action: "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tad__GetAnalyticsState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tad__GetAnalyticsState*     tad__GetAnalyticsState,
    // output parameters:
    struct _tad__GetAnalyticsStateResponse*tad__GetAnalyticsStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tad__GetAnalyticsState(
    struct soap *soap,
    // input parameters:
    struct _tad__GetAnalyticsState*     tad__GetAnalyticsState,
    // output parameters:
    struct _tad__GetAnalyticsStateResponse*tad__GetAnalyticsStateResponse
  );
@endcode

*/

//gsoap tad  service method-protocol:	GetAnalyticsState SOAP
//gsoap tad  service method-style:	GetAnalyticsState document
//gsoap tad  service method-encoding:	GetAnalyticsState literal
//gsoap tad  service method-input-action:	GetAnalyticsState http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsState
//gsoap tad  service method-output-action:	GetAnalyticsState http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsStateResponse
int __tad__GetAnalyticsState(
    struct _tad__GetAnalyticsState*     tad__GetAnalyticsState,	///< Input parameter
    struct _tad__GetAnalyticsStateResponse*tad__GetAnalyticsStateResponse	///< Output parameter
);

/**

@page AnalyticsDeviceBinding Binding "AnalyticsDeviceBinding"

@section AnalyticsDeviceBinding_policy_enablers Policy Enablers of Binding "AnalyticsDeviceBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   RuleEngineBinding                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__GetSupportedRules                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__GetSupportedRules" of service binding "RuleEngineBinding".

				List all rules that are supported by the given VideoAnalyticsConfiguration.
				The result of this method may depend on the overall
Video analytics configuration of the device,
				which is available via the current set of profiles.

			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__GetSupportedRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tan__GetSupportedRules*     tan__GetSupportedRules,
    // output parameters:
    struct _tan__GetSupportedRulesResponse*tan__GetSupportedRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__GetSupportedRules(
    struct soap *soap,
    // input parameters:
    struct _tan__GetSupportedRules*     tan__GetSupportedRules,
    // output parameters:
    struct _tan__GetSupportedRulesResponse*tan__GetSupportedRulesResponse
  );
@endcode

*/

//gsoap tan  service method-protocol:	GetSupportedRules SOAP
//gsoap tan  service method-style:	GetSupportedRules document
//gsoap tan  service method-encoding:	GetSupportedRules literal
//gsoap tan  service method-input-action:	GetSupportedRules http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRules
//gsoap tan  service method-output-action:	GetSupportedRules http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRulesResponse
int __tan__GetSupportedRules(
    struct _tan__GetSupportedRules*     tan__GetSupportedRules,	///< Input parameter
    struct _tan__GetSupportedRulesResponse*tan__GetSupportedRulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__CreateRules                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__CreateRules" of service binding "RuleEngineBinding".

				Add one or more rules to an existing VideoAnalyticsConfiguration.
				The available supported types can be retrieved via
<a href="#op.GetSupportedRules">GetSupportedRules</a>, 
				where the Name of the supported rule correspond
to the type of an rule instance.<br/>
				Pass unique module names which can be later used
as reference. 
				The Parameters of the rules must match those of
the corresponding description.
				<br/>
				Although this method is mandatory a device implementation
must not support adding rules. 
				Instead it can provide a fixed set of predefined
configurations via the media service function 
				<a href="media.wsdl#op.GetCompatibleVideoAnalyticsConfigurations">GetCompatibleVideoAnalyticsConfigurations</a>.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/CreateRules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/CreateRules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/CreateRulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__CreateRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tan__CreateRules*           tan__CreateRules,
    // output parameters:
    struct _tan__CreateRulesResponse   *tan__CreateRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__CreateRules(
    struct soap *soap,
    // input parameters:
    struct _tan__CreateRules*           tan__CreateRules,
    // output parameters:
    struct _tan__CreateRulesResponse   *tan__CreateRulesResponse
  );
@endcode

*/

//gsoap tan  service method-protocol:	CreateRules SOAP
//gsoap tan  service method-style:	CreateRules document
//gsoap tan  service method-encoding:	CreateRules literal
//gsoap tan  service method-input-action:	CreateRules http://www.onvif.org/ver20/analytics/wsdl/CreateRules
//gsoap tan  service method-output-action:	CreateRules http://www.onvif.org/ver20/analytics/wsdl/CreateRulesResponse
int __tan__CreateRules(
    struct _tan__CreateRules*           tan__CreateRules,	///< Input parameter
    struct _tan__CreateRulesResponse   *tan__CreateRulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__DeleteRules                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__DeleteRules" of service binding "RuleEngineBinding".

				Remove one or more rules from a VideoAnalyticsConfiguration.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/DeleteRules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/DeleteRules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/DeleteRulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__DeleteRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tan__DeleteRules*           tan__DeleteRules,
    // output parameters:
    struct _tan__DeleteRulesResponse   *tan__DeleteRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__DeleteRules(
    struct soap *soap,
    // input parameters:
    struct _tan__DeleteRules*           tan__DeleteRules,
    // output parameters:
    struct _tan__DeleteRulesResponse   *tan__DeleteRulesResponse
  );
@endcode

*/

//gsoap tan  service method-protocol:	DeleteRules SOAP
//gsoap tan  service method-style:	DeleteRules document
//gsoap tan  service method-encoding:	DeleteRules literal
//gsoap tan  service method-input-action:	DeleteRules http://www.onvif.org/ver20/analytics/wsdl/DeleteRules
//gsoap tan  service method-output-action:	DeleteRules http://www.onvif.org/ver20/analytics/wsdl/DeleteRulesResponse
int __tan__DeleteRules(
    struct _tan__DeleteRules*           tan__DeleteRules,	///< Input parameter
    struct _tan__DeleteRulesResponse   *tan__DeleteRulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__GetRules                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__GetRules" of service binding "RuleEngineBinding".

				List the currently assigned set of rules of a VideoAnalyticsConfiguration.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/GetRules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/GetRules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/GetRulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__GetRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tan__GetRules*              tan__GetRules,
    // output parameters:
    struct _tan__GetRulesResponse      *tan__GetRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__GetRules(
    struct soap *soap,
    // input parameters:
    struct _tan__GetRules*              tan__GetRules,
    // output parameters:
    struct _tan__GetRulesResponse      *tan__GetRulesResponse
  );
@endcode

*/

//gsoap tan  service method-protocol:	GetRules SOAP
//gsoap tan  service method-style:	GetRules document
//gsoap tan  service method-encoding:	GetRules literal
//gsoap tan  service method-input-action:	GetRules http://www.onvif.org/ver20/analytics/wsdl/GetRules
//gsoap tan  service method-output-action:	GetRules http://www.onvif.org/ver20/analytics/wsdl/GetRulesResponse
int __tan__GetRules(
    struct _tan__GetRules*              tan__GetRules,	///< Input parameter
    struct _tan__GetRulesResponse      *tan__GetRulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__ModifyRules                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__ModifyRules" of service binding "RuleEngineBinding".

				Modify one or more rules of a VideoAnalyticsConfiguration.
The rules are referenced by their names.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/ModifyRules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/ModifyRules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/ModifyRulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__ModifyRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tan__ModifyRules*           tan__ModifyRules,
    // output parameters:
    struct _tan__ModifyRulesResponse   *tan__ModifyRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__ModifyRules(
    struct soap *soap,
    // input parameters:
    struct _tan__ModifyRules*           tan__ModifyRules,
    // output parameters:
    struct _tan__ModifyRulesResponse   *tan__ModifyRulesResponse
  );
@endcode

*/

//gsoap tan  service method-protocol:	ModifyRules SOAP
//gsoap tan  service method-style:	ModifyRules document
//gsoap tan  service method-encoding:	ModifyRules literal
//gsoap tan  service method-input-action:	ModifyRules http://www.onvif.org/ver20/analytics/wsdl/ModifyRules
//gsoap tan  service method-output-action:	ModifyRules http://www.onvif.org/ver20/analytics/wsdl/ModifyRulesResponse
int __tan__ModifyRules(
    struct _tan__ModifyRules*           tan__ModifyRules,	///< Input parameter
    struct _tan__ModifyRulesResponse   *tan__ModifyRulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__GetServiceCapabilities" of service binding "RuleEngineBinding".
Returns the capabilities of the analytics service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tan__GetServiceCapabilities* tan__GetServiceCapabilities,
    // output parameters:
    struct _tan__GetServiceCapabilitiesResponse*tan__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tan__GetServiceCapabilities* tan__GetServiceCapabilities,
    // output parameters:
    struct _tan__GetServiceCapabilitiesResponse*tan__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tan  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tan  service method-style:	GetServiceCapabilities document
//gsoap tan  service method-encoding:	GetServiceCapabilities literal
//gsoap tan  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver20/analytics/wsdl/GetServiceCapabilities
//gsoap tan  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/analytics/wsdl/GetServiceCapabilitiesResponse
int __tan__GetServiceCapabilities(
    struct _tan__GetServiceCapabilities* tan__GetServiceCapabilities,	///< Input parameter
    struct _tan__GetServiceCapabilitiesResponse*tan__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__GetSupportedAnalyticsModules                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__GetSupportedAnalyticsModules" of service binding "RuleEngineBinding".

				List all analytics modules that are supported by
the given VideoAnalyticsConfiguration.
				The result of this method may depend on the overall
Video analytics configuration of the device,
				which is available via the current set of profiles.

			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__GetSupportedAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tan__GetSupportedAnalyticsModules* tan__GetSupportedAnalyticsModules,
    // output parameters:
    struct _tan__GetSupportedAnalyticsModulesResponse*tan__GetSupportedAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__GetSupportedAnalyticsModules(
    struct soap *soap,
    // input parameters:
    struct _tan__GetSupportedAnalyticsModules* tan__GetSupportedAnalyticsModules,
    // output parameters:
    struct _tan__GetSupportedAnalyticsModulesResponse*tan__GetSupportedAnalyticsModulesResponse
  );
@endcode

*/

//gsoap tan  service method-protocol:	GetSupportedAnalyticsModules SOAP
//gsoap tan  service method-style:	GetSupportedAnalyticsModules document
//gsoap tan  service method-encoding:	GetSupportedAnalyticsModules literal
//gsoap tan  service method-input-action:	GetSupportedAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModules
//gsoap tan  service method-output-action:	GetSupportedAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModulesResponse
int __tan__GetSupportedAnalyticsModules(
    struct _tan__GetSupportedAnalyticsModules* tan__GetSupportedAnalyticsModules,	///< Input parameter
    struct _tan__GetSupportedAnalyticsModulesResponse*tan__GetSupportedAnalyticsModulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__CreateAnalyticsModules                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__CreateAnalyticsModules" of service binding "RuleEngineBinding".

				Add one or more analytics modules to an existing
VideoAnalyticsConfiguration.
				The available supported types can be retrieved via
<a href="#op.GetSupportedAnalyticsModules">GetSupportedAnalyticsModules</a>, 
				where the Name of the supported AnalyticsModules
correspond to the type of an AnalyticsModule instance.<br/>
				Pass unique module names which can be later used
as reference. The Parameters of the analytics module must match those of the corresponding
AnalyticsModuleDescription.
				<br/>
				Although this method is mandatory a device implementation
must not support adding modules. 
				Instead it can provide a fixed set of predefined
configurations via the media service function 
				<a href="media.wsdl#op.GetCompatibleVideoAnalyticsConfigurations">GetCompatibleVideoAnalyticsConfigurations</a>.
				<br/>
				The device shall ensure that a corresponding analytics
engine starts operation when a client
				subscribes directly or indirectly for events produced
by the analytics or rule engine or when a
				client requests the corresponding scene description
stream.
				An analytics module must be attached to a Video
source using the media profiles before it can be used.
				In case differing analytics configurations are attached
to the same profile it is undefined which
				of the analytics module configuration becomes active
if no stream is activated or multiple streams
				with different profiles are activated at the same
time.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__CreateAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tan__CreateAnalyticsModules* tan__CreateAnalyticsModules,
    // output parameters:
    struct _tan__CreateAnalyticsModulesResponse*tan__CreateAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__CreateAnalyticsModules(
    struct soap *soap,
    // input parameters:
    struct _tan__CreateAnalyticsModules* tan__CreateAnalyticsModules,
    // output parameters:
    struct _tan__CreateAnalyticsModulesResponse*tan__CreateAnalyticsModulesResponse
  );
@endcode

*/

//gsoap tan  service method-protocol:	CreateAnalyticsModules SOAP
//gsoap tan  service method-style:	CreateAnalyticsModules document
//gsoap tan  service method-encoding:	CreateAnalyticsModules literal
//gsoap tan  service method-input-action:	CreateAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModules
//gsoap tan  service method-output-action:	CreateAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModulesResponse
int __tan__CreateAnalyticsModules(
    struct _tan__CreateAnalyticsModules* tan__CreateAnalyticsModules,	///< Input parameter
    struct _tan__CreateAnalyticsModulesResponse*tan__CreateAnalyticsModulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__DeleteAnalyticsModules                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__DeleteAnalyticsModules" of service binding "RuleEngineBinding".

				Remove one or more analytics modules from a VideoAnalyticsConfiguration
referenced by their names.<br/>
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__DeleteAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tan__DeleteAnalyticsModules* tan__DeleteAnalyticsModules,
    // output parameters:
    struct _tan__DeleteAnalyticsModulesResponse*tan__DeleteAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__DeleteAnalyticsModules(
    struct soap *soap,
    // input parameters:
    struct _tan__DeleteAnalyticsModules* tan__DeleteAnalyticsModules,
    // output parameters:
    struct _tan__DeleteAnalyticsModulesResponse*tan__DeleteAnalyticsModulesResponse
  );
@endcode

*/

//gsoap tan  service method-protocol:	DeleteAnalyticsModules SOAP
//gsoap tan  service method-style:	DeleteAnalyticsModules document
//gsoap tan  service method-encoding:	DeleteAnalyticsModules literal
//gsoap tan  service method-input-action:	DeleteAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModules
//gsoap tan  service method-output-action:	DeleteAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModulesResponse
int __tan__DeleteAnalyticsModules(
    struct _tan__DeleteAnalyticsModules* tan__DeleteAnalyticsModules,	///< Input parameter
    struct _tan__DeleteAnalyticsModulesResponse*tan__DeleteAnalyticsModulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__GetAnalyticsModules                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__GetAnalyticsModules" of service binding "RuleEngineBinding".

				List the currently assigned set of analytics modules
of a VideoAnalyticsConfiguration.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__GetAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tan__GetAnalyticsModules*   tan__GetAnalyticsModules,
    // output parameters:
    struct _tan__GetAnalyticsModulesResponse*tan__GetAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__GetAnalyticsModules(
    struct soap *soap,
    // input parameters:
    struct _tan__GetAnalyticsModules*   tan__GetAnalyticsModules,
    // output parameters:
    struct _tan__GetAnalyticsModulesResponse*tan__GetAnalyticsModulesResponse
  );
@endcode

*/

//gsoap tan  service method-protocol:	GetAnalyticsModules SOAP
//gsoap tan  service method-style:	GetAnalyticsModules document
//gsoap tan  service method-encoding:	GetAnalyticsModules literal
//gsoap tan  service method-input-action:	GetAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModules
//gsoap tan  service method-output-action:	GetAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModulesResponse
int __tan__GetAnalyticsModules(
    struct _tan__GetAnalyticsModules*   tan__GetAnalyticsModules,	///< Input parameter
    struct _tan__GetAnalyticsModulesResponse*tan__GetAnalyticsModulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__ModifyAnalyticsModules                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__ModifyAnalyticsModules" of service binding "RuleEngineBinding".

				Modify the settings of one or more analytics modules
of a VideoAnalyticsConfiguration. The modules are referenced by their names.
				It is allowed to pass only a subset to be modified.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__ModifyAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tan__ModifyAnalyticsModules* tan__ModifyAnalyticsModules,
    // output parameters:
    struct _tan__ModifyAnalyticsModulesResponse*tan__ModifyAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__ModifyAnalyticsModules(
    struct soap *soap,
    // input parameters:
    struct _tan__ModifyAnalyticsModules* tan__ModifyAnalyticsModules,
    // output parameters:
    struct _tan__ModifyAnalyticsModulesResponse*tan__ModifyAnalyticsModulesResponse
  );
@endcode

*/

//gsoap tan  service method-protocol:	ModifyAnalyticsModules SOAP
//gsoap tan  service method-style:	ModifyAnalyticsModules document
//gsoap tan  service method-encoding:	ModifyAnalyticsModules literal
//gsoap tan  service method-input-action:	ModifyAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModules
//gsoap tan  service method-output-action:	ModifyAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModulesResponse
int __tan__ModifyAnalyticsModules(
    struct _tan__ModifyAnalyticsModules* tan__ModifyAnalyticsModules,	///< Input parameter
    struct _tan__ModifyAnalyticsModulesResponse*tan__ModifyAnalyticsModulesResponse	///< Output parameter
);

/**

@page RuleEngineBinding Binding "RuleEngineBinding"

@section RuleEngineBinding_policy_enablers Policy Enablers of Binding "RuleEngineBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   RemoteDiscoveryBinding                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Hello                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tdn__Hello" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/network/wsdl/Hello"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Hello"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/HelloResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Hello(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__HelloType                     tdn__Hello,
    // output parameters:
    wsdd__ResolveType                  *tdn__HelloResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Hello(
    struct soap *soap,
    // input parameters:
    wsdd__HelloType                     tdn__Hello,
    // output parameters:
    wsdd__ResolveType                  *tdn__HelloResponse
  );
@endcode

*/

//gsoap tdn  service method-protocol:	Hello SOAP
//gsoap tdn  service method-style:	Hello document
//gsoap tdn  service method-encoding:	Hello literal
//gsoap tdn  service method-input-action:	Hello http://www.onvif.org/ver10/network/wsdl/Hello
//gsoap tdn  service method-output-action:	Hello http://www.onvif.org/ver10/network/wsdl/HelloResponse
int __tdn__Hello(
    wsdd__HelloType                     tdn__Hello,	///< Input parameter
    wsdd__ResolveType                  *tdn__HelloResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Bye                                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tdn__Bye" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/network/wsdl/Bye"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Bye"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/ByeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Bye(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__ByeType                       tdn__Bye,
    // output parameters:
    wsdd__ResolveType                  *tdn__ByeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Bye(
    struct soap *soap,
    // input parameters:
    wsdd__ByeType                       tdn__Bye,
    // output parameters:
    wsdd__ResolveType                  *tdn__ByeResponse
  );
@endcode

*/

//gsoap tdn  service method-protocol:	Bye SOAP
//gsoap tdn  service method-style:	Bye document
//gsoap tdn  service method-encoding:	Bye literal
//gsoap tdn  service method-input-action:	Bye http://www.onvif.org/ver10/network/wsdl/Bye
//gsoap tdn  service method-output-action:	Bye http://www.onvif.org/ver10/network/wsdl/ByeResponse
int __tdn__Bye(
    wsdd__ByeType                       tdn__Bye,	///< Input parameter
    wsdd__ResolveType                  *tdn__ByeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Probe                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tdn__Probe" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/network/wsdl/Probe"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Probe"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/ProbeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Probe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__ProbeType                     tdn__Probe,
    // output parameters:
    wsdd__ProbeMatchesType             *tdn__ProbeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Probe(
    struct soap *soap,
    // input parameters:
    wsdd__ProbeType                     tdn__Probe,
    // output parameters:
    wsdd__ProbeMatchesType             *tdn__ProbeResponse
  );
@endcode

*/

//gsoap tdn  service method-protocol:	Probe SOAP
//gsoap tdn  service method-style:	Probe document
//gsoap tdn  service method-encoding:	Probe literal
//gsoap tdn  service method-input-action:	Probe http://www.onvif.org/ver10/network/wsdl/Probe
//gsoap tdn  service method-output-action:	Probe http://www.onvif.org/ver10/network/wsdl/ProbeResponse
int __tdn__Probe(
    wsdd__ProbeType                     tdn__Probe,	///< Input parameter
    wsdd__ProbeMatchesType             *tdn__ProbeResponse	///< Output parameter
);

/**

@page RemoteDiscoveryBinding Binding "RemoteDiscoveryBinding"

@section RemoteDiscoveryBinding_policy_enablers Policy Enablers of Binding "RemoteDiscoveryBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServices                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServices" of service binding "DeviceBinding".
Returns information about services on the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServicesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServices(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetServices*           tds__GetServices,
    // output parameters:
    struct _tds__GetServicesResponse   *tds__GetServicesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServices(
    struct soap *soap,
    // input parameters:
    struct _tds__GetServices*           tds__GetServices,
    // output parameters:
    struct _tds__GetServicesResponse   *tds__GetServicesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetServices SOAP
//gsoap tds  service method-style:	GetServices document
//gsoap tds  service method-encoding:	GetServices literal
//gsoap tds  service method-input-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServices
//gsoap tds  service method-output-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServicesResponse
int __tds__GetServices(
    struct _tds__GetServices*           tds__GetServices,	///< Input parameter
    struct _tds__GetServicesResponse   *tds__GetServicesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServiceCapabilities" of service binding "DeviceBinding".
Returns the capabilities of the device service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetServiceCapabilities* tds__GetServiceCapabilities,
    // output parameters:
    struct _tds__GetServiceCapabilitiesResponse*tds__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tds__GetServiceCapabilities* tds__GetServiceCapabilities,
    // output parameters:
    struct _tds__GetServiceCapabilitiesResponse*tds__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tds  service method-style:	GetServiceCapabilities document
//gsoap tds  service method-encoding:	GetServiceCapabilities literal
//gsoap tds  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities
//gsoap tds  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse
int __tds__GetServiceCapabilities(
    struct _tds__GetServiceCapabilities* tds__GetServiceCapabilities,	///< Input parameter
    struct _tds__GetServiceCapabilitiesResponse*tds__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDeviceInformation                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDeviceInformation" of service binding "DeviceBinding".
This operation gets basic device information from the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDeviceInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDeviceInformation*  tds__GetDeviceInformation,
    // output parameters:
    struct _tds__GetDeviceInformationResponse*tds__GetDeviceInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDeviceInformation(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDeviceInformation*  tds__GetDeviceInformation,
    // output parameters:
    struct _tds__GetDeviceInformationResponse*tds__GetDeviceInformationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDeviceInformation SOAP
//gsoap tds  service method-style:	GetDeviceInformation document
//gsoap tds  service method-encoding:	GetDeviceInformation literal
//gsoap tds  service method-input-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation
//gsoap tds  service method-output-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse
int __tds__GetDeviceInformation(
    struct _tds__GetDeviceInformation*  tds__GetDeviceInformation,	///< Input parameter
    struct _tds__GetDeviceInformationResponse*tds__GetDeviceInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemDateAndTime" of service binding "DeviceBinding".
This operation sets the device system date and time. The device shall support the
				configuration of the daylight saving setting and
of the manual system date and time (if
				applicable) or indication of NTP time (if applicable)
through the SetSystemDateAndTime
				command. <br/>
				If system time and date are set manually, the client
shall include UTCDateTime in the request.<br/>
				A TimeZone token which is not formed according to
the rules of IEEE 1003.1 section 8.3 is considered as invalid timezone.<br/>
				The DayLightSavings flag should be set to true to
activate any DST settings of the TimeZone string. 
				Clear the DayLightSavings flag if the DST portion
of the TimeZone settings should be ignored.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetSystemDateAndTime*  tds__SetSystemDateAndTime,
    // output parameters:
    struct _tds__SetSystemDateAndTimeResponse*tds__SetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    struct _tds__SetSystemDateAndTime*  tds__SetSystemDateAndTime,
    // output parameters:
    struct _tds__SetSystemDateAndTimeResponse*tds__SetSystemDateAndTimeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetSystemDateAndTime SOAP
//gsoap tds  service method-style:	SetSystemDateAndTime document
//gsoap tds  service method-encoding:	SetSystemDateAndTime literal
//gsoap tds  service method-input-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime
//gsoap tds  service method-output-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse
int __tds__SetSystemDateAndTime(
    struct _tds__SetSystemDateAndTime*  tds__SetSystemDateAndTime,	///< Input parameter
    struct _tds__SetSystemDateAndTimeResponse*tds__SetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemDateAndTime" of service binding "DeviceBinding".
This operation gets the device system date and time. The device shall support the
return of
				the daylight saving setting and of the manual system
date and time (if applicable) or indication
				of NTP time (if applicable) through the GetSystemDateAndTime
command.<br/>
				A device shall provide the UTCDateTime information.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemDateAndTime*  tds__GetSystemDateAndTime,
    // output parameters:
    struct _tds__GetSystemDateAndTimeResponse*tds__GetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemDateAndTime*  tds__GetSystemDateAndTime,
    // output parameters:
    struct _tds__GetSystemDateAndTimeResponse*tds__GetSystemDateAndTimeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemDateAndTime SOAP
//gsoap tds  service method-style:	GetSystemDateAndTime document
//gsoap tds  service method-encoding:	GetSystemDateAndTime literal
//gsoap tds  service method-input-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime
//gsoap tds  service method-output-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse
int __tds__GetSystemDateAndTime(
    struct _tds__GetSystemDateAndTime*  tds__GetSystemDateAndTime,	///< Input parameter
    struct _tds__GetSystemDateAndTimeResponse*tds__GetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemFactoryDefault                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemFactoryDefault" of service binding "DeviceBinding".
This operation reloads the parameters on the device to their factory default values.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemFactoryDefault(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetSystemFactoryDefault* tds__SetSystemFactoryDefault,
    // output parameters:
    struct _tds__SetSystemFactoryDefaultResponse*tds__SetSystemFactoryDefaultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemFactoryDefault(
    struct soap *soap,
    // input parameters:
    struct _tds__SetSystemFactoryDefault* tds__SetSystemFactoryDefault,
    // output parameters:
    struct _tds__SetSystemFactoryDefaultResponse*tds__SetSystemFactoryDefaultResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetSystemFactoryDefault SOAP
//gsoap tds  service method-style:	SetSystemFactoryDefault document
//gsoap tds  service method-encoding:	SetSystemFactoryDefault literal
//gsoap tds  service method-input-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault
//gsoap tds  service method-output-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse
int __tds__SetSystemFactoryDefault(
    struct _tds__SetSystemFactoryDefault* tds__SetSystemFactoryDefault,	///< Input parameter
    struct _tds__SetSystemFactoryDefaultResponse*tds__SetSystemFactoryDefaultResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__UpgradeSystemFirmware                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__UpgradeSystemFirmware" of service binding "DeviceBinding".
This operation upgrades a device firmware version. After a successful upgrade the
response
				message is sent before the device reboots. The device
should support firmware upgrade
				through the UpgradeSystemFirmware command. The exact
format of the firmware data is
				outside the scope of this standard.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__UpgradeSystemFirmware(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__UpgradeSystemFirmware* tds__UpgradeSystemFirmware,
    // output parameters:
    struct _tds__UpgradeSystemFirmwareResponse*tds__UpgradeSystemFirmwareResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__UpgradeSystemFirmware(
    struct soap *soap,
    // input parameters:
    struct _tds__UpgradeSystemFirmware* tds__UpgradeSystemFirmware,
    // output parameters:
    struct _tds__UpgradeSystemFirmwareResponse*tds__UpgradeSystemFirmwareResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	UpgradeSystemFirmware SOAP
//gsoap tds  service method-style:	UpgradeSystemFirmware document
//gsoap tds  service method-encoding:	UpgradeSystemFirmware literal
//gsoap tds  service method-input-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware
//gsoap tds  service method-output-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse
int __tds__UpgradeSystemFirmware(
    struct _tds__UpgradeSystemFirmware* tds__UpgradeSystemFirmware,	///< Input parameter
    struct _tds__UpgradeSystemFirmwareResponse*tds__UpgradeSystemFirmwareResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SystemReboot                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SystemReboot" of service binding "DeviceBinding".
This operation reboots the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SystemReboot(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SystemReboot*          tds__SystemReboot,
    // output parameters:
    struct _tds__SystemRebootResponse  *tds__SystemRebootResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SystemReboot(
    struct soap *soap,
    // input parameters:
    struct _tds__SystemReboot*          tds__SystemReboot,
    // output parameters:
    struct _tds__SystemRebootResponse  *tds__SystemRebootResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SystemReboot SOAP
//gsoap tds  service method-style:	SystemReboot document
//gsoap tds  service method-encoding:	SystemReboot literal
//gsoap tds  service method-input-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemReboot
//gsoap tds  service method-output-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse
int __tds__SystemReboot(
    struct _tds__SystemReboot*          tds__SystemReboot,	///< Input parameter
    struct _tds__SystemRebootResponse  *tds__SystemRebootResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RestoreSystem                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RestoreSystem" of service binding "DeviceBinding".
This operation restores the system backup configuration files(s) previously retrieved
from a
				device. The device should support restore of backup
configuration file(s) through the
				RestoreSystem command. The exact format of the backup
configuration file(s) is outside the
				scope of this standard. If the command is supported,
it shall accept backup files returned by
				the GetSystemBackup command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RestoreSystem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__RestoreSystem*         tds__RestoreSystem,
    // output parameters:
    struct _tds__RestoreSystemResponse *tds__RestoreSystemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RestoreSystem(
    struct soap *soap,
    // input parameters:
    struct _tds__RestoreSystem*         tds__RestoreSystem,
    // output parameters:
    struct _tds__RestoreSystemResponse *tds__RestoreSystemResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	RestoreSystem SOAP
//gsoap tds  service method-style:	RestoreSystem document
//gsoap tds  service method-encoding:	RestoreSystem literal
//gsoap tds  service method-input-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystem
//gsoap tds  service method-output-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse
int __tds__RestoreSystem(
    struct _tds__RestoreSystem*         tds__RestoreSystem,	///< Input parameter
    struct _tds__RestoreSystemResponse *tds__RestoreSystemResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemBackup                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemBackup" of service binding "DeviceBinding".
This operation is retrieves system backup configuration file(s) from a device. The
device
				should support return of back up configuration file(s)
through the GetSystemBackup command.
				The backup is returned with reference to a name
and mime-type together with binary data.
				The exact format of the backup configuration files
is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemBackup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemBackup*       tds__GetSystemBackup,
    // output parameters:
    struct _tds__GetSystemBackupResponse*tds__GetSystemBackupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemBackup(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemBackup*       tds__GetSystemBackup,
    // output parameters:
    struct _tds__GetSystemBackupResponse*tds__GetSystemBackupResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemBackup SOAP
//gsoap tds  service method-style:	GetSystemBackup document
//gsoap tds  service method-encoding:	GetSystemBackup literal
//gsoap tds  service method-input-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackup
//gsoap tds  service method-output-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse
int __tds__GetSystemBackup(
    struct _tds__GetSystemBackup*       tds__GetSystemBackup,	///< Input parameter
    struct _tds__GetSystemBackupResponse*tds__GetSystemBackupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemLog                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemLog" of service binding "DeviceBinding".
This operation gets a system log from the device. The exact format of the system
logs is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemLog(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemLog*          tds__GetSystemLog,
    // output parameters:
    struct _tds__GetSystemLogResponse  *tds__GetSystemLogResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemLog(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemLog*          tds__GetSystemLog,
    // output parameters:
    struct _tds__GetSystemLogResponse  *tds__GetSystemLogResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemLog SOAP
//gsoap tds  service method-style:	GetSystemLog document
//gsoap tds  service method-encoding:	GetSystemLog literal
//gsoap tds  service method-input-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLog
//gsoap tds  service method-output-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse
int __tds__GetSystemLog(
    struct _tds__GetSystemLog*          tds__GetSystemLog,	///< Input parameter
    struct _tds__GetSystemLogResponse  *tds__GetSystemLogResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemSupportInformation                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemSupportInformation" of service binding "DeviceBinding".
This operation gets arbitary device diagnostics information from the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemSupportInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemSupportInformation* tds__GetSystemSupportInformation,
    // output parameters:
    struct _tds__GetSystemSupportInformationResponse*tds__GetSystemSupportInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemSupportInformation(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemSupportInformation* tds__GetSystemSupportInformation,
    // output parameters:
    struct _tds__GetSystemSupportInformationResponse*tds__GetSystemSupportInformationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemSupportInformation SOAP
//gsoap tds  service method-style:	GetSystemSupportInformation document
//gsoap tds  service method-encoding:	GetSystemSupportInformation literal
//gsoap tds  service method-input-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation
//gsoap tds  service method-output-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse
int __tds__GetSystemSupportInformation(
    struct _tds__GetSystemSupportInformation* tds__GetSystemSupportInformation,	///< Input parameter
    struct _tds__GetSystemSupportInformationResponse*tds__GetSystemSupportInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetScopes" of service binding "DeviceBinding".
This operation requests the scope parameters of a device. The scope parameters are
used in
				the device discovery to match a probe message, see
Section 7. The Scope parameters are of
				two different types: <ul>
					<li>Fixed</li>
					<li>Configurable</li>
				</ul>
				Fixed scope parameters are permanent device characteristics
and cannot be removed through the device management interface. 
				The scope type is indicated in the scope list returned
in the get scope parameters response. A device shall support 
				retrieval of discovery scope parameters through
the GetScopes command. As some scope parameters are mandatory, 
				the device shall return a non-empty scope list in
the response.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetScopes*             tds__GetScopes,
    // output parameters:
    struct _tds__GetScopesResponse     *tds__GetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__GetScopes*             tds__GetScopes,
    // output parameters:
    struct _tds__GetScopesResponse     *tds__GetScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetScopes SOAP
//gsoap tds  service method-style:	GetScopes document
//gsoap tds  service method-encoding:	GetScopes literal
//gsoap tds  service method-input-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopes
//gsoap tds  service method-output-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopesResponse
int __tds__GetScopes(
    struct _tds__GetScopes*             tds__GetScopes,	///< Input parameter
    struct _tds__GetScopesResponse     *tds__GetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetScopes" of service binding "DeviceBinding".
This operation sets the scope parameters of a device. The scope parameters are used
in the
				device discovery to match a probe message.
				This operation replaces all existing configurable
scope parameters (not fixed parameters). If
				this shall be avoided, one should use the scope
add command instead. The device shall
				support configuration of discovery scope parameters
through the SetScopes command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetScopes*             tds__SetScopes,
    // output parameters:
    struct _tds__SetScopesResponse     *tds__SetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__SetScopes*             tds__SetScopes,
    // output parameters:
    struct _tds__SetScopesResponse     *tds__SetScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetScopes SOAP
//gsoap tds  service method-style:	SetScopes document
//gsoap tds  service method-encoding:	SetScopes literal
//gsoap tds  service method-input-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopes
//gsoap tds  service method-output-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopesResponse
int __tds__SetScopes(
    struct _tds__SetScopes*             tds__SetScopes,	///< Input parameter
    struct _tds__SetScopesResponse     *tds__SetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddScopes" of service binding "DeviceBinding".
This operation adds new configurable scope parameters to a device. The scope parameters
				are used in the device discovery to match a probe
message. The device shall
				support addition of discovery scope parameters through
the AddScopes command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__AddScopes*             tds__AddScopes,
    // output parameters:
    struct _tds__AddScopesResponse     *tds__AddScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__AddScopes*             tds__AddScopes,
    // output parameters:
    struct _tds__AddScopesResponse     *tds__AddScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	AddScopes SOAP
//gsoap tds  service method-style:	AddScopes document
//gsoap tds  service method-encoding:	AddScopes literal
//gsoap tds  service method-input-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopes
//gsoap tds  service method-output-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopesResponse
int __tds__AddScopes(
    struct _tds__AddScopes*             tds__AddScopes,	///< Input parameter
    struct _tds__AddScopesResponse     *tds__AddScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveScopes                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveScopes" of service binding "DeviceBinding".
This operation deletes scope-configurable scope parameters from a device. The scope
				parameters are used in the device discovery to match
a probe message, see Section 7. The
				device shall support deletion of discovery scope
parameters through the RemoveScopes
				command.
				Table

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__RemoveScopes*          tds__RemoveScopes,
    // output parameters:
    struct _tds__RemoveScopesResponse  *tds__RemoveScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__RemoveScopes*          tds__RemoveScopes,
    // output parameters:
    struct _tds__RemoveScopesResponse  *tds__RemoveScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	RemoveScopes SOAP
//gsoap tds  service method-style:	RemoveScopes document
//gsoap tds  service method-encoding:	RemoveScopes literal
//gsoap tds  service method-input-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopes
//gsoap tds  service method-output-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse
int __tds__RemoveScopes(
    struct _tds__RemoveScopes*          tds__RemoveScopes,	///< Input parameter
    struct _tds__RemoveScopesResponse  *tds__RemoveScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDiscoveryMode" of service binding "DeviceBinding".
This operation gets the discovery mode of a device. See Section 7.2 for the definition
of the
				different device discovery modes. The device shall
support retrieval of the discovery mode
				setting through the GetDiscoveryMode command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDiscoveryMode*      tds__GetDiscoveryMode,
    // output parameters:
    struct _tds__GetDiscoveryModeResponse*tds__GetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDiscoveryMode*      tds__GetDiscoveryMode,
    // output parameters:
    struct _tds__GetDiscoveryModeResponse*tds__GetDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDiscoveryMode SOAP
//gsoap tds  service method-style:	GetDiscoveryMode document
//gsoap tds  service method-encoding:	GetDiscoveryMode literal
//gsoap tds  service method-input-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode
//gsoap tds  service method-output-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse
int __tds__GetDiscoveryMode(
    struct _tds__GetDiscoveryMode*      tds__GetDiscoveryMode,	///< Input parameter
    struct _tds__GetDiscoveryModeResponse*tds__GetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDiscoveryMode" of service binding "DeviceBinding".
This operation sets the discovery mode operation of a device. See Section 7.2 for
the
				definition of the different device discovery modes.
The device shall support configuration of
				the discovery mode setting through the SetDiscoveryMode
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDiscoveryMode*      tds__SetDiscoveryMode,
    // output parameters:
    struct _tds__SetDiscoveryModeResponse*tds__SetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDiscoveryMode*      tds__SetDiscoveryMode,
    // output parameters:
    struct _tds__SetDiscoveryModeResponse*tds__SetDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDiscoveryMode SOAP
//gsoap tds  service method-style:	SetDiscoveryMode document
//gsoap tds  service method-encoding:	SetDiscoveryMode literal
//gsoap tds  service method-input-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode
//gsoap tds  service method-output-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse
int __tds__SetDiscoveryMode(
    struct _tds__SetDiscoveryMode*      tds__SetDiscoveryMode,	///< Input parameter
    struct _tds__SetDiscoveryModeResponse*tds__SetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation gets the remote discovery mode of a device. See Section 7.4 for the
definition
				of remote discovery extensions. A device that supports
remote discovery shall support
				retrieval of the remote discovery mode setting through
the GetRemoteDiscoveryMode
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetRemoteDiscoveryMode* tds__GetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__GetRemoteDiscoveryModeResponse*tds__GetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__GetRemoteDiscoveryMode* tds__GetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__GetRemoteDiscoveryModeResponse*tds__GetRemoteDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	GetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	GetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse
int __tds__GetRemoteDiscoveryMode(
    struct _tds__GetRemoteDiscoveryMode* tds__GetRemoteDiscoveryMode,	///< Input parameter
    struct _tds__GetRemoteDiscoveryModeResponse*tds__GetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation sets the remote discovery mode of operation of a device. See Section
7.4 for
				the definition of remote discovery remote extensions.
A device that supports remote discovery
				shall support configuration of the discovery mode
setting through the
				SetRemoteDiscoveryMode command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRemoteDiscoveryMode* tds__SetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__SetRemoteDiscoveryModeResponse*tds__SetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRemoteDiscoveryMode* tds__SetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__SetRemoteDiscoveryModeResponse*tds__SetRemoteDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	SetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	SetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse
int __tds__SetRemoteDiscoveryMode(
    struct _tds__SetRemoteDiscoveryMode* tds__SetRemoteDiscoveryMode,	///< Input parameter
    struct _tds__SetRemoteDiscoveryModeResponse*tds__SetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDPAddresses" of service binding "DeviceBinding".
This operation gets the remote DP address or addresses from a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support retrieval of the remote
				DP address(es) through the GetDPAddresses command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDPAddresses*        tds__GetDPAddresses,
    // output parameters:
    struct _tds__GetDPAddressesResponse*tds__GetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDPAddresses(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDPAddresses*        tds__GetDPAddresses,
    // output parameters:
    struct _tds__GetDPAddressesResponse*tds__GetDPAddressesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDPAddresses SOAP
//gsoap tds  service method-style:	GetDPAddresses document
//gsoap tds  service method-encoding:	GetDPAddresses literal
//gsoap tds  service method-input-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddresses
//gsoap tds  service method-output-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse
int __tds__GetDPAddresses(
    struct _tds__GetDPAddresses*        tds__GetDPAddresses,	///< Input parameter
    struct _tds__GetDPAddressesResponse*tds__GetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetEndpointReference                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetEndpointReference" of service binding "DeviceBinding".
A client can ask for the device service endpoint reference address property that
can be used
				to derive the password equivalent for remote user
operation. The device shall support the
				GetEndpointReference command returning the address
property of the device service
				endpoint reference.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetEndpointReference(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetEndpointReference*  tds__GetEndpointReference,
    // output parameters:
    struct _tds__GetEndpointReferenceResponse*tds__GetEndpointReferenceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetEndpointReference(
    struct soap *soap,
    // input parameters:
    struct _tds__GetEndpointReference*  tds__GetEndpointReference,
    // output parameters:
    struct _tds__GetEndpointReferenceResponse*tds__GetEndpointReferenceResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetEndpointReference SOAP
//gsoap tds  service method-style:	GetEndpointReference document
//gsoap tds  service method-encoding:	GetEndpointReference literal
//gsoap tds  service method-input-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReference
//gsoap tds  service method-output-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse
int __tds__GetEndpointReference(
    struct _tds__GetEndpointReference*  tds__GetEndpointReference,	///< Input parameter
    struct _tds__GetEndpointReferenceResponse*tds__GetEndpointReferenceResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteUser" of service binding "DeviceBinding".
This operation returns the configured remote user (if any). A device supporting
remote user
				handling shall support this operation. The user
is only valid for the WS-UserToken profile or
				as a HTTP / RTSP user.<br/>
				The algorithm to use for deriving the password is
described in section 5.12.2.1 of the core specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetRemoteUser*         tds__GetRemoteUser,
    // output parameters:
    struct _tds__GetRemoteUserResponse *tds__GetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteUser(
    struct soap *soap,
    // input parameters:
    struct _tds__GetRemoteUser*         tds__GetRemoteUser,
    // output parameters:
    struct _tds__GetRemoteUserResponse *tds__GetRemoteUserResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetRemoteUser SOAP
//gsoap tds  service method-style:	GetRemoteUser document
//gsoap tds  service method-encoding:	GetRemoteUser literal
//gsoap tds  service method-input-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUser
//gsoap tds  service method-output-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse
int __tds__GetRemoteUser(
    struct _tds__GetRemoteUser*         tds__GetRemoteUser,	///< Input parameter
    struct _tds__GetRemoteUserResponse *tds__GetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteUser" of service binding "DeviceBinding".
This operation sets the remote user. A device supporting remote user handling shall
support this
				operation. The user is only valid for the WS-UserToken
profile or as a HTTP / RTSP user.<br/>
				The password that is set shall always be the original
(not derived) password.<br/>
				If UseDerivedPassword is set password derivation
shall be done by the device when connecting to a
				remote device.The algorithm to use for deriving
the password is described in section 5.12.2.1 of the core specification.<br/>
				To remove the remote user SetRemoteUser should be
called without the RemoteUser parameter.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRemoteUser*         tds__SetRemoteUser,
    // output parameters:
    struct _tds__SetRemoteUserResponse *tds__SetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteUser(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRemoteUser*         tds__SetRemoteUser,
    // output parameters:
    struct _tds__SetRemoteUserResponse *tds__SetRemoteUserResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRemoteUser SOAP
//gsoap tds  service method-style:	SetRemoteUser document
//gsoap tds  service method-encoding:	SetRemoteUser literal
//gsoap tds  service method-input-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUser
//gsoap tds  service method-output-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse
int __tds__SetRemoteUser(
    struct _tds__SetRemoteUser*         tds__SetRemoteUser,	///< Input parameter
    struct _tds__SetRemoteUserResponse *tds__SetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetUsers                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetUsers" of service binding "DeviceBinding".
This operation lists the registered users and corresponding credentials on a device.
The
				device shall support retrieval of registered device
users and their credentials for the user
				token through the GetUsers command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetUsers*              tds__GetUsers,
    // output parameters:
    struct _tds__GetUsersResponse      *tds__GetUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetUsers(
    struct soap *soap,
    // input parameters:
    struct _tds__GetUsers*              tds__GetUsers,
    // output parameters:
    struct _tds__GetUsersResponse      *tds__GetUsersResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetUsers SOAP
//gsoap tds  service method-style:	GetUsers document
//gsoap tds  service method-encoding:	GetUsers literal
//gsoap tds  service method-input-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsers
//gsoap tds  service method-output-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsersResponse
int __tds__GetUsers(
    struct _tds__GetUsers*              tds__GetUsers,	///< Input parameter
    struct _tds__GetUsersResponse      *tds__GetUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateUsers" of service binding "DeviceBinding".
This operation creates new device users and corresponding credentials on a device
for authentication purposes. 
				The device shall support creation of device users
and their credentials through the CreateUsers
				command. Either all users are created successfully
or a fault message shall be returned
				without creating any user.<br/>
				ONVIF compliant devices are recommended to support
password length of at least 28 bytes,
				as clients may follow the password derivation mechanism
which results in 'password
				equivalent' of length 28 bytes, as described in
section 3.1.2 of the ONVIF security white paper.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateUsers*           tds__CreateUsers,
    // output parameters:
    struct _tds__CreateUsersResponse   *tds__CreateUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateUsers(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateUsers*           tds__CreateUsers,
    // output parameters:
    struct _tds__CreateUsersResponse   *tds__CreateUsersResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateUsers SOAP
//gsoap tds  service method-style:	CreateUsers document
//gsoap tds  service method-encoding:	CreateUsers literal
//gsoap tds  service method-input-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsers
//gsoap tds  service method-output-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse
int __tds__CreateUsers(
    struct _tds__CreateUsers*           tds__CreateUsers,	///< Input parameter
    struct _tds__CreateUsersResponse   *tds__CreateUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteUsers" of service binding "DeviceBinding".
This operation deletes users on a device. The device shall support deletion of device
users and their credentials 
				through the DeleteUsers command. A device may have
one or more fixed users
				that cannot be deleted to ensure access to the unit.
Either all users are deleted successfully or a
				fault message shall be returned and no users be
deleted.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteUsers*           tds__DeleteUsers,
    // output parameters:
    struct _tds__DeleteUsersResponse   *tds__DeleteUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteUsers(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteUsers*           tds__DeleteUsers,
    // output parameters:
    struct _tds__DeleteUsersResponse   *tds__DeleteUsersResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteUsers SOAP
//gsoap tds  service method-style:	DeleteUsers document
//gsoap tds  service method-encoding:	DeleteUsers literal
//gsoap tds  service method-input-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsers
//gsoap tds  service method-output-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse
int __tds__DeleteUsers(
    struct _tds__DeleteUsers*           tds__DeleteUsers,	///< Input parameter
    struct _tds__DeleteUsersResponse   *tds__DeleteUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetUser                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetUser" of service binding "DeviceBinding".
This operation updates the settings for one or several users on a device for authentication
purposes.
				The device shall support update of device users
and their credentials through the SetUser command. 
				Either all change requests are processed successfully
or a fault message shall be returned and no change requests be processed.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetUser*               tds__SetUser,
    // output parameters:
    struct _tds__SetUserResponse       *tds__SetUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetUser(
    struct soap *soap,
    // input parameters:
    struct _tds__SetUser*               tds__SetUser,
    // output parameters:
    struct _tds__SetUserResponse       *tds__SetUserResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetUser SOAP
//gsoap tds  service method-style:	SetUser document
//gsoap tds  service method-encoding:	SetUser literal
//gsoap tds  service method-input-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUser
//gsoap tds  service method-output-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUserResponse
int __tds__SetUser(
    struct _tds__SetUser*               tds__SetUser,	///< Input parameter
    struct _tds__SetUserResponse       *tds__SetUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetWsdlUrl                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetWsdlUrl" of service binding "DeviceBinding".
It is possible for an endpoint to request a URL that can be used to retrieve the
complete
				schema and WSDL definitions of a device. The command
gives in return a URL entry point
				where all the necessary product specific WSDL and
schema definitions can be retrieved. The
				device shall provide a URL for WSDL and schema download
through the GetWsdlUrl command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetWsdlUrl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetWsdlUrl*            tds__GetWsdlUrl,
    // output parameters:
    struct _tds__GetWsdlUrlResponse    *tds__GetWsdlUrlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetWsdlUrl(
    struct soap *soap,
    // input parameters:
    struct _tds__GetWsdlUrl*            tds__GetWsdlUrl,
    // output parameters:
    struct _tds__GetWsdlUrlResponse    *tds__GetWsdlUrlResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetWsdlUrl SOAP
//gsoap tds  service method-style:	GetWsdlUrl document
//gsoap tds  service method-encoding:	GetWsdlUrl literal
//gsoap tds  service method-input-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl
//gsoap tds  service method-output-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse
int __tds__GetWsdlUrl(
    struct _tds__GetWsdlUrl*            tds__GetWsdlUrl,	///< Input parameter
    struct _tds__GetWsdlUrlResponse    *tds__GetWsdlUrlResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCapabilities                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCapabilities" of service binding "DeviceBinding".
Any endpoint can ask for the capabilities of a device using the capability exchange
request
				response operation. The device shall indicate all
its ONVIF compliant capabilities through the
				GetCapabilities command.
				The capability list includes references to the addresses
(XAddr) of the service implementing
				the interface operations in the category. Apart
from the addresses, the
				capabilities only reflect optional functions.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCapabilities*       tds__GetCapabilities,
    // output parameters:
    struct _tds__GetCapabilitiesResponse*tds__GetCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCapabilities*       tds__GetCapabilities,
    // output parameters:
    struct _tds__GetCapabilitiesResponse*tds__GetCapabilitiesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCapabilities SOAP
//gsoap tds  service method-style:	GetCapabilities document
//gsoap tds  service method-encoding:	GetCapabilities literal
//gsoap tds  service method-input-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilities
//gsoap tds  service method-output-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse
int __tds__GetCapabilities(
    struct _tds__GetCapabilities*       tds__GetCapabilities,	///< Input parameter
    struct _tds__GetCapabilitiesResponse*tds__GetCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDPAddresses" of service binding "DeviceBinding".
This operation sets the remote DP address or addresses on a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support configuration of the
				remote DP address(es) through the SetDPAddresses
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDPAddresses*        tds__SetDPAddresses,
    // output parameters:
    struct _tds__SetDPAddressesResponse*tds__SetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDPAddresses(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDPAddresses*        tds__SetDPAddresses,
    // output parameters:
    struct _tds__SetDPAddressesResponse*tds__SetDPAddressesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDPAddresses SOAP
//gsoap tds  service method-style:	SetDPAddresses document
//gsoap tds  service method-encoding:	SetDPAddresses literal
//gsoap tds  service method-input-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddresses
//gsoap tds  service method-output-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse
int __tds__SetDPAddresses(
    struct _tds__SetDPAddresses*        tds__SetDPAddresses,	///< Input parameter
    struct _tds__SetDPAddressesResponse*tds__SetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetHostname" of service binding "DeviceBinding".
This operation is used by an endpoint to get the hostname from a device. The device
shall
				return its hostname configurations through the GetHostname
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetHostname*           tds__GetHostname,
    // output parameters:
    struct _tds__GetHostnameResponse   *tds__GetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetHostname(
    struct soap *soap,
    // input parameters:
    struct _tds__GetHostname*           tds__GetHostname,
    // output parameters:
    struct _tds__GetHostnameResponse   *tds__GetHostnameResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetHostname SOAP
//gsoap tds  service method-style:	GetHostname document
//gsoap tds  service method-encoding:	GetHostname literal
//gsoap tds  service method-input-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostname
//gsoap tds  service method-output-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse
int __tds__GetHostname(
    struct _tds__GetHostname*           tds__GetHostname,	///< Input parameter
    struct _tds__GetHostnameResponse   *tds__GetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostname" of service binding "DeviceBinding".
This operation sets the hostname on a device. It shall be possible to set the device
hostname
				configurations through the SetHostname command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.

			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetHostname*           tds__SetHostname,
    // output parameters:
    struct _tds__SetHostnameResponse   *tds__SetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostname(
    struct soap *soap,
    // input parameters:
    struct _tds__SetHostname*           tds__SetHostname,
    // output parameters:
    struct _tds__SetHostnameResponse   *tds__SetHostnameResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetHostname SOAP
//gsoap tds  service method-style:	SetHostname document
//gsoap tds  service method-encoding:	SetHostname literal
//gsoap tds  service method-input-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostname
//gsoap tds  service method-output-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse
int __tds__SetHostname(
    struct _tds__SetHostname*           tds__SetHostname,	///< Input parameter
    struct _tds__SetHostnameResponse   *tds__SetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostnameFromDHCP                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostnameFromDHCP" of service binding "DeviceBinding".
This operation controls whether the hostname is set manually or retrieved via DHCP.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostnameFromDHCP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetHostnameFromDHCP*   tds__SetHostnameFromDHCP,
    // output parameters:
    struct _tds__SetHostnameFromDHCPResponse*tds__SetHostnameFromDHCPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostnameFromDHCP(
    struct soap *soap,
    // input parameters:
    struct _tds__SetHostnameFromDHCP*   tds__SetHostnameFromDHCP,
    // output parameters:
    struct _tds__SetHostnameFromDHCPResponse*tds__SetHostnameFromDHCPResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetHostnameFromDHCP SOAP
//gsoap tds  service method-style:	SetHostnameFromDHCP document
//gsoap tds  service method-encoding:	SetHostnameFromDHCP literal
//gsoap tds  service method-input-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP
//gsoap tds  service method-output-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse
int __tds__SetHostnameFromDHCP(
    struct _tds__SetHostnameFromDHCP*   tds__SetHostnameFromDHCP,	///< Input parameter
    struct _tds__SetHostnameFromDHCPResponse*tds__SetHostnameFromDHCPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDNS" of service binding "DeviceBinding".
This operation gets the DNS settings from a device. The device shall return its
DNS
				configurations through the GetDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDNS*                tds__GetDNS,
    // output parameters:
    struct _tds__GetDNSResponse        *tds__GetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDNS*                tds__GetDNS,
    // output parameters:
    struct _tds__GetDNSResponse        *tds__GetDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDNS SOAP
//gsoap tds  service method-style:	GetDNS document
//gsoap tds  service method-encoding:	GetDNS literal
//gsoap tds  service method-input-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNS
//gsoap tds  service method-output-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNSResponse
int __tds__GetDNS(
    struct _tds__GetDNS*                tds__GetDNS,	///< Input parameter
    struct _tds__GetDNSResponse        *tds__GetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDNS" of service binding "DeviceBinding".
This operation sets the DNS settings on a device. It shall be possible to set the
device DNS
				configurations through the SetDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDNS*                tds__SetDNS,
    // output parameters:
    struct _tds__SetDNSResponse        *tds__SetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDNS*                tds__SetDNS,
    // output parameters:
    struct _tds__SetDNSResponse        *tds__SetDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDNS SOAP
//gsoap tds  service method-style:	SetDNS document
//gsoap tds  service method-encoding:	SetDNS literal
//gsoap tds  service method-input-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNS
//gsoap tds  service method-output-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNSResponse
int __tds__SetDNS(
    struct _tds__SetDNS*                tds__SetDNS,	///< Input parameter
    struct _tds__SetDNSResponse        *tds__SetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNTP" of service binding "DeviceBinding".
This operation gets the NTP settings from a device. If the device supports NTP,
it shall be
				possible to get the NTP server settings through
the GetNTP command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNTP*                tds__GetNTP,
    // output parameters:
    struct _tds__GetNTPResponse        *tds__GetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNTP(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNTP*                tds__GetNTP,
    // output parameters:
    struct _tds__GetNTPResponse        *tds__GetNTPResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNTP SOAP
//gsoap tds  service method-style:	GetNTP document
//gsoap tds  service method-encoding:	GetNTP literal
//gsoap tds  service method-input-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTP
//gsoap tds  service method-output-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTPResponse
int __tds__GetNTP(
    struct _tds__GetNTP*                tds__GetNTP,	///< Input parameter
    struct _tds__GetNTPResponse        *tds__GetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNTP" of service binding "DeviceBinding".
This operation sets the NTP settings on a device. If the device supports NTP, it
shall be
				possible to set the NTP server settings through
the SetNTP command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.
<br/>
				Changes to the NTP server list will not affect the
clock mode DateTimeType. Use SetSystemDateAndTime to activate NTP operation.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNTP*                tds__SetNTP,
    // output parameters:
    struct _tds__SetNTPResponse        *tds__SetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNTP(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNTP*                tds__SetNTP,
    // output parameters:
    struct _tds__SetNTPResponse        *tds__SetNTPResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNTP SOAP
//gsoap tds  service method-style:	SetNTP document
//gsoap tds  service method-encoding:	SetNTP literal
//gsoap tds  service method-input-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTP
//gsoap tds  service method-output-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTPResponse
int __tds__SetNTP(
    struct _tds__SetNTP*                tds__SetNTP,	///< Input parameter
    struct _tds__SetNTPResponse        *tds__SetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDynamicDNS" of service binding "DeviceBinding".
This operation gets the dynamic DNS settings from a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to get the type, name
				and TTL through the GetDynamicDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDynamicDNS*         tds__GetDynamicDNS,
    // output parameters:
    struct _tds__GetDynamicDNSResponse *tds__GetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDynamicDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDynamicDNS*         tds__GetDynamicDNS,
    // output parameters:
    struct _tds__GetDynamicDNSResponse *tds__GetDynamicDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDynamicDNS SOAP
//gsoap tds  service method-style:	GetDynamicDNS document
//gsoap tds  service method-encoding:	GetDynamicDNS literal
//gsoap tds  service method-input-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS
//gsoap tds  service method-output-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse
int __tds__GetDynamicDNS(
    struct _tds__GetDynamicDNS*         tds__GetDynamicDNS,	///< Input parameter
    struct _tds__GetDynamicDNSResponse *tds__GetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDynamicDNS" of service binding "DeviceBinding".
This operation sets the dynamic DNS settings on a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to set the type, name
				and TTL through the SetDynamicDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDynamicDNS*         tds__SetDynamicDNS,
    // output parameters:
    struct _tds__SetDynamicDNSResponse *tds__SetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDynamicDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDynamicDNS*         tds__SetDynamicDNS,
    // output parameters:
    struct _tds__SetDynamicDNSResponse *tds__SetDynamicDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDynamicDNS SOAP
//gsoap tds  service method-style:	SetDynamicDNS document
//gsoap tds  service method-encoding:	SetDynamicDNS literal
//gsoap tds  service method-input-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS
//gsoap tds  service method-output-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse
int __tds__SetDynamicDNS(
    struct _tds__SetDynamicDNS*         tds__SetDynamicDNS,	///< Input parameter
    struct _tds__SetDynamicDNSResponse *tds__SetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkInterfaces" of service binding "DeviceBinding".
This operation gets the network interface configuration from a device. The device
shall
				support return of network interface configuration
settings as defined by the NetworkInterface
				type through the GetNetworkInterfaces command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNetworkInterfaces*  tds__GetNetworkInterfaces,
    // output parameters:
    struct _tds__GetNetworkInterfacesResponse*tds__GetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNetworkInterfaces*  tds__GetNetworkInterfaces,
    // output parameters:
    struct _tds__GetNetworkInterfacesResponse*tds__GetNetworkInterfacesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNetworkInterfaces SOAP
//gsoap tds  service method-style:	GetNetworkInterfaces document
//gsoap tds  service method-encoding:	GetNetworkInterfaces literal
//gsoap tds  service method-input-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces
//gsoap tds  service method-output-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse
int __tds__GetNetworkInterfaces(
    struct _tds__GetNetworkInterfaces*  tds__GetNetworkInterfaces,	///< Input parameter
    struct _tds__GetNetworkInterfacesResponse*tds__GetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkInterfaces" of service binding "DeviceBinding".
This operation sets the network interface configuration on a device. The device
shall support
				network configuration of supported network interfaces
through the SetNetworkInterfaces
				command.<br/>
				For interoperability with a client unaware of the
IEEE 802.11 extension a device shall retain
				its IEEE 802.11 configuration if the IEEE 802.11
configuration element isnt present in the
				request.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNetworkInterfaces*  tds__SetNetworkInterfaces,
    // output parameters:
    struct _tds__SetNetworkInterfacesResponse*tds__SetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNetworkInterfaces*  tds__SetNetworkInterfaces,
    // output parameters:
    struct _tds__SetNetworkInterfacesResponse*tds__SetNetworkInterfacesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNetworkInterfaces SOAP
//gsoap tds  service method-style:	SetNetworkInterfaces document
//gsoap tds  service method-encoding:	SetNetworkInterfaces literal
//gsoap tds  service method-input-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces
//gsoap tds  service method-output-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse
int __tds__SetNetworkInterfaces(
    struct _tds__SetNetworkInterfaces*  tds__SetNetworkInterfaces,	///< Input parameter
    struct _tds__SetNetworkInterfacesResponse*tds__SetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkProtocols" of service binding "DeviceBinding".
This operation gets defined network protocols from a device. The device shall support
the
				GetNetworkProtocols command returning configured
network protocols.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNetworkProtocols*   tds__GetNetworkProtocols,
    // output parameters:
    struct _tds__GetNetworkProtocolsResponse*tds__GetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNetworkProtocols*   tds__GetNetworkProtocols,
    // output parameters:
    struct _tds__GetNetworkProtocolsResponse*tds__GetNetworkProtocolsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNetworkProtocols SOAP
//gsoap tds  service method-style:	GetNetworkProtocols document
//gsoap tds  service method-encoding:	GetNetworkProtocols literal
//gsoap tds  service method-input-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols
//gsoap tds  service method-output-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse
int __tds__GetNetworkProtocols(
    struct _tds__GetNetworkProtocols*   tds__GetNetworkProtocols,	///< Input parameter
    struct _tds__GetNetworkProtocolsResponse*tds__GetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkProtocols" of service binding "DeviceBinding".
This operation configures defined network protocols on a device. The device shall
support
				configuration of defined network protocols through
the SetNetworkProtocols command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNetworkProtocols*   tds__SetNetworkProtocols,
    // output parameters:
    struct _tds__SetNetworkProtocolsResponse*tds__SetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNetworkProtocols*   tds__SetNetworkProtocols,
    // output parameters:
    struct _tds__SetNetworkProtocolsResponse*tds__SetNetworkProtocolsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNetworkProtocols SOAP
//gsoap tds  service method-style:	SetNetworkProtocols document
//gsoap tds  service method-encoding:	SetNetworkProtocols literal
//gsoap tds  service method-input-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols
//gsoap tds  service method-output-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse
int __tds__SetNetworkProtocols(
    struct _tds__SetNetworkProtocols*   tds__SetNetworkProtocols,	///< Input parameter
    struct _tds__SetNetworkProtocolsResponse*tds__SetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation gets the default gateway settings from a device. The device shall
support the
				GetNetworkDefaultGateway command returning configured
default gateway address(es).

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNetworkDefaultGateway* tds__GetNetworkDefaultGateway,
    // output parameters:
    struct _tds__GetNetworkDefaultGatewayResponse*tds__GetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNetworkDefaultGateway* tds__GetNetworkDefaultGateway,
    // output parameters:
    struct _tds__GetNetworkDefaultGatewayResponse*tds__GetNetworkDefaultGatewayResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	GetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	GetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway
//gsoap tds  service method-output-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse
int __tds__GetNetworkDefaultGateway(
    struct _tds__GetNetworkDefaultGateway* tds__GetNetworkDefaultGateway,	///< Input parameter
    struct _tds__GetNetworkDefaultGatewayResponse*tds__GetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation sets the default gateway settings on a device. The device shall support
				configuration of default gateway through the SetNetworkDefaultGateway
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNetworkDefaultGateway* tds__SetNetworkDefaultGateway,
    // output parameters:
    struct _tds__SetNetworkDefaultGatewayResponse*tds__SetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNetworkDefaultGateway* tds__SetNetworkDefaultGateway,
    // output parameters:
    struct _tds__SetNetworkDefaultGatewayResponse*tds__SetNetworkDefaultGatewayResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	SetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	SetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway
//gsoap tds  service method-output-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse
int __tds__SetNetworkDefaultGateway(
    struct _tds__SetNetworkDefaultGateway* tds__SetNetworkDefaultGateway,	///< Input parameter
    struct _tds__SetNetworkDefaultGatewayResponse*tds__SetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetZeroConfiguration" of service binding "DeviceBinding".
This operation gets the zero-configuration from a device. If the device supports
dynamic IP
				configuration according to [RFC3927], it shall support
the return of IPv4 zero configuration
				address and status through the GetZeroConfiguration
command.<br/>
			Devices supporting zero configuration on more than one interface
shall use the extension to list the additional interface settings.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetZeroConfiguration*  tds__GetZeroConfiguration,
    // output parameters:
    struct _tds__GetZeroConfigurationResponse*tds__GetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__GetZeroConfiguration*  tds__GetZeroConfiguration,
    // output parameters:
    struct _tds__GetZeroConfigurationResponse*tds__GetZeroConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetZeroConfiguration SOAP
//gsoap tds  service method-style:	GetZeroConfiguration document
//gsoap tds  service method-encoding:	GetZeroConfiguration literal
//gsoap tds  service method-input-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration
//gsoap tds  service method-output-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse
int __tds__GetZeroConfiguration(
    struct _tds__GetZeroConfiguration*  tds__GetZeroConfiguration,	///< Input parameter
    struct _tds__GetZeroConfigurationResponse*tds__GetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetZeroConfiguration" of service binding "DeviceBinding".
This operation sets the zero-configuration. Use GetCapalities to get if zero-zero-configuration
is supported or not.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetZeroConfiguration*  tds__SetZeroConfiguration,
    // output parameters:
    struct _tds__SetZeroConfigurationResponse*tds__SetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__SetZeroConfiguration*  tds__SetZeroConfiguration,
    // output parameters:
    struct _tds__SetZeroConfigurationResponse*tds__SetZeroConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetZeroConfiguration SOAP
//gsoap tds  service method-style:	SetZeroConfiguration document
//gsoap tds  service method-encoding:	SetZeroConfiguration literal
//gsoap tds  service method-input-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration
//gsoap tds  service method-output-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse
int __tds__SetZeroConfiguration(
    struct _tds__SetZeroConfiguration*  tds__SetZeroConfiguration,	///< Input parameter
    struct _tds__SetZeroConfigurationResponse*tds__SetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetIPAddressFilter" of service binding "DeviceBinding".
This operation gets the IP address filter settings from a device. If the device
supports device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support the GetIPAddressFilter command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetIPAddressFilter*    tds__GetIPAddressFilter,
    // output parameters:
    struct _tds__GetIPAddressFilterResponse*tds__GetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__GetIPAddressFilter*    tds__GetIPAddressFilter,
    // output parameters:
    struct _tds__GetIPAddressFilterResponse*tds__GetIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetIPAddressFilter SOAP
//gsoap tds  service method-style:	GetIPAddressFilter document
//gsoap tds  service method-encoding:	GetIPAddressFilter literal
//gsoap tds  service method-input-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter
//gsoap tds  service method-output-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse
int __tds__GetIPAddressFilter(
    struct _tds__GetIPAddressFilter*    tds__GetIPAddressFilter,	///< Input parameter
    struct _tds__GetIPAddressFilterResponse*tds__GetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetIPAddressFilter" of service binding "DeviceBinding".
This operation sets the IP address filter settings on a device. If the device supports
device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support configuration of IP filtering
rules through the SetIPAddressFilter
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetIPAddressFilter*    tds__SetIPAddressFilter,
    // output parameters:
    struct _tds__SetIPAddressFilterResponse*tds__SetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__SetIPAddressFilter*    tds__SetIPAddressFilter,
    // output parameters:
    struct _tds__SetIPAddressFilterResponse*tds__SetIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetIPAddressFilter SOAP
//gsoap tds  service method-style:	SetIPAddressFilter document
//gsoap tds  service method-encoding:	SetIPAddressFilter literal
//gsoap tds  service method-input-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter
//gsoap tds  service method-output-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse
int __tds__SetIPAddressFilter(
    struct _tds__SetIPAddressFilter*    tds__SetIPAddressFilter,	///< Input parameter
    struct _tds__SetIPAddressFilterResponse*tds__SetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddIPAddressFilter" of service binding "DeviceBinding".
This operation adds an IP filter address to a device. If the device supports device
access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support adding of IP filtering addresses through
the AddIPAddressFilter command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__AddIPAddressFilter*    tds__AddIPAddressFilter,
    // output parameters:
    struct _tds__AddIPAddressFilterResponse*tds__AddIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__AddIPAddressFilter*    tds__AddIPAddressFilter,
    // output parameters:
    struct _tds__AddIPAddressFilterResponse*tds__AddIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	AddIPAddressFilter SOAP
//gsoap tds  service method-style:	AddIPAddressFilter document
//gsoap tds  service method-encoding:	AddIPAddressFilter literal
//gsoap tds  service method-input-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter
//gsoap tds  service method-output-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse
int __tds__AddIPAddressFilter(
    struct _tds__AddIPAddressFilter*    tds__AddIPAddressFilter,	///< Input parameter
    struct _tds__AddIPAddressFilterResponse*tds__AddIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveIPAddressFilter                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveIPAddressFilter" of service binding "DeviceBinding".
This operation deletes an IP filter address from a device. If the device supports
device access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support deletion of IP filtering addresses
through the RemoveIPAddressFilter command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__RemoveIPAddressFilter* tds__RemoveIPAddressFilter,
    // output parameters:
    struct _tds__RemoveIPAddressFilterResponse*tds__RemoveIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__RemoveIPAddressFilter* tds__RemoveIPAddressFilter,
    // output parameters:
    struct _tds__RemoveIPAddressFilterResponse*tds__RemoveIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	RemoveIPAddressFilter SOAP
//gsoap tds  service method-style:	RemoveIPAddressFilter document
//gsoap tds  service method-encoding:	RemoveIPAddressFilter literal
//gsoap tds  service method-input-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter
//gsoap tds  service method-output-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse
int __tds__RemoveIPAddressFilter(
    struct _tds__RemoveIPAddressFilter* tds__RemoveIPAddressFilter,	///< Input parameter
    struct _tds__RemoveIPAddressFilterResponse*tds__RemoveIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetAccessPolicy" of service binding "DeviceBinding".
Access to different services and sub-sets of services should be subject to access
control. The
				WS-Security framework gives the prerequisite for
end-point authentication. Authorization
				decisions can then be taken using an access security
policy. This standard does not mandate
				any particular policy description format or security
policy but this is up to the device
				manufacturer or system provider to choose policy
and policy description format of choice.
				However, an access policy (in arbitrary format)
can be requested using this command. If the
				device supports access policy settings based on
WS-Security authentication, then the device
				shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetAccessPolicy*       tds__GetAccessPolicy,
    // output parameters:
    struct _tds__GetAccessPolicyResponse*tds__GetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetAccessPolicy(
    struct soap *soap,
    // input parameters:
    struct _tds__GetAccessPolicy*       tds__GetAccessPolicy,
    // output parameters:
    struct _tds__GetAccessPolicyResponse*tds__GetAccessPolicyResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetAccessPolicy SOAP
//gsoap tds  service method-style:	GetAccessPolicy document
//gsoap tds  service method-encoding:	GetAccessPolicy literal
//gsoap tds  service method-input-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy
//gsoap tds  service method-output-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse
int __tds__GetAccessPolicy(
    struct _tds__GetAccessPolicy*       tds__GetAccessPolicy,	///< Input parameter
    struct _tds__GetAccessPolicyResponse*tds__GetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetAccessPolicy" of service binding "DeviceBinding".
This command sets the device access security policy (for more details on the access
security
				policy see the Get command). If the device supports
access policy settings
				based on WS-Security authentication, then the device
shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetAccessPolicy*       tds__SetAccessPolicy,
    // output parameters:
    struct _tds__SetAccessPolicyResponse*tds__SetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetAccessPolicy(
    struct soap *soap,
    // input parameters:
    struct _tds__SetAccessPolicy*       tds__SetAccessPolicy,
    // output parameters:
    struct _tds__SetAccessPolicyResponse*tds__SetAccessPolicyResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetAccessPolicy SOAP
//gsoap tds  service method-style:	SetAccessPolicy document
//gsoap tds  service method-encoding:	SetAccessPolicy literal
//gsoap tds  service method-input-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy
//gsoap tds  service method-output-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse
int __tds__SetAccessPolicy(
    struct _tds__SetAccessPolicy*       tds__SetAccessPolicy,	///< Input parameter
    struct _tds__SetAccessPolicyResponse*tds__SetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateCertificate                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateCertificate" of service binding "DeviceBinding".
This operation generates a private/public key pair and also can create a self-signed
device
				certificate as a result of key pair generation.
The certificate is created using a suitable
				onboard key pair generation mechanism.<br/>
				If a device supports onboard key pair generation,
the device that supports TLS shall support
				this certificate creation command. And also, if
a device supports onboard key pair generation,
				the device that support IEEE 802.1X shall support
this command for the purpose of key pair
				generation. Certificates and key pairs are identified
using certificate IDs. These IDs are either
				chosen by the certificate generation requester or
by the device (in case that no ID value is
				given).

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateCertificate*     tds__CreateCertificate,
    // output parameters:
    struct _tds__CreateCertificateResponse*tds__CreateCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateCertificate(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateCertificate*     tds__CreateCertificate,
    // output parameters:
    struct _tds__CreateCertificateResponse*tds__CreateCertificateResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateCertificate SOAP
//gsoap tds  service method-style:	CreateCertificate document
//gsoap tds  service method-encoding:	CreateCertificate literal
//gsoap tds  service method-input-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificate
//gsoap tds  service method-output-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse
int __tds__CreateCertificate(
    struct _tds__CreateCertificate*     tds__CreateCertificate,	///< Input parameter
    struct _tds__CreateCertificateResponse*tds__CreateCertificateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificates                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificates" of service binding "DeviceBinding".
This operation gets all device server certificates (including self-signed) for the
purpose of TLS
				authentication and all device client certificates
for the purpose of IEEE 802.1X authentication.
				This command lists only the TLS server certificates
and IEEE 802.1X client certificates for the
				device (neither trusted CA certificates nor trusted
root certificates). The certificates are
				returned as binary data. A device that supports
TLS shall support this command and the
				certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCertificates*       tds__GetCertificates,
    // output parameters:
    struct _tds__GetCertificatesResponse*tds__GetCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCertificates*       tds__GetCertificates,
    // output parameters:
    struct _tds__GetCertificatesResponse*tds__GetCertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCertificates SOAP
//gsoap tds  service method-style:	GetCertificates document
//gsoap tds  service method-encoding:	GetCertificates literal
//gsoap tds  service method-input-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificates
//gsoap tds  service method-output-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse
int __tds__GetCertificates(
    struct _tds__GetCertificates*       tds__GetCertificates,	///< Input parameter
    struct _tds__GetCertificatesResponse*tds__GetCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificatesStatus" of service binding "DeviceBinding".
This operation is specific to TLS functionality. This operation gets the status
				(enabled/disabled) of the device TLS server certificates.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCertificatesStatus* tds__GetCertificatesStatus,
    // output parameters:
    struct _tds__GetCertificatesStatusResponse*tds__GetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCertificatesStatus* tds__GetCertificatesStatus,
    // output parameters:
    struct _tds__GetCertificatesStatusResponse*tds__GetCertificatesStatusResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCertificatesStatus SOAP
//gsoap tds  service method-style:	GetCertificatesStatus document
//gsoap tds  service method-encoding:	GetCertificatesStatus literal
//gsoap tds  service method-input-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus
//gsoap tds  service method-output-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse
int __tds__GetCertificatesStatus(
    struct _tds__GetCertificatesStatus* tds__GetCertificatesStatus,	///< Input parameter
    struct _tds__GetCertificatesStatusResponse*tds__GetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetCertificatesStatus" of service binding "DeviceBinding".
This operation is specific to TLS functionality. This operation sets the status
(enable/disable)
				of the device TLS server certificates. A device
that supports TLS shall support this command.
				Typically only one device server certificate is
allowed to be enabled at a time.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetCertificatesStatus* tds__SetCertificatesStatus,
    // output parameters:
    struct _tds__SetCertificatesStatusResponse*tds__SetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    struct _tds__SetCertificatesStatus* tds__SetCertificatesStatus,
    // output parameters:
    struct _tds__SetCertificatesStatusResponse*tds__SetCertificatesStatusResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetCertificatesStatus SOAP
//gsoap tds  service method-style:	SetCertificatesStatus document
//gsoap tds  service method-encoding:	SetCertificatesStatus literal
//gsoap tds  service method-input-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus
//gsoap tds  service method-output-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse
int __tds__SetCertificatesStatus(
    struct _tds__SetCertificatesStatus* tds__SetCertificatesStatus,	///< Input parameter
    struct _tds__SetCertificatesStatusResponse*tds__SetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteCertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteCertificates" of service binding "DeviceBinding".
This operation deletes a certificate or multiple certificates. The device MAY also
delete a
				private/public key pair which is coupled with the
certificate to be deleted. The device that
				support either TLS or IEEE 802.1X shall support
the deletion of a certificate or multiple
				certificates through this command. Either all certificates
are deleted successfully or a fault
				message shall be returned without deleting any certificate.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteCertificates*    tds__DeleteCertificates,
    // output parameters:
    struct _tds__DeleteCertificatesResponse*tds__DeleteCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteCertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteCertificates*    tds__DeleteCertificates,
    // output parameters:
    struct _tds__DeleteCertificatesResponse*tds__DeleteCertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteCertificates SOAP
//gsoap tds  service method-style:	DeleteCertificates document
//gsoap tds  service method-encoding:	DeleteCertificates literal
//gsoap tds  service method-input-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificates
//gsoap tds  service method-output-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse
int __tds__DeleteCertificates(
    struct _tds__DeleteCertificates*    tds__DeleteCertificates,	///< Input parameter
    struct _tds__DeleteCertificatesResponse*tds__DeleteCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPkcs10Request                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetPkcs10Request" of service binding "DeviceBinding".
This operation requests a PKCS #10 certificate signature request from the device.
The
				returned information field shall be either formatted
exactly as specified in [PKCS#10] or PEM
				encoded [PKCS#10] format. In order for this command
to work, the device must already have
				a private/public key pair. This key pair should
be referred by CertificateID as specified in the
				input parameter description. This CertificateID
refers to the key pair generated using
				CreateCertificate command.<br/>
				A device that support onboard key pair generation
that supports either TLS or IEEE 802.1X
				using client certificate shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetPkcs10Request(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetPkcs10Request*      tds__GetPkcs10Request,
    // output parameters:
    struct _tds__GetPkcs10RequestResponse*tds__GetPkcs10RequestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetPkcs10Request(
    struct soap *soap,
    // input parameters:
    struct _tds__GetPkcs10Request*      tds__GetPkcs10Request,
    // output parameters:
    struct _tds__GetPkcs10RequestResponse*tds__GetPkcs10RequestResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetPkcs10Request SOAP
//gsoap tds  service method-style:	GetPkcs10Request document
//gsoap tds  service method-encoding:	GetPkcs10Request literal
//gsoap tds  service method-input-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request
//gsoap tds  service method-output-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse
int __tds__GetPkcs10Request(
    struct _tds__GetPkcs10Request*      tds__GetPkcs10Request,	///< Input parameter
    struct _tds__GetPkcs10RequestResponse*tds__GetPkcs10RequestResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificates                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificates" of service binding "DeviceBinding".
TLS server certificate(s) or IEEE 802.1X client certificate(s) created using the
PKCS#10
				certificate request command can be loaded into the
device using this command (see Section
				8.4.13). The certificate ID in the request shall
be present. The device may sort the received
				certificate(s) based on the public key and subject
information in the certificate(s).
				The certificate ID in the request will be the ID
value the client wish to have. The device is
				supposed to scan the generated key pairs present
in the device to identify which is the
				correspondent key pair with the loaded certificate
and then make the link between the
				certificate and the key pair.<br/>
				A device that supports onboard key pair generation
that support either TLS or IEEE 802.1X
				shall support this command.<br/>
				The certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.<br/>
				This command is applicable to any device type, although
the parameter name is called for
				historical reasons NVTCertificate.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__LoadCertificates*      tds__LoadCertificates,
    // output parameters:
    struct _tds__LoadCertificatesResponse*tds__LoadCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__LoadCertificates*      tds__LoadCertificates,
    // output parameters:
    struct _tds__LoadCertificatesResponse*tds__LoadCertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	LoadCertificates SOAP
//gsoap tds  service method-style:	LoadCertificates document
//gsoap tds  service method-encoding:	LoadCertificates literal
//gsoap tds  service method-input-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificates
//gsoap tds  service method-output-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse
int __tds__LoadCertificates(
    struct _tds__LoadCertificates*      tds__LoadCertificates,	///< Input parameter
    struct _tds__LoadCertificatesResponse*tds__LoadCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetClientCertificateMode" of service binding "DeviceBinding".
This operation is specific to TLS functionality. This operation gets the status
				(enabled/disabled) of the device TLS client authentication.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetClientCertificateMode* tds__GetClientCertificateMode,
    // output parameters:
    struct _tds__GetClientCertificateModeResponse*tds__GetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    struct _tds__GetClientCertificateMode* tds__GetClientCertificateMode,
    // output parameters:
    struct _tds__GetClientCertificateModeResponse*tds__GetClientCertificateModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetClientCertificateMode SOAP
//gsoap tds  service method-style:	GetClientCertificateMode document
//gsoap tds  service method-encoding:	GetClientCertificateMode literal
//gsoap tds  service method-input-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode
//gsoap tds  service method-output-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse
int __tds__GetClientCertificateMode(
    struct _tds__GetClientCertificateMode* tds__GetClientCertificateMode,	///< Input parameter
    struct _tds__GetClientCertificateModeResponse*tds__GetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetClientCertificateMode" of service binding "DeviceBinding".
This operation is specific to TLS functionality. This operation sets the status
				(enabled/disabled) of the device TLS client authentication.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetClientCertificateMode* tds__SetClientCertificateMode,
    // output parameters:
    struct _tds__SetClientCertificateModeResponse*tds__SetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    struct _tds__SetClientCertificateMode* tds__SetClientCertificateMode,
    // output parameters:
    struct _tds__SetClientCertificateModeResponse*tds__SetClientCertificateModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetClientCertificateMode SOAP
//gsoap tds  service method-style:	SetClientCertificateMode document
//gsoap tds  service method-encoding:	SetClientCertificateMode literal
//gsoap tds  service method-input-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode
//gsoap tds  service method-output-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse
int __tds__SetClientCertificateMode(
    struct _tds__SetClientCertificateMode* tds__SetClientCertificateMode,	///< Input parameter
    struct _tds__SetClientCertificateModeResponse*tds__SetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRelayOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRelayOutputs" of service binding "DeviceBinding".
This operation gets a list of all available relay outputs and their settings.<br/>
				This method has been depricated with version 2.0.
Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRelayOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,
    // output parameters:
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRelayOutputs(
    struct soap *soap,
    // input parameters:
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,
    // output parameters:
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetRelayOutputs SOAP
//gsoap tds  service method-style:	GetRelayOutputs document
//gsoap tds  service method-encoding:	GetRelayOutputs literal
//gsoap tds  service method-input-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs
//gsoap tds  service method-output-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse
int __tds__GetRelayOutputs(
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,	///< Input parameter
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputSettings                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputSettings" of service binding "DeviceBinding".
This operation sets the settings of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRelayOutputSettings* tds__SetRelayOutputSettings,
    // output parameters:
    struct _tds__SetRelayOutputSettingsResponse*tds__SetRelayOutputSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputSettings(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRelayOutputSettings* tds__SetRelayOutputSettings,
    // output parameters:
    struct _tds__SetRelayOutputSettingsResponse*tds__SetRelayOutputSettingsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRelayOutputSettings SOAP
//gsoap tds  service method-style:	SetRelayOutputSettings document
//gsoap tds  service method-encoding:	SetRelayOutputSettings literal
//gsoap tds  service method-input-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings
//gsoap tds  service method-output-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse
int __tds__SetRelayOutputSettings(
    struct _tds__SetRelayOutputSettings* tds__SetRelayOutputSettings,	///< Input parameter
    struct _tds__SetRelayOutputSettingsResponse*tds__SetRelayOutputSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputState                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputState" of service binding "DeviceBinding".
This operation sets the state of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,
    // output parameters:
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputState(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,
    // output parameters:
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRelayOutputState SOAP
//gsoap tds  service method-style:	SetRelayOutputState document
//gsoap tds  service method-encoding:	SetRelayOutputState literal
//gsoap tds  service method-input-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState
//gsoap tds  service method-output-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse
int __tds__SetRelayOutputState(
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,	///< Input parameter
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SendAuxiliaryCommand                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SendAuxiliaryCommand" of service binding "DeviceBinding".
Manage auxiliary commands supported by a device, such as controlling an Infrared
(IR) lamp, 
				a heater or a wiper or a thermometer that is connected
to the device.<br/>
				The supported commands can be retrieved via the
AuxiliaryCommands capability.<br/>
				Although the name of the auxiliary commands can
be freely defined, commands starting with the prefix tt: are 
				reserved to define frequently used commands and
these reserved commands shall all share the "tt:command|parameter" syntax.
				<ul>
					<li>tt:Wiper|On  Request to start the
wiper.</li>
					<li>tt:Wiper|Off  Request to stop the
wiper.</li>
					<li>tt:Washer|On  Request to start the
washer.</li>
					<li>tt:Washer|Off  Request to stop the
washer.</li>
					<li>tt:WashingProcedure|On  Request to
start the washing procedure.</li>
					<li>tt: WashingProcedure |Off  Request
to stop the washing procedure.</li>
					<li>tt:IRLamp|On  Request to turn ON
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Off  Request to turn OFF
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Auto  Request to configure
an IR illuminator attached to the unit so that it automatically turns ON and OFF.</li>
				</ul>
				A device that indicates auxiliary service capability
shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SendAuxiliaryCommand*  tds__SendAuxiliaryCommand,
    // output parameters:
    struct _tds__SendAuxiliaryCommandResponse*tds__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SendAuxiliaryCommand(
    struct soap *soap,
    // input parameters:
    struct _tds__SendAuxiliaryCommand*  tds__SendAuxiliaryCommand,
    // output parameters:
    struct _tds__SendAuxiliaryCommandResponse*tds__SendAuxiliaryCommandResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SendAuxiliaryCommand SOAP
//gsoap tds  service method-style:	SendAuxiliaryCommand document
//gsoap tds  service method-encoding:	SendAuxiliaryCommand literal
//gsoap tds  service method-input-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand
//gsoap tds  service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse
int __tds__SendAuxiliaryCommand(
    struct _tds__SendAuxiliaryCommand*  tds__SendAuxiliaryCommand,	///< Input parameter
    struct _tds__SendAuxiliaryCommandResponse*tds__SendAuxiliaryCommandResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCACertificates                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCACertificates" of service binding "DeviceBinding".
CA certificates will be loaded into a device and be used for the sake of following
two cases.
				The one is for the purpose of TLS client authentication
in TLS server function. The other one
				is for the purpose of Authentication Server authentication
in IEEE 802.1X function. This
				operation gets all CA certificates loaded into a
device. A device that supports either TLS client
				authentication or IEEE 802.1X shall support this
command and the returned certificates shall
				be encoded using ASN.1 [X.681], [X.682], [X.683]
DER [X.690] encoding rules.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCACertificates*     tds__GetCACertificates,
    // output parameters:
    struct _tds__GetCACertificatesResponse*tds__GetCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCACertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCACertificates*     tds__GetCACertificates,
    // output parameters:
    struct _tds__GetCACertificatesResponse*tds__GetCACertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCACertificates SOAP
//gsoap tds  service method-style:	GetCACertificates document
//gsoap tds  service method-encoding:	GetCACertificates literal
//gsoap tds  service method-input-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificates
//gsoap tds  service method-output-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse
int __tds__GetCACertificates(
    struct _tds__GetCACertificates*     tds__GetCACertificates,	///< Input parameter
    struct _tds__GetCACertificatesResponse*tds__GetCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificateWithPrivateKey                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificateWithPrivateKey" of service binding "DeviceBinding".
There might be some cases that a Certificate Authority or some other equivalent
creates a
				certificate without having PKCS#10 certificate signing
request. In such cases, the certificate
				will be bundled in conjunction with its private
key. This command will be used for such use
				case scenarios. The certificate ID in the request
is optionally set to the ID value the client
				wish to have. If the certificate ID is not specified
in the request, device can choose the ID
				accordingly.<br/>
				This operation imports a private/public key pair
into the device.
				The certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.<br/>
				A device that does not support onboard key pair
generation and support either TLS or IEEE
				802.1X using client certificate shall support this
command. A device that support onboard key
				pair generation MAY support this command. The security
policy of a device that supports this
				operation should make sure that the private key
is sufficiently protected.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    struct _tds__LoadCertificateWithPrivateKeyResponse*tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    // input parameters:
    struct _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    struct _tds__LoadCertificateWithPrivateKeyResponse*tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	LoadCertificateWithPrivateKey SOAP
//gsoap tds  service method-style:	LoadCertificateWithPrivateKey document
//gsoap tds  service method-encoding:	LoadCertificateWithPrivateKey literal
//gsoap tds  service method-input-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey
//gsoap tds  service method-output-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse
int __tds__LoadCertificateWithPrivateKey(
    struct _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,	///< Input parameter
    struct _tds__LoadCertificateWithPrivateKeyResponse*tds__LoadCertificateWithPrivateKeyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificateInformation                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificateInformation" of service binding "DeviceBinding".
This operation requests the information of a certificate specified by certificate
ID. The device
				should respond with its Issuer DN, Subject
DN, Key usage, "Extended key usage, Key
				Length, Version, Serial Number, Signature
Algorithm and Validity data as the
				information of the certificate, as long as the device
can retrieve such information from the
				specified certificate.<br/>
				A device that supports either TLS or IEEE 802.1X
should support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificateInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCertificateInformation* tds__GetCertificateInformation,
    // output parameters:
    struct _tds__GetCertificateInformationResponse*tds__GetCertificateInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificateInformation(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCertificateInformation* tds__GetCertificateInformation,
    // output parameters:
    struct _tds__GetCertificateInformationResponse*tds__GetCertificateInformationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCertificateInformation SOAP
//gsoap tds  service method-style:	GetCertificateInformation document
//gsoap tds  service method-encoding:	GetCertificateInformation literal
//gsoap tds  service method-input-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation
//gsoap tds  service method-output-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse
int __tds__GetCertificateInformation(
    struct _tds__GetCertificateInformation* tds__GetCertificateInformation,	///< Input parameter
    struct _tds__GetCertificateInformationResponse*tds__GetCertificateInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCACertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCACertificates" of service binding "DeviceBinding".
This command is used when it is necessary to load trusted CA certificates or trusted
root
				certificates for the purpose of verification for
its counterpart i.e. client certificate verification in
				TLS function or server certificate verification
in IEEE 802.1X function.<br/>
				A device that support either TLS or IEEE 802.1X
shall support this command. As for the
				supported certificate format, either DER format
or PEM format is possible to be used. But a
				device that support this command shall support at
least DER format as supported format type.
				The device may sort the received certificate(s)
based on the public key and subject
				information in the certificate(s). Either all CA
certificates are loaded successfully or a fault
				message shall be returned without loading any CA
certificate.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__LoadCACertificates*    tds__LoadCACertificates,
    // output parameters:
    struct _tds__LoadCACertificatesResponse*tds__LoadCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCACertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__LoadCACertificates*    tds__LoadCACertificates,
    // output parameters:
    struct _tds__LoadCACertificatesResponse*tds__LoadCACertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	LoadCACertificates SOAP
//gsoap tds  service method-style:	LoadCACertificates document
//gsoap tds  service method-encoding:	LoadCACertificates literal
//gsoap tds  service method-input-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificates
//gsoap tds  service method-output-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse
int __tds__LoadCACertificates(
    struct _tds__LoadCACertificates*    tds__LoadCACertificates,	///< Input parameter
    struct _tds__LoadCACertificatesResponse*tds__LoadCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateDot1XConfiguration" of service binding "DeviceBinding".
This operation newly creates IEEE 802.1X configuration parameter set of the device.
The
				device shall support this command if it supports
IEEE 802.1X. If the device receives this
				request with already existing configuration token
(Dot1XConfigurationToken) specification, the
				device should respond with 'ter:ReferenceToken '
error to indicate there is some configuration
				conflict.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateDot1XConfiguration* tds__CreateDot1XConfiguration,
    // output parameters:
    struct _tds__CreateDot1XConfigurationResponse*tds__CreateDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateDot1XConfiguration* tds__CreateDot1XConfiguration,
    // output parameters:
    struct _tds__CreateDot1XConfigurationResponse*tds__CreateDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateDot1XConfiguration SOAP
//gsoap tds  service method-style:	CreateDot1XConfiguration document
//gsoap tds  service method-encoding:	CreateDot1XConfiguration literal
//gsoap tds  service method-input-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration
//gsoap tds  service method-output-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse
int __tds__CreateDot1XConfiguration(
    struct _tds__CreateDot1XConfiguration* tds__CreateDot1XConfiguration,	///< Input parameter
    struct _tds__CreateDot1XConfigurationResponse*tds__CreateDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDot1XConfiguration" of service binding "DeviceBinding".
While the CreateDot1XConfiguration command is trying to create a new configuration
				parameter set, this operation modifies existing
IEEE 802.1X configuration parameter set of
				the device. A device that support IEEE 802.1X shall
support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDot1XConfiguration* tds__SetDot1XConfiguration,
    // output parameters:
    struct _tds__SetDot1XConfigurationResponse*tds__SetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDot1XConfiguration* tds__SetDot1XConfiguration,
    // output parameters:
    struct _tds__SetDot1XConfigurationResponse*tds__SetDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDot1XConfiguration SOAP
//gsoap tds  service method-style:	SetDot1XConfiguration document
//gsoap tds  service method-encoding:	SetDot1XConfiguration literal
//gsoap tds  service method-input-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration
//gsoap tds  service method-output-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse
int __tds__SetDot1XConfiguration(
    struct _tds__SetDot1XConfiguration* tds__SetDot1XConfiguration,	///< Input parameter
    struct _tds__SetDot1XConfigurationResponse*tds__SetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfiguration" of service binding "DeviceBinding".
This operation gets one IEEE 802.1X configuration parameter set from the device
by
				specifying the configuration token (Dot1XConfigurationToken).<br/>
				A device that supports IEEE 802.1X shall support
this command.
				Regardless of whether the 802.1X method in the retrieved
configuration has a password or
				not, the device shall not include the Password element
in the response.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot1XConfiguration* tds__GetDot1XConfiguration,
    // output parameters:
    struct _tds__GetDot1XConfigurationResponse*tds__GetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot1XConfiguration* tds__GetDot1XConfiguration,
    // output parameters:
    struct _tds__GetDot1XConfigurationResponse*tds__GetDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot1XConfiguration SOAP
//gsoap tds  service method-style:	GetDot1XConfiguration document
//gsoap tds  service method-encoding:	GetDot1XConfiguration literal
//gsoap tds  service method-input-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration
//gsoap tds  service method-output-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse
int __tds__GetDot1XConfiguration(
    struct _tds__GetDot1XConfiguration* tds__GetDot1XConfiguration,	///< Input parameter
    struct _tds__GetDot1XConfigurationResponse*tds__GetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfigurations                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfigurations" of service binding "DeviceBinding".
This operation gets all the existing IEEE 802.1X configuration parameter sets from
the device.
				The device shall respond with all the IEEE 802.1X
configurations so that the client can get to
				know how many IEEE 802.1X configurations are existing
and how they are configured.<br/>
				A device that support IEEE 802.1X shall support
this command.<br/>
				Regardless of whether the 802.1X method in the retrieved
configuration has a password or
				not, the device shall not include the Password element
in the response.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot1XConfigurations* tds__GetDot1XConfigurations,
    // output parameters:
    struct _tds__GetDot1XConfigurationsResponse*tds__GetDot1XConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfigurations(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot1XConfigurations* tds__GetDot1XConfigurations,
    // output parameters:
    struct _tds__GetDot1XConfigurationsResponse*tds__GetDot1XConfigurationsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot1XConfigurations SOAP
//gsoap tds  service method-style:	GetDot1XConfigurations document
//gsoap tds  service method-encoding:	GetDot1XConfigurations literal
//gsoap tds  service method-input-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations
//gsoap tds  service method-output-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse
int __tds__GetDot1XConfigurations(
    struct _tds__GetDot1XConfigurations* tds__GetDot1XConfigurations,	///< Input parameter
    struct _tds__GetDot1XConfigurationsResponse*tds__GetDot1XConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteDot1XConfiguration" of service binding "DeviceBinding".
This operation deletes an IEEE 802.1X configuration parameter set from the device.
Which
				configuration should be deleted is specified by
the 'Dot1XConfigurationToken' in the request.
				A device that support IEEE 802.1X shall support
this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteDot1XConfiguration* tds__DeleteDot1XConfiguration,
    // output parameters:
    struct _tds__DeleteDot1XConfigurationResponse*tds__DeleteDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteDot1XConfiguration* tds__DeleteDot1XConfiguration,
    // output parameters:
    struct _tds__DeleteDot1XConfigurationResponse*tds__DeleteDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteDot1XConfiguration SOAP
//gsoap tds  service method-style:	DeleteDot1XConfiguration document
//gsoap tds  service method-encoding:	DeleteDot1XConfiguration literal
//gsoap tds  service method-input-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration
//gsoap tds  service method-output-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse
int __tds__DeleteDot1XConfiguration(
    struct _tds__DeleteDot1XConfiguration* tds__DeleteDot1XConfiguration,	///< Input parameter
    struct _tds__DeleteDot1XConfigurationResponse*tds__DeleteDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Capabilities                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Capabilities" of service binding "DeviceBinding".
This operation returns the IEEE802.11 capabilities. The device shall support
				this operation.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Capabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot11Capabilities*  tds__GetDot11Capabilities,
    // output parameters:
    struct _tds__GetDot11CapabilitiesResponse*tds__GetDot11CapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Capabilities(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot11Capabilities*  tds__GetDot11Capabilities,
    // output parameters:
    struct _tds__GetDot11CapabilitiesResponse*tds__GetDot11CapabilitiesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot11Capabilities SOAP
//gsoap tds  service method-style:	GetDot11Capabilities document
//gsoap tds  service method-encoding:	GetDot11Capabilities literal
//gsoap tds  service method-input-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities
//gsoap tds  service method-output-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse
int __tds__GetDot11Capabilities(
    struct _tds__GetDot11Capabilities*  tds__GetDot11Capabilities,	///< Input parameter
    struct _tds__GetDot11CapabilitiesResponse*tds__GetDot11CapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Status                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Status" of service binding "DeviceBinding".
This operation returns the status of a wireless network interface. The device shall
support this
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Status(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot11Status*        tds__GetDot11Status,
    // output parameters:
    struct _tds__GetDot11StatusResponse*tds__GetDot11StatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Status(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot11Status*        tds__GetDot11Status,
    // output parameters:
    struct _tds__GetDot11StatusResponse*tds__GetDot11StatusResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot11Status SOAP
//gsoap tds  service method-style:	GetDot11Status document
//gsoap tds  service method-encoding:	GetDot11Status literal
//gsoap tds  service method-input-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11Status
//gsoap tds  service method-output-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse
int __tds__GetDot11Status(
    struct _tds__GetDot11Status*        tds__GetDot11Status,	///< Input parameter
    struct _tds__GetDot11StatusResponse*tds__GetDot11StatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__ScanAvailableDot11Networks                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__ScanAvailableDot11Networks" of service binding "DeviceBinding".
This operation returns a lists of the wireless networks in range of the device.
A device should
				support this operation.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__ScanAvailableDot11Networks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__ScanAvailableDot11Networks* tds__ScanAvailableDot11Networks,
    // output parameters:
    struct _tds__ScanAvailableDot11NetworksResponse*tds__ScanAvailableDot11NetworksResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__ScanAvailableDot11Networks(
    struct soap *soap,
    // input parameters:
    struct _tds__ScanAvailableDot11Networks* tds__ScanAvailableDot11Networks,
    // output parameters:
    struct _tds__ScanAvailableDot11NetworksResponse*tds__ScanAvailableDot11NetworksResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	ScanAvailableDot11Networks SOAP
//gsoap tds  service method-style:	ScanAvailableDot11Networks document
//gsoap tds  service method-encoding:	ScanAvailableDot11Networks literal
//gsoap tds  service method-input-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks
//gsoap tds  service method-output-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse
int __tds__ScanAvailableDot11Networks(
    struct _tds__ScanAvailableDot11Networks* tds__ScanAvailableDot11Networks,	///< Input parameter
    struct _tds__ScanAvailableDot11NetworksResponse*tds__ScanAvailableDot11NetworksResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemUris                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemUris" of service binding "DeviceBinding".
This operation is used to retrieve URIs from which system information may be downloaded
				using HTTP. URIs may be returned for the following
system information:<br/>
				System Logs. Multiple system logs may be returned,
of different types. The exact format of
				the system logs is outside the scope of this specification.<br/>
				Support Information. This consists of arbitrary
device diagnostics information from a device.
				The exact format of the diagnostic information is
outside the scope of this specification.<br/>
				System Backup. The received file is a backup file
that can be used to restore the current
				device configuration at a later date. The exact
format of the backup configuration file is
				outside the scope of this specification.<br/>
				If the device allows retrieval of system logs, support
information or system backup data, it
				should make them available via HTTP GET. If it does,
it shall support the GetSystemUris
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemUris(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemUris*         tds__GetSystemUris,
    // output parameters:
    struct _tds__GetSystemUrisResponse *tds__GetSystemUrisResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemUris(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemUris*         tds__GetSystemUris,
    // output parameters:
    struct _tds__GetSystemUrisResponse *tds__GetSystemUrisResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemUris SOAP
//gsoap tds  service method-style:	GetSystemUris document
//gsoap tds  service method-encoding:	GetSystemUris literal
//gsoap tds  service method-input-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUris
//gsoap tds  service method-output-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse
int __tds__GetSystemUris(
    struct _tds__GetSystemUris*         tds__GetSystemUris,	///< Input parameter
    struct _tds__GetSystemUrisResponse *tds__GetSystemUrisResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartFirmwareUpgrade                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartFirmwareUpgrade" of service binding "DeviceBinding".
This operation initiates a firmware upgrade using the HTTP POST mechanism. The response
				to the command includes an HTTP URL to which the
upgrade file may be uploaded. The
				actual upgrade takes place as soon as the HTTP POST
operation has completed. The device
				should support firmware upgrade through the StartFirmwareUpgrade
command. The exact
				format of the firmware data is outside the scope
of this specification.
				Firmware upgrade over HTTP may be achieved using
the following steps:<ol>
					<li>Client calls StartFirmwareUpgrade.</li>
					<li>Server responds with upload URI and
optional delay value.</li>
					<li>Client waits for delay duration if specified
by server.</li>
					<li>Client transmits the firmware image
to the upload URI using HTTP POST.</li>
					<li>Server reprograms itself using the uploaded
image, then reboots.</li>
				</ol>
				If the firmware upgrade fails because the upgrade
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
firmware upgrade fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartFirmwareUpgrade(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__StartFirmwareUpgrade*  tds__StartFirmwareUpgrade,
    // output parameters:
    struct _tds__StartFirmwareUpgradeResponse*tds__StartFirmwareUpgradeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartFirmwareUpgrade(
    struct soap *soap,
    // input parameters:
    struct _tds__StartFirmwareUpgrade*  tds__StartFirmwareUpgrade,
    // output parameters:
    struct _tds__StartFirmwareUpgradeResponse*tds__StartFirmwareUpgradeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	StartFirmwareUpgrade SOAP
//gsoap tds  service method-style:	StartFirmwareUpgrade document
//gsoap tds  service method-encoding:	StartFirmwareUpgrade literal
//gsoap tds  service method-input-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade
//gsoap tds  service method-output-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse
int __tds__StartFirmwareUpgrade(
    struct _tds__StartFirmwareUpgrade*  tds__StartFirmwareUpgrade,	///< Input parameter
    struct _tds__StartFirmwareUpgradeResponse*tds__StartFirmwareUpgradeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartSystemRestore                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartSystemRestore" of service binding "DeviceBinding".
This operation initiates a system restore from backed up configuration data using
the HTTP
				POST mechanism. The response to the command includes
an HTTP URL to which the backup
				file may be uploaded. The actual restore takes place
as soon as the HTTP POST operation
				has completed. Devices should support system restore
through the StartSystemRestore
				command. The exact format of the backup configuration
data is outside the scope of this
				specification.<br/>
				System restore over HTTP may be achieved using the
following steps:<ol>
					<li>Client calls StartSystemRestore.</li>
					<li>Server responds with upload URI.</li>
					<li>Client transmits the configuration data
to the upload URI using HTTP POST.</li>
					<li>Server applies the uploaded configuration,
then reboots if necessary.</li>
				</ol>
				If the system restore fails because the uploaded
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
system restore fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartSystemRestore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__StartSystemRestore*    tds__StartSystemRestore,
    // output parameters:
    struct _tds__StartSystemRestoreResponse*tds__StartSystemRestoreResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartSystemRestore(
    struct soap *soap,
    // input parameters:
    struct _tds__StartSystemRestore*    tds__StartSystemRestore,
    // output parameters:
    struct _tds__StartSystemRestoreResponse*tds__StartSystemRestoreResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	StartSystemRestore SOAP
//gsoap tds  service method-style:	StartSystemRestore document
//gsoap tds  service method-encoding:	StartSystemRestore literal
//gsoap tds  service method-input-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestore
//gsoap tds  service method-output-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse
int __tds__StartSystemRestore(
    struct _tds__StartSystemRestore*    tds__StartSystemRestore,	///< Input parameter
    struct _tds__StartSystemRestoreResponse*tds__StartSystemRestoreResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfigurations                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetStorageConfigurations" of service binding "DeviceBinding".

			This operation lists all existing storage configurations
for the device. 
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetStorageConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetStorageConfigurations* tds__GetStorageConfigurations,
    // output parameters:
    struct _tds__GetStorageConfigurationsResponse*tds__GetStorageConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetStorageConfigurations(
    struct soap *soap,
    // input parameters:
    struct _tds__GetStorageConfigurations* tds__GetStorageConfigurations,
    // output parameters:
    struct _tds__GetStorageConfigurationsResponse*tds__GetStorageConfigurationsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetStorageConfigurations SOAP
//gsoap tds  service method-style:	GetStorageConfigurations document
//gsoap tds  service method-encoding:	GetStorageConfigurations literal
//gsoap tds  service method-input-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations
//gsoap tds  service method-output-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse
int __tds__GetStorageConfigurations(
    struct _tds__GetStorageConfigurations* tds__GetStorageConfigurations,	///< Input parameter
    struct _tds__GetStorageConfigurationsResponse*tds__GetStorageConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateStorageConfiguration" of service binding "DeviceBinding".

			This operation creates a new storage configuration. 
			The configuration data shall be created in the device and
shall be persistent (remain after reboot).
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateStorageConfiguration* tds__CreateStorageConfiguration,
    // output parameters:
    struct _tds__CreateStorageConfigurationResponse*tds__CreateStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateStorageConfiguration* tds__CreateStorageConfiguration,
    // output parameters:
    struct _tds__CreateStorageConfigurationResponse*tds__CreateStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateStorageConfiguration SOAP
//gsoap tds  service method-style:	CreateStorageConfiguration document
//gsoap tds  service method-encoding:	CreateStorageConfiguration literal
//gsoap tds  service method-input-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration
//gsoap tds  service method-output-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse
int __tds__CreateStorageConfiguration(
    struct _tds__CreateStorageConfiguration* tds__CreateStorageConfiguration,	///< Input parameter
    struct _tds__CreateStorageConfigurationResponse*tds__CreateStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetStorageConfiguration" of service binding "DeviceBinding".

			This operation retrieves the Storage configuration associated
with the given storage configuration token.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetStorageConfiguration* tds__GetStorageConfiguration,
    // output parameters:
    struct _tds__GetStorageConfigurationResponse*tds__GetStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__GetStorageConfiguration* tds__GetStorageConfiguration,
    // output parameters:
    struct _tds__GetStorageConfigurationResponse*tds__GetStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetStorageConfiguration SOAP
//gsoap tds  service method-style:	GetStorageConfiguration document
//gsoap tds  service method-encoding:	GetStorageConfiguration literal
//gsoap tds  service method-input-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration
//gsoap tds  service method-output-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse
int __tds__GetStorageConfiguration(
    struct _tds__GetStorageConfiguration* tds__GetStorageConfiguration,	///< Input parameter
    struct _tds__GetStorageConfigurationResponse*tds__GetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetStorageConfiguration" of service binding "DeviceBinding".

			This operation modifies an existing Storage configuration.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetStorageConfiguration* tds__SetStorageConfiguration,
    // output parameters:
    struct _tds__SetStorageConfigurationResponse*tds__SetStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__SetStorageConfiguration* tds__SetStorageConfiguration,
    // output parameters:
    struct _tds__SetStorageConfigurationResponse*tds__SetStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetStorageConfiguration SOAP
//gsoap tds  service method-style:	SetStorageConfiguration document
//gsoap tds  service method-encoding:	SetStorageConfiguration literal
//gsoap tds  service method-input-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration
//gsoap tds  service method-output-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse
int __tds__SetStorageConfiguration(
    struct _tds__SetStorageConfiguration* tds__SetStorageConfiguration,	///< Input parameter
    struct _tds__SetStorageConfigurationResponse*tds__SetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteStorageConfiguration" of service binding "DeviceBinding".

			This operation deletes the given storage configuration and
configuration change shall always be persistent.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteStorageConfiguration* tds__DeleteStorageConfiguration,
    // output parameters:
    struct _tds__DeleteStorageConfigurationResponse*tds__DeleteStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteStorageConfiguration* tds__DeleteStorageConfiguration,
    // output parameters:
    struct _tds__DeleteStorageConfigurationResponse*tds__DeleteStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteStorageConfiguration SOAP
//gsoap tds  service method-style:	DeleteStorageConfiguration document
//gsoap tds  service method-encoding:	DeleteStorageConfiguration literal
//gsoap tds  service method-input-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration
//gsoap tds  service method-output-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse
int __tds__DeleteStorageConfiguration(
    struct _tds__DeleteStorageConfiguration* tds__DeleteStorageConfiguration,	///< Input parameter
    struct _tds__DeleteStorageConfigurationResponse*tds__DeleteStorageConfigurationResponse	///< Output parameter
);

/**

@page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_policy_enablers Policy Enablers of Binding "DeviceBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PullPointSubscriptionBinding                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__PullMessages                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__PullMessages" of service binding "PullPointSubscriptionBinding".

				This method pulls one or more messages from a PullPoint.
				The device shall provide the following PullMessages
command for all SubscriptionManager
				endpoints returned by the CreatePullPointSubscription
command. This method shall not wait until
				the requested number of messages is available but
return as soon as at least one message is available.<br/>
				The command shall at least support a Timeout of
one minute. In case a device supports retrieval of less messages 
				than requested it shall return these without generating
a fault.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequestResponse"

  - SOAP Output Fault: "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__PullMessages(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__PullMessages*          tev__PullMessages,
    // output parameters:
    struct _tev__PullMessagesResponse  *tev__PullMessagesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__PullMessages(
    struct soap *soap,
    // input parameters:
    struct _tev__PullMessages*          tev__PullMessages,
    // output parameters:
    struct _tev__PullMessagesResponse  *tev__PullMessagesResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	PullMessages SOAP
//gsoap tev  service method-style:	PullMessages document
//gsoap tev  service method-encoding:	PullMessages literal
//gsoap tev  service method-input-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest
//gsoap tev  service method-output-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequestResponse
//gsoap tev  service method-fault:	PullMessages tev__PullMessagesFaultResponse
int __tev__PullMessages(
    struct _tev__PullMessages*          tev__PullMessages,	///< Input parameter
    struct _tev__PullMessagesResponse  *tev__PullMessagesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Seek                                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Seek" of service binding "PullPointSubscriptionBinding".

				This method readjusts the pull pointer into the
past.
				A device supporting persistent notification storage
shall provide the
				following Seek command for all SubscriptionManager
endpoints returned by
				the CreatePullPointSubscription command. The optional
Reverse argument can
				be used to reverse the pull direction of the PullMessages
command.<br/>
				The UtcTime argument will be matched against the
UtcTime attribute on a
				NotificationMessage.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Seek(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__Seek*                  tev__Seek,
    // output parameters:
    struct _tev__SeekResponse          *tev__SeekResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Seek(
    struct soap *soap,
    // input parameters:
    struct _tev__Seek*                  tev__Seek,
    // output parameters:
    struct _tev__SeekResponse          *tev__SeekResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Seek SOAP
//gsoap tev  service method-style:	Seek document
//gsoap tev  service method-encoding:	Seek literal
//gsoap tev  service method-input-action:	Seek http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest
//gsoap tev  service method-output-action:	Seek http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequestResponse
int __tev__Seek(
    struct _tev__Seek*                  tev__Seek,	///< Input parameter
    struct _tev__SeekResponse          *tev__SeekResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__SetSynchronizationPoint" of service binding "PullPointSubscriptionBinding".
Properties inform a client about property creation, changes and
				deletion in a uniform way. When a client wants to
synchronize its properties with the
				properties of the device, it can request a synchronization
point which repeats the current
				status of all properties to which a client has subscribed.
The PropertyOperation of all
				produced notifications is set to Initialized.
The Synchronization Point is
				requested directly from the SubscriptionManager
which was returned in either the
				SubscriptionResponse or in the CreatePullPointSubscriptionResponse.
The property update is
				transmitted via the notification transportation
of the notification interface. This method is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__SetSynchronizationPoint* tev__SetSynchronizationPoint,
    // output parameters:
    struct _tev__SetSynchronizationPointResponse*tev__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__SetSynchronizationPoint(
    struct soap *soap,
    // input parameters:
    struct _tev__SetSynchronizationPoint* tev__SetSynchronizationPoint,
    // output parameters:
    struct _tev__SetSynchronizationPointResponse*tev__SetSynchronizationPointResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	SetSynchronizationPoint SOAP
//gsoap tev  service method-style:	SetSynchronizationPoint document
//gsoap tev  service method-encoding:	SetSynchronizationPoint literal
//gsoap tev  service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest
//gsoap tev  service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequestResponse
int __tev__SetSynchronizationPoint(
    struct _tev__SetSynchronizationPoint* tev__SetSynchronizationPoint,	///< Input parameter
    struct _tev__SetSynchronizationPointResponse*tev__SetSynchronizationPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetServiceCapabilities" of service binding "PullPointSubscriptionBinding".
Returns the capabilities of the event service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__GetServiceCapabilities* tev__GetServiceCapabilities,
    // output parameters:
    struct _tev__GetServiceCapabilitiesResponse*tev__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tev__GetServiceCapabilities* tev__GetServiceCapabilities,
    // output parameters:
    struct _tev__GetServiceCapabilitiesResponse*tev__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tev  service method-style:	GetServiceCapabilities document
//gsoap tev  service method-encoding:	GetServiceCapabilities literal
//gsoap tev  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest
//gsoap tev  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequestResponse
int __tev__GetServiceCapabilities(
    struct _tev__GetServiceCapabilities* tev__GetServiceCapabilities,	///< Input parameter
    struct _tev__GetServiceCapabilitiesResponse*tev__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__CreatePullPointSubscription                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__CreatePullPointSubscription" of service binding "PullPointSubscriptionBinding".
This method returns a PullPointSubscription that can be polled using PullMessages.

				This message contains the same elements as the SubscriptionRequest
of the WS-BaseNotification without the ConsumerReference.<br/>
				If no Filter is specified the pullpoint notifies
all occurring events to the client.<br/>
				This method is mandatory.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__CreatePullPointSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__CreatePullPointSubscription* tev__CreatePullPointSubscription,
    // output parameters:
    struct _tev__CreatePullPointSubscriptionResponse*tev__CreatePullPointSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__CreatePullPointSubscription(
    struct soap *soap,
    // input parameters:
    struct _tev__CreatePullPointSubscription* tev__CreatePullPointSubscription,
    // output parameters:
    struct _tev__CreatePullPointSubscriptionResponse*tev__CreatePullPointSubscriptionResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	CreatePullPointSubscription SOAP
//gsoap tev  service method-style:	CreatePullPointSubscription document
//gsoap tev  service method-encoding:	CreatePullPointSubscription literal
//gsoap tev  service method-input-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest
//gsoap tev  service method-output-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequestResponse
//gsoap tev  service method-fault:	CreatePullPointSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidFilterFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidProducerPropertiesExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidMessageContentExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnacceptableInitialTerminationTimeFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnrecognizedPolicyRequestFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnsupportedPolicyRequestFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__NotifyMessageNotSupportedFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__SubscribeCreationFailedFault
int __tev__CreatePullPointSubscription(
    struct _tev__CreatePullPointSubscription* tev__CreatePullPointSubscription,	///< Input parameter
    struct _tev__CreatePullPointSubscriptionResponse*tev__CreatePullPointSubscriptionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetEventProperties                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetEventProperties" of service binding "PullPointSubscriptionBinding".
The WS-BaseNotification specification defines a set of OPTIONAL WS-ResouceProperties.
				This specification does not require the implementation
of the WS-ResourceProperty interface.
				Instead, the subsequent direct interface shall be
implemented by an ONVIF compliant device
				in order to provide information about the FilterDialects,
Schema files and topics supported by
				the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetEventProperties(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__GetEventProperties*    tev__GetEventProperties,
    // output parameters:
    struct _tev__GetEventPropertiesResponse*tev__GetEventPropertiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetEventProperties(
    struct soap *soap,
    // input parameters:
    struct _tev__GetEventProperties*    tev__GetEventProperties,
    // output parameters:
    struct _tev__GetEventPropertiesResponse*tev__GetEventPropertiesResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	GetEventProperties SOAP
//gsoap tev  service method-style:	GetEventProperties document
//gsoap tev  service method-encoding:	GetEventProperties literal
//gsoap tev  service method-input-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest
//gsoap tev  service method-output-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequestResponse
int __tev__GetEventProperties(
    struct _tev__GetEventProperties*    tev__GetEventProperties,	///< Input parameter
    struct _tev__GetEventPropertiesResponse*tev__GetEventPropertiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Renew                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Renew" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Renew(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Renew*                wsnt__Renew,
    // output parameters:
    struct _wsnt__RenewResponse        *wsnt__RenewResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Renew(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Renew*                wsnt__Renew,
    // output parameters:
    struct _wsnt__RenewResponse        *wsnt__RenewResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Renew SOAP
//gsoap tev  service method-style:	Renew document
//gsoap tev  service method-encoding:	Renew literal
//gsoap tev  service method-input-action:	Renew http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest
//gsoap tev  service method-output-action:	Renew http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequestResponse
//gsoap tev  service method-fault:	Renew wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Renew wsnt__UnacceptableTerminationTimeFault
int __tev__Renew(
    struct _wsnt__Renew*                wsnt__Renew,	///< Input parameter
    struct _wsnt__RenewResponse        *wsnt__RenewResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Unsubscribe" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Unsubscribe SOAP
//gsoap tev  service method-style:	Unsubscribe document
//gsoap tev  service method-encoding:	Unsubscribe literal
//gsoap tev  service method-input-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe(
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,	///< Input parameter
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Subscribe                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Subscribe" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Subscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Subscribe*            wsnt__Subscribe,
    // output parameters:
    struct _wsnt__SubscribeResponse    *wsnt__SubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Subscribe(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Subscribe*            wsnt__Subscribe,
    // output parameters:
    struct _wsnt__SubscribeResponse    *wsnt__SubscribeResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Subscribe SOAP
//gsoap tev  service method-style:	Subscribe document
//gsoap tev  service method-encoding:	Subscribe literal
//gsoap tev  service method-input-action:	Subscribe http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest
//gsoap tev  service method-output-action:	Subscribe http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequestResponse
//gsoap tev  service method-fault:	Subscribe wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidFilterFault
//gsoap tev  service method-fault:	Subscribe wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidProducerPropertiesExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidMessageContentExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnacceptableInitialTerminationTimeFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnrecognizedPolicyRequestFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnsupportedPolicyRequestFault
//gsoap tev  service method-fault:	Subscribe wsnt__NotifyMessageNotSupportedFault
//gsoap tev  service method-fault:	Subscribe wsnt__SubscribeCreationFailedFault
int __tev__Subscribe(
    struct _wsnt__Subscribe*            wsnt__Subscribe,	///< Input parameter
    struct _wsnt__SubscribeResponse    *wsnt__SubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetCurrentMessage                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetCurrentMessage" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetCurrentMessage(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__GetCurrentMessage*    wsnt__GetCurrentMessage,
    // output parameters:
    struct _wsnt__GetCurrentMessageResponse*wsnt__GetCurrentMessageResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetCurrentMessage(
    struct soap *soap,
    // input parameters:
    struct _wsnt__GetCurrentMessage*    wsnt__GetCurrentMessage,
    // output parameters:
    struct _wsnt__GetCurrentMessageResponse*wsnt__GetCurrentMessageResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	GetCurrentMessage SOAP
//gsoap tev  service method-style:	GetCurrentMessage document
//gsoap tev  service method-encoding:	GetCurrentMessage literal
//gsoap tev  service method-input-action:	GetCurrentMessage http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest
//gsoap tev  service method-output-action:	GetCurrentMessage http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequestResponse
//gsoap tev  service method-fault:	GetCurrentMessage wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__NoCurrentMessageOnTopicFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__MultipleTopicsSpecifiedFault
int __tev__GetCurrentMessage(
    struct _wsnt__GetCurrentMessage*    wsnt__GetCurrentMessage,	///< Input parameter
    struct _wsnt__GetCurrentMessageResponse*wsnt__GetCurrentMessageResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Notify                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Notify" of service binding "PullPointSubscriptionBinding".

  - One-way service request message

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_send___tev__Notify(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Notify*               wsnt__Notify,
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Notify(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Notify*               wsnt__Notify,
    // output parameters:
  );
@endcode

*/

//gsoap tev  service method-protocol:	Notify SOAP
//gsoap tev  service method-style:	Notify document
//gsoap tev  service method-encoding:	Notify literal
//gsoap tev  service method-input-action:	Notify http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify
int __tev__Notify(
    struct _wsnt__Notify*               wsnt__Notify,	///< Input parameter
    void	///< One-way message: no output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetMessages                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetMessages" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetMessages(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__GetMessages*          wsnt__GetMessages,
    // output parameters:
    struct _wsnt__GetMessagesResponse  *wsnt__GetMessagesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetMessages(
    struct soap *soap,
    // input parameters:
    struct _wsnt__GetMessages*          wsnt__GetMessages,
    // output parameters:
    struct _wsnt__GetMessagesResponse  *wsnt__GetMessagesResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	GetMessages SOAP
//gsoap tev  service method-style:	GetMessages document
//gsoap tev  service method-encoding:	GetMessages literal
//gsoap tev  service method-input-action:	GetMessages http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest
//gsoap tev  service method-output-action:	GetMessages http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequestResponse
//gsoap tev  service method-fault:	GetMessages wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	GetMessages wsnt__UnableToGetMessagesFault
int __tev__GetMessages(
    struct _wsnt__GetMessages*          wsnt__GetMessages,	///< Input parameter
    struct _wsnt__GetMessagesResponse  *wsnt__GetMessagesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__DestroyPullPoint                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__DestroyPullPoint" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__DestroyPullPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__DestroyPullPoint*     wsnt__DestroyPullPoint,
    // output parameters:
    struct _wsnt__DestroyPullPointResponse*wsnt__DestroyPullPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__DestroyPullPoint(
    struct soap *soap,
    // input parameters:
    struct _wsnt__DestroyPullPoint*     wsnt__DestroyPullPoint,
    // output parameters:
    struct _wsnt__DestroyPullPointResponse*wsnt__DestroyPullPointResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	DestroyPullPoint SOAP
//gsoap tev  service method-style:	DestroyPullPoint document
//gsoap tev  service method-encoding:	DestroyPullPoint literal
//gsoap tev  service method-input-action:	DestroyPullPoint http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest
//gsoap tev  service method-output-action:	DestroyPullPoint http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequestResponse
//gsoap tev  service method-fault:	DestroyPullPoint wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	DestroyPullPoint wsnt__UnableToDestroyPullPointFault
int __tev__DestroyPullPoint(
    struct _wsnt__DestroyPullPoint*     wsnt__DestroyPullPoint,	///< Input parameter
    struct _wsnt__DestroyPullPointResponse*wsnt__DestroyPullPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Notify_                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Notify_" of service binding "PullPointSubscriptionBinding".

  - One-way service request message

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_send___tev__Notify_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Notify*               wsnt__Notify,
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Notify_(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Notify*               wsnt__Notify,
    // output parameters:
  );
@endcode

*/

//gsoap tev  service method-protocol:	Notify_ SOAP
//gsoap tev  service method-style:	Notify_ document
//gsoap tev  service method-encoding:	Notify_ literal
//gsoap tev  service method-input-action:	Notify_ http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify
int __tev__Notify_(
    struct _wsnt__Notify*               wsnt__Notify,	///< Input parameter
    void	///< One-way message: no output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__CreatePullPoint                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__CreatePullPoint" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__CreatePullPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__CreatePullPoint*      wsnt__CreatePullPoint,
    // output parameters:
    struct _wsnt__CreatePullPointResponse*wsnt__CreatePullPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__CreatePullPoint(
    struct soap *soap,
    // input parameters:
    struct _wsnt__CreatePullPoint*      wsnt__CreatePullPoint,
    // output parameters:
    struct _wsnt__CreatePullPointResponse*wsnt__CreatePullPointResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	CreatePullPoint SOAP
//gsoap tev  service method-style:	CreatePullPoint document
//gsoap tev  service method-encoding:	CreatePullPoint literal
//gsoap tev  service method-input-action:	CreatePullPoint http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest
//gsoap tev  service method-output-action:	CreatePullPoint http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequestResponse
//gsoap tev  service method-fault:	CreatePullPoint wsnt__UnableToCreatePullPointFault
int __tev__CreatePullPoint(
    struct _wsnt__CreatePullPoint*      wsnt__CreatePullPoint,	///< Input parameter
    struct _wsnt__CreatePullPointResponse*wsnt__CreatePullPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Renew_                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Renew_" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Renew_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Renew*                wsnt__Renew,
    // output parameters:
    struct _wsnt__RenewResponse        *wsnt__RenewResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Renew_(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Renew*                wsnt__Renew,
    // output parameters:
    struct _wsnt__RenewResponse        *wsnt__RenewResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Renew_ SOAP
//gsoap tev  service method-style:	Renew_ document
//gsoap tev  service method-encoding:	Renew_ literal
//gsoap tev  service method-input-action:	Renew_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest
//gsoap tev  service method-output-action:	Renew_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequestResponse
//gsoap tev  service method-fault:	Renew_ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Renew_ wsnt__UnacceptableTerminationTimeFault
int __tev__Renew_(
    struct _wsnt__Renew*                wsnt__Renew,	///< Input parameter
    struct _wsnt__RenewResponse        *wsnt__RenewResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe_                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Unsubscribe_" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe_(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Unsubscribe_ SOAP
//gsoap tev  service method-style:	Unsubscribe_ document
//gsoap tev  service method-encoding:	Unsubscribe_ literal
//gsoap tev  service method-input-action:	Unsubscribe_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe_ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe_ wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe_(
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,	///< Input parameter
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__PauseSubscription                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__PauseSubscription" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__PauseSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__PauseSubscription*    wsnt__PauseSubscription,
    // output parameters:
    struct _wsnt__PauseSubscriptionResponse*wsnt__PauseSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__PauseSubscription(
    struct soap *soap,
    // input parameters:
    struct _wsnt__PauseSubscription*    wsnt__PauseSubscription,
    // output parameters:
    struct _wsnt__PauseSubscriptionResponse*wsnt__PauseSubscriptionResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	PauseSubscription SOAP
//gsoap tev  service method-style:	PauseSubscription document
//gsoap tev  service method-encoding:	PauseSubscription literal
//gsoap tev  service method-input-action:	PauseSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest
//gsoap tev  service method-output-action:	PauseSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequestResponse
//gsoap tev  service method-fault:	PauseSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	PauseSubscription wsnt__PauseFailedFault
int __tev__PauseSubscription(
    struct _wsnt__PauseSubscription*    wsnt__PauseSubscription,	///< Input parameter
    struct _wsnt__PauseSubscriptionResponse*wsnt__PauseSubscriptionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__ResumeSubscription                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__ResumeSubscription" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__ResumeSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__ResumeSubscription*   wsnt__ResumeSubscription,
    // output parameters:
    struct _wsnt__ResumeSubscriptionResponse*wsnt__ResumeSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__ResumeSubscription(
    struct soap *soap,
    // input parameters:
    struct _wsnt__ResumeSubscription*   wsnt__ResumeSubscription,
    // output parameters:
    struct _wsnt__ResumeSubscriptionResponse*wsnt__ResumeSubscriptionResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	ResumeSubscription SOAP
//gsoap tev  service method-style:	ResumeSubscription document
//gsoap tev  service method-encoding:	ResumeSubscription literal
//gsoap tev  service method-input-action:	ResumeSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest
//gsoap tev  service method-output-action:	ResumeSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequestResponse
//gsoap tev  service method-fault:	ResumeSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	ResumeSubscription wsnt__ResumeFailedFault
int __tev__ResumeSubscription(
    struct _wsnt__ResumeSubscription*   wsnt__ResumeSubscription,	///< Input parameter
    struct _wsnt__ResumeSubscriptionResponse*wsnt__ResumeSubscriptionResponse	///< Output parameter
);

/**

@page PullPointSubscriptionBinding Binding "PullPointSubscriptionBinding"

@section PullPointSubscriptionBinding_policy_enablers Policy Enablers of Binding "PullPointSubscriptionBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ImagingBinding                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetServiceCapabilities                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetServiceCapabilities" of service binding "ImagingBinding".
Returns the capabilities of the imaging service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__GetServiceCapabilities* timg__GetServiceCapabilities,
    // output parameters:
    struct _timg__GetServiceCapabilitiesResponse*timg__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _timg__GetServiceCapabilities* timg__GetServiceCapabilities,
    // output parameters:
    struct _timg__GetServiceCapabilitiesResponse*timg__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	GetServiceCapabilities SOAP
//gsoap timg service method-style:	GetServiceCapabilities document
//gsoap timg service method-encoding:	GetServiceCapabilities literal
//gsoap timg service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities
//gsoap timg service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilitiesResponse
int __timg__GetServiceCapabilities(
    struct _timg__GetServiceCapabilities* timg__GetServiceCapabilities,	///< Input parameter
    struct _timg__GetServiceCapabilitiesResponse*timg__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetImagingSettings                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetImagingSettings" of service binding "ImagingBinding".
Get the ImagingConfiguration for the requested VideoSource.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetImagingSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__GetImagingSettings*   timg__GetImagingSettings,
    // output parameters:
    struct _timg__GetImagingSettingsResponse*timg__GetImagingSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetImagingSettings(
    struct soap *soap,
    // input parameters:
    struct _timg__GetImagingSettings*   timg__GetImagingSettings,
    // output parameters:
    struct _timg__GetImagingSettingsResponse*timg__GetImagingSettingsResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	GetImagingSettings SOAP
//gsoap timg service method-style:	GetImagingSettings document
//gsoap timg service method-encoding:	GetImagingSettings literal
//gsoap timg service method-input-action:	GetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings
//gsoap timg service method-output-action:	GetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettingsResponse
int __timg__GetImagingSettings(
    struct _timg__GetImagingSettings*   timg__GetImagingSettings,	///< Input parameter
    struct _timg__GetImagingSettingsResponse*timg__GetImagingSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__SetImagingSettings                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__SetImagingSettings" of service binding "ImagingBinding".
Set the ImagingConfiguration for the requested VideoSource.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__SetImagingSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__SetImagingSettings*   timg__SetImagingSettings,
    // output parameters:
    struct _timg__SetImagingSettingsResponse*timg__SetImagingSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__SetImagingSettings(
    struct soap *soap,
    // input parameters:
    struct _timg__SetImagingSettings*   timg__SetImagingSettings,
    // output parameters:
    struct _timg__SetImagingSettingsResponse*timg__SetImagingSettingsResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	SetImagingSettings SOAP
//gsoap timg service method-style:	SetImagingSettings document
//gsoap timg service method-encoding:	SetImagingSettings literal
//gsoap timg service method-input-action:	SetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings
//gsoap timg service method-output-action:	SetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettingsResponse
int __timg__SetImagingSettings(
    struct _timg__SetImagingSettings*   timg__SetImagingSettings,	///< Input parameter
    struct _timg__SetImagingSettingsResponse*timg__SetImagingSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetOptions                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetOptions" of service binding "ImagingBinding".
This operation gets the valid ranges for the imaging parameters that have device
specific ranges. 
			This command is mandatory for all device implementing the
imaging service. The command returns all supported parameters and their ranges

			such that these can be applied to the SetImagingSettings
command.<br/>
			For read-only parameters which cannot be modified via the
SetImagingSettings command only a single option or identical Min and Max values

			is provided.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/GetOptions"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetOptions"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__GetOptions*           timg__GetOptions,
    // output parameters:
    struct _timg__GetOptionsResponse   *timg__GetOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetOptions(
    struct soap *soap,
    // input parameters:
    struct _timg__GetOptions*           timg__GetOptions,
    // output parameters:
    struct _timg__GetOptionsResponse   *timg__GetOptionsResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	GetOptions SOAP
//gsoap timg service method-style:	GetOptions document
//gsoap timg service method-encoding:	GetOptions literal
//gsoap timg service method-input-action:	GetOptions http://www.onvif.org/ver20/imaging/wsdl/GetOptions
//gsoap timg service method-output-action:	GetOptions http://www.onvif.org/ver20/imaging/wsdl/GetOptionsResponse
int __timg__GetOptions(
    struct _timg__GetOptions*           timg__GetOptions,	///< Input parameter
    struct _timg__GetOptionsResponse   *timg__GetOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__Move                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__Move" of service binding "ImagingBinding".
The Move command moves the focus lens in an absolute, a relative or in a continuous
manner from its current position. 
			The speed argument is optional for absolute and relative
control, but required for continuous. If no speed argument is used, the default
speed is used. 
			Focus adjustments through this operation will turn off the
autofocus. A device with support for remote focus control should support absolute,

			relative or continuous control through the Move operation.
The supported MoveOpions are signalled via the GetMoveOptions command.
			At least one focus control capability is required for this
operation to be functional. <br/>
			The move operation contains the following commands:<br/>
				<b>Absolute</b>  Requires position parameter
and optionally takes a speed argument. A unitless type is used by default for focus
positioning and speed. Optionally, if supported, the position may be requested
in m-1 units. <br/>
				<b>Relative</b>  Requires distance parameter
and optionally takes a speed argument. Negative distance means negative direction.

			<b>Continuous</b>  Requires a speed argument. Negative
speed argument means negative direction.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/Move"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/Move"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/MoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__Move(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__Move*                 timg__Move,
    // output parameters:
    struct _timg__MoveResponse         *timg__MoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__Move(
    struct soap *soap,
    // input parameters:
    struct _timg__Move*                 timg__Move,
    // output parameters:
    struct _timg__MoveResponse         *timg__MoveResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	Move SOAP
//gsoap timg service method-style:	Move document
//gsoap timg service method-encoding:	Move literal
//gsoap timg service method-input-action:	Move http://www.onvif.org/ver20/imaging/wsdl/Move
//gsoap timg service method-output-action:	Move http://www.onvif.org/ver20/imaging/wsdl/MoveResponse
int __timg__Move(
    struct _timg__Move*                 timg__Move,	///< Input parameter
    struct _timg__MoveResponse         *timg__MoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__Stop                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__Stop" of service binding "ImagingBinding".
The Stop command stops all ongoing focus movements of the lense. A device with support
for remote focus control as signalled via 
			the GetMoveOptions supports this command. <br/>The operation
will not affect ongoing autofocus operation.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/FocusStop"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/FocusStop"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/FocusStopResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__Stop(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__Stop*                 timg__Stop,
    // output parameters:
    struct _timg__StopResponse         *timg__StopResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__Stop(
    struct soap *soap,
    // input parameters:
    struct _timg__Stop*                 timg__Stop,
    // output parameters:
    struct _timg__StopResponse         *timg__StopResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	Stop SOAP
//gsoap timg service method-style:	Stop document
//gsoap timg service method-encoding:	Stop literal
//gsoap timg service method-input-action:	Stop http://www.onvif.org/ver20/imaging/wsdl/FocusStop
//gsoap timg service method-output-action:	Stop http://www.onvif.org/ver20/imaging/wsdl/FocusStopResponse
int __timg__Stop(
    struct _timg__Stop*                 timg__Stop,	///< Input parameter
    struct _timg__StopResponse         *timg__StopResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetStatus                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetStatus" of service binding "ImagingBinding".
Via this command the current status of the Move operation can be requested. Supported
for this command is available if the support for the Move operation is signalled
via GetMoveOptions.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/GetStatus"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetStatus"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__GetStatus*            timg__GetStatus,
    // output parameters:
    struct _timg__GetStatusResponse    *timg__GetStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetStatus(
    struct soap *soap,
    // input parameters:
    struct _timg__GetStatus*            timg__GetStatus,
    // output parameters:
    struct _timg__GetStatusResponse    *timg__GetStatusResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	GetStatus SOAP
//gsoap timg service method-style:	GetStatus document
//gsoap timg service method-encoding:	GetStatus literal
//gsoap timg service method-input-action:	GetStatus http://www.onvif.org/ver20/imaging/wsdl/GetStatus
//gsoap timg service method-output-action:	GetStatus http://www.onvif.org/ver20/imaging/wsdl/GetStatusResponse
int __timg__GetStatus(
    struct _timg__GetStatus*            timg__GetStatus,	///< Input parameter
    struct _timg__GetStatusResponse    *timg__GetStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetMoveOptions                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetMoveOptions" of service binding "ImagingBinding".
Imaging move operation options supported for the Video source.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetMoveOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _timg__GetMoveOptions*       timg__GetMoveOptions,
    // output parameters:
    struct _timg__GetMoveOptionsResponse*timg__GetMoveOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetMoveOptions(
    struct soap *soap,
    // input parameters:
    struct _timg__GetMoveOptions*       timg__GetMoveOptions,
    // output parameters:
    struct _timg__GetMoveOptionsResponse*timg__GetMoveOptionsResponse
  );
@endcode

*/

//gsoap timg service method-protocol:	GetMoveOptions SOAP
//gsoap timg service method-style:	GetMoveOptions document
//gsoap timg service method-encoding:	GetMoveOptions literal
//gsoap timg service method-input-action:	GetMoveOptions http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions
//gsoap timg service method-output-action:	GetMoveOptions http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptionsResponse
int __timg__GetMoveOptions(
    struct _timg__GetMoveOptions*       timg__GetMoveOptions,	///< Input parameter
    struct _timg__GetMoveOptionsResponse*timg__GetMoveOptionsResponse	///< Output parameter
);

/**

@page ImagingBinding Binding "ImagingBinding"

@section ImagingBinding_policy_enablers Policy Enablers of Binding "ImagingBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DisplayBinding                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__GetServiceCapabilities" of service binding "DisplayBinding".
Returns the capabilities of the display service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/display/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tls__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tls__GetServiceCapabilities* tls__GetServiceCapabilities,
    // output parameters:
    struct _tls__GetServiceCapabilitiesResponse*tls__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tls__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tls__GetServiceCapabilities* tls__GetServiceCapabilities,
    // output parameters:
    struct _tls__GetServiceCapabilitiesResponse*tls__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tls  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tls  service method-style:	GetServiceCapabilities document
//gsoap tls  service method-encoding:	GetServiceCapabilities literal
//gsoap tls  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/display/wsdl/GetServiceCapabilities
//gsoap tls  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/display/wsdl/GetServiceCapabilitiesResponse
int __tls__GetServiceCapabilities(
    struct _tls__GetServiceCapabilities* tls__GetServiceCapabilities,	///< Input parameter
    struct _tls__GetServiceCapabilitiesResponse*tls__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__GetLayout                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__GetLayout" of service binding "DisplayBinding".
Return the current layout of a video output. The Layout assigns a pane configuration
to a certain area of the display. The layout settings
directly affect a specific video output. The layout consists of a list of PaneConfigurations
and
their associated display areas.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/display/wsdl/GetLayout"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/GetLayout"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/GetLayoutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tls__GetLayout(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tls__GetLayout*             tls__GetLayout,
    // output parameters:
    struct _tls__GetLayoutResponse     *tls__GetLayoutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tls__GetLayout(
    struct soap *soap,
    // input parameters:
    struct _tls__GetLayout*             tls__GetLayout,
    // output parameters:
    struct _tls__GetLayoutResponse     *tls__GetLayoutResponse
  );
@endcode

*/

//gsoap tls  service method-protocol:	GetLayout SOAP
//gsoap tls  service method-style:	GetLayout document
//gsoap tls  service method-encoding:	GetLayout literal
//gsoap tls  service method-input-action:	GetLayout http://www.onvif.org/ver10/display/wsdl/GetLayout
//gsoap tls  service method-output-action:	GetLayout http://www.onvif.org/ver10/display/wsdl/GetLayoutResponse
int __tls__GetLayout(
    struct _tls__GetLayout*             tls__GetLayout,	///< Input parameter
    struct _tls__GetLayoutResponse     *tls__GetLayoutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__SetLayout                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__SetLayout" of service binding "DisplayBinding".
Change the layout of a display (e.g. change from
single view to split screen view).The Layout assigns a pane configuration to a
certain area of the display. The layout settings
directly affect a specific video output. The layout consists of a list of PaneConfigurations
and
their associated display areas.<br/>
A device implementation shall be tolerant against rounding errors when matching
a layout against its fixed set of layouts by accepting differences of at least
one percent.


  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/display/wsdl/SetLayout"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/SetLayout"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/SetLayoutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tls__SetLayout(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tls__SetLayout*             tls__SetLayout,
    // output parameters:
    struct _tls__SetLayoutResponse     *tls__SetLayoutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tls__SetLayout(
    struct soap *soap,
    // input parameters:
    struct _tls__SetLayout*             tls__SetLayout,
    // output parameters:
    struct _tls__SetLayoutResponse     *tls__SetLayoutResponse
  );
@endcode

*/

//gsoap tls  service method-protocol:	SetLayout SOAP
//gsoap tls  service method-style:	SetLayout document
//gsoap tls  service method-encoding:	SetLayout literal
//gsoap tls  service method-input-action:	SetLayout http://www.onvif.org/ver10/display/wsdl/SetLayout
//gsoap tls  service method-output-action:	SetLayout http://www.onvif.org/ver10/display/wsdl/SetLayoutResponse
int __tls__SetLayout(
    struct _tls__SetLayout*             tls__SetLayout,	///< Input parameter
    struct _tls__SetLayoutResponse     *tls__SetLayoutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__GetDisplayOptions                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__GetDisplayOptions" of service binding "DisplayBinding".
The Display Options contain the supported layouts (LayoutOptions) and the decoding
and
encoding capabilities (CodingCapabilities) of the device. The GetDisplayOptions
command
returns both, Layout and Coding Capabilities, of a VideoOutput.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/display/wsdl/GetDisplayOptions"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/GetDisplayOptions"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/GetDisplayOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tls__GetDisplayOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tls__GetDisplayOptions*     tls__GetDisplayOptions,
    // output parameters:
    struct _tls__GetDisplayOptionsResponse*tls__GetDisplayOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tls__GetDisplayOptions(
    struct soap *soap,
    // input parameters:
    struct _tls__GetDisplayOptions*     tls__GetDisplayOptions,
    // output parameters:
    struct _tls__GetDisplayOptionsResponse*tls__GetDisplayOptionsResponse
  );
@endcode

*/

//gsoap tls  service method-protocol:	GetDisplayOptions SOAP
//gsoap tls  service method-style:	GetDisplayOptions document
//gsoap tls  service method-encoding:	GetDisplayOptions literal
//gsoap tls  service method-input-action:	GetDisplayOptions http://www.onvif.org/ver10/display/wsdl/GetDisplayOptions
//gsoap tls  service method-output-action:	GetDisplayOptions http://www.onvif.org/ver10/display/wsdl/GetDisplayOptionsResponse
int __tls__GetDisplayOptions(
    struct _tls__GetDisplayOptions*     tls__GetDisplayOptions,	///< Input parameter
    struct _tls__GetDisplayOptionsResponse*tls__GetDisplayOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__GetPaneConfigurations                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__GetPaneConfigurations" of service binding "DisplayBinding".
List all currently defined panes of a device for a specified video output
(regardless if this pane is visible at a moment). A Pane is a display area on the
monitor that is attached to a video output. A pane has a
PaneConfiguration that describes which entities are associated with the pane. A
client has to configure the pane according to the connection to be established
by setting the
AudioOutput and/or AudioSourceToken. If a Token is not set, the corresponding session
will
not be established.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tls__GetPaneConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tls__GetPaneConfigurations* tls__GetPaneConfigurations,
    // output parameters:
    struct _tls__GetPaneConfigurationsResponse*tls__GetPaneConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tls__GetPaneConfigurations(
    struct soap *soap,
    // input parameters:
    struct _tls__GetPaneConfigurations* tls__GetPaneConfigurations,
    // output parameters:
    struct _tls__GetPaneConfigurationsResponse*tls__GetPaneConfigurationsResponse
  );
@endcode

*/

//gsoap tls  service method-protocol:	GetPaneConfigurations SOAP
//gsoap tls  service method-style:	GetPaneConfigurations document
//gsoap tls  service method-encoding:	GetPaneConfigurations literal
//gsoap tls  service method-input-action:	GetPaneConfigurations http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurations
//gsoap tls  service method-output-action:	GetPaneConfigurations http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurationsResponse
int __tls__GetPaneConfigurations(
    struct _tls__GetPaneConfigurations* tls__GetPaneConfigurations,	///< Input parameter
    struct _tls__GetPaneConfigurationsResponse*tls__GetPaneConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__GetPaneConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__GetPaneConfiguration" of service binding "DisplayBinding".
Retrieve the pane configuration for a pane token.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/display/wsdl/GetPaneConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/GetPaneConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tls__GetPaneConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tls__GetPaneConfiguration*  tls__GetPaneConfiguration,
    // output parameters:
    struct _tls__GetPaneConfigurationResponse*tls__GetPaneConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tls__GetPaneConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tls__GetPaneConfiguration*  tls__GetPaneConfiguration,
    // output parameters:
    struct _tls__GetPaneConfigurationResponse*tls__GetPaneConfigurationResponse
  );
@endcode

*/

//gsoap tls  service method-protocol:	GetPaneConfiguration SOAP
//gsoap tls  service method-style:	GetPaneConfiguration document
//gsoap tls  service method-encoding:	GetPaneConfiguration literal
//gsoap tls  service method-input-action:	GetPaneConfiguration http://www.onvif.org/ver10/display/wsdl/GetPaneConfiguration
//gsoap tls  service method-output-action:	GetPaneConfiguration http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurationResponse
int __tls__GetPaneConfiguration(
    struct _tls__GetPaneConfiguration*  tls__GetPaneConfiguration,	///< Input parameter
    struct _tls__GetPaneConfigurationResponse*tls__GetPaneConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__SetPaneConfigurations                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__SetPaneConfigurations" of service binding "DisplayBinding".
Modify one or more configurations of the specified video output. 
			This method will only modify the provided configurations
and leave the others unchanged. 
			Use <a href="#op.DeletePaneConfiguration">DeletePaneConfiguration</a>
to remove pane configurations.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tls__SetPaneConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tls__SetPaneConfigurations* tls__SetPaneConfigurations,
    // output parameters:
    struct _tls__SetPaneConfigurationsResponse*tls__SetPaneConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tls__SetPaneConfigurations(
    struct soap *soap,
    // input parameters:
    struct _tls__SetPaneConfigurations* tls__SetPaneConfigurations,
    // output parameters:
    struct _tls__SetPaneConfigurationsResponse*tls__SetPaneConfigurationsResponse
  );
@endcode

*/

//gsoap tls  service method-protocol:	SetPaneConfigurations SOAP
//gsoap tls  service method-style:	SetPaneConfigurations document
//gsoap tls  service method-encoding:	SetPaneConfigurations literal
//gsoap tls  service method-input-action:	SetPaneConfigurations http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurations
//gsoap tls  service method-output-action:	SetPaneConfigurations http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurationsResponse
int __tls__SetPaneConfigurations(
    struct _tls__SetPaneConfigurations* tls__SetPaneConfigurations,	///< Input parameter
    struct _tls__SetPaneConfigurationsResponse*tls__SetPaneConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__SetPaneConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__SetPaneConfiguration" of service binding "DisplayBinding".
This command changes the configuration of the specified pane (tbd)

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/display/wsdl/SetPaneConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/SetPaneConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tls__SetPaneConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tls__SetPaneConfiguration*  tls__SetPaneConfiguration,
    // output parameters:
    struct _tls__SetPaneConfigurationResponse*tls__SetPaneConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tls__SetPaneConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tls__SetPaneConfiguration*  tls__SetPaneConfiguration,
    // output parameters:
    struct _tls__SetPaneConfigurationResponse*tls__SetPaneConfigurationResponse
  );
@endcode

*/

//gsoap tls  service method-protocol:	SetPaneConfiguration SOAP
//gsoap tls  service method-style:	SetPaneConfiguration document
//gsoap tls  service method-encoding:	SetPaneConfiguration literal
//gsoap tls  service method-input-action:	SetPaneConfiguration http://www.onvif.org/ver10/display/wsdl/SetPaneConfiguration
//gsoap tls  service method-output-action:	SetPaneConfiguration http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurationResponse
int __tls__SetPaneConfiguration(
    struct _tls__SetPaneConfiguration*  tls__SetPaneConfiguration,	///< Input parameter
    struct _tls__SetPaneConfigurationResponse*tls__SetPaneConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__CreatePaneConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__CreatePaneConfiguration" of service binding "DisplayBinding".
Create a new pane configuration describing the streaming and coding settings for
a display area.<br/>
				This optional method is only supported by devices
that signal support of dynamic pane creation via their capabilities.<br/>
				The content of the Token field may be ignored by
the device.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/display/wsdl/CreatePaneConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/CreatePaneConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/CreatePaneConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tls__CreatePaneConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tls__CreatePaneConfiguration* tls__CreatePaneConfiguration,
    // output parameters:
    struct _tls__CreatePaneConfigurationResponse*tls__CreatePaneConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tls__CreatePaneConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tls__CreatePaneConfiguration* tls__CreatePaneConfiguration,
    // output parameters:
    struct _tls__CreatePaneConfigurationResponse*tls__CreatePaneConfigurationResponse
  );
@endcode

*/

//gsoap tls  service method-protocol:	CreatePaneConfiguration SOAP
//gsoap tls  service method-style:	CreatePaneConfiguration document
//gsoap tls  service method-encoding:	CreatePaneConfiguration literal
//gsoap tls  service method-input-action:	CreatePaneConfiguration http://www.onvif.org/ver10/display/wsdl/CreatePaneConfiguration
//gsoap tls  service method-output-action:	CreatePaneConfiguration http://www.onvif.org/ver10/display/wsdl/CreatePaneConfigurationResponse
int __tls__CreatePaneConfiguration(
    struct _tls__CreatePaneConfiguration* tls__CreatePaneConfiguration,	///< Input parameter
    struct _tls__CreatePaneConfigurationResponse*tls__CreatePaneConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__DeletePaneConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__DeletePaneConfiguration" of service binding "DisplayBinding".
Delete a pane configuration. A service must respond with an error if the pane configuration
				is in use by the current layout.<br/>
				This optional method is only supported by devices
that signal support of dynamic pane creation via their capabilities. 
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/display/wsdl/DeletePaneConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/DeletePaneConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/DeletePaneConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tls__DeletePaneConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tls__DeletePaneConfiguration* tls__DeletePaneConfiguration,
    // output parameters:
    struct _tls__DeletePaneConfigurationResponse*tls__DeletePaneConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tls__DeletePaneConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tls__DeletePaneConfiguration* tls__DeletePaneConfiguration,
    // output parameters:
    struct _tls__DeletePaneConfigurationResponse*tls__DeletePaneConfigurationResponse
  );
@endcode

*/

//gsoap tls  service method-protocol:	DeletePaneConfiguration SOAP
//gsoap tls  service method-style:	DeletePaneConfiguration document
//gsoap tls  service method-encoding:	DeletePaneConfiguration literal
//gsoap tls  service method-input-action:	DeletePaneConfiguration http://www.onvif.org/ver10/display/wsdl/DeletePaneConfiguration
//gsoap tls  service method-output-action:	DeletePaneConfiguration http://www.onvif.org/ver10/display/wsdl/DeletePaneConfigurationResponse
int __tls__DeletePaneConfiguration(
    struct _tls__DeletePaneConfiguration* tls__DeletePaneConfiguration,	///< Input parameter
    struct _tls__DeletePaneConfigurationResponse*tls__DeletePaneConfigurationResponse	///< Output parameter
);

/**

@page DisplayBinding Binding "DisplayBinding"

@section DisplayBinding_policy_enablers Policy Enablers of Binding "DisplayBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceIOBinding                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetServiceCapabilities" of service binding "DeviceIOBinding".
Returns the capabilities of the device IO service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetServiceCapabilities* tmd__GetServiceCapabilities,
    // output parameters:
    struct _tmd__GetServiceCapabilitiesResponse*tmd__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetServiceCapabilities* tmd__GetServiceCapabilities,
    // output parameters:
    struct _tmd__GetServiceCapabilitiesResponse*tmd__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tmd  service method-style:	GetServiceCapabilities document
//gsoap tmd  service method-encoding:	GetServiceCapabilities literal
//gsoap tmd  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities
//gsoap tmd  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilitiesResponse
int __tmd__GetServiceCapabilities(
    struct _tmd__GetServiceCapabilities* tmd__GetServiceCapabilities,	///< Input parameter
    struct _tmd__GetServiceCapabilitiesResponse*tmd__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetRelayOutputOptions                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetRelayOutputOptions" of service binding "DeviceIOBinding".
Request the available settings and ranges for one or all relay outputs. A device
that has one or more RelayOutputs should support this command.<br/>
				Two examples that illustrate usage:
				<ul>
					<li>
					1) Device supports range PT1S to PT120S:
					<pre>
<tmd:RelayOutputOptions token='44'>
  <tmd:Mode>Monostable</tmd:Mode>
  <tmd:DelayTimes>1 120</tmd:DelayTimes>
</tmd:RelayOutputOptions>
							</pre>
					</li>
					<li>
					2) Device supports values PT0.5S, PT1S,
PT2s and PT1M:
					<pre>
<tmd:RelayOutputOptions token='123'>
  <tmd:Mode>Monostable</tmd:Mode>
  <tmd:DelayTimes>0.5 1 2 60</tmd:DelayTimes>
  <tmd:Discrete>True</tmd:Discrete>
</tmd:RelayOutputOptions>
								</pre>
					</li>
				</ul>
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetRelayOutputOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetRelayOutputOptions* tmd__GetRelayOutputOptions,
    // output parameters:
    struct _tmd__GetRelayOutputOptionsResponse*tmd__GetRelayOutputOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetRelayOutputOptions(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetRelayOutputOptions* tmd__GetRelayOutputOptions,
    // output parameters:
    struct _tmd__GetRelayOutputOptionsResponse*tmd__GetRelayOutputOptionsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetRelayOutputOptions SOAP
//gsoap tmd  service method-style:	GetRelayOutputOptions document
//gsoap tmd  service method-encoding:	GetRelayOutputOptions literal
//gsoap tmd  service method-input-action:	GetRelayOutputOptions http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions
//gsoap tmd  service method-output-action:	GetRelayOutputOptions http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptionsResponse
int __tmd__GetRelayOutputOptions(
    struct _tmd__GetRelayOutputOptions* tmd__GetRelayOutputOptions,	///< Input parameter
    struct _tmd__GetRelayOutputOptionsResponse*tmd__GetRelayOutputOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioSources" of service binding "DeviceIOBinding".
List all available audio sources for the device. The device that has one or more
audio sources shall support the listing of available audio inputs through the GetAudioSources
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioSources*       trt__GetAudioSources,
    // output parameters:
    struct _trt__GetAudioSourcesResponse*trt__GetAudioSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioSources(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioSources*       trt__GetAudioSources,
    // output parameters:
    struct _trt__GetAudioSourcesResponse*trt__GetAudioSourcesResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetAudioSources SOAP
//gsoap tmd  service method-style:	GetAudioSources document
//gsoap tmd  service method-encoding:	GetAudioSources literal
//gsoap tmd  service method-input-action:	GetAudioSources http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources
//gsoap tmd  service method-output-action:	GetAudioSources http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourcesResponse
int __tmd__GetAudioSources(
    struct _trt__GetAudioSources*       trt__GetAudioSources,	///< Input parameter
    struct _trt__GetAudioSourcesResponse*trt__GetAudioSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioOutputs" of service binding "DeviceIOBinding".
List all available audio outputs of a device. A device that has one ore more physical
audio outputs shall support listing of available audio outputs through the GetAudioOutputs
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioOutputs*       trt__GetAudioOutputs,
    // output parameters:
    struct _trt__GetAudioOutputsResponse*trt__GetAudioOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioOutputs(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioOutputs*       trt__GetAudioOutputs,
    // output parameters:
    struct _trt__GetAudioOutputsResponse*trt__GetAudioOutputsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetAudioOutputs SOAP
//gsoap tmd  service method-style:	GetAudioOutputs document
//gsoap tmd  service method-encoding:	GetAudioOutputs literal
//gsoap tmd  service method-input-action:	GetAudioOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs
//gsoap tmd  service method-output-action:	GetAudioOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputsResponse
int __tmd__GetAudioOutputs(
    struct _trt__GetAudioOutputs*       trt__GetAudioOutputs,	///< Input parameter
    struct _trt__GetAudioOutputsResponse*trt__GetAudioOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoSources" of service binding "DeviceIOBinding".
List all available video sources for the device. The device that has one or more
video inputs shall support the listing of available video sources through the GetVideoSources
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSources*       trt__GetVideoSources,
    // output parameters:
    struct _trt__GetVideoSourcesResponse*trt__GetVideoSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoSources(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSources*       trt__GetVideoSources,
    // output parameters:
    struct _trt__GetVideoSourcesResponse*trt__GetVideoSourcesResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetVideoSources SOAP
//gsoap tmd  service method-style:	GetVideoSources document
//gsoap tmd  service method-encoding:	GetVideoSources literal
//gsoap tmd  service method-input-action:	GetVideoSources http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources
//gsoap tmd  service method-output-action:	GetVideoSources http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourcesResponse
int __tmd__GetVideoSources(
    struct _trt__GetVideoSources*       trt__GetVideoSources,	///< Input parameter
    struct _trt__GetVideoSourcesResponse*trt__GetVideoSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoOutputs" of service binding "DeviceIOBinding".
List all available video outputs of a device. A device that has one or more physical
video outputs shall support listing of available video outputs through the GetVideoOutputs
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetVideoOutputs*       tmd__GetVideoOutputs,
    // output parameters:
    struct _tmd__GetVideoOutputsResponse*tmd__GetVideoOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoOutputs(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetVideoOutputs*       tmd__GetVideoOutputs,
    // output parameters:
    struct _tmd__GetVideoOutputsResponse*tmd__GetVideoOutputsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetVideoOutputs SOAP
//gsoap tmd  service method-style:	GetVideoOutputs document
//gsoap tmd  service method-encoding:	GetVideoOutputs literal
//gsoap tmd  service method-input-action:	GetVideoOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs
//gsoap tmd  service method-output-action:	GetVideoOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputsResponse
int __tmd__GetVideoOutputs(
    struct _tmd__GetVideoOutputs*       tmd__GetVideoOutputs,	///< Input parameter
    struct _tmd__GetVideoOutputsResponse*tmd__GetVideoOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoSourceConfiguration" of service binding "DeviceIOBinding".
Get the video source configurations of a VideoSource. A device with one or more
video sources shall support the GetVideoSourceConfigurations command..

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetVideoSourceConfiguration* tmd__GetVideoSourceConfiguration,
    // output parameters:
    struct _tmd__GetVideoSourceConfigurationResponse*tmd__GetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetVideoSourceConfiguration* tmd__GetVideoSourceConfiguration,
    // output parameters:
    struct _tmd__GetVideoSourceConfigurationResponse*tmd__GetVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetVideoSourceConfiguration SOAP
//gsoap tmd  service method-style:	GetVideoSourceConfiguration document
//gsoap tmd  service method-encoding:	GetVideoSourceConfiguration literal
//gsoap tmd  service method-input-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration
//gsoap tmd  service method-output-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationResponse
int __tmd__GetVideoSourceConfiguration(
    struct _tmd__GetVideoSourceConfiguration* tmd__GetVideoSourceConfiguration,	///< Input parameter
    struct _tmd__GetVideoSourceConfigurationResponse*tmd__GetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoOutputConfiguration" of service binding "DeviceIOBinding".
Get the configuration of a Video Output. A device that has one or more Video Outputs
shall support the retrieval of the VideoOutputConfiguration through this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetVideoOutputConfiguration* tmd__GetVideoOutputConfiguration,
    // output parameters:
    struct _tmd__GetVideoOutputConfigurationResponse*tmd__GetVideoOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetVideoOutputConfiguration* tmd__GetVideoOutputConfiguration,
    // output parameters:
    struct _tmd__GetVideoOutputConfigurationResponse*tmd__GetVideoOutputConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetVideoOutputConfiguration SOAP
//gsoap tmd  service method-style:	GetVideoOutputConfiguration document
//gsoap tmd  service method-encoding:	GetVideoOutputConfiguration literal
//gsoap tmd  service method-input-action:	GetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration
//gsoap tmd  service method-output-action:	GetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationResponse
int __tmd__GetVideoOutputConfiguration(
    struct _tmd__GetVideoOutputConfiguration* tmd__GetVideoOutputConfiguration,	///< Input parameter
    struct _tmd__GetVideoOutputConfigurationResponse*tmd__GetVideoOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioSourceConfiguration" of service binding "DeviceIOBinding".
List the configuration of an Audio Input. A device with one or more audio inputs
shall support the GetAudioSourceConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetAudioSourceConfiguration* tmd__GetAudioSourceConfiguration,
    // output parameters:
    struct _tmd__GetAudioSourceConfigurationResponse*tmd__GetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetAudioSourceConfiguration* tmd__GetAudioSourceConfiguration,
    // output parameters:
    struct _tmd__GetAudioSourceConfigurationResponse*tmd__GetAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetAudioSourceConfiguration SOAP
//gsoap tmd  service method-style:	GetAudioSourceConfiguration document
//gsoap tmd  service method-encoding:	GetAudioSourceConfiguration literal
//gsoap tmd  service method-input-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration
//gsoap tmd  service method-output-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationResponse
int __tmd__GetAudioSourceConfiguration(
    struct _tmd__GetAudioSourceConfiguration* tmd__GetAudioSourceConfiguration,	///< Input parameter
    struct _tmd__GetAudioSourceConfigurationResponse*tmd__GetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioOutputConfiguration" of service binding "DeviceIOBinding".
Request the current configuration of a physical Audio output. A device that has
one or more AudioOutputs shall support the retrieval of the AudioOutputConfiguration
through this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetAudioOutputConfiguration* tmd__GetAudioOutputConfiguration,
    // output parameters:
    struct _tmd__GetAudioOutputConfigurationResponse*tmd__GetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetAudioOutputConfiguration* tmd__GetAudioOutputConfiguration,
    // output parameters:
    struct _tmd__GetAudioOutputConfigurationResponse*tmd__GetAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetAudioOutputConfiguration SOAP
//gsoap tmd  service method-style:	GetAudioOutputConfiguration document
//gsoap tmd  service method-encoding:	GetAudioOutputConfiguration literal
//gsoap tmd  service method-input-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration
//gsoap tmd  service method-output-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationResponse
int __tmd__GetAudioOutputConfiguration(
    struct _tmd__GetAudioOutputConfiguration* tmd__GetAudioOutputConfiguration,	///< Input parameter
    struct _tmd__GetAudioOutputConfigurationResponse*tmd__GetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetVideoSourceConfiguration" of service binding "DeviceIOBinding".
Modify a video input configuration. A device that has one or more video sources
shall support the setting of the VideoSourceConfiguration through this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__SetVideoSourceConfiguration* tmd__SetVideoSourceConfiguration,
    // output parameters:
    struct _tmd__SetVideoSourceConfigurationResponse*tmd__SetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__SetVideoSourceConfiguration* tmd__SetVideoSourceConfiguration,
    // output parameters:
    struct _tmd__SetVideoSourceConfigurationResponse*tmd__SetVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SetVideoSourceConfiguration SOAP
//gsoap tmd  service method-style:	SetVideoSourceConfiguration document
//gsoap tmd  service method-encoding:	SetVideoSourceConfiguration literal
//gsoap tmd  service method-input-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration
//gsoap tmd  service method-output-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfigurationResponse
int __tmd__SetVideoSourceConfiguration(
    struct _tmd__SetVideoSourceConfiguration* tmd__SetVideoSourceConfiguration,	///< Input parameter
    struct _tmd__SetVideoSourceConfigurationResponse*tmd__SetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetVideoOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetVideoOutputConfiguration" of service binding "DeviceIOBinding".
Modify a video output configuration. A device that has one or more video outputs
shall support the setting of its video output configuration through this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetVideoOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__SetVideoOutputConfiguration* tmd__SetVideoOutputConfiguration,
    // output parameters:
    struct _tmd__SetVideoOutputConfigurationResponse*tmd__SetVideoOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetVideoOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__SetVideoOutputConfiguration* tmd__SetVideoOutputConfiguration,
    // output parameters:
    struct _tmd__SetVideoOutputConfigurationResponse*tmd__SetVideoOutputConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SetVideoOutputConfiguration SOAP
//gsoap tmd  service method-style:	SetVideoOutputConfiguration document
//gsoap tmd  service method-encoding:	SetVideoOutputConfiguration literal
//gsoap tmd  service method-input-action:	SetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration
//gsoap tmd  service method-output-action:	SetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfigurationResponse
int __tmd__SetVideoOutputConfiguration(
    struct _tmd__SetVideoOutputConfiguration* tmd__SetVideoOutputConfiguration,	///< Input parameter
    struct _tmd__SetVideoOutputConfigurationResponse*tmd__SetVideoOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetAudioSourceConfiguration" of service binding "DeviceIOBinding".
Modify an audio source configuration. A device that has a one or more audio sources
shall support the setting of the AudioSourceConfiguration through this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__SetAudioSourceConfiguration* tmd__SetAudioSourceConfiguration,
    // output parameters:
    struct _tmd__SetAudioSourceConfigurationResponse*tmd__SetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__SetAudioSourceConfiguration* tmd__SetAudioSourceConfiguration,
    // output parameters:
    struct _tmd__SetAudioSourceConfigurationResponse*tmd__SetAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SetAudioSourceConfiguration SOAP
//gsoap tmd  service method-style:	SetAudioSourceConfiguration document
//gsoap tmd  service method-encoding:	SetAudioSourceConfiguration literal
//gsoap tmd  service method-input-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration
//gsoap tmd  service method-output-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfigurationResponse
int __tmd__SetAudioSourceConfiguration(
    struct _tmd__SetAudioSourceConfiguration* tmd__SetAudioSourceConfiguration,	///< Input parameter
    struct _tmd__SetAudioSourceConfigurationResponse*tmd__SetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetAudioOutputConfiguration" of service binding "DeviceIOBinding".
Modify an audio output configuration. A device that has one ore more audio outputs
shall support the setting of the AudioOutputConfiguration through this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__SetAudioOutputConfiguration* tmd__SetAudioOutputConfiguration,
    // output parameters:
    struct _tmd__SetAudioOutputConfigurationResponse*tmd__SetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__SetAudioOutputConfiguration* tmd__SetAudioOutputConfiguration,
    // output parameters:
    struct _tmd__SetAudioOutputConfigurationResponse*tmd__SetAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SetAudioOutputConfiguration SOAP
//gsoap tmd  service method-style:	SetAudioOutputConfiguration document
//gsoap tmd  service method-encoding:	SetAudioOutputConfiguration literal
//gsoap tmd  service method-input-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration
//gsoap tmd  service method-output-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfigurationResponse
int __tmd__SetAudioOutputConfiguration(
    struct _tmd__SetAudioOutputConfiguration* tmd__SetAudioOutputConfiguration,	///< Input parameter
    struct _tmd__SetAudioOutputConfigurationResponse*tmd__SetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoSourceConfigurationOptions" of service binding "DeviceIOBinding".
Request the VideoSourceConfigurationOptions of a VideoSource. A device with one
or more video sources shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetVideoSourceConfigurationOptions* tmd__GetVideoSourceConfigurationOptions,
    // output parameters:
    struct _tmd__GetVideoSourceConfigurationOptionsResponse*tmd__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetVideoSourceConfigurationOptions* tmd__GetVideoSourceConfigurationOptions,
    // output parameters:
    struct _tmd__GetVideoSourceConfigurationOptionsResponse*tmd__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetVideoSourceConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetVideoSourceConfigurationOptions document
//gsoap tmd  service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions
//gsoap tmd  service method-output-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptionsResponse
int __tmd__GetVideoSourceConfigurationOptions(
    struct _tmd__GetVideoSourceConfigurationOptions* tmd__GetVideoSourceConfigurationOptions,	///< Input parameter
    struct _tmd__GetVideoSourceConfigurationOptionsResponse*tmd__GetVideoSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoOutputConfigurationOptions" of service binding "DeviceIOBinding".
Request the VideoOutputConfigurationOptions of a VideoOutput. A device that has
one or more video outputs shall support the retrieval of VideoOutputConfigurationOptions
through this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetVideoOutputConfigurationOptions* tmd__GetVideoOutputConfigurationOptions,
    // output parameters:
    struct _tmd__GetVideoOutputConfigurationOptionsResponse*tmd__GetVideoOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoOutputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetVideoOutputConfigurationOptions* tmd__GetVideoOutputConfigurationOptions,
    // output parameters:
    struct _tmd__GetVideoOutputConfigurationOptionsResponse*tmd__GetVideoOutputConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetVideoOutputConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetVideoOutputConfigurationOptions document
//gsoap tmd  service method-encoding:	GetVideoOutputConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetVideoOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions
//gsoap tmd  service method-output-action:	GetVideoOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptionsResponse
int __tmd__GetVideoOutputConfigurationOptions(
    struct _tmd__GetVideoOutputConfigurationOptions* tmd__GetVideoOutputConfigurationOptions,	///< Input parameter
    struct _tmd__GetVideoOutputConfigurationOptionsResponse*tmd__GetVideoOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioSourceConfigurationOptions" of service binding "DeviceIOBinding".
Request the AudioSourceConfigurationOptions of an AudioSource. A device with one
ore more AudioSources shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetAudioSourceConfigurationOptions* tmd__GetAudioSourceConfigurationOptions,
    // output parameters:
    struct _tmd__GetAudioSourceConfigurationOptionsResponse*tmd__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetAudioSourceConfigurationOptions* tmd__GetAudioSourceConfigurationOptions,
    // output parameters:
    struct _tmd__GetAudioSourceConfigurationOptionsResponse*tmd__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetAudioSourceConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetAudioSourceConfigurationOptions document
//gsoap tmd  service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions
//gsoap tmd  service method-output-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptionsResponse
int __tmd__GetAudioSourceConfigurationOptions(
    struct _tmd__GetAudioSourceConfigurationOptions* tmd__GetAudioSourceConfigurationOptions,	///< Input parameter
    struct _tmd__GetAudioSourceConfigurationOptionsResponse*tmd__GetAudioSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioOutputConfigurationOptions" of service binding "DeviceIOBinding".
Request the available settings and ranges for a physical Audio output. A device
that has one or more AudioOutputs shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetAudioOutputConfigurationOptions* tmd__GetAudioOutputConfigurationOptions,
    // output parameters:
    struct _tmd__GetAudioOutputConfigurationOptionsResponse*tmd__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetAudioOutputConfigurationOptions* tmd__GetAudioOutputConfigurationOptions,
    // output parameters:
    struct _tmd__GetAudioOutputConfigurationOptionsResponse*tmd__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetAudioOutputConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetAudioOutputConfigurationOptions document
//gsoap tmd  service method-encoding:	GetAudioOutputConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions
//gsoap tmd  service method-output-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptionsResponse
int __tmd__GetAudioOutputConfigurationOptions(
    struct _tmd__GetAudioOutputConfigurationOptions* tmd__GetAudioOutputConfigurationOptions,	///< Input parameter
    struct _tmd__GetAudioOutputConfigurationOptionsResponse*tmd__GetAudioOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetRelayOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetRelayOutputs" of service binding "DeviceIOBinding".
This operation gets a list of all available relay outputs and their settings.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetRelayOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,
    // output parameters:
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetRelayOutputs(
    struct soap *soap,
    // input parameters:
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,
    // output parameters:
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetRelayOutputs SOAP
//gsoap tmd  service method-style:	GetRelayOutputs document
//gsoap tmd  service method-encoding:	GetRelayOutputs literal
//gsoap tmd  service method-input-action:	GetRelayOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs
//gsoap tmd  service method-output-action:	GetRelayOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputsResponse
int __tmd__GetRelayOutputs(
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,	///< Input parameter
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetRelayOutputSettings                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetRelayOutputSettings" of service binding "DeviceIOBinding".
This operation sets the settings of a relay output.
				The relay can work in two relay modes: <ul>
					<li>
				Bistable  After setting the state, the relay
remains in this state.</li>
					<li>
				Monostable  After setting the state, the relay
returns to its idle state after the
				specified time.</li>
				</ul>
				The physical idle state of a relay output can be
configured by setting the IdleState to open or
				closed (inversion of the relay behaviour).<br/>
				Idle State open means that the relay is open
when the relay state is set to inactive through
				the trigger command (see Section 8.5.3) and closed
when the state is set to active through
				the same command.<br/>
				Idle State closed means, that the relay is
closed when the relay state is set to inactive
				through the trigger command (see Section 8.5.3)
and open when the state is set to active
				through the same command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetRelayOutputSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__SetRelayOutputSettings* tmd__SetRelayOutputSettings,
    // output parameters:
    struct _tmd__SetRelayOutputSettingsResponse*tmd__SetRelayOutputSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetRelayOutputSettings(
    struct soap *soap,
    // input parameters:
    struct _tmd__SetRelayOutputSettings* tmd__SetRelayOutputSettings,
    // output parameters:
    struct _tmd__SetRelayOutputSettingsResponse*tmd__SetRelayOutputSettingsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SetRelayOutputSettings SOAP
//gsoap tmd  service method-style:	SetRelayOutputSettings document
//gsoap tmd  service method-encoding:	SetRelayOutputSettings literal
//gsoap tmd  service method-input-action:	SetRelayOutputSettings http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings
//gsoap tmd  service method-output-action:	SetRelayOutputSettings http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettingsResponse
int __tmd__SetRelayOutputSettings(
    struct _tmd__SetRelayOutputSettings* tmd__SetRelayOutputSettings,	///< Input parameter
    struct _tmd__SetRelayOutputSettingsResponse*tmd__SetRelayOutputSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetRelayOutputState                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetRelayOutputState" of service binding "DeviceIOBinding".
Modify the relay state.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetRelayOutputState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,
    // output parameters:
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetRelayOutputState(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,
    // output parameters:
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SetRelayOutputState SOAP
//gsoap tmd  service method-style:	SetRelayOutputState document
//gsoap tmd  service method-encoding:	SetRelayOutputState literal
//gsoap tmd  service method-input-action:	SetRelayOutputState http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState
//gsoap tmd  service method-output-action:	SetRelayOutputState http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputStateResponse
int __tmd__SetRelayOutputState(
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,	///< Input parameter
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetDigitalInputs                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetDigitalInputs" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetDigitalInputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetDigitalInputs*      tmd__GetDigitalInputs,
    // output parameters:
    struct _tmd__GetDigitalInputsResponse*tmd__GetDigitalInputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetDigitalInputs(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetDigitalInputs*      tmd__GetDigitalInputs,
    // output parameters:
    struct _tmd__GetDigitalInputsResponse*tmd__GetDigitalInputsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetDigitalInputs SOAP
//gsoap tmd  service method-style:	GetDigitalInputs document
//gsoap tmd  service method-encoding:	GetDigitalInputs literal
//gsoap tmd  service method-input-action:	GetDigitalInputs http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs
//gsoap tmd  service method-output-action:	GetDigitalInputs http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputsResponse
int __tmd__GetDigitalInputs(
    struct _tmd__GetDigitalInputs*      tmd__GetDigitalInputs,	///< Input parameter
    struct _tmd__GetDigitalInputsResponse*tmd__GetDigitalInputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetSerialPorts                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetSerialPorts" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetSerialPorts(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetSerialPorts*        tmd__GetSerialPorts,
    // output parameters:
    struct _tmd__GetSerialPortsResponse*tmd__GetSerialPortsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetSerialPorts(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetSerialPorts*        tmd__GetSerialPorts,
    // output parameters:
    struct _tmd__GetSerialPortsResponse*tmd__GetSerialPortsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetSerialPorts SOAP
//gsoap tmd  service method-style:	GetSerialPorts document
//gsoap tmd  service method-encoding:	GetSerialPorts literal
//gsoap tmd  service method-input-action:	GetSerialPorts http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts
//gsoap tmd  service method-output-action:	GetSerialPorts http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortsResponse
int __tmd__GetSerialPorts(
    struct _tmd__GetSerialPorts*        tmd__GetSerialPorts,	///< Input parameter
    struct _tmd__GetSerialPortsResponse*tmd__GetSerialPortsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetSerialPortConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetSerialPortConfiguration" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetSerialPortConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetSerialPortConfiguration* tmd__GetSerialPortConfiguration,
    // output parameters:
    struct _tmd__GetSerialPortConfigurationResponse*tmd__GetSerialPortConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetSerialPortConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetSerialPortConfiguration* tmd__GetSerialPortConfiguration,
    // output parameters:
    struct _tmd__GetSerialPortConfigurationResponse*tmd__GetSerialPortConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetSerialPortConfiguration SOAP
//gsoap tmd  service method-style:	GetSerialPortConfiguration document
//gsoap tmd  service method-encoding:	GetSerialPortConfiguration literal
//gsoap tmd  service method-input-action:	GetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations
//gsoap tmd  service method-output-action:	GetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationsResponse
int __tmd__GetSerialPortConfiguration(
    struct _tmd__GetSerialPortConfiguration* tmd__GetSerialPortConfiguration,	///< Input parameter
    struct _tmd__GetSerialPortConfigurationResponse*tmd__GetSerialPortConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetSerialPortConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetSerialPortConfiguration" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetSerialPortConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__SetSerialPortConfiguration* tmd__SetSerialPortConfiguration,
    // output parameters:
    struct _tmd__SetSerialPortConfigurationResponse*tmd__SetSerialPortConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetSerialPortConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tmd__SetSerialPortConfiguration* tmd__SetSerialPortConfiguration,
    // output parameters:
    struct _tmd__SetSerialPortConfigurationResponse*tmd__SetSerialPortConfigurationResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SetSerialPortConfiguration SOAP
//gsoap tmd  service method-style:	SetSerialPortConfiguration document
//gsoap tmd  service method-encoding:	SetSerialPortConfiguration literal
//gsoap tmd  service method-input-action:	SetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration
//gsoap tmd  service method-output-action:	SetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfigurationResponse
int __tmd__SetSerialPortConfiguration(
    struct _tmd__SetSerialPortConfiguration* tmd__SetSerialPortConfiguration,	///< Input parameter
    struct _tmd__SetSerialPortConfigurationResponse*tmd__SetSerialPortConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetSerialPortConfigurationOptions                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetSerialPortConfigurationOptions" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetSerialPortConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__GetSerialPortConfigurationOptions* tmd__GetSerialPortConfigurationOptions,
    // output parameters:
    struct _tmd__GetSerialPortConfigurationOptionsResponse*tmd__GetSerialPortConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetSerialPortConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _tmd__GetSerialPortConfigurationOptions* tmd__GetSerialPortConfigurationOptions,
    // output parameters:
    struct _tmd__GetSerialPortConfigurationOptionsResponse*tmd__GetSerialPortConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	GetSerialPortConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetSerialPortConfigurationOptions document
//gsoap tmd  service method-encoding:	GetSerialPortConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetSerialPortConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions
//gsoap tmd  service method-output-action:	GetSerialPortConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptionsResponse
int __tmd__GetSerialPortConfigurationOptions(
    struct _tmd__GetSerialPortConfigurationOptions* tmd__GetSerialPortConfigurationOptions,	///< Input parameter
    struct _tmd__GetSerialPortConfigurationOptionsResponse*tmd__GetSerialPortConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SendReceiveSerialCommand                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SendReceiveSerialCommand" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SendReceiveSerialCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tmd__SendReceiveSerialCommand* tmd__SendReceiveSerialCommand,
    // output parameters:
    struct _tmd__SendReceiveSerialCommandResponse*tmd__SendReceiveSerialCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SendReceiveSerialCommand(
    struct soap *soap,
    // input parameters:
    struct _tmd__SendReceiveSerialCommand* tmd__SendReceiveSerialCommand,
    // output parameters:
    struct _tmd__SendReceiveSerialCommandResponse*tmd__SendReceiveSerialCommandResponse
  );
@endcode

*/

//gsoap tmd  service method-protocol:	SendReceiveSerialCommand SOAP
//gsoap tmd  service method-style:	SendReceiveSerialCommand document
//gsoap tmd  service method-encoding:	SendReceiveSerialCommand literal
//gsoap tmd  service method-input-action:	SendReceiveSerialCommand http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand
//gsoap tmd  service method-output-action:	SendReceiveSerialCommand http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommandResponse
int __tmd__SendReceiveSerialCommand(
    struct _tmd__SendReceiveSerialCommand* tmd__SendReceiveSerialCommand,	///< Input parameter
    struct _tmd__SendReceiveSerialCommandResponse*tmd__SendReceiveSerialCommandResponse	///< Output parameter
);

/**

@page DeviceIOBinding Binding "DeviceIOBinding"

@section DeviceIOBinding_policy_enablers Policy Enablers of Binding "DeviceIOBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PTZBinding                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetServiceCapabilities                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetServiceCapabilities" of service binding "PTZBinding".
Returns the capabilities of the PTZ service. The result is returned in a typed answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetServiceCapabilities* tptz__GetServiceCapabilities,
    // output parameters:
    struct _tptz__GetServiceCapabilitiesResponse*tptz__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetServiceCapabilities* tptz__GetServiceCapabilities,
    // output parameters:
    struct _tptz__GetServiceCapabilitiesResponse*tptz__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetServiceCapabilities SOAP
//gsoap tptz service method-style:	GetServiceCapabilities document
//gsoap tptz service method-encoding:	GetServiceCapabilities literal
//gsoap tptz service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities
//gsoap tptz service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilitiesResponse
int __tptz__GetServiceCapabilities(
    struct _tptz__GetServiceCapabilities* tptz__GetServiceCapabilities,	///< Input parameter
    struct _tptz__GetServiceCapabilitiesResponse*tptz__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfigurations                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetConfigurations" of service binding "PTZBinding".

		        Get all the existing PTZConfigurations from the device.
				<br/>
				The default Position/Translation/Velocity Spaces
are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate
system. The default Speeds are
				introduced to control the speed of move requests
(absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits
is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position
Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt
limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements.
The limits shall be checked within the
				coordinate system for which the limits have been
specified. That means that even if
				movements are specified in a different coordinate
system, the requested movements shall be
				transformed to the coordinate system of the limits
where the limits can be checked. When a
				relative or continuous movements is specified, which
would leave the specified limits, the PTZ
				unit has to move along the specified limits. The
Zoom Limits have to be interpreted
				accordingly.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetConfigurations*    tptz__GetConfigurations,
    // output parameters:
    struct _tptz__GetConfigurationsResponse*tptz__GetConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfigurations(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetConfigurations*    tptz__GetConfigurations,
    // output parameters:
    struct _tptz__GetConfigurationsResponse*tptz__GetConfigurationsResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetConfigurations SOAP
//gsoap tptz service method-style:	GetConfigurations document
//gsoap tptz service method-encoding:	GetConfigurations literal
//gsoap tptz service method-input-action:	GetConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations
//gsoap tptz service method-output-action:	GetConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationsResponse
int __tptz__GetConfigurations(
    struct _tptz__GetConfigurations*    tptz__GetConfigurations,	///< Input parameter
    struct _tptz__GetConfigurationsResponse*tptz__GetConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresets                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresets" of service binding "PTZBinding".

        Operation to request all PTZ presets for the PTZNode
        in the selected profile. The operation is supported if there is support
        for at least on PTZ preset by the PTZNode.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresets"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresets"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetPresets*           tptz__GetPresets,
    // output parameters:
    struct _tptz__GetPresetsResponse   *tptz__GetPresetsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresets(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetPresets*           tptz__GetPresets,
    // output parameters:
    struct _tptz__GetPresetsResponse   *tptz__GetPresetsResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetPresets SOAP
//gsoap tptz service method-style:	GetPresets document
//gsoap tptz service method-encoding:	GetPresets literal
//gsoap tptz service method-input-action:	GetPresets http://www.onvif.org/ver20/ptz/wsdl/GetPresets
//gsoap tptz service method-output-action:	GetPresets http://www.onvif.org/ver20/ptz/wsdl/GetPresetsResponse
int __tptz__GetPresets(
    struct _tptz__GetPresets*           tptz__GetPresets,	///< Input parameter
    struct _tptz__GetPresetsResponse   *tptz__GetPresetsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetPreset                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SetPreset" of service binding "PTZBinding".

				The SetPreset command saves the current device position
parameters so that the device can
				move to the saved preset position through the GotoPreset
operation.
				In order to create a new preset, the SetPresetRequest
contains no PresetToken. If creation is
				successful, the Response contains the PresetToken
which uniquely identifies the Preset. An
				existing Preset can be overwritten by specifying
the PresetToken of the corresponding Preset.
				In both cases (overwriting or creation) an optional
PresetName can be specified. The
				operation fails if the PTZ device is moving during
the SetPreset operation.
				The device MAY internally save additional states
such as imaging properties in the PTZ
				Preset which then should be recalled in the GotoPreset
operation.      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/SetPreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetPreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__SetPreset*            tptz__SetPreset,
    // output parameters:
    struct _tptz__SetPresetResponse    *tptz__SetPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetPreset(
    struct soap *soap,
    // input parameters:
    struct _tptz__SetPreset*            tptz__SetPreset,
    // output parameters:
    struct _tptz__SetPresetResponse    *tptz__SetPresetResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	SetPreset SOAP
//gsoap tptz service method-style:	SetPreset document
//gsoap tptz service method-encoding:	SetPreset literal
//gsoap tptz service method-input-action:	SetPreset http://www.onvif.org/ver20/ptz/wsdl/SetPreset
//gsoap tptz service method-output-action:	SetPreset http://www.onvif.org/ver20/ptz/wsdl/SetPresetResponse
int __tptz__SetPreset(
    struct _tptz__SetPreset*            tptz__SetPreset,	///< Input parameter
    struct _tptz__SetPresetResponse    *tptz__SetPresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RemovePreset                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__RemovePreset" of service binding "PTZBinding".

        Operation to remove a PTZ preset for the Node in
        the
        selected profile. The operation is supported if the
        PresetPosition
        capability exists for teh Node in the
        selected profile.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RemovePreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__RemovePreset*         tptz__RemovePreset,
    // output parameters:
    struct _tptz__RemovePresetResponse *tptz__RemovePresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RemovePreset(
    struct soap *soap,
    // input parameters:
    struct _tptz__RemovePreset*         tptz__RemovePreset,
    // output parameters:
    struct _tptz__RemovePresetResponse *tptz__RemovePresetResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	RemovePreset SOAP
//gsoap tptz service method-style:	RemovePreset document
//gsoap tptz service method-encoding:	RemovePreset literal
//gsoap tptz service method-input-action:	RemovePreset http://www.onvif.org/ver20/ptz/wsdl/RemovePreset
//gsoap tptz service method-output-action:	RemovePreset http://www.onvif.org/ver20/ptz/wsdl/RemovePresetResponse
int __tptz__RemovePreset(
    struct _tptz__RemovePreset*         tptz__RemovePreset,	///< Input parameter
    struct _tptz__RemovePresetResponse *tptz__RemovePresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GotoPreset                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GotoPreset" of service binding "PTZBinding".

        Operation to go to a saved preset position for the
        PTZNode in the selected profile. The operation is supported if there is
        support for at least on PTZ preset by the PTZNode.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GotoPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GotoPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GotoPreset*           tptz__GotoPreset,
    // output parameters:
    struct _tptz__GotoPresetResponse   *tptz__GotoPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GotoPreset(
    struct soap *soap,
    // input parameters:
    struct _tptz__GotoPreset*           tptz__GotoPreset,
    // output parameters:
    struct _tptz__GotoPresetResponse   *tptz__GotoPresetResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GotoPreset SOAP
//gsoap tptz service method-style:	GotoPreset document
//gsoap tptz service method-encoding:	GotoPreset literal
//gsoap tptz service method-input-action:	GotoPreset http://www.onvif.org/ver20/ptz/wsdl/GotoPreset
//gsoap tptz service method-output-action:	GotoPreset http://www.onvif.org/ver20/ptz/wsdl/GotoPresetResponse
int __tptz__GotoPreset(
    struct _tptz__GotoPreset*           tptz__GotoPreset,	///< Input parameter
    struct _tptz__GotoPresetResponse   *tptz__GotoPresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetStatus                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetStatus" of service binding "PTZBinding".

				Operation to request PTZ status for the Node in
the
				selected profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetStatus"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetStatus"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetStatus*            tptz__GetStatus,
    // output parameters:
    struct _tptz__GetStatusResponse    *tptz__GetStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetStatus(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetStatus*            tptz__GetStatus,
    // output parameters:
    struct _tptz__GetStatusResponse    *tptz__GetStatusResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetStatus SOAP
//gsoap tptz service method-style:	GetStatus document
//gsoap tptz service method-encoding:	GetStatus literal
//gsoap tptz service method-input-action:	GetStatus http://www.onvif.org/ver20/ptz/wsdl/GetStatus
//gsoap tptz service method-output-action:	GetStatus http://www.onvif.org/ver20/ptz/wsdl/GetStatusResponse
int __tptz__GetStatus(
    struct _tptz__GetStatus*            tptz__GetStatus,	///< Input parameter
    struct _tptz__GetStatusResponse    *tptz__GetStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfiguration                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetConfiguration" of service binding "PTZBinding".
Get a specific PTZonfiguration from the device, identified by its reference token
or name.
				<br/>
				The default Position/Translation/Velocity Spaces
are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate
system. The default Speeds are
				introduced to control the speed of move requests
(absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits
is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position
Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt
limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements.
The limits shall be checked within the
				coordinate system for which the limits have been
specified. That means that even if
				movements are specified in a different coordinate
system, the requested movements shall be
				transformed to the coordinate system of the limits
where the limits can be checked. When a
				relative or continuous movements is specified, which
would leave the specified limits, the PTZ
				unit has to move along the specified limits. The
Zoom Limits have to be interpreted
				accordingly.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetConfiguration*     tptz__GetConfiguration,
    // output parameters:
    struct _tptz__GetConfigurationResponse*tptz__GetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetConfiguration*     tptz__GetConfiguration,
    // output parameters:
    struct _tptz__GetConfigurationResponse*tptz__GetConfigurationResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetConfiguration SOAP
//gsoap tptz service method-style:	GetConfiguration document
//gsoap tptz service method-encoding:	GetConfiguration literal
//gsoap tptz service method-input-action:	GetConfiguration http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration
//gsoap tptz service method-output-action:	GetConfiguration http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationResponse
int __tptz__GetConfiguration(
    struct _tptz__GetConfiguration*     tptz__GetConfiguration,	///< Input parameter
    struct _tptz__GetConfigurationResponse*tptz__GetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetNodes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetNodes" of service binding "PTZBinding".

				Get the descriptions of the available PTZ Nodes.
				<br/>
				A PTZ-capable device may have multiple PTZ Nodes.
The PTZ Nodes may represent
				mechanical PTZ drivers, uploaded PTZ drivers or
digital PTZ drivers. PTZ Nodes are the
				lowest level entities in the PTZ control API and
reflect the supported PTZ capabilities. The
				PTZ Node is referenced either by its name or by
its reference token. 
      		

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodes"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodes"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetNodes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetNodes*             tptz__GetNodes,
    // output parameters:
    struct _tptz__GetNodesResponse     *tptz__GetNodesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetNodes(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetNodes*             tptz__GetNodes,
    // output parameters:
    struct _tptz__GetNodesResponse     *tptz__GetNodesResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetNodes SOAP
//gsoap tptz service method-style:	GetNodes document
//gsoap tptz service method-encoding:	GetNodes literal
//gsoap tptz service method-input-action:	GetNodes http://www.onvif.org/ver20/ptz/wsdl/GetNodes
//gsoap tptz service method-output-action:	GetNodes http://www.onvif.org/ver20/ptz/wsdl/GetNodesResponse
int __tptz__GetNodes(
    struct _tptz__GetNodes*             tptz__GetNodes,	///< Input parameter
    struct _tptz__GetNodesResponse     *tptz__GetNodesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetNode                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetNode" of service binding "PTZBinding".
Get a specific PTZ Node identified by a reference
        token or a name.
	  

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetNode"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetNode"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetNode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetNode*              tptz__GetNode,
    // output parameters:
    struct _tptz__GetNodeResponse      *tptz__GetNodeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetNode(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetNode*              tptz__GetNode,
    // output parameters:
    struct _tptz__GetNodeResponse      *tptz__GetNodeResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetNode SOAP
//gsoap tptz service method-style:	GetNode document
//gsoap tptz service method-encoding:	GetNode literal
//gsoap tptz service method-input-action:	GetNode http://www.onvif.org/ver20/ptz/wsdl/GetNode
//gsoap tptz service method-output-action:	GetNode http://www.onvif.org/ver20/ptz/wsdl/GetNodeResponse
int __tptz__GetNode(
    struct _tptz__GetNode*              tptz__GetNode,	///< Input parameter
    struct _tptz__GetNodeResponse      *tptz__GetNodeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetConfiguration                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SetConfiguration" of service binding "PTZBinding".

        Set/update a existing PTZConfiguration on the device.
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__SetConfiguration*     tptz__SetConfiguration,
    // output parameters:
    struct _tptz__SetConfigurationResponse*tptz__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tptz__SetConfiguration*     tptz__SetConfiguration,
    // output parameters:
    struct _tptz__SetConfigurationResponse*tptz__SetConfigurationResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	SetConfiguration SOAP
//gsoap tptz service method-style:	SetConfiguration document
//gsoap tptz service method-encoding:	SetConfiguration literal
//gsoap tptz service method-input-action:	SetConfiguration http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration
//gsoap tptz service method-output-action:	SetConfiguration http://www.onvif.org/ver20/ptz/wsdl/SetConfigurationResponse
int __tptz__SetConfiguration(
    struct _tptz__SetConfiguration*     tptz__SetConfiguration,	///< Input parameter
    struct _tptz__SetConfigurationResponse*tptz__SetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfigurationOptions                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetConfigurationOptions" of service binding "PTZBinding".

				List supported coordinate systems including their
range limitations. Therefore, the options
				MAY differ depending on whether the PTZ Configuration
is assigned to a Profile containing a
				Video Source Configuration. In that case, the options
may additionally contain coordinate
				systems referring to the image coordinate system
described by the Video Source
				Configuration. If the PTZ Node supports continuous
movements, it shall return a Timeout Range within
				which Timeouts are accepted by the PTZ Node.				
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetConfigurationOptions* tptz__GetConfigurationOptions,
    // output parameters:
    struct _tptz__GetConfigurationOptionsResponse*tptz__GetConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetConfigurationOptions* tptz__GetConfigurationOptions,
    // output parameters:
    struct _tptz__GetConfigurationOptionsResponse*tptz__GetConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetConfigurationOptions SOAP
//gsoap tptz service method-style:	GetConfigurationOptions document
//gsoap tptz service method-encoding:	GetConfigurationOptions literal
//gsoap tptz service method-input-action:	GetConfigurationOptions http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions
//gsoap tptz service method-output-action:	GetConfigurationOptions http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptionsResponse
int __tptz__GetConfigurationOptions(
    struct _tptz__GetConfigurationOptions* tptz__GetConfigurationOptions,	///< Input parameter
    struct _tptz__GetConfigurationOptionsResponse*tptz__GetConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GotoHomePosition                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GotoHomePosition" of service binding "PTZBinding".

        Operation to move the PTZ device to it's "home" position. The operation
is supported if the HomeSupported element in the PTZNode is true.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GotoHomePosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GotoHomePosition*     tptz__GotoHomePosition,
    // output parameters:
    struct _tptz__GotoHomePositionResponse*tptz__GotoHomePositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GotoHomePosition(
    struct soap *soap,
    // input parameters:
    struct _tptz__GotoHomePosition*     tptz__GotoHomePosition,
    // output parameters:
    struct _tptz__GotoHomePositionResponse*tptz__GotoHomePositionResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GotoHomePosition SOAP
//gsoap tptz service method-style:	GotoHomePosition document
//gsoap tptz service method-encoding:	GotoHomePosition literal
//gsoap tptz service method-input-action:	GotoHomePosition http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition
//gsoap tptz service method-output-action:	GotoHomePosition http://www.onvif.org/ver20/ptz/wsdl/GotoHomePositionResponse
int __tptz__GotoHomePosition(
    struct _tptz__GotoHomePosition*     tptz__GotoHomePosition,	///< Input parameter
    struct _tptz__GotoHomePositionResponse*tptz__GotoHomePositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetHomePosition                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SetHomePosition" of service binding "PTZBinding".
Operation to save current position as the home position.
				The SetHomePosition command returns with a failure
if the home position is fixed and
				cannot be overwritten. If the SetHomePosition is
successful, it is possible to recall the
				Home Position with the GotoHomePosition command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetHomePositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetHomePosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__SetHomePosition*      tptz__SetHomePosition,
    // output parameters:
    struct _tptz__SetHomePositionResponse*tptz__SetHomePositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetHomePosition(
    struct soap *soap,
    // input parameters:
    struct _tptz__SetHomePosition*      tptz__SetHomePosition,
    // output parameters:
    struct _tptz__SetHomePositionResponse*tptz__SetHomePositionResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	SetHomePosition SOAP
//gsoap tptz service method-style:	SetHomePosition document
//gsoap tptz service method-encoding:	SetHomePosition literal
//gsoap tptz service method-input-action:	SetHomePosition http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition
//gsoap tptz service method-output-action:	SetHomePosition http://www.onvif.org/ver20/ptz/wsdl/SetHomePositionResponse
int __tptz__SetHomePosition(
    struct _tptz__SetHomePosition*      tptz__SetHomePosition,	///< Input parameter
    struct _tptz__SetHomePositionResponse*tptz__SetHomePositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__ContinuousMove                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__ContinuousMove" of service binding "PTZBinding".
Operation for continuous Pan/Tilt and Zoom movements. The operation is supported
if the PTZNode supports at least one continuous Pan/Tilt or Zoom space. If the
space argument is omitted, the default space set by the PTZConfiguration will be
used.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__ContinuousMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__ContinuousMove*       tptz__ContinuousMove,
    // output parameters:
    struct _tptz__ContinuousMoveResponse*tptz__ContinuousMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__ContinuousMove(
    struct soap *soap,
    // input parameters:
    struct _tptz__ContinuousMove*       tptz__ContinuousMove,
    // output parameters:
    struct _tptz__ContinuousMoveResponse*tptz__ContinuousMoveResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	ContinuousMove SOAP
//gsoap tptz service method-style:	ContinuousMove document
//gsoap tptz service method-encoding:	ContinuousMove literal
//gsoap tptz service method-input-action:	ContinuousMove http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove
//gsoap tptz service method-output-action:	ContinuousMove http://www.onvif.org/ver20/ptz/wsdl/ContinuousMoveResponse
int __tptz__ContinuousMove(
    struct _tptz__ContinuousMove*       tptz__ContinuousMove,	///< Input parameter
    struct _tptz__ContinuousMoveResponse*tptz__ContinuousMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RelativeMove                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__RelativeMove" of service binding "PTZBinding".
Operation for Relative Pan/Tilt and Zoom Move. The operation is supported if the
PTZNode supports at least one relative Pan/Tilt or Zoom space.<br/> 
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector
or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RelativeMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RelativeMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__RelativeMove*         tptz__RelativeMove,
    // output parameters:
    struct _tptz__RelativeMoveResponse *tptz__RelativeMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RelativeMove(
    struct soap *soap,
    // input parameters:
    struct _tptz__RelativeMove*         tptz__RelativeMove,
    // output parameters:
    struct _tptz__RelativeMoveResponse *tptz__RelativeMoveResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	RelativeMove SOAP
//gsoap tptz service method-style:	RelativeMove document
//gsoap tptz service method-encoding:	RelativeMove literal
//gsoap tptz service method-input-action:	RelativeMove http://www.onvif.org/ver20/ptz/wsdl/RelativeMove
//gsoap tptz service method-output-action:	RelativeMove http://www.onvif.org/ver20/ptz/wsdl/RelativeMoveResponse
int __tptz__RelativeMove(
    struct _tptz__RelativeMove*         tptz__RelativeMove,	///< Input parameter
    struct _tptz__RelativeMoveResponse *tptz__RelativeMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SendAuxiliaryCommand                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SendAuxiliaryCommand" of service binding "PTZBinding".

        Operation to send auxiliary commands to the PTZ device
        mapped by the PTZNode in the selected profile. The
        operation is supported
        if the AuxiliarySupported element of the PTZNode is true
      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__SendAuxiliaryCommand* tptz__SendAuxiliaryCommand,
    // output parameters:
    struct _tptz__SendAuxiliaryCommandResponse*tptz__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SendAuxiliaryCommand(
    struct soap *soap,
    // input parameters:
    struct _tptz__SendAuxiliaryCommand* tptz__SendAuxiliaryCommand,
    // output parameters:
    struct _tptz__SendAuxiliaryCommandResponse*tptz__SendAuxiliaryCommandResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	SendAuxiliaryCommand SOAP
//gsoap tptz service method-style:	SendAuxiliaryCommand document
//gsoap tptz service method-encoding:	SendAuxiliaryCommand literal
//gsoap tptz service method-input-action:	SendAuxiliaryCommand http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand
//gsoap tptz service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommandResponse
int __tptz__SendAuxiliaryCommand(
    struct _tptz__SendAuxiliaryCommand* tptz__SendAuxiliaryCommand,	///< Input parameter
    struct _tptz__SendAuxiliaryCommandResponse*tptz__SendAuxiliaryCommandResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__AbsoluteMove                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__AbsoluteMove" of service binding "PTZBinding".
Operation to move pan,tilt or zoom to a absolute destination. <br/>
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector
or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__AbsoluteMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__AbsoluteMove*         tptz__AbsoluteMove,
    // output parameters:
    struct _tptz__AbsoluteMoveResponse *tptz__AbsoluteMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__AbsoluteMove(
    struct soap *soap,
    // input parameters:
    struct _tptz__AbsoluteMove*         tptz__AbsoluteMove,
    // output parameters:
    struct _tptz__AbsoluteMoveResponse *tptz__AbsoluteMoveResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	AbsoluteMove SOAP
//gsoap tptz service method-style:	AbsoluteMove document
//gsoap tptz service method-encoding:	AbsoluteMove literal
//gsoap tptz service method-input-action:	AbsoluteMove http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove
//gsoap tptz service method-output-action:	AbsoluteMove http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMoveResponse
int __tptz__AbsoluteMove(
    struct _tptz__AbsoluteMove*         tptz__AbsoluteMove,	///< Input parameter
    struct _tptz__AbsoluteMoveResponse *tptz__AbsoluteMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__Stop                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__Stop" of service binding "PTZBinding".
Operation to stop ongoing pan, tilt and zoom movements of absolute relative and
continuous type.
If no stop argument for pan, tilt or zoom is set, the device will stop all ongoing
pan, tilt and zoom movements.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/Stop"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/Stop"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/StopResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__Stop(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__Stop*                 tptz__Stop,
    // output parameters:
    struct _tptz__StopResponse         *tptz__StopResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__Stop(
    struct soap *soap,
    // input parameters:
    struct _tptz__Stop*                 tptz__Stop,
    // output parameters:
    struct _tptz__StopResponse         *tptz__StopResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	Stop SOAP
//gsoap tptz service method-style:	Stop document
//gsoap tptz service method-encoding:	Stop literal
//gsoap tptz service method-input-action:	Stop http://www.onvif.org/ver20/ptz/wsdl/Stop
//gsoap tptz service method-output-action:	Stop http://www.onvif.org/ver20/ptz/wsdl/StopResponse
int __tptz__Stop(
    struct _tptz__Stop*                 tptz__Stop,	///< Input parameter
    struct _tptz__StopResponse         *tptz__StopResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTours                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresetTours" of service binding "PTZBinding".
Operation to request PTZ preset tours in the selected media profiles.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetToursResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTours(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetPresetTours*       tptz__GetPresetTours,
    // output parameters:
    struct _tptz__GetPresetToursResponse*tptz__GetPresetToursResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTours(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetPresetTours*       tptz__GetPresetTours,
    // output parameters:
    struct _tptz__GetPresetToursResponse*tptz__GetPresetToursResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetPresetTours SOAP
//gsoap tptz service method-style:	GetPresetTours document
//gsoap tptz service method-encoding:	GetPresetTours literal
//gsoap tptz service method-input-action:	GetPresetTours http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours
//gsoap tptz service method-output-action:	GetPresetTours http://www.onvif.org/ver20/ptz/wsdl/GetPresetToursResponse
int __tptz__GetPresetTours(
    struct _tptz__GetPresetTours*       tptz__GetPresetTours,	///< Input parameter
    struct _tptz__GetPresetToursResponse*tptz__GetPresetToursResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTour                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresetTour" of service binding "PTZBinding".
Operation to request a specific PTZ preset tour in the selected media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetPresetTour*        tptz__GetPresetTour,
    // output parameters:
    struct _tptz__GetPresetTourResponse*tptz__GetPresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTour(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetPresetTour*        tptz__GetPresetTour,
    // output parameters:
    struct _tptz__GetPresetTourResponse*tptz__GetPresetTourResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetPresetTour SOAP
//gsoap tptz service method-style:	GetPresetTour document
//gsoap tptz service method-encoding:	GetPresetTour literal
//gsoap tptz service method-input-action:	GetPresetTour http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour
//gsoap tptz service method-output-action:	GetPresetTour http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourResponse
int __tptz__GetPresetTour(
    struct _tptz__GetPresetTour*        tptz__GetPresetTour,	///< Input parameter
    struct _tptz__GetPresetTourResponse*tptz__GetPresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTourOptions                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresetTourOptions" of service binding "PTZBinding".
Operation to request available options to configure PTZ preset tour.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTourOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetPresetTourOptions* tptz__GetPresetTourOptions,
    // output parameters:
    struct _tptz__GetPresetTourOptionsResponse*tptz__GetPresetTourOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTourOptions(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetPresetTourOptions* tptz__GetPresetTourOptions,
    // output parameters:
    struct _tptz__GetPresetTourOptionsResponse*tptz__GetPresetTourOptionsResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetPresetTourOptions SOAP
//gsoap tptz service method-style:	GetPresetTourOptions document
//gsoap tptz service method-encoding:	GetPresetTourOptions literal
//gsoap tptz service method-input-action:	GetPresetTourOptions http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions
//gsoap tptz service method-output-action:	GetPresetTourOptions http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptionsResponse
int __tptz__GetPresetTourOptions(
    struct _tptz__GetPresetTourOptions* tptz__GetPresetTourOptions,	///< Input parameter
    struct _tptz__GetPresetTourOptionsResponse*tptz__GetPresetTourOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__CreatePresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__CreatePresetTour" of service binding "PTZBinding".
Operation to create a preset tour for the selected media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__CreatePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__CreatePresetTour*     tptz__CreatePresetTour,
    // output parameters:
    struct _tptz__CreatePresetTourResponse*tptz__CreatePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__CreatePresetTour(
    struct soap *soap,
    // input parameters:
    struct _tptz__CreatePresetTour*     tptz__CreatePresetTour,
    // output parameters:
    struct _tptz__CreatePresetTourResponse*tptz__CreatePresetTourResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	CreatePresetTour SOAP
//gsoap tptz service method-style:	CreatePresetTour document
//gsoap tptz service method-encoding:	CreatePresetTour literal
//gsoap tptz service method-input-action:	CreatePresetTour http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour
//gsoap tptz service method-output-action:	CreatePresetTour http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTourResponse
int __tptz__CreatePresetTour(
    struct _tptz__CreatePresetTour*     tptz__CreatePresetTour,	///< Input parameter
    struct _tptz__CreatePresetTourResponse*tptz__CreatePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__ModifyPresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__ModifyPresetTour" of service binding "PTZBinding".
Operation to modify a preset tour for the selected media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__ModifyPresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__ModifyPresetTour*     tptz__ModifyPresetTour,
    // output parameters:
    struct _tptz__ModifyPresetTourResponse*tptz__ModifyPresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__ModifyPresetTour(
    struct soap *soap,
    // input parameters:
    struct _tptz__ModifyPresetTour*     tptz__ModifyPresetTour,
    // output parameters:
    struct _tptz__ModifyPresetTourResponse*tptz__ModifyPresetTourResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	ModifyPresetTour SOAP
//gsoap tptz service method-style:	ModifyPresetTour document
//gsoap tptz service method-encoding:	ModifyPresetTour literal
//gsoap tptz service method-input-action:	ModifyPresetTour http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour
//gsoap tptz service method-output-action:	ModifyPresetTour http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTourResponse
int __tptz__ModifyPresetTour(
    struct _tptz__ModifyPresetTour*     tptz__ModifyPresetTour,	///< Input parameter
    struct _tptz__ModifyPresetTourResponse*tptz__ModifyPresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__OperatePresetTour                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__OperatePresetTour" of service binding "PTZBinding".
Operation to perform specific operation on the preset tour in selected media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__OperatePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__OperatePresetTour*    tptz__OperatePresetTour,
    // output parameters:
    struct _tptz__OperatePresetTourResponse*tptz__OperatePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__OperatePresetTour(
    struct soap *soap,
    // input parameters:
    struct _tptz__OperatePresetTour*    tptz__OperatePresetTour,
    // output parameters:
    struct _tptz__OperatePresetTourResponse*tptz__OperatePresetTourResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	OperatePresetTour SOAP
//gsoap tptz service method-style:	OperatePresetTour document
//gsoap tptz service method-encoding:	OperatePresetTour literal
//gsoap tptz service method-input-action:	OperatePresetTour http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour
//gsoap tptz service method-output-action:	OperatePresetTour http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTourResponse
int __tptz__OperatePresetTour(
    struct _tptz__OperatePresetTour*    tptz__OperatePresetTour,	///< Input parameter
    struct _tptz__OperatePresetTourResponse*tptz__OperatePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RemovePresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__RemovePresetTour" of service binding "PTZBinding".
Operation to delete a specific preset tour from the media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RemovePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__RemovePresetTour*     tptz__RemovePresetTour,
    // output parameters:
    struct _tptz__RemovePresetTourResponse*tptz__RemovePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RemovePresetTour(
    struct soap *soap,
    // input parameters:
    struct _tptz__RemovePresetTour*     tptz__RemovePresetTour,
    // output parameters:
    struct _tptz__RemovePresetTourResponse*tptz__RemovePresetTourResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	RemovePresetTour SOAP
//gsoap tptz service method-style:	RemovePresetTour document
//gsoap tptz service method-encoding:	RemovePresetTour literal
//gsoap tptz service method-input-action:	RemovePresetTour http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour
//gsoap tptz service method-output-action:	RemovePresetTour http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTourResponse
int __tptz__RemovePresetTour(
    struct _tptz__RemovePresetTour*     tptz__RemovePresetTour,	///< Input parameter
    struct _tptz__RemovePresetTourResponse*tptz__RemovePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetCompatibleConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetCompatibleConfigurations" of service binding "PTZBinding".
Operation to get all available PTZConfigurations that can be added to the referenced
media profile. <br/>
				A device providing more than one PTZConfiguration
or more than one VideoSourceConfiguration or which has any other resource
				interdependency between PTZConfiguration entities
and other resources listable in a media profile should implement this operation.
				PTZConfiguration entities returned by this operation
shall not fail on adding them to the referenced media profile.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetCompatibleConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,
    // output parameters:
    struct _tptz__GetCompatibleConfigurationsResponse*tptz__GetCompatibleConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetCompatibleConfigurations(
    struct soap *soap,
    // input parameters:
    struct _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,
    // output parameters:
    struct _tptz__GetCompatibleConfigurationsResponse*tptz__GetCompatibleConfigurationsResponse
  );
@endcode

*/

//gsoap tptz service method-protocol:	GetCompatibleConfigurations SOAP
//gsoap tptz service method-style:	GetCompatibleConfigurations document
//gsoap tptz service method-encoding:	GetCompatibleConfigurations literal
//gsoap tptz service method-input-action:	GetCompatibleConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations
//gsoap tptz service method-output-action:	GetCompatibleConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurationsResponse
int __tptz__GetCompatibleConfigurations(
    struct _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,	///< Input parameter
    struct _tptz__GetCompatibleConfigurationsResponse*tptz__GetCompatibleConfigurationsResponse	///< Output parameter
);

/**

@page PTZBinding Binding "PTZBinding"

@section PTZBinding_policy_enablers Policy Enablers of Binding "PTZBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   RecordingBinding                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetServiceCapabilities" of service binding "RecordingBinding".
Returns the capabilities of the recording service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__GetServiceCapabilities* trc__GetServiceCapabilities,
    // output parameters:
    struct _trc__GetServiceCapabilitiesResponse*trc__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _trc__GetServiceCapabilities* trc__GetServiceCapabilities,
    // output parameters:
    struct _trc__GetServiceCapabilitiesResponse*trc__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trc  service method-style:	GetServiceCapabilities document
//gsoap trc  service method-encoding:	GetServiceCapabilities literal
//gsoap trc  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/recording/wsdl/GetServiceCapabilities
//gsoap trc  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/recording/wsdl/GetServiceCapabilitiesResponse
int __trc__GetServiceCapabilities(
    struct _trc__GetServiceCapabilities* trc__GetServiceCapabilities,	///< Input parameter
    struct _trc__GetServiceCapabilitiesResponse*trc__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__CreateRecording                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__CreateRecording" of service binding "RecordingBinding".
CreateRecording shall create a new recording. The new recording shall be created
with a track 
                                for each supported TrackType see Recording Control
Spec. <br/>
				This method is optional. It shall be available if
the Recording/DynamicRecordings capability is TRUE. <br/>
				When successfully completed, CreateRecording shall
have created three tracks with the following configurations: <ul>
					<li>
				TrackToken TrackType</li>
					<li>
					VIDEO001 Video</li>
					<li>
						AUDIO001 Audio</li>
					<li>
					META001 Metadata</li>
				</ul>
				All TrackConfigurations shall have the MaximumRetentionTime
set to 0 (unlimited), and the
				Description set to the empty string.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/CreateRecording"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/CreateRecording"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/CreateRecordingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__CreateRecording(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__CreateRecording*       trc__CreateRecording,
    // output parameters:
    struct _trc__CreateRecordingResponse*trc__CreateRecordingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__CreateRecording(
    struct soap *soap,
    // input parameters:
    struct _trc__CreateRecording*       trc__CreateRecording,
    // output parameters:
    struct _trc__CreateRecordingResponse*trc__CreateRecordingResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	CreateRecording SOAP
//gsoap trc  service method-style:	CreateRecording document
//gsoap trc  service method-encoding:	CreateRecording literal
//gsoap trc  service method-input-action:	CreateRecording http://www.onvif.org/ver10/recording/wsdl/CreateRecording
//gsoap trc  service method-output-action:	CreateRecording http://www.onvif.org/ver10/recording/wsdl/CreateRecordingResponse
int __trc__CreateRecording(
    struct _trc__CreateRecording*       trc__CreateRecording,	///< Input parameter
    struct _trc__CreateRecordingResponse*trc__CreateRecordingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__DeleteRecording                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__DeleteRecording" of service binding "RecordingBinding".
DeleteRecording shall delete a recording object. Whenever a recording is deleted,
the device
				shall delete all the tracks that are part of the
recording, and it shall delete all the Recording
				Jobs that record into the recording. For each deleted
recording job, the device shall also
				delete all the receiver objects associated with
the recording job that are automatically created
				using the AutoCreateReceiver field of the recording
job configuration structure and are not
				used in any other recording job.<br/>
				This method is optional. It shall be available if
the Recording/DynamicRecordings capability is TRUE.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/DeleteRecording"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/DeleteRecording"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__DeleteRecording(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__DeleteRecording*       trc__DeleteRecording,
    // output parameters:
    struct _trc__DeleteRecordingResponse*trc__DeleteRecordingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__DeleteRecording(
    struct soap *soap,
    // input parameters:
    struct _trc__DeleteRecording*       trc__DeleteRecording,
    // output parameters:
    struct _trc__DeleteRecordingResponse*trc__DeleteRecordingResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	DeleteRecording SOAP
//gsoap trc  service method-style:	DeleteRecording document
//gsoap trc  service method-encoding:	DeleteRecording literal
//gsoap trc  service method-input-action:	DeleteRecording http://www.onvif.org/ver10/recording/wsdl/DeleteRecording
//gsoap trc  service method-output-action:	DeleteRecording http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingResponse
int __trc__DeleteRecording(
    struct _trc__DeleteRecording*       trc__DeleteRecording,	///< Input parameter
    struct _trc__DeleteRecordingResponse*trc__DeleteRecordingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetRecordings                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetRecordings" of service binding "RecordingBinding".
GetRecordings shall return a description of all the recordings in the device. This
description
				shall include a list of all the tracks for each
recording.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordings"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordings"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__GetRecordings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__GetRecordings*         trc__GetRecordings,
    // output parameters:
    struct _trc__GetRecordingsResponse *trc__GetRecordingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__GetRecordings(
    struct soap *soap,
    // input parameters:
    struct _trc__GetRecordings*         trc__GetRecordings,
    // output parameters:
    struct _trc__GetRecordingsResponse *trc__GetRecordingsResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	GetRecordings SOAP
//gsoap trc  service method-style:	GetRecordings document
//gsoap trc  service method-encoding:	GetRecordings literal
//gsoap trc  service method-input-action:	GetRecordings http://www.onvif.org/ver10/recording/wsdl/GetRecordings
//gsoap trc  service method-output-action:	GetRecordings http://www.onvif.org/ver10/recording/wsdl/GetRecordingsResponse
int __trc__GetRecordings(
    struct _trc__GetRecordings*         trc__GetRecordings,	///< Input parameter
    struct _trc__GetRecordingsResponse *trc__GetRecordingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__SetRecordingConfiguration                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__SetRecordingConfiguration" of service binding "RecordingBinding".
SetRecordingConfiguration shall change the configuration of a recording.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/SetRecordingConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/SetRecordingConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/SetRecordingConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__SetRecordingConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__SetRecordingConfiguration* trc__SetRecordingConfiguration,
    // output parameters:
    struct _trc__SetRecordingConfigurationResponse*trc__SetRecordingConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__SetRecordingConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trc__SetRecordingConfiguration* trc__SetRecordingConfiguration,
    // output parameters:
    struct _trc__SetRecordingConfigurationResponse*trc__SetRecordingConfigurationResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	SetRecordingConfiguration SOAP
//gsoap trc  service method-style:	SetRecordingConfiguration document
//gsoap trc  service method-encoding:	SetRecordingConfiguration literal
//gsoap trc  service method-input-action:	SetRecordingConfiguration http://www.onvif.org/ver10/recording/wsdl/SetRecordingConfiguration
//gsoap trc  service method-output-action:	SetRecordingConfiguration http://www.onvif.org/ver10/recording/wsdl/SetRecordingConfigurationResponse
int __trc__SetRecordingConfiguration(
    struct _trc__SetRecordingConfiguration* trc__SetRecordingConfiguration,	///< Input parameter
    struct _trc__SetRecordingConfigurationResponse*trc__SetRecordingConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetRecordingConfiguration                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetRecordingConfiguration" of service binding "RecordingBinding".
GetRecordingConfiguration shall retrieve the recording configuration for a recording.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__GetRecordingConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__GetRecordingConfiguration* trc__GetRecordingConfiguration,
    // output parameters:
    struct _trc__GetRecordingConfigurationResponse*trc__GetRecordingConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__GetRecordingConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trc__GetRecordingConfiguration* trc__GetRecordingConfiguration,
    // output parameters:
    struct _trc__GetRecordingConfigurationResponse*trc__GetRecordingConfigurationResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	GetRecordingConfiguration SOAP
//gsoap trc  service method-style:	GetRecordingConfiguration document
//gsoap trc  service method-encoding:	GetRecordingConfiguration literal
//gsoap trc  service method-input-action:	GetRecordingConfiguration http://www.onvif.org/ver10/recording/wsdl/GetRecordingConfiguration
//gsoap trc  service method-output-action:	GetRecordingConfiguration http://www.onvif.org/ver10/recording/wsdl/GetRecordingConfigurationResponse
int __trc__GetRecordingConfiguration(
    struct _trc__GetRecordingConfiguration* trc__GetRecordingConfiguration,	///< Input parameter
    struct _trc__GetRecordingConfigurationResponse*trc__GetRecordingConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetRecordingOptions                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetRecordingOptions" of service binding "RecordingBinding".
GetRecordingOptions returns information for a recording identified by the RecordingToken.
The information includes the number of additonal tracks as well as recording jobs
that can be configured.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingOptions"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingOptions"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__GetRecordingOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__GetRecordingOptions*   trc__GetRecordingOptions,
    // output parameters:
    struct _trc__GetRecordingOptionsResponse*trc__GetRecordingOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__GetRecordingOptions(
    struct soap *soap,
    // input parameters:
    struct _trc__GetRecordingOptions*   trc__GetRecordingOptions,
    // output parameters:
    struct _trc__GetRecordingOptionsResponse*trc__GetRecordingOptionsResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	GetRecordingOptions SOAP
//gsoap trc  service method-style:	GetRecordingOptions document
//gsoap trc  service method-encoding:	GetRecordingOptions literal
//gsoap trc  service method-input-action:	GetRecordingOptions http://www.onvif.org/ver10/recording/wsdl/GetRecordingOptions
//gsoap trc  service method-output-action:	GetRecordingOptions http://www.onvif.org/ver10/recording/wsdl/GetRecordingOptionsResponse
int __trc__GetRecordingOptions(
    struct _trc__GetRecordingOptions*   trc__GetRecordingOptions,	///< Input parameter
    struct _trc__GetRecordingOptionsResponse*trc__GetRecordingOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__CreateTrack                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__CreateTrack" of service binding "RecordingBinding".
This method shall create a new track within a recording.<br/>
				This method is optional. It shall be available if
the Recording/DynamicTracks capability is TRUE.<br/>
				A TrackToken in itself does not uniquely identify
a specific track. Tracks within different
				recordings may have the same TrackToken.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/CreateTrack"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/CreateTrack"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/CreateTrackResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__CreateTrack(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__CreateTrack*           trc__CreateTrack,
    // output parameters:
    struct _trc__CreateTrackResponse   *trc__CreateTrackResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__CreateTrack(
    struct soap *soap,
    // input parameters:
    struct _trc__CreateTrack*           trc__CreateTrack,
    // output parameters:
    struct _trc__CreateTrackResponse   *trc__CreateTrackResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	CreateTrack SOAP
//gsoap trc  service method-style:	CreateTrack document
//gsoap trc  service method-encoding:	CreateTrack literal
//gsoap trc  service method-input-action:	CreateTrack http://www.onvif.org/ver10/recording/wsdl/CreateTrack
//gsoap trc  service method-output-action:	CreateTrack http://www.onvif.org/ver10/recording/wsdl/CreateTrackResponse
int __trc__CreateTrack(
    struct _trc__CreateTrack*           trc__CreateTrack,	///< Input parameter
    struct _trc__CreateTrackResponse   *trc__CreateTrackResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__DeleteTrack                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__DeleteTrack" of service binding "RecordingBinding".
DeleteTrack shall remove a track from a recording. All the data in the track shall
be deleted.<br/>
				This method is optional. It shall be available if
the Recording/DynamicTracks capability is
				TRUE.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/DeleteTrack"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/DeleteTrack"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/DeleteTrackResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__DeleteTrack(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__DeleteTrack*           trc__DeleteTrack,
    // output parameters:
    struct _trc__DeleteTrackResponse   *trc__DeleteTrackResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__DeleteTrack(
    struct soap *soap,
    // input parameters:
    struct _trc__DeleteTrack*           trc__DeleteTrack,
    // output parameters:
    struct _trc__DeleteTrackResponse   *trc__DeleteTrackResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	DeleteTrack SOAP
//gsoap trc  service method-style:	DeleteTrack document
//gsoap trc  service method-encoding:	DeleteTrack literal
//gsoap trc  service method-input-action:	DeleteTrack http://www.onvif.org/ver10/recording/wsdl/DeleteTrack
//gsoap trc  service method-output-action:	DeleteTrack http://www.onvif.org/ver10/recording/wsdl/DeleteTrackResponse
int __trc__DeleteTrack(
    struct _trc__DeleteTrack*           trc__DeleteTrack,	///< Input parameter
    struct _trc__DeleteTrackResponse   *trc__DeleteTrackResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetTrackConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetTrackConfiguration" of service binding "RecordingBinding".
GetTrackConfiguration shall retrieve the configuration for a specific track.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/GetTrackConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetTrackConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetTrackConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__GetTrackConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__GetTrackConfiguration* trc__GetTrackConfiguration,
    // output parameters:
    struct _trc__GetTrackConfigurationResponse*trc__GetTrackConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__GetTrackConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trc__GetTrackConfiguration* trc__GetTrackConfiguration,
    // output parameters:
    struct _trc__GetTrackConfigurationResponse*trc__GetTrackConfigurationResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	GetTrackConfiguration SOAP
//gsoap trc  service method-style:	GetTrackConfiguration document
//gsoap trc  service method-encoding:	GetTrackConfiguration literal
//gsoap trc  service method-input-action:	GetTrackConfiguration http://www.onvif.org/ver10/recording/wsdl/GetTrackConfiguration
//gsoap trc  service method-output-action:	GetTrackConfiguration http://www.onvif.org/ver10/recording/wsdl/GetTrackConfigurationResponse
int __trc__GetTrackConfiguration(
    struct _trc__GetTrackConfiguration* trc__GetTrackConfiguration,	///< Input parameter
    struct _trc__GetTrackConfigurationResponse*trc__GetTrackConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__SetTrackConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__SetTrackConfiguration" of service binding "RecordingBinding".
SetTrackConfiguration shall change the configuration of a track.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/SetTrackConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/SetTrackConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/SetTrackConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__SetTrackConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__SetTrackConfiguration* trc__SetTrackConfiguration,
    // output parameters:
    struct _trc__SetTrackConfigurationResponse*trc__SetTrackConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__SetTrackConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trc__SetTrackConfiguration* trc__SetTrackConfiguration,
    // output parameters:
    struct _trc__SetTrackConfigurationResponse*trc__SetTrackConfigurationResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	SetTrackConfiguration SOAP
//gsoap trc  service method-style:	SetTrackConfiguration document
//gsoap trc  service method-encoding:	SetTrackConfiguration literal
//gsoap trc  service method-input-action:	SetTrackConfiguration http://www.onvif.org/ver10/recording/wsdl/SetTrackConfiguration
//gsoap trc  service method-output-action:	SetTrackConfiguration http://www.onvif.org/ver10/recording/wsdl/SetTrackConfigurationResponse
int __trc__SetTrackConfiguration(
    struct _trc__SetTrackConfiguration* trc__SetTrackConfiguration,	///< Input parameter
    struct _trc__SetTrackConfigurationResponse*trc__SetTrackConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__CreateRecordingJob                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__CreateRecordingJob" of service binding "RecordingBinding".
CreateRecordingJob shall create a new recording job.<br/>
				The JobConfiguration returned from CreateRecordingJob
shall be identical to the
				JobConfiguration passed into CreateRecordingJob,
except for the ReceiverToken and the
				AutoCreateReceiver. In the returned structure, the
ReceiverToken shall be present and valid
				and the AutoCreateReceiver field shall be omitted.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/CreateRecordingJob"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/CreateRecordingJob"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/CreateRecordingJobResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__CreateRecordingJob(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__CreateRecordingJob*    trc__CreateRecordingJob,
    // output parameters:
    struct _trc__CreateRecordingJobResponse*trc__CreateRecordingJobResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__CreateRecordingJob(
    struct soap *soap,
    // input parameters:
    struct _trc__CreateRecordingJob*    trc__CreateRecordingJob,
    // output parameters:
    struct _trc__CreateRecordingJobResponse*trc__CreateRecordingJobResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	CreateRecordingJob SOAP
//gsoap trc  service method-style:	CreateRecordingJob document
//gsoap trc  service method-encoding:	CreateRecordingJob literal
//gsoap trc  service method-input-action:	CreateRecordingJob http://www.onvif.org/ver10/recording/wsdl/CreateRecordingJob
//gsoap trc  service method-output-action:	CreateRecordingJob http://www.onvif.org/ver10/recording/wsdl/CreateRecordingJobResponse
int __trc__CreateRecordingJob(
    struct _trc__CreateRecordingJob*    trc__CreateRecordingJob,	///< Input parameter
    struct _trc__CreateRecordingJobResponse*trc__CreateRecordingJobResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__DeleteRecordingJob                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__DeleteRecordingJob" of service binding "RecordingBinding".
DeleteRecordingJob removes a recording job. It shall also implicitly delete all
the receiver
				objects associated with the recording job that are
automatically created using the
				AutoCreateReceiver field of the recording job configuration
structure and are not used in any
				other recording job.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingJob"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingJob"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingJobResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__DeleteRecordingJob(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__DeleteRecordingJob*    trc__DeleteRecordingJob,
    // output parameters:
    struct _trc__DeleteRecordingJobResponse*trc__DeleteRecordingJobResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__DeleteRecordingJob(
    struct soap *soap,
    // input parameters:
    struct _trc__DeleteRecordingJob*    trc__DeleteRecordingJob,
    // output parameters:
    struct _trc__DeleteRecordingJobResponse*trc__DeleteRecordingJobResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	DeleteRecordingJob SOAP
//gsoap trc  service method-style:	DeleteRecordingJob document
//gsoap trc  service method-encoding:	DeleteRecordingJob literal
//gsoap trc  service method-input-action:	DeleteRecordingJob http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingJob
//gsoap trc  service method-output-action:	DeleteRecordingJob http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingJobResponse
int __trc__DeleteRecordingJob(
    struct _trc__DeleteRecordingJob*    trc__DeleteRecordingJob,	///< Input parameter
    struct _trc__DeleteRecordingJobResponse*trc__DeleteRecordingJobResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetRecordingJobs                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetRecordingJobs" of service binding "RecordingBinding".
GetRecordingJobs shall return a list of all the recording jobs in the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobs"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobs"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__GetRecordingJobs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__GetRecordingJobs*      trc__GetRecordingJobs,
    // output parameters:
    struct _trc__GetRecordingJobsResponse*trc__GetRecordingJobsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__GetRecordingJobs(
    struct soap *soap,
    // input parameters:
    struct _trc__GetRecordingJobs*      trc__GetRecordingJobs,
    // output parameters:
    struct _trc__GetRecordingJobsResponse*trc__GetRecordingJobsResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	GetRecordingJobs SOAP
//gsoap trc  service method-style:	GetRecordingJobs document
//gsoap trc  service method-encoding:	GetRecordingJobs literal
//gsoap trc  service method-input-action:	GetRecordingJobs http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobs
//gsoap trc  service method-output-action:	GetRecordingJobs http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobsResponse
int __trc__GetRecordingJobs(
    struct _trc__GetRecordingJobs*      trc__GetRecordingJobs,	///< Input parameter
    struct _trc__GetRecordingJobsResponse*trc__GetRecordingJobsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__SetRecordingJobConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__SetRecordingJobConfiguration" of service binding "RecordingBinding".
SetRecordingJobConfiguration shall change the configuration for a recording job.<br/>
				SetRecordingJobConfiguration shall implicitly delete
any receiver objects that were created
				automatically if they are no longer used as a result
of changing the recording job configuration.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__SetRecordingJobConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__SetRecordingJobConfiguration* trc__SetRecordingJobConfiguration,
    // output parameters:
    struct _trc__SetRecordingJobConfigurationResponse*trc__SetRecordingJobConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__SetRecordingJobConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trc__SetRecordingJobConfiguration* trc__SetRecordingJobConfiguration,
    // output parameters:
    struct _trc__SetRecordingJobConfigurationResponse*trc__SetRecordingJobConfigurationResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	SetRecordingJobConfiguration SOAP
//gsoap trc  service method-style:	SetRecordingJobConfiguration document
//gsoap trc  service method-encoding:	SetRecordingJobConfiguration literal
//gsoap trc  service method-input-action:	SetRecordingJobConfiguration http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobConfiguration
//gsoap trc  service method-output-action:	SetRecordingJobConfiguration http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobConfigurationResponse
int __trc__SetRecordingJobConfiguration(
    struct _trc__SetRecordingJobConfiguration* trc__SetRecordingJobConfiguration,	///< Input parameter
    struct _trc__SetRecordingJobConfigurationResponse*trc__SetRecordingJobConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetRecordingJobConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetRecordingJobConfiguration" of service binding "RecordingBinding".
GetRecordingJobConfiguration shall return the current configuration for a recording
job.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__GetRecordingJobConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__GetRecordingJobConfiguration* trc__GetRecordingJobConfiguration,
    // output parameters:
    struct _trc__GetRecordingJobConfigurationResponse*trc__GetRecordingJobConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__GetRecordingJobConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trc__GetRecordingJobConfiguration* trc__GetRecordingJobConfiguration,
    // output parameters:
    struct _trc__GetRecordingJobConfigurationResponse*trc__GetRecordingJobConfigurationResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	GetRecordingJobConfiguration SOAP
//gsoap trc  service method-style:	GetRecordingJobConfiguration document
//gsoap trc  service method-encoding:	GetRecordingJobConfiguration literal
//gsoap trc  service method-input-action:	GetRecordingJobConfiguration http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobConfiguration
//gsoap trc  service method-output-action:	GetRecordingJobConfiguration http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobConfigurationResponse
int __trc__GetRecordingJobConfiguration(
    struct _trc__GetRecordingJobConfiguration* trc__GetRecordingJobConfiguration,	///< Input parameter
    struct _trc__GetRecordingJobConfigurationResponse*trc__GetRecordingJobConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__SetRecordingJobMode                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__SetRecordingJobMode" of service binding "RecordingBinding".
SetRecordingJobMode shall change the mode of the recording job. Using this method
shall be
				equivalent to retrieving the recording job configuration,
and writing it back with a different
				mode.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobMode"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobMode"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__SetRecordingJobMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__SetRecordingJobMode*   trc__SetRecordingJobMode,
    // output parameters:
    struct _trc__SetRecordingJobModeResponse*trc__SetRecordingJobModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__SetRecordingJobMode(
    struct soap *soap,
    // input parameters:
    struct _trc__SetRecordingJobMode*   trc__SetRecordingJobMode,
    // output parameters:
    struct _trc__SetRecordingJobModeResponse*trc__SetRecordingJobModeResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	SetRecordingJobMode SOAP
//gsoap trc  service method-style:	SetRecordingJobMode document
//gsoap trc  service method-encoding:	SetRecordingJobMode literal
//gsoap trc  service method-input-action:	SetRecordingJobMode http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobMode
//gsoap trc  service method-output-action:	SetRecordingJobMode http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobModeResponse
int __trc__SetRecordingJobMode(
    struct _trc__SetRecordingJobMode*   trc__SetRecordingJobMode,	///< Input parameter
    struct _trc__SetRecordingJobModeResponse*trc__SetRecordingJobModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetRecordingJobState                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetRecordingJobState" of service binding "RecordingBinding".
GetRecordingJobState returns the state of a recording job. It includes an aggregated
state,
				and state for each track of the recording job.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobState"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobState"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__GetRecordingJobState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__GetRecordingJobState*  trc__GetRecordingJobState,
    // output parameters:
    struct _trc__GetRecordingJobStateResponse*trc__GetRecordingJobStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__GetRecordingJobState(
    struct soap *soap,
    // input parameters:
    struct _trc__GetRecordingJobState*  trc__GetRecordingJobState,
    // output parameters:
    struct _trc__GetRecordingJobStateResponse*trc__GetRecordingJobStateResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	GetRecordingJobState SOAP
//gsoap trc  service method-style:	GetRecordingJobState document
//gsoap trc  service method-encoding:	GetRecordingJobState literal
//gsoap trc  service method-input-action:	GetRecordingJobState http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobState
//gsoap trc  service method-output-action:	GetRecordingJobState http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobStateResponse
int __trc__GetRecordingJobState(
    struct _trc__GetRecordingJobState*  trc__GetRecordingJobState,	///< Input parameter
    struct _trc__GetRecordingJobStateResponse*trc__GetRecordingJobStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__ExportRecordedData                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__ExportRecordedData" of service binding "RecordingBinding".

			Exports the selected recordings (from existing recorded
data) to the given storage target based on the requested file format. 
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/ExportRecordedData"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/ExportRecordedData"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/ExportRecordedDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__ExportRecordedData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__ExportRecordedData*    trc__ExportRecordedData,
    // output parameters:
    struct _trc__ExportRecordedDataResponse*trc__ExportRecordedDataResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__ExportRecordedData(
    struct soap *soap,
    // input parameters:
    struct _trc__ExportRecordedData*    trc__ExportRecordedData,
    // output parameters:
    struct _trc__ExportRecordedDataResponse*trc__ExportRecordedDataResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	ExportRecordedData SOAP
//gsoap trc  service method-style:	ExportRecordedData document
//gsoap trc  service method-encoding:	ExportRecordedData literal
//gsoap trc  service method-input-action:	ExportRecordedData http://www.onvif.org/ver10/recording/wsdl/ExportRecordedData
//gsoap trc  service method-output-action:	ExportRecordedData http://www.onvif.org/ver10/recording/wsdl/ExportRecordedDataResponse
int __trc__ExportRecordedData(
    struct _trc__ExportRecordedData*    trc__ExportRecordedData,	///< Input parameter
    struct _trc__ExportRecordedDataResponse*trc__ExportRecordedDataResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__StopExportRecordedData                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__StopExportRecordedData" of service binding "RecordingBinding".

			Stops the selected ExportRecordedData operation. 
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/StopExportRecordedData"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/StopExportRecordedData"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/StopExportRecordedDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__StopExportRecordedData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__StopExportRecordedData* trc__StopExportRecordedData,
    // output parameters:
    struct _trc__StopExportRecordedDataResponse*trc__StopExportRecordedDataResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__StopExportRecordedData(
    struct soap *soap,
    // input parameters:
    struct _trc__StopExportRecordedData* trc__StopExportRecordedData,
    // output parameters:
    struct _trc__StopExportRecordedDataResponse*trc__StopExportRecordedDataResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	StopExportRecordedData SOAP
//gsoap trc  service method-style:	StopExportRecordedData document
//gsoap trc  service method-encoding:	StopExportRecordedData literal
//gsoap trc  service method-input-action:	StopExportRecordedData http://www.onvif.org/ver10/recording/wsdl/StopExportRecordedData
//gsoap trc  service method-output-action:	StopExportRecordedData http://www.onvif.org/ver10/recording/wsdl/StopExportRecordedDataResponse
int __trc__StopExportRecordedData(
    struct _trc__StopExportRecordedData* trc__StopExportRecordedData,	///< Input parameter
    struct _trc__StopExportRecordedDataResponse*trc__StopExportRecordedDataResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetExportRecordedDataState                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetExportRecordedDataState" of service binding "RecordingBinding".

			Retrieves the status of selected ExportRecordedData operation.

			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/recording/wsdl/GetExportRecordedDataState"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetExportRecordedDataState"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetExportRecordedDataStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trc__GetExportRecordedDataState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trc__GetExportRecordedDataState* trc__GetExportRecordedDataState,
    // output parameters:
    struct _trc__GetExportRecordedDataStateResponse*trc__GetExportRecordedDataStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trc__GetExportRecordedDataState(
    struct soap *soap,
    // input parameters:
    struct _trc__GetExportRecordedDataState* trc__GetExportRecordedDataState,
    // output parameters:
    struct _trc__GetExportRecordedDataStateResponse*trc__GetExportRecordedDataStateResponse
  );
@endcode

*/

//gsoap trc  service method-protocol:	GetExportRecordedDataState SOAP
//gsoap trc  service method-style:	GetExportRecordedDataState document
//gsoap trc  service method-encoding:	GetExportRecordedDataState literal
//gsoap trc  service method-input-action:	GetExportRecordedDataState http://www.onvif.org/ver10/recording/wsdl/GetExportRecordedDataState
//gsoap trc  service method-output-action:	GetExportRecordedDataState http://www.onvif.org/ver10/recording/wsdl/GetExportRecordedDataStateResponse
int __trc__GetExportRecordedDataState(
    struct _trc__GetExportRecordedDataState* trc__GetExportRecordedDataState,	///< Input parameter
    struct _trc__GetExportRecordedDataStateResponse*trc__GetExportRecordedDataStateResponse	///< Output parameter
);

/**

@page RecordingBinding Binding "RecordingBinding"

@section RecordingBinding_policy_enablers Policy Enablers of Binding "RecordingBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ReplayBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trp__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trp__GetServiceCapabilities" of service binding "ReplayBinding".
Returns the capabilities of the replay service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/replay/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/replay/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/replay/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trp__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trp__GetServiceCapabilities* trp__GetServiceCapabilities,
    // output parameters:
    struct _trp__GetServiceCapabilitiesResponse*trp__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trp__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _trp__GetServiceCapabilities* trp__GetServiceCapabilities,
    // output parameters:
    struct _trp__GetServiceCapabilitiesResponse*trp__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap trp  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trp  service method-style:	GetServiceCapabilities document
//gsoap trp  service method-encoding:	GetServiceCapabilities literal
//gsoap trp  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/replay/wsdl/GetServiceCapabilities
//gsoap trp  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/replay/wsdl/GetServiceCapabilitiesResponse
int __trp__GetServiceCapabilities(
    struct _trp__GetServiceCapabilities* trp__GetServiceCapabilities,	///< Input parameter
    struct _trp__GetServiceCapabilitiesResponse*trp__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trp__GetReplayUri                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trp__GetReplayUri" of service binding "ReplayBinding".

				Requests a URI that can be used to initiate playback
of a recorded stream
				using RTSP as the control protocol. The URI is valid
only as it is
				specified in the response.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/replay/wsdl/GetReplayUri"

  - Addressing input action: "http://www.onvif.org/ver10/replay/wsdl/GetReplayUri"

  - Addressing output action: "http://www.onvif.org/ver10/replay/wsdl/GetReplayUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trp__GetReplayUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trp__GetReplayUri*          trp__GetReplayUri,
    // output parameters:
    struct _trp__GetReplayUriResponse  *trp__GetReplayUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trp__GetReplayUri(
    struct soap *soap,
    // input parameters:
    struct _trp__GetReplayUri*          trp__GetReplayUri,
    // output parameters:
    struct _trp__GetReplayUriResponse  *trp__GetReplayUriResponse
  );
@endcode

*/

//gsoap trp  service method-protocol:	GetReplayUri SOAP
//gsoap trp  service method-style:	GetReplayUri document
//gsoap trp  service method-encoding:	GetReplayUri literal
//gsoap trp  service method-input-action:	GetReplayUri http://www.onvif.org/ver10/replay/wsdl/GetReplayUri
//gsoap trp  service method-output-action:	GetReplayUri http://www.onvif.org/ver10/replay/wsdl/GetReplayUriResponse
int __trp__GetReplayUri(
    struct _trp__GetReplayUri*          trp__GetReplayUri,	///< Input parameter
    struct _trp__GetReplayUriResponse  *trp__GetReplayUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trp__GetReplayConfiguration                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trp__GetReplayConfiguration" of service binding "ReplayBinding".

				Returns the current configuration of the replay
service.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/replay/wsdl/GetReplayConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/replay/wsdl/GetReplayConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/replay/wsdl/GetReplayConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trp__GetReplayConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trp__GetReplayConfiguration* trp__GetReplayConfiguration,
    // output parameters:
    struct _trp__GetReplayConfigurationResponse*trp__GetReplayConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trp__GetReplayConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trp__GetReplayConfiguration* trp__GetReplayConfiguration,
    // output parameters:
    struct _trp__GetReplayConfigurationResponse*trp__GetReplayConfigurationResponse
  );
@endcode

*/

//gsoap trp  service method-protocol:	GetReplayConfiguration SOAP
//gsoap trp  service method-style:	GetReplayConfiguration document
//gsoap trp  service method-encoding:	GetReplayConfiguration literal
//gsoap trp  service method-input-action:	GetReplayConfiguration http://www.onvif.org/ver10/replay/wsdl/GetReplayConfiguration
//gsoap trp  service method-output-action:	GetReplayConfiguration http://www.onvif.org/ver10/replay/wsdl/GetReplayConfigurationResponse
int __trp__GetReplayConfiguration(
    struct _trp__GetReplayConfiguration* trp__GetReplayConfiguration,	///< Input parameter
    struct _trp__GetReplayConfigurationResponse*trp__GetReplayConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trp__SetReplayConfiguration                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trp__SetReplayConfiguration" of service binding "ReplayBinding".

				Changes the current configuration of the replay
service.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/replay/wsdl/SetReplayConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/replay/wsdl/SetReplayConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/replay/wsdl/SetReplayConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trp__SetReplayConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trp__SetReplayConfiguration* trp__SetReplayConfiguration,
    // output parameters:
    struct _trp__SetReplayConfigurationResponse*trp__SetReplayConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trp__SetReplayConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trp__SetReplayConfiguration* trp__SetReplayConfiguration,
    // output parameters:
    struct _trp__SetReplayConfigurationResponse*trp__SetReplayConfigurationResponse
  );
@endcode

*/

//gsoap trp  service method-protocol:	SetReplayConfiguration SOAP
//gsoap trp  service method-style:	SetReplayConfiguration document
//gsoap trp  service method-encoding:	SetReplayConfiguration literal
//gsoap trp  service method-input-action:	SetReplayConfiguration http://www.onvif.org/ver10/replay/wsdl/SetReplayConfiguration
//gsoap trp  service method-output-action:	SetReplayConfiguration http://www.onvif.org/ver10/replay/wsdl/SetReplayConfigurationResponse
int __trp__SetReplayConfiguration(
    struct _trp__SetReplayConfiguration* trp__SetReplayConfiguration,	///< Input parameter
    struct _trp__SetReplayConfigurationResponse*trp__SetReplayConfigurationResponse	///< Output parameter
);

/**

@page ReplayBinding Binding "ReplayBinding"

@section ReplayBinding_policy_enablers Policy Enablers of Binding "ReplayBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   MediaBinding                                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetServiceCapabilities" of service binding "MediaBinding".
Returns the capabilities of the media service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetServiceCapabilities* trt__GetServiceCapabilities,
    // output parameters:
    struct _trt__GetServiceCapabilitiesResponse*trt__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _trt__GetServiceCapabilities* trt__GetServiceCapabilities,
    // output parameters:
    struct _trt__GetServiceCapabilitiesResponse*trt__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trt  service method-style:	GetServiceCapabilities document
//gsoap trt  service method-encoding:	GetServiceCapabilities literal
//gsoap trt  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities
//gsoap trt  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse
int __trt__GetServiceCapabilities(
    struct _trt__GetServiceCapabilities* trt__GetServiceCapabilities,	///< Input parameter
    struct _trt__GetServiceCapabilitiesResponse*trt__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSources" of service binding "MediaBinding".
This command lists all available physical video inputs of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSources*       trt__GetVideoSources,
    // output parameters:
    struct _trt__GetVideoSourcesResponse*trt__GetVideoSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSources(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSources*       trt__GetVideoSources,
    // output parameters:
    struct _trt__GetVideoSourcesResponse*trt__GetVideoSourcesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoSources SOAP
//gsoap trt  service method-style:	GetVideoSources document
//gsoap trt  service method-encoding:	GetVideoSources literal
//gsoap trt  service method-input-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/
//gsoap trt  service method-output-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/Response
int __trt__GetVideoSources(
    struct _trt__GetVideoSources*       trt__GetVideoSources,	///< Input parameter
    struct _trt__GetVideoSourcesResponse*trt__GetVideoSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSources" of service binding "MediaBinding".
This command lists all available physical audio inputs of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioSources*       trt__GetAudioSources,
    // output parameters:
    struct _trt__GetAudioSourcesResponse*trt__GetAudioSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSources(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioSources*       trt__GetAudioSources,
    // output parameters:
    struct _trt__GetAudioSourcesResponse*trt__GetAudioSourcesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioSources SOAP
//gsoap trt  service method-style:	GetAudioSources document
//gsoap trt  service method-encoding:	GetAudioSources literal
//gsoap trt  service method-input-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSources
//gsoap trt  service method-output-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSourcesResponse
int __trt__GetAudioSources(
    struct _trt__GetAudioSources*       trt__GetAudioSources,	///< Input parameter
    struct _trt__GetAudioSourcesResponse*trt__GetAudioSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputs" of service binding "MediaBinding".
This command lists all available physical audio outputs of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioOutputs*       trt__GetAudioOutputs,
    // output parameters:
    struct _trt__GetAudioOutputsResponse*trt__GetAudioOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputs(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioOutputs*       trt__GetAudioOutputs,
    // output parameters:
    struct _trt__GetAudioOutputsResponse*trt__GetAudioOutputsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioOutputs SOAP
//gsoap trt  service method-style:	GetAudioOutputs document
//gsoap trt  service method-encoding:	GetAudioOutputs literal
//gsoap trt  service method-input-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs
//gsoap trt  service method-output-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/GetAudioOutputsResponse
int __trt__GetAudioOutputs(
    struct _trt__GetAudioOutputs*       trt__GetAudioOutputs,	///< Input parameter
    struct _trt__GetAudioOutputsResponse*trt__GetAudioOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__CreateProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__CreateProfile" of service binding "MediaBinding".
This operation creates a new empty media profile. The media profile shall be created
in the
device and shall be persistent (remain after reboot). A created profile shall be
deletable and a device shall set the fixed attribute to false in the
returned Profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__CreateProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__CreateProfile*         trt__CreateProfile,
    // output parameters:
    struct _trt__CreateProfileResponse *trt__CreateProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__CreateProfile(
    struct soap *soap,
    // input parameters:
    struct _trt__CreateProfile*         trt__CreateProfile,
    // output parameters:
    struct _trt__CreateProfileResponse *trt__CreateProfileResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	CreateProfile SOAP
//gsoap trt  service method-style:	CreateProfile document
//gsoap trt  service method-encoding:	CreateProfile literal
//gsoap trt  service method-input-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfile
//gsoap trt  service method-output-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse
int __trt__CreateProfile(
    struct _trt__CreateProfile*         trt__CreateProfile,	///< Input parameter
    struct _trt__CreateProfileResponse *trt__CreateProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfile                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetProfile" of service binding "MediaBinding".
If the profile token is already known, a profile can be fetched through the GetProfile
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetProfile/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetProfile*            trt__GetProfile,
    // output parameters:
    struct _trt__GetProfileResponse    *trt__GetProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfile(
    struct soap *soap,
    // input parameters:
    struct _trt__GetProfile*            trt__GetProfile,
    // output parameters:
    struct _trt__GetProfileResponse    *trt__GetProfileResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetProfile SOAP
//gsoap trt  service method-style:	GetProfile document
//gsoap trt  service method-encoding:	GetProfile literal
//gsoap trt  service method-input-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/
//gsoap trt  service method-output-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/Response
int __trt__GetProfile(
    struct _trt__GetProfile*            trt__GetProfile,	///< Input parameter
    struct _trt__GetProfileResponse    *trt__GetProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfiles                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetProfiles" of service binding "MediaBinding".
Any endpoint can ask for the existing media profiles of a device using the GetProfiles
command. Pre-configured or dynamically configured profiles can be retrieved using
this
command. This command lists all configured profiles in a device. The client does
not need to
know the media profile in order to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetProfiles*           trt__GetProfiles,
    // output parameters:
    struct _trt__GetProfilesResponse   *trt__GetProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfiles(
    struct soap *soap,
    // input parameters:
    struct _trt__GetProfiles*           trt__GetProfiles,
    // output parameters:
    struct _trt__GetProfilesResponse   *trt__GetProfilesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetProfiles SOAP
//gsoap trt  service method-style:	GetProfiles document
//gsoap trt  service method-encoding:	GetProfiles literal
//gsoap trt  service method-input-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfiles
//gsoap trt  service method-output-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse
int __trt__GetProfiles(
    struct _trt__GetProfiles*           trt__GetProfiles,	///< Input parameter
    struct _trt__GetProfilesResponse   *trt__GetProfilesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoEncoderConfiguration" of service binding "MediaBinding".
This operation adds a VideoEncoderConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. A device shall
support adding a compatible VideoEncoderConfiguration to a Profile containing a
VideoSourceConfiguration and shall
support streaming video data of such a profile.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,
    // output parameters:
    struct _trt__AddVideoEncoderConfigurationResponse*trt__AddVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,
    // output parameters:
    struct _trt__AddVideoEncoderConfigurationResponse*trt__AddVideoEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	AddVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	AddVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration
//gsoap trt  service method-output-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfigurationResponse
int __trt__AddVideoEncoderConfiguration(
    struct _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,	///< Input parameter
    struct _trt__AddVideoEncoderConfigurationResponse*trt__AddVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoSourceConfiguration" of service binding "MediaBinding".
This operation adds a VideoSourceConfiguration to an existing media profile. If
such a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddVideoSourceConfiguration* trt__AddVideoSourceConfiguration,
    // output parameters:
    struct _trt__AddVideoSourceConfigurationResponse*trt__AddVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddVideoSourceConfiguration* trt__AddVideoSourceConfiguration,
    // output parameters:
    struct _trt__AddVideoSourceConfigurationResponse*trt__AddVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	AddVideoSourceConfiguration document
//gsoap trt  service method-encoding:	AddVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration
//gsoap trt  service method-output-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfigurationResponse
int __trt__AddVideoSourceConfiguration(
    struct _trt__AddVideoSourceConfiguration* trt__AddVideoSourceConfiguration,	///< Input parameter
    struct _trt__AddVideoSourceConfigurationResponse*trt__AddVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioEncoderConfiguration" of service binding "MediaBinding".
This operation adds an AudioEncoderConfiguration to an existing media profile. If
a 
configuration exists in the media profile, it will be replaced. The change shall
be persistent. A device shall
support adding a compatible AudioEncoderConfiguration to a profile containing an
AudioSourceConfiguration and shall
support streaming audio data of such a profile.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,
    // output parameters:
    struct _trt__AddAudioEncoderConfigurationResponse*trt__AddAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,
    // output parameters:
    struct _trt__AddAudioEncoderConfigurationResponse*trt__AddAudioEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	AddAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	AddAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration
//gsoap trt  service method-output-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfigurationResponse
int __trt__AddAudioEncoderConfiguration(
    struct _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,	///< Input parameter
    struct _trt__AddAudioEncoderConfigurationResponse*trt__AddAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioSourceConfiguration" of service binding "MediaBinding".
This operation adds an AudioSourceConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddAudioSourceConfiguration* trt__AddAudioSourceConfiguration,
    // output parameters:
    struct _trt__AddAudioSourceConfigurationResponse*trt__AddAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddAudioSourceConfiguration* trt__AddAudioSourceConfiguration,
    // output parameters:
    struct _trt__AddAudioSourceConfigurationResponse*trt__AddAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	AddAudioSourceConfiguration document
//gsoap trt  service method-encoding:	AddAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration
//gsoap trt  service method-output-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfigurationResponse
int __trt__AddAudioSourceConfiguration(
    struct _trt__AddAudioSourceConfiguration* trt__AddAudioSourceConfiguration,	///< Input parameter
    struct _trt__AddAudioSourceConfigurationResponse*trt__AddAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddPTZConfiguration                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddPTZConfiguration" of service binding "MediaBinding".
This operation adds a PTZConfiguration to an existing media profile. If a configuration
exists
in the media profile, it will be replaced. The change shall be persistent. Adding
a PTZConfiguration to a media profile means that streams using that media profile
can
contain PTZ status (in the metadata), and that the media profile can be used for
controlling
PTZ movement.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddPTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddPTZConfiguration*   trt__AddPTZConfiguration,
    // output parameters:
    struct _trt__AddPTZConfigurationResponse*trt__AddPTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddPTZConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddPTZConfiguration*   trt__AddPTZConfiguration,
    // output parameters:
    struct _trt__AddPTZConfigurationResponse*trt__AddPTZConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddPTZConfiguration SOAP
//gsoap trt  service method-style:	AddPTZConfiguration document
//gsoap trt  service method-encoding:	AddPTZConfiguration literal
//gsoap trt  service method-input-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration
//gsoap trt  service method-output-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfigurationResponse
int __trt__AddPTZConfiguration(
    struct _trt__AddPTZConfiguration*   trt__AddPTZConfiguration,	///< Input parameter
    struct _trt__AddPTZConfigurationResponse*trt__AddPTZConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoAnalyticsConfiguration" of service binding "MediaBinding".
This operation adds a VideoAnalytics configuration to an existing media profile.
If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a VideoAnalyticsConfiguration to a media profile means that
streams using that media
profile can contain video analytics data (in the metadata) as defined by the submitted
configuration reference. A profile containing only a video analytics configuration
but no video source configuration is incomplete. Therefore, a client should first
add a video source configuration to a profile before adding a video analytics configuration.
The device can deny adding of a video analytics
configuration before a video source configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__AddVideoAnalyticsConfigurationResponse*trt__AddVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__AddVideoAnalyticsConfigurationResponse*trt__AddVideoAnalyticsConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	AddVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	AddVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfigurationResponse
int __trt__AddVideoAnalyticsConfiguration(
    struct _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,	///< Input parameter
    struct _trt__AddVideoAnalyticsConfigurationResponse*trt__AddVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddMetadataConfiguration" of service binding "MediaBinding".
This operation adds a Metadata configuration to an existing media profile. If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a MetadataConfiguration to a Profile means that streams using
that profile contain metadata. Metadata can consist of events, PTZ status, and/or
video analytics data.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddMetadataConfiguration* trt__AddMetadataConfiguration,
    // output parameters:
    struct _trt__AddMetadataConfigurationResponse*trt__AddMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddMetadataConfiguration* trt__AddMetadataConfiguration,
    // output parameters:
    struct _trt__AddMetadataConfigurationResponse*trt__AddMetadataConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddMetadataConfiguration SOAP
//gsoap trt  service method-style:	AddMetadataConfiguration document
//gsoap trt  service method-encoding:	AddMetadataConfiguration literal
//gsoap trt  service method-input-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration
//gsoap trt  service method-output-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfigurationResponse
int __trt__AddMetadataConfiguration(
    struct _trt__AddMetadataConfiguration* trt__AddMetadataConfiguration,	///< Input parameter
    struct _trt__AddMetadataConfigurationResponse*trt__AddMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioOutputConfiguration" of service binding "MediaBinding".
This operation adds an AudioOutputConfiguration to an existing media profile. If
a configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddAudioOutputConfiguration* trt__AddAudioOutputConfiguration,
    // output parameters:
    struct _trt__AddAudioOutputConfigurationResponse*trt__AddAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddAudioOutputConfiguration* trt__AddAudioOutputConfiguration,
    // output parameters:
    struct _trt__AddAudioOutputConfigurationResponse*trt__AddAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	AddAudioOutputConfiguration document
//gsoap trt  service method-encoding:	AddAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration
//gsoap trt  service method-output-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfigurationResponse
int __trt__AddAudioOutputConfiguration(
    struct _trt__AddAudioOutputConfiguration* trt__AddAudioOutputConfiguration,	///< Input parameter
    struct _trt__AddAudioOutputConfigurationResponse*trt__AddAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioDecoderConfiguration" of service binding "MediaBinding".
This operation adds an AudioDecoderConfiguration to an existing media profile. If
a configuration exists in the media profile, it shall be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,
    // output parameters:
    struct _trt__AddAudioDecoderConfigurationResponse*trt__AddAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,
    // output parameters:
    struct _trt__AddAudioDecoderConfigurationResponse*trt__AddAudioDecoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	AddAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	AddAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration
//gsoap trt  service method-output-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfigurationResponse
int __trt__AddAudioDecoderConfiguration(
    struct _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,	///< Input parameter
    struct _trt__AddAudioDecoderConfigurationResponse*trt__AddAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoEncoderConfiguration" of service binding "MediaBinding".
This operation removes a VideoEncoderConfiguration from an existing media profile.
If the
media profile does not contain a VideoEncoderConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,
    // output parameters:
    struct _trt__RemoveVideoEncoderConfigurationResponse*trt__RemoveVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,
    // output parameters:
    struct _trt__RemoveVideoEncoderConfigurationResponse*trt__RemoveVideoEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration
//gsoap trt  service method-output-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfigurationResponse
int __trt__RemoveVideoEncoderConfiguration(
    struct _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,	///< Input parameter
    struct _trt__RemoveVideoEncoderConfigurationResponse*trt__RemoveVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoSourceConfiguration" of service binding "MediaBinding".
This operation removes a VideoSourceConfiguration from an existing media profile.
If the
media profile does not contain a VideoSourceConfiguration, the operation has no
effect. The removal shall be persistent. Video source configurations should only
be removed after removing a
VideoEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,
    // output parameters:
    struct _trt__RemoveVideoSourceConfigurationResponse*trt__RemoveVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,
    // output parameters:
    struct _trt__RemoveVideoSourceConfigurationResponse*trt__RemoveVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration
//gsoap trt  service method-output-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfigurationResponse
int __trt__RemoveVideoSourceConfiguration(
    struct _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,	///< Input parameter
    struct _trt__RemoveVideoSourceConfigurationResponse*trt__RemoveVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioEncoderConfiguration" of service binding "MediaBinding".
This operation removes an AudioEncoderConfiguration from an existing media profile.
If the
media profile does not contain an AudioEncoderConfiguration, the operation has
no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,
    // output parameters:
    struct _trt__RemoveAudioEncoderConfigurationResponse*trt__RemoveAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,
    // output parameters:
    struct _trt__RemoveAudioEncoderConfigurationResponse*trt__RemoveAudioEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration
//gsoap trt  service method-output-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfigurationResponse
int __trt__RemoveAudioEncoderConfiguration(
    struct _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,	///< Input parameter
    struct _trt__RemoveAudioEncoderConfigurationResponse*trt__RemoveAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioSourceConfiguration" of service binding "MediaBinding".
This operation removes an AudioSourceConfiguration from an existing media profile.
If the
media profile does not contain an AudioSourceConfiguration, the operation has no
effect. The
removal shall be persistent. Audio source configurations should only be removed
after removing an
AudioEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,
    // output parameters:
    struct _trt__RemoveAudioSourceConfigurationResponse*trt__RemoveAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,
    // output parameters:
    struct _trt__RemoveAudioSourceConfigurationResponse*trt__RemoveAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration
//gsoap trt  service method-output-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfigurationResponse
int __trt__RemoveAudioSourceConfiguration(
    struct _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,	///< Input parameter
    struct _trt__RemoveAudioSourceConfigurationResponse*trt__RemoveAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemovePTZConfiguration                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemovePTZConfiguration" of service binding "MediaBinding".
This operation removes a PTZConfiguration from an existing media profile. If the
media profile
does not contain a PTZConfiguration, the operation has no effect. The removal shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemovePTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemovePTZConfiguration* trt__RemovePTZConfiguration,
    // output parameters:
    struct _trt__RemovePTZConfigurationResponse*trt__RemovePTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemovePTZConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemovePTZConfiguration* trt__RemovePTZConfiguration,
    // output parameters:
    struct _trt__RemovePTZConfigurationResponse*trt__RemovePTZConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemovePTZConfiguration SOAP
//gsoap trt  service method-style:	RemovePTZConfiguration document
//gsoap trt  service method-encoding:	RemovePTZConfiguration literal
//gsoap trt  service method-input-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration
//gsoap trt  service method-output-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfigurationResponse
int __trt__RemovePTZConfiguration(
    struct _trt__RemovePTZConfiguration* trt__RemovePTZConfiguration,	///< Input parameter
    struct _trt__RemovePTZConfigurationResponse*trt__RemovePTZConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoAnalyticsConfiguration                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoAnalyticsConfiguration" of service binding "MediaBinding".
This operation removes a VideoAnalyticsConfiguration from an existing media profile.
If the media profile does not contain a VideoAnalyticsConfiguration, the operation
has no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__RemoveVideoAnalyticsConfigurationResponse*trt__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__RemoveVideoAnalyticsConfigurationResponse*trt__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfigurationResponse
int __trt__RemoveVideoAnalyticsConfiguration(
    struct _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,	///< Input parameter
    struct _trt__RemoveVideoAnalyticsConfigurationResponse*trt__RemoveVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveMetadataConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveMetadataConfiguration" of service binding "MediaBinding".
This operation removes a MetadataConfiguration from an existing media profile. If
the media profile does not contain a MetadataConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveMetadataConfiguration* trt__RemoveMetadataConfiguration,
    // output parameters:
    struct _trt__RemoveMetadataConfigurationResponse*trt__RemoveMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveMetadataConfiguration* trt__RemoveMetadataConfiguration,
    // output parameters:
    struct _trt__RemoveMetadataConfigurationResponse*trt__RemoveMetadataConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveMetadataConfiguration SOAP
//gsoap trt  service method-style:	RemoveMetadataConfiguration document
//gsoap trt  service method-encoding:	RemoveMetadataConfiguration literal
//gsoap trt  service method-input-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration
//gsoap trt  service method-output-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfigurationResponse
int __trt__RemoveMetadataConfiguration(
    struct _trt__RemoveMetadataConfiguration* trt__RemoveMetadataConfiguration,	///< Input parameter
    struct _trt__RemoveMetadataConfigurationResponse*trt__RemoveMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioOutputConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioOutputConfiguration" of service binding "MediaBinding".
This operation removes an AudioOutputConfiguration from an existing media profile.
If the media profile does not contain an AudioOutputConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,
    // output parameters:
    struct _trt__RemoveAudioOutputConfigurationResponse*trt__RemoveAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,
    // output parameters:
    struct _trt__RemoveAudioOutputConfigurationResponse*trt__RemoveAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioOutputConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration
//gsoap trt  service method-output-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfigurationResponse
int __trt__RemoveAudioOutputConfiguration(
    struct _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,	///< Input parameter
    struct _trt__RemoveAudioOutputConfigurationResponse*trt__RemoveAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioDecoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioDecoderConfiguration" of service binding "MediaBinding".
This operation removes an AudioDecoderConfiguration from an existing media profile.
If the media profile does not contain an AudioDecoderConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,
    // output parameters:
    struct _trt__RemoveAudioDecoderConfigurationResponse*trt__RemoveAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,
    // output parameters:
    struct _trt__RemoveAudioDecoderConfigurationResponse*trt__RemoveAudioDecoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration
//gsoap trt  service method-output-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfigurationResponse
int __trt__RemoveAudioDecoderConfiguration(
    struct _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,	///< Input parameter
    struct _trt__RemoveAudioDecoderConfigurationResponse*trt__RemoveAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__DeleteProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__DeleteProfile" of service binding "MediaBinding".
This operation deletes a profile. This change shall always be persistent. Deletion
of a profile is only possible for non-fixed profiles

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__DeleteProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__DeleteProfile*         trt__DeleteProfile,
    // output parameters:
    struct _trt__DeleteProfileResponse *trt__DeleteProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__DeleteProfile(
    struct soap *soap,
    // input parameters:
    struct _trt__DeleteProfile*         trt__DeleteProfile,
    // output parameters:
    struct _trt__DeleteProfileResponse *trt__DeleteProfileResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	DeleteProfile SOAP
//gsoap trt  service method-style:	DeleteProfile document
//gsoap trt  service method-encoding:	DeleteProfile literal
//gsoap trt  service method-input-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfile
//gsoap trt  service method-output-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfileResponse
int __trt__DeleteProfile(
    struct _trt__DeleteProfile*         trt__DeleteProfile,	///< Input parameter
    struct _trt__DeleteProfileResponse *trt__DeleteProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfigurations" of service binding "MediaBinding".
This operation lists all existing video source configurations for a device. The
client need not know anything about the video source configurations in order to
use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationsResponse*trt__GetVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationsResponse*trt__GetVideoSourceConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfigurations SOAP
//gsoap trt  service method-style:	GetVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurations literal
//gsoap trt  service method-input-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations
//gsoap trt  service method-output-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationsResponse
int __trt__GetVideoSourceConfigurations(
    struct _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,	///< Input parameter
    struct _trt__GetVideoSourceConfigurationsResponse*trt__GetVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfigurations" of service binding "MediaBinding".
This operation lists all existing video encoder configurations of a device. This
command lists all configured video encoder configurations in a device. The client
need not know anything apriori about the video encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationsResponse*trt__GetVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationsResponse*trt__GetVideoEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations
//gsoap trt  service method-output-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationsResponse
int __trt__GetVideoEncoderConfigurations(
    struct _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,	///< Input parameter
    struct _trt__GetVideoEncoderConfigurationsResponse*trt__GetVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfigurations" of service binding "MediaBinding".
This operation lists all existing audio source configurations of a device. This
command lists all audio source configurations in a device. The client need not
know anything apriori about the audio source configurations in order to use the
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationsResponse*trt__GetAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationsResponse*trt__GetAudioSourceConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfigurations SOAP
//gsoap trt  service method-style:	GetAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurations literal
//gsoap trt  service method-input-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/
//gsoap trt  service method-output-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/Response
int __trt__GetAudioSourceConfigurations(
    struct _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,	///< Input parameter
    struct _trt__GetAudioSourceConfigurationsResponse*trt__GetAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfigurations" of service binding "MediaBinding".
This operation lists all existing device audio encoder configurations. The client
need not know anything apriori about the audio encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationsResponse*trt__GetAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationsResponse*trt__GetAudioEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations
//gsoap trt  service method-output-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationsResponse
int __trt__GetAudioEncoderConfigurations(
    struct _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,	///< Input parameter
    struct _trt__GetAudioEncoderConfigurationsResponse*trt__GetAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfigurations                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoAnalyticsConfigurations" of service binding "MediaBinding".
This operation lists all video analytics configurations of a device. This command
lists all configured video analytics in a device. The client need not know anything
apriori about the video analytics in order to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,
    // output parameters:
    struct _trt__GetVideoAnalyticsConfigurationsResponse*trt__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,
    // output parameters:
    struct _trt__GetVideoAnalyticsConfigurationsResponse*trt__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoAnalyticsConfigurations SOAP
//gsoap trt  service method-style:	GetVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfigurations literal
//gsoap trt  service method-input-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations
//gsoap trt  service method-output-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationsResponse
int __trt__GetVideoAnalyticsConfigurations(
    struct _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,	///< Input parameter
    struct _trt__GetVideoAnalyticsConfigurationsResponse*trt__GetVideoAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurations                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfigurations" of service binding "MediaBinding".
This operation lists all existing metadata configurations. The client need not know
anything apriori about the metadata in order to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetMetadataConfigurations* trt__GetMetadataConfigurations,
    // output parameters:
    struct _trt__GetMetadataConfigurationsResponse*trt__GetMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetMetadataConfigurations* trt__GetMetadataConfigurations,
    // output parameters:
    struct _trt__GetMetadataConfigurationsResponse*trt__GetMetadataConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetMetadataConfigurations SOAP
//gsoap trt  service method-style:	GetMetadataConfigurations document
//gsoap trt  service method-encoding:	GetMetadataConfigurations literal
//gsoap trt  service method-input-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations
//gsoap trt  service method-output-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationsResponse
int __trt__GetMetadataConfigurations(
    struct _trt__GetMetadataConfigurations* trt__GetMetadataConfigurations,	///< Input parameter
    struct _trt__GetMetadataConfigurationsResponse*trt__GetMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfigurations" of service binding "MediaBinding".
This command lists all existing AudioOutputConfigurations of a device. The NVC need
not know anything apriori about the audio configurations to use this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationsResponse*trt__GetAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationsResponse*trt__GetAudioOutputConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfigurations SOAP
//gsoap trt  service method-style:	GetAudioOutputConfigurations document
//gsoap trt  service method-encoding:	GetAudioOutputConfigurations literal
//gsoap trt  service method-input-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations
//gsoap trt  service method-output-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationsResponse
int __trt__GetAudioOutputConfigurations(
    struct _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,	///< Input parameter
    struct _trt__GetAudioOutputConfigurationsResponse*trt__GetAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfigurations" of service binding "MediaBinding".
This command lists all existing AudioDecoderConfigurations of a device. The NVC
need not know anything apriori about the audio decoder configurations in order
to
use this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationsResponse*trt__GetAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationsResponse*trt__GetAudioDecoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfigurations SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfigurations document
//gsoap trt  service method-encoding:	GetAudioDecoderConfigurations literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations
//gsoap trt  service method-output-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationsResponse
int __trt__GetAudioDecoderConfigurations(
    struct _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,	///< Input parameter
    struct _trt__GetAudioDecoderConfigurationsResponse*trt__GetAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfiguration" of service binding "MediaBinding".
If the video source configuration token is already known, the video source configuration
can be fetched through the GetVideoSourceConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSourceConfiguration* trt__GetVideoSourceConfiguration,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationResponse*trt__GetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSourceConfiguration* trt__GetVideoSourceConfiguration,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationResponse*trt__GetVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	GetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	GetVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration
//gsoap trt  service method-output-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationResponse
int __trt__GetVideoSourceConfiguration(
    struct _trt__GetVideoSourceConfiguration* trt__GetVideoSourceConfiguration,	///< Input parameter
    struct _trt__GetVideoSourceConfigurationResponse*trt__GetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfiguration" of service binding "MediaBinding".
If the video encoder configuration token is already known, the encoder configuration
can be fetched through the GetVideoEncoderConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationResponse*trt__GetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationResponse*trt__GetVideoEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	GetVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration
//gsoap trt  service method-output-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationResponse
int __trt__GetVideoEncoderConfiguration(
    struct _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,	///< Input parameter
    struct _trt__GetVideoEncoderConfigurationResponse*trt__GetVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfiguration" of service binding "MediaBinding".
The GetAudioSourceConfiguration command fetches the audio source configurations
if the audio source configuration token is already known. An

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioSourceConfiguration* trt__GetAudioSourceConfiguration,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationResponse*trt__GetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioSourceConfiguration* trt__GetAudioSourceConfiguration,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationResponse*trt__GetAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	GetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	GetAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration
//gsoap trt  service method-output-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationResponse
int __trt__GetAudioSourceConfiguration(
    struct _trt__GetAudioSourceConfiguration* trt__GetAudioSourceConfiguration,	///< Input parameter
    struct _trt__GetAudioSourceConfigurationResponse*trt__GetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfiguration" of service binding "MediaBinding".
The GetAudioEncoderConfiguration command fetches the encoder configuration if the
audio encoder configuration token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationResponse*trt__GetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationResponse*trt__GetAudioEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	GetAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration
//gsoap trt  service method-output-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationResponse
int __trt__GetAudioEncoderConfiguration(
    struct _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,	///< Input parameter
    struct _trt__GetAudioEncoderConfigurationResponse*trt__GetAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoAnalyticsConfiguration" of service binding "MediaBinding".
The GetVideoAnalyticsConfiguration command fetches the video analytics configuration
if the video analytics token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__GetVideoAnalyticsConfigurationResponse*trt__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__GetVideoAnalyticsConfigurationResponse*trt__GetVideoAnalyticsConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	GetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationResponse
int __trt__GetVideoAnalyticsConfiguration(
    struct _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,	///< Input parameter
    struct _trt__GetVideoAnalyticsConfigurationResponse*trt__GetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfiguration" of service binding "MediaBinding".
The GetMetadataConfiguration command fetches the metadata configuration if the metadata
token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetMetadataConfiguration* trt__GetMetadataConfiguration,
    // output parameters:
    struct _trt__GetMetadataConfigurationResponse*trt__GetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetMetadataConfiguration* trt__GetMetadataConfiguration,
    // output parameters:
    struct _trt__GetMetadataConfigurationResponse*trt__GetMetadataConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetMetadataConfiguration SOAP
//gsoap trt  service method-style:	GetMetadataConfiguration document
//gsoap trt  service method-encoding:	GetMetadataConfiguration literal
//gsoap trt  service method-input-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration
//gsoap trt  service method-output-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationResponse
int __trt__GetMetadataConfiguration(
    struct _trt__GetMetadataConfiguration* trt__GetMetadataConfiguration,	///< Input parameter
    struct _trt__GetMetadataConfigurationResponse*trt__GetMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfiguration" of service binding "MediaBinding".
If the audio output configuration token is already known, the output configuration
can be fetched through the GetAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioOutputConfiguration* trt__GetAudioOutputConfiguration,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationResponse*trt__GetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioOutputConfiguration* trt__GetAudioOutputConfiguration,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationResponse*trt__GetAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	GetAudioOutputConfiguration document
//gsoap trt  service method-encoding:	GetAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration
//gsoap trt  service method-output-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationResponse
int __trt__GetAudioOutputConfiguration(
    struct _trt__GetAudioOutputConfiguration* trt__GetAudioOutputConfiguration,	///< Input parameter
    struct _trt__GetAudioOutputConfigurationResponse*trt__GetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfiguration" of service binding "MediaBinding".
If the audio decoder configuration token is already known, the decoder configuration
can be fetched through the GetAudioDecoderConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationResponse*trt__GetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationResponse*trt__GetAudioDecoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	GetAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration
//gsoap trt  service method-output-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationResponse
int __trt__GetAudioDecoderConfiguration(
    struct _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,	///< Input parameter
    struct _trt__GetAudioDecoderConfigurationResponse*trt__GetAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoEncoderConfigurations" of service binding "MediaBinding".
This operation lists all the video encoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoEncoderConfiguration command on the
media profile. The result will vary depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*trt__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*trt__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurationsResponse
int __trt__GetCompatibleVideoEncoderConfigurations(
    struct _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,	///< Input parameter
    struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*trt__GetCompatibleVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoSourceConfigurations" of service binding "MediaBinding".
This operation requests all the video source configurations of the device that are
compatible
with a certain media profile. Each of the returned configurations shall be a valid
input
parameter for the AddVideoSourceConfiguration command on the media profile. The
result
will vary depending on the capabilities, configurations and settings in the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoSourceConfigurationsResponse*trt__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoSourceConfigurationsResponse*trt__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoSourceConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoSourceConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurationsResponse
int __trt__GetCompatibleVideoSourceConfigurations(
    struct _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,	///< Input parameter
    struct _trt__GetCompatibleVideoSourceConfigurationsResponse*trt__GetCompatibleVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioEncoderConfigurations" of service binding "MediaBinding".
This operation requests all audio encoder configurations of a device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioSourceConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*trt__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*trt__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurationsResponse
int __trt__GetCompatibleAudioEncoderConfigurations(
    struct _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,	///< Input parameter
    struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*trt__GetCompatibleAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioSourceConfigurations" of service binding "MediaBinding".
This operation requests all audio source configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioEncoderConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioSourceConfigurationsResponse*trt__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioSourceConfigurationsResponse*trt__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioSourceConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioSourceConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurationsResponse
int __trt__GetCompatibleAudioSourceConfigurations(
    struct _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,	///< Input parameter
    struct _trt__GetCompatibleAudioSourceConfigurationsResponse*trt__GetCompatibleAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoAnalyticsConfigurations                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoAnalyticsConfigurations" of service binding "MediaBinding".
This operation requests all video analytic configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoAnalyticsConfiguration command on the
media profile. The result varies depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*trt__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*trt__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoAnalyticsConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoAnalyticsConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurationsResponse
int __trt__GetCompatibleVideoAnalyticsConfigurations(
    struct _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,	///< Input parameter
    struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*trt__GetCompatibleVideoAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleMetadataConfigurations                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleMetadataConfigurations" of service binding "MediaBinding".
This operation requests all the metadata configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddMetadataConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,
    // output parameters:
    struct _trt__GetCompatibleMetadataConfigurationsResponse*trt__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,
    // output parameters:
    struct _trt__GetCompatibleMetadataConfigurationsResponse*trt__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleMetadataConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleMetadataConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleMetadataConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations
//gsoap trt  service method-output-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurationsResponse
int __trt__GetCompatibleMetadataConfigurations(
    struct _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,	///< Input parameter
    struct _trt__GetCompatibleMetadataConfigurationsResponse*trt__GetCompatibleMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioOutputConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioOutputConfigurations" of service binding "MediaBinding".
This command lists all audio output configurations of a device that are compatible
with a certain media profile. Each returned configuration shall be a valid input
for the 
AddAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioOutputConfigurationsResponse*trt__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioOutputConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioOutputConfigurationsResponse*trt__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioOutputConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioOutputConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioOutputConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurationsResponse
int __trt__GetCompatibleAudioOutputConfigurations(
    struct _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,	///< Input parameter
    struct _trt__GetCompatibleAudioOutputConfigurationsResponse*trt__GetCompatibleAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioDecoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioDecoderConfigurations" of service binding "MediaBinding".
This operation lists all the audio decoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddAudioDecoderConfiguration command on the
media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*trt__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioDecoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*trt__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioDecoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioDecoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioDecoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurationsResponse
int __trt__GetCompatibleAudioDecoderConfigurations(
    struct _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,	///< Input parameter
    struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*trt__GetCompatibleAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoSourceConfiguration" of service binding "MediaBinding".
This operation modifies a video source configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Running streams
using this configuration may be immediately updated according to the new settings.
The changes are not guaranteed to take effect unless the client requests a new
stream URI and restarts any affected stream. NVC methods for changing a running
stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetVideoSourceConfiguration* trt__SetVideoSourceConfiguration,
    // output parameters:
    struct _trt__SetVideoSourceConfigurationResponse*trt__SetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetVideoSourceConfiguration* trt__SetVideoSourceConfiguration,
    // output parameters:
    struct _trt__SetVideoSourceConfigurationResponse*trt__SetVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	SetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	SetVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration
//gsoap trt  service method-output-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfigurationResponse
int __trt__SetVideoSourceConfiguration(
    struct _trt__SetVideoSourceConfiguration* trt__SetVideoSourceConfiguration,	///< Input parameter
    struct _trt__SetVideoSourceConfigurationResponse*trt__SetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoEncoderConfiguration" of service binding "MediaBinding".
This operation modifies a video encoder configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Changes in the
Multicast settings shall always be persistent. Running streams using this configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream. NVC methods for changing a running stream are out of scope for this specification.
<br/>SessionTimeout is provided as a hint for keeping rtsp session by a device.
If necessary the device may adapt parameter values for SessionTimeout elements
without returning an error. For the time between keep alive calls the client shall
adhere to the timeout value signaled via RTSP.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,
    // output parameters:
    struct _trt__SetVideoEncoderConfigurationResponse*trt__SetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,
    // output parameters:
    struct _trt__SetVideoEncoderConfigurationResponse*trt__SetVideoEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	SetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	SetVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration
//gsoap trt  service method-output-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfigurationResponse
int __trt__SetVideoEncoderConfiguration(
    struct _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,	///< Input parameter
    struct _trt__SetVideoEncoderConfigurationResponse*trt__SetVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioSourceConfiguration" of service binding "MediaBinding".
This operation modifies an audio source configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream
NVC methods for changing a running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetAudioSourceConfiguration* trt__SetAudioSourceConfiguration,
    // output parameters:
    struct _trt__SetAudioSourceConfigurationResponse*trt__SetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetAudioSourceConfiguration* trt__SetAudioSourceConfiguration,
    // output parameters:
    struct _trt__SetAudioSourceConfigurationResponse*trt__SetAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	SetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	SetAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration
//gsoap trt  service method-output-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfigurationResponse
int __trt__SetAudioSourceConfiguration(
    struct _trt__SetAudioSourceConfiguration* trt__SetAudioSourceConfiguration,	///< Input parameter
    struct _trt__SetAudioSourceConfigurationResponse*trt__SetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioEncoderConfiguration" of service binding "MediaBinding".
This operation modifies an audio encoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration may be immediately updated
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,
    // output parameters:
    struct _trt__SetAudioEncoderConfigurationResponse*trt__SetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,
    // output parameters:
    struct _trt__SetAudioEncoderConfigurationResponse*trt__SetAudioEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	SetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	SetAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration
//gsoap trt  service method-output-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfigurationResponse
int __trt__SetAudioEncoderConfiguration(
    struct _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,	///< Input parameter
    struct _trt__SetAudioEncoderConfigurationResponse*trt__SetAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoAnalyticsConfiguration" of service binding "MediaBinding".
A video analytics configuration is modified using this command. The ForcePersistence
flag
indicates if the changes shall remain after reboot of the device or not. Running
streams using
this configuration shall be immediately updated according to the new settings.
Otherwise
inconsistencies can occur between the scene description processed by the rule engine
and
the notifications produced by analytics engine and rule engine which reference
the very same
video analytics configuration token.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__SetVideoAnalyticsConfigurationResponse*trt__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__SetVideoAnalyticsConfigurationResponse*trt__SetVideoAnalyticsConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	SetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	SetVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfigurationResponse
int __trt__SetVideoAnalyticsConfiguration(
    struct _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,	///< Input parameter
    struct _trt__SetVideoAnalyticsConfigurationResponse*trt__SetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetMetadataConfiguration" of service binding "MediaBinding".
This operation modifies a metadata configuration. The ForcePersistence flag indicates
if the
changes shall remain after reboot of the device. Changes in the Multicast settings
shall
always be persistent. Running streams using this configuration may be updated immediately
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetMetadataConfiguration* trt__SetMetadataConfiguration,
    // output parameters:
    struct _trt__SetMetadataConfigurationResponse*trt__SetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetMetadataConfiguration* trt__SetMetadataConfiguration,
    // output parameters:
    struct _trt__SetMetadataConfigurationResponse*trt__SetMetadataConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetMetadataConfiguration SOAP
//gsoap trt  service method-style:	SetMetadataConfiguration document
//gsoap trt  service method-encoding:	SetMetadataConfiguration literal
//gsoap trt  service method-input-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration
//gsoap trt  service method-output-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfigurationResponse
int __trt__SetMetadataConfiguration(
    struct _trt__SetMetadataConfiguration* trt__SetMetadataConfiguration,	///< Input parameter
    struct _trt__SetMetadataConfigurationResponse*trt__SetMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioOutputConfiguration" of service binding "MediaBinding".
This operation modifies an audio output configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetAudioOutputConfiguration* trt__SetAudioOutputConfiguration,
    // output parameters:
    struct _trt__SetAudioOutputConfigurationResponse*trt__SetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetAudioOutputConfiguration* trt__SetAudioOutputConfiguration,
    // output parameters:
    struct _trt__SetAudioOutputConfigurationResponse*trt__SetAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	SetAudioOutputConfiguration document
//gsoap trt  service method-encoding:	SetAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration
//gsoap trt  service method-output-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfigurationResponse
int __trt__SetAudioOutputConfiguration(
    struct _trt__SetAudioOutputConfiguration* trt__SetAudioOutputConfiguration,	///< Input parameter
    struct _trt__SetAudioOutputConfigurationResponse*trt__SetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioDecoderConfiguration" of service binding "MediaBinding".
This operation modifies an audio decoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,
    // output parameters:
    struct _trt__SetAudioDecoderConfigurationResponse*trt__SetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,
    // output parameters:
    struct _trt__SetAudioDecoderConfigurationResponse*trt__SetAudioDecoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	SetAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	SetAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration
//gsoap trt  service method-output-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfigurationResponse
int __trt__SetAudioDecoderConfiguration(
    struct _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,	///< Input parameter
    struct _trt__SetAudioDecoderConfigurationResponse*trt__SetAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options  (supported values and ranges for video
source configuration parameters) when the video source parameters are
reconfigured If a video source configuration is specified, the options shall concern
that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationOptionsResponse*trt__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationOptionsResponse*trt__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfigurationOptions SOAP
//gsoap trt  service method-style:	GetVideoSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap trt  service method-input-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/
//gsoap trt  service method-output-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/Response
int __trt__GetVideoSourceConfigurationOptions(
    struct _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,	///< Input parameter
    struct _trt__GetVideoSourceConfigurationOptionsResponse*trt__GetVideoSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for video
encoder 
				configuration parameters) when the video encoder
parameters are reconfigured. <br/>
				For JPEG, MPEG4 and H264 extension elements have
been defined that provide additional information. A device must provide the 
				XxxOption information for all encodings supported
and should additionally provide the corresponding XxxOption2 information.<br/>
				This response contains the available video encoder
configuration options. If a video encoder configuration is specified, 
				the options shall concern that particular configuration.
If a media profile is specified, the options shall be 
				compatible with that media profile. If no tokens
are specified, the options shall be considered generic for the device.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationOptionsResponse*trt__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationOptionsResponse*trt__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions
//gsoap trt  service method-output-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptionsResponse
int __trt__GetVideoEncoderConfigurationOptions(
    struct _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,	///< Input parameter
    struct _trt__GetVideoEncoderConfigurationOptionsResponse*trt__GetVideoEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for audio
source configuration parameters) when the audio source parameters are
reconfigured. If an audio source configuration is specified, the options shall
concern that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationOptionsResponse*trt__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationOptionsResponse*trt__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptionsResponse
int __trt__GetAudioSourceConfigurationOptions(
    struct _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,	///< Input parameter
    struct _trt__GetAudioSourceConfigurationOptionsResponse*trt__GetAudioSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options  (supported values and ranges for audio
encoder configuration parameters) when the audio encoder parameters are
reconfigured.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationOptionsResponse*trt__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationOptionsResponse*trt__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptionsResponse
int __trt__GetAudioEncoderConfigurationOptions(
    struct _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,	///< Input parameter
    struct _trt__GetAudioEncoderConfigurationOptionsResponse*trt__GetAudioEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurationOptions                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for metadata
configuration parameters) for changing the metadata configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,
    // output parameters:
    struct _trt__GetMetadataConfigurationOptionsResponse*trt__GetMetadataConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,
    // output parameters:
    struct _trt__GetMetadataConfigurationOptionsResponse*trt__GetMetadataConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetMetadataConfigurationOptions SOAP
//gsoap trt  service method-style:	GetMetadataConfigurationOptions document
//gsoap trt  service method-encoding:	GetMetadataConfigurationOptions literal
//gsoap trt  service method-input-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions
//gsoap trt  service method-output-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptionsResponse
int __trt__GetMetadataConfigurationOptions(
    struct _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,	///< Input parameter
    struct _trt__GetMetadataConfigurationOptionsResponse*trt__GetMetadataConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for audio
output configuration parameters) for configuring an audio output.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationOptionsResponse*trt__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationOptionsResponse*trt__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioOutputConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioOutputConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptionsResponse
int __trt__GetAudioOutputConfigurationOptions(
    struct _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,	///< Input parameter
    struct _trt__GetAudioOutputConfigurationOptionsResponse*trt__GetAudioOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfigurationOptions" of service binding "MediaBinding".
This command list the audio decoding capabilities for a given profile and configuration
of a
device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationOptionsResponse*trt__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationOptionsResponse*trt__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioDecoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptionsResponse
int __trt__GetAudioDecoderConfigurationOptions(
    struct _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,	///< Input parameter
    struct _trt__GetAudioDecoderConfigurationOptionsResponse*trt__GetAudioDecoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetGuaranteedNumberOfVideoEncoderInstances                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetGuaranteedNumberOfVideoEncoderInstances" of service binding "MediaBinding".
The GetGuaranteedNumberOfVideoEncoderInstances command can be used to request the
minimum number of guaranteed video encoder instances (applications) per Video Source
Configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstancesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,
    // output parameters:
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    // input parameters:
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,
    // output parameters:
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetGuaranteedNumberOfVideoEncoderInstances SOAP
//gsoap trt  service method-style:	GetGuaranteedNumberOfVideoEncoderInstances document
//gsoap trt  service method-encoding:	GetGuaranteedNumberOfVideoEncoderInstances literal
//gsoap trt  service method-input-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances
//gsoap trt  service method-output-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstancesResponse
int __trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,	///< Input parameter
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetStreamUri                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetStreamUri" of service binding "MediaBinding".
This operation requests a URI that can be used to initiate a live media stream using
RTSP as
the control protocol. The returned URI shall remain valid indefinitely even if
the profile is
changed. The ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be
set
accordingly (ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). <br/>
				The correct syntax for the StreamSetup element for
these media stream setups defined in 5.1.1 of the streaming specification are as
follows:
				<ol>
					<li>RTP unicast over UDP: StreamType = "RTP_unicast",
TransportProtocol = "UDP"</li>
					<li>RTP over RTSP over HTTP over TCP: StreamType
= "RTP_unicast", TransportProtocol = "HTTP"</li>
					<li>RTP over RTSP over TCP: StreamType =
"RTP_unicast", TransportProtocol = "RTSP"</li>
				</ol>
				<br/>
If a multicast stream is requested the VideoEncoderConfiguration, AudioEncoderConfiguration
and MetadataConfiguration element inside the corresponding 
media profile must be configured with valid multicast settings.<br/>
For full compatibility with other ONVIF services a device should not generate Uris
longer than
128 octets.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetStreamUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetStreamUri*          trt__GetStreamUri,
    // output parameters:
    struct _trt__GetStreamUriResponse  *trt__GetStreamUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetStreamUri(
    struct soap *soap,
    // input parameters:
    struct _trt__GetStreamUri*          trt__GetStreamUri,
    // output parameters:
    struct _trt__GetStreamUriResponse  *trt__GetStreamUriResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetStreamUri SOAP
//gsoap trt  service method-style:	GetStreamUri document
//gsoap trt  service method-encoding:	GetStreamUri literal
//gsoap trt  service method-input-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUri
//gsoap trt  service method-output-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUriResponse
int __trt__GetStreamUri(
    struct _trt__GetStreamUri*          trt__GetStreamUri,	///< Input parameter
    struct _trt__GetStreamUriResponse  *trt__GetStreamUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StartMulticastStreaming                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__StartMulticastStreaming" of service binding "MediaBinding".
This command starts multicast streaming using a specified media profile of a device.
Streaming continues until StopMulticastStreaming is called for the same Profile.
The
streaming shall continue after a reboot of the device until a StopMulticastStreaming
request is
received. The multicast address, port and TTL are configured in the
VideoEncoderConfiguration, AudioEncoderConfiguration and MetadataConfiguration
respectively.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__StartMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__StartMulticastStreaming* trt__StartMulticastStreaming,
    // output parameters:
    struct _trt__StartMulticastStreamingResponse*trt__StartMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__StartMulticastStreaming(
    struct soap *soap,
    // input parameters:
    struct _trt__StartMulticastStreaming* trt__StartMulticastStreaming,
    // output parameters:
    struct _trt__StartMulticastStreamingResponse*trt__StartMulticastStreamingResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	StartMulticastStreaming SOAP
//gsoap trt  service method-style:	StartMulticastStreaming document
//gsoap trt  service method-encoding:	StartMulticastStreaming literal
//gsoap trt  service method-input-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming
//gsoap trt  service method-output-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreamingResponse
int __trt__StartMulticastStreaming(
    struct _trt__StartMulticastStreaming* trt__StartMulticastStreaming,	///< Input parameter
    struct _trt__StartMulticastStreamingResponse*trt__StartMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StopMulticastStreaming                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__StopMulticastStreaming" of service binding "MediaBinding".
This command stop multicast streaming using a specified media profile of a device

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__StopMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__StopMulticastStreaming* trt__StopMulticastStreaming,
    // output parameters:
    struct _trt__StopMulticastStreamingResponse*trt__StopMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__StopMulticastStreaming(
    struct soap *soap,
    // input parameters:
    struct _trt__StopMulticastStreaming* trt__StopMulticastStreaming,
    // output parameters:
    struct _trt__StopMulticastStreamingResponse*trt__StopMulticastStreamingResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	StopMulticastStreaming SOAP
//gsoap trt  service method-style:	StopMulticastStreaming document
//gsoap trt  service method-encoding:	StopMulticastStreaming literal
//gsoap trt  service method-input-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming
//gsoap trt  service method-output-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreamingResponse
int __trt__StopMulticastStreaming(
    struct _trt__StopMulticastStreaming* trt__StopMulticastStreaming,	///< Input parameter
    struct _trt__StopMulticastStreamingResponse*trt__StopMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetSynchronizationPoint" of service binding "MediaBinding".
Synchronization points allow clients to decode and correctly use all data after
the
synchronization point.
For example, if a video stream is configured with a large I-frame distance and
a client loses a
single packet, the client does not display video until the next I-frame is transmitted.
In such
cases, the client can request a Synchronization Point which enforces the device
to add an I-Frame as soon as possible. Clients can request Synchronization Points
for profiles. The device
shall add synchronization points for all streams associated with this profile.
Similarly, a synchronization point is used to get an update on full PTZ or event
status through
the metadata stream.
If a video stream is associated with the profile, an I-frame shall be added to
this video stream.
If a PTZ metadata stream is associated to the profile,
the PTZ position shall be repeated within the metadata stream.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPointResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetSynchronizationPoint* trt__SetSynchronizationPoint,
    // output parameters:
    struct _trt__SetSynchronizationPointResponse*trt__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetSynchronizationPoint(
    struct soap *soap,
    // input parameters:
    struct _trt__SetSynchronizationPoint* trt__SetSynchronizationPoint,
    // output parameters:
    struct _trt__SetSynchronizationPointResponse*trt__SetSynchronizationPointResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetSynchronizationPoint SOAP
//gsoap trt  service method-style:	SetSynchronizationPoint document
//gsoap trt  service method-encoding:	SetSynchronizationPoint literal
//gsoap trt  service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint
//gsoap trt  service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPointResponse
int __trt__SetSynchronizationPoint(
    struct _trt__SetSynchronizationPoint* trt__SetSynchronizationPoint,	///< Input parameter
    struct _trt__SetSynchronizationPointResponse*trt__SetSynchronizationPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetSnapshotUri                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetSnapshotUri" of service binding "MediaBinding".
A client uses the GetSnapshotUri command to obtain a JPEG snapshot from the
device. The returned URI shall remain valid indefinitely even if the profile is
changed. The
ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be set accordingly
(ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). The URI can be
used for
acquiring a JPEG image through a HTTP GET operation. The image encoding will always
be
JPEG regardless of the encoding setting in the media profile. The Jpeg settings
(like resolution or quality) may be taken from the profile if suitable. The provided
image will be updated automatically and independent from calls to GetSnapshotUri.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetSnapshotUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetSnapshotUri*        trt__GetSnapshotUri,
    // output parameters:
    struct _trt__GetSnapshotUriResponse*trt__GetSnapshotUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetSnapshotUri(
    struct soap *soap,
    // input parameters:
    struct _trt__GetSnapshotUri*        trt__GetSnapshotUri,
    // output parameters:
    struct _trt__GetSnapshotUriResponse*trt__GetSnapshotUriResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetSnapshotUri SOAP
//gsoap trt  service method-style:	GetSnapshotUri document
//gsoap trt  service method-encoding:	GetSnapshotUri literal
//gsoap trt  service method-input-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri
//gsoap trt  service method-output-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse
int __trt__GetSnapshotUri(
    struct _trt__GetSnapshotUri*        trt__GetSnapshotUri,	///< Input parameter
    struct _trt__GetSnapshotUriResponse*trt__GetSnapshotUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceModes                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceModes" of service binding "MediaBinding".
A device returns the information for current video source mode and settable video
source modes of specified video source. A device that indicates a capability of
 VideoSourceModes shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceModes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSourceModes*   trt__GetVideoSourceModes,
    // output parameters:
    struct _trt__GetVideoSourceModesResponse*trt__GetVideoSourceModesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceModes(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSourceModes*   trt__GetVideoSourceModes,
    // output parameters:
    struct _trt__GetVideoSourceModesResponse*trt__GetVideoSourceModesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoSourceModes SOAP
//gsoap trt  service method-style:	GetVideoSourceModes document
//gsoap trt  service method-encoding:	GetVideoSourceModes literal
//gsoap trt  service method-input-action:	GetVideoSourceModes http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes
//gsoap trt  service method-output-action:	GetVideoSourceModes http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModesResponse
int __trt__GetVideoSourceModes(
    struct _trt__GetVideoSourceModes*   trt__GetVideoSourceModes,	///< Input parameter
    struct _trt__GetVideoSourceModesResponse*trt__GetVideoSourceModesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoSourceMode                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoSourceMode" of service binding "MediaBinding".
SetVideoSourceMode changes the media profile structure relating to video source
for the specified video source mode. A device that indicates a capability of VideoSourceModes
shall support this command. The behavior after changing the mode is not defined
in this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoSourceMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetVideoSourceMode*    trt__SetVideoSourceMode,
    // output parameters:
    struct _trt__SetVideoSourceModeResponse*trt__SetVideoSourceModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoSourceMode(
    struct soap *soap,
    // input parameters:
    struct _trt__SetVideoSourceMode*    trt__SetVideoSourceMode,
    // output parameters:
    struct _trt__SetVideoSourceModeResponse*trt__SetVideoSourceModeResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetVideoSourceMode SOAP
//gsoap trt  service method-style:	SetVideoSourceMode document
//gsoap trt  service method-encoding:	SetVideoSourceMode literal
//gsoap trt  service method-input-action:	SetVideoSourceMode http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode
//gsoap trt  service method-output-action:	SetVideoSourceMode http://www.onvif.org/ver10/media/wsdl/SetVideoSourceModeResponse
int __trt__SetVideoSourceMode(
    struct _trt__SetVideoSourceMode*    trt__SetVideoSourceMode,	///< Input parameter
    struct _trt__SetVideoSourceModeResponse*trt__SetVideoSourceModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSDs                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetOSDs" of service binding "MediaBinding".
Get the OSDs.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetOSDs"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSDs"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetOSDs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetOSDs*               trt__GetOSDs,
    // output parameters:
    struct _trt__GetOSDsResponse       *trt__GetOSDsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetOSDs(
    struct soap *soap,
    // input parameters:
    struct _trt__GetOSDs*               trt__GetOSDs,
    // output parameters:
    struct _trt__GetOSDsResponse       *trt__GetOSDsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetOSDs SOAP
//gsoap trt  service method-style:	GetOSDs document
//gsoap trt  service method-encoding:	GetOSDs literal
//gsoap trt  service method-input-action:	GetOSDs http://www.onvif.org/ver10/media/wsdl/GetOSDs
//gsoap trt  service method-output-action:	GetOSDs http://www.onvif.org/ver10/media/wsdl/GetOSDsResponse
int __trt__GetOSDs(
    struct _trt__GetOSDs*               trt__GetOSDs,	///< Input parameter
    struct _trt__GetOSDsResponse       *trt__GetOSDsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSD                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetOSD" of service binding "MediaBinding".
Get the OSD.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetOSD*                trt__GetOSD,
    // output parameters:
    struct _trt__GetOSDResponse        *trt__GetOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetOSD(
    struct soap *soap,
    // input parameters:
    struct _trt__GetOSD*                trt__GetOSD,
    // output parameters:
    struct _trt__GetOSDResponse        *trt__GetOSDResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetOSD SOAP
//gsoap trt  service method-style:	GetOSD document
//gsoap trt  service method-encoding:	GetOSD literal
//gsoap trt  service method-input-action:	GetOSD http://www.onvif.org/ver10/media/wsdl/GetOSD
//gsoap trt  service method-output-action:	GetOSD http://www.onvif.org/ver10/media/wsdl/GetOSDResponse
int __trt__GetOSD(
    struct _trt__GetOSD*                trt__GetOSD,	///< Input parameter
    struct _trt__GetOSDResponse        *trt__GetOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSDOptions                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetOSDOptions" of service binding "MediaBinding".
Get the OSD Options.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetOSDOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetOSDOptions*         trt__GetOSDOptions,
    // output parameters:
    struct _trt__GetOSDOptionsResponse *trt__GetOSDOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetOSDOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetOSDOptions*         trt__GetOSDOptions,
    // output parameters:
    struct _trt__GetOSDOptionsResponse *trt__GetOSDOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetOSDOptions SOAP
//gsoap trt  service method-style:	GetOSDOptions document
//gsoap trt  service method-encoding:	GetOSDOptions literal
//gsoap trt  service method-input-action:	GetOSDOptions http://www.onvif.org/ver10/media/wsdl/GetOSDOptions
//gsoap trt  service method-output-action:	GetOSDOptions http://www.onvif.org/ver10/media/wsdl/GetOSDOptionsResponse
int __trt__GetOSDOptions(
    struct _trt__GetOSDOptions*         trt__GetOSDOptions,	///< Input parameter
    struct _trt__GetOSDOptionsResponse *trt__GetOSDOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetOSD                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetOSD" of service binding "MediaBinding".
Set the OSD

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetOSD*                trt__SetOSD,
    // output parameters:
    struct _trt__SetOSDResponse        *trt__SetOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetOSD(
    struct soap *soap,
    // input parameters:
    struct _trt__SetOSD*                trt__SetOSD,
    // output parameters:
    struct _trt__SetOSDResponse        *trt__SetOSDResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetOSD SOAP
//gsoap trt  service method-style:	SetOSD document
//gsoap trt  service method-encoding:	SetOSD literal
//gsoap trt  service method-input-action:	SetOSD http://www.onvif.org/ver10/media/wsdl/SetOSD
//gsoap trt  service method-output-action:	SetOSD http://www.onvif.org/ver10/media/wsdl/SetOSDResponse
int __trt__SetOSD(
    struct _trt__SetOSD*                trt__SetOSD,	///< Input parameter
    struct _trt__SetOSDResponse        *trt__SetOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__CreateOSD                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__CreateOSD" of service binding "MediaBinding".
Create the OSD.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/CreateOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/CreateOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/CreateOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__CreateOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__CreateOSD*             trt__CreateOSD,
    // output parameters:
    struct _trt__CreateOSDResponse     *trt__CreateOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__CreateOSD(
    struct soap *soap,
    // input parameters:
    struct _trt__CreateOSD*             trt__CreateOSD,
    // output parameters:
    struct _trt__CreateOSDResponse     *trt__CreateOSDResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	CreateOSD SOAP
//gsoap trt  service method-style:	CreateOSD document
//gsoap trt  service method-encoding:	CreateOSD literal
//gsoap trt  service method-input-action:	CreateOSD http://www.onvif.org/ver10/media/wsdl/CreateOSD
//gsoap trt  service method-output-action:	CreateOSD http://www.onvif.org/ver10/media/wsdl/CreateOSDResponse
int __trt__CreateOSD(
    struct _trt__CreateOSD*             trt__CreateOSD,	///< Input parameter
    struct _trt__CreateOSDResponse     *trt__CreateOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__DeleteOSD                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__DeleteOSD" of service binding "MediaBinding".
Delete the OSD.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/DeleteOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/DeleteOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/DeleteOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__DeleteOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__DeleteOSD*             trt__DeleteOSD,
    // output parameters:
    struct _trt__DeleteOSDResponse     *trt__DeleteOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__DeleteOSD(
    struct soap *soap,
    // input parameters:
    struct _trt__DeleteOSD*             trt__DeleteOSD,
    // output parameters:
    struct _trt__DeleteOSDResponse     *trt__DeleteOSDResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	DeleteOSD SOAP
//gsoap trt  service method-style:	DeleteOSD document
//gsoap trt  service method-encoding:	DeleteOSD literal
//gsoap trt  service method-input-action:	DeleteOSD http://www.onvif.org/ver10/media/wsdl/DeleteOSD
//gsoap trt  service method-output-action:	DeleteOSD http://www.onvif.org/ver10/media/wsdl/DeleteOSDResponse
int __trt__DeleteOSD(
    struct _trt__DeleteOSD*             trt__DeleteOSD,	///< Input parameter
    struct _trt__DeleteOSDResponse     *trt__DeleteOSDResponse	///< Output parameter
);

/**

@page MediaBinding Binding "MediaBinding"

@section MediaBinding_policy_enablers Policy Enablers of Binding "MediaBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ReceiverBinding                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__GetServiceCapabilities" of service binding "ReceiverBinding".
Returns the capabilities of the receiver service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__GetServiceCapabilities* trv__GetServiceCapabilities,
    // output parameters:
    struct _trv__GetServiceCapabilitiesResponse*trv__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _trv__GetServiceCapabilities* trv__GetServiceCapabilities,
    // output parameters:
    struct _trv__GetServiceCapabilitiesResponse*trv__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trv  service method-style:	GetServiceCapabilities document
//gsoap trv  service method-encoding:	GetServiceCapabilities literal
//gsoap trv  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilities
//gsoap trv  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilitiesResponse
int __trv__GetServiceCapabilities(
    struct _trv__GetServiceCapabilities* trv__GetServiceCapabilities,	///< Input parameter
    struct _trv__GetServiceCapabilitiesResponse*trv__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetReceivers                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__GetReceivers" of service binding "ReceiverBinding".

				Lists all receivers currently present on a device.
This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceivers"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceivers"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiversResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__GetReceivers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__GetReceivers*          trv__GetReceivers,
    // output parameters:
    struct _trv__GetReceiversResponse  *trv__GetReceiversResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__GetReceivers(
    struct soap *soap,
    // input parameters:
    struct _trv__GetReceivers*          trv__GetReceivers,
    // output parameters:
    struct _trv__GetReceiversResponse  *trv__GetReceiversResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	GetReceivers SOAP
//gsoap trv  service method-style:	GetReceivers document
//gsoap trv  service method-encoding:	GetReceivers literal
//gsoap trv  service method-input-action:	GetReceivers http://www.onvif.org/ver10/receiver/wsdl/GetReceivers
//gsoap trv  service method-output-action:	GetReceivers http://www.onvif.org/ver10/receiver/wsdl/GetReceiversResponse
int __trv__GetReceivers(
    struct _trv__GetReceivers*          trv__GetReceivers,	///< Input parameter
    struct _trv__GetReceiversResponse  *trv__GetReceiversResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetReceiver                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__GetReceiver" of service binding "ReceiverBinding".

				Retrieves the details of a specific receiver. This
operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__GetReceiver(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__GetReceiver*           trv__GetReceiver,
    // output parameters:
    struct _trv__GetReceiverResponse   *trv__GetReceiverResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__GetReceiver(
    struct soap *soap,
    // input parameters:
    struct _trv__GetReceiver*           trv__GetReceiver,
    // output parameters:
    struct _trv__GetReceiverResponse   *trv__GetReceiverResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	GetReceiver SOAP
//gsoap trv  service method-style:	GetReceiver document
//gsoap trv  service method-encoding:	GetReceiver literal
//gsoap trv  service method-input-action:	GetReceiver http://www.onvif.org/ver10/receiver/wsdl/GetReceiver
//gsoap trv  service method-output-action:	GetReceiver http://www.onvif.org/ver10/receiver/wsdl/GetReceiverResponse
int __trv__GetReceiver(
    struct _trv__GetReceiver*           trv__GetReceiver,	///< Input parameter
    struct _trv__GetReceiverResponse   *trv__GetReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__CreateReceiver                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__CreateReceiver" of service binding "ReceiverBinding".

				Creates a new receiver. This operation is mandatory,
although the service may
				raise a fault if the receiver cannot be created.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/CreateReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/CreateReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/CreateReceiverResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__CreateReceiver(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__CreateReceiver*        trv__CreateReceiver,
    // output parameters:
    struct _trv__CreateReceiverResponse*trv__CreateReceiverResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__CreateReceiver(
    struct soap *soap,
    // input parameters:
    struct _trv__CreateReceiver*        trv__CreateReceiver,
    // output parameters:
    struct _trv__CreateReceiverResponse*trv__CreateReceiverResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	CreateReceiver SOAP
//gsoap trv  service method-style:	CreateReceiver document
//gsoap trv  service method-encoding:	CreateReceiver literal
//gsoap trv  service method-input-action:	CreateReceiver http://www.onvif.org/ver10/receiver/wsdl/CreateReceiver
//gsoap trv  service method-output-action:	CreateReceiver http://www.onvif.org/ver10/receiver/wsdl/CreateReceiverResponse
int __trv__CreateReceiver(
    struct _trv__CreateReceiver*        trv__CreateReceiver,	///< Input parameter
    struct _trv__CreateReceiverResponse*trv__CreateReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__DeleteReceiver                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__DeleteReceiver" of service binding "ReceiverBinding".

				Deletes an existing receiver. A receiver may be
deleted only if it is not
				currently in use; otherwise a fault shall be raised.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiverResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__DeleteReceiver(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__DeleteReceiver*        trv__DeleteReceiver,
    // output parameters:
    struct _trv__DeleteReceiverResponse*trv__DeleteReceiverResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__DeleteReceiver(
    struct soap *soap,
    // input parameters:
    struct _trv__DeleteReceiver*        trv__DeleteReceiver,
    // output parameters:
    struct _trv__DeleteReceiverResponse*trv__DeleteReceiverResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	DeleteReceiver SOAP
//gsoap trv  service method-style:	DeleteReceiver document
//gsoap trv  service method-encoding:	DeleteReceiver literal
//gsoap trv  service method-input-action:	DeleteReceiver http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiver
//gsoap trv  service method-output-action:	DeleteReceiver http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiverResponse
int __trv__DeleteReceiver(
    struct _trv__DeleteReceiver*        trv__DeleteReceiver,	///< Input parameter
    struct _trv__DeleteReceiverResponse*trv__DeleteReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__ConfigureReceiver                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__ConfigureReceiver" of service binding "ReceiverBinding".

				Configures an existing receiver. This operation
is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiverResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__ConfigureReceiver(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__ConfigureReceiver*     trv__ConfigureReceiver,
    // output parameters:
    struct _trv__ConfigureReceiverResponse*trv__ConfigureReceiverResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__ConfigureReceiver(
    struct soap *soap,
    // input parameters:
    struct _trv__ConfigureReceiver*     trv__ConfigureReceiver,
    // output parameters:
    struct _trv__ConfigureReceiverResponse*trv__ConfigureReceiverResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	ConfigureReceiver SOAP
//gsoap trv  service method-style:	ConfigureReceiver document
//gsoap trv  service method-encoding:	ConfigureReceiver literal
//gsoap trv  service method-input-action:	ConfigureReceiver http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiver
//gsoap trv  service method-output-action:	ConfigureReceiver http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiverResponse
int __trv__ConfigureReceiver(
    struct _trv__ConfigureReceiver*     trv__ConfigureReceiver,	///< Input parameter
    struct _trv__ConfigureReceiverResponse*trv__ConfigureReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__SetReceiverMode                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__SetReceiverMode" of service binding "ReceiverBinding".

				Sets the mode of the receiver without affecting
the rest of its configuration.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/SetReceiverMode"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/SetReceiverMode"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/SetReceiverModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__SetReceiverMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__SetReceiverMode*       trv__SetReceiverMode,
    // output parameters:
    struct _trv__SetReceiverModeResponse*trv__SetReceiverModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__SetReceiverMode(
    struct soap *soap,
    // input parameters:
    struct _trv__SetReceiverMode*       trv__SetReceiverMode,
    // output parameters:
    struct _trv__SetReceiverModeResponse*trv__SetReceiverModeResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	SetReceiverMode SOAP
//gsoap trv  service method-style:	SetReceiverMode document
//gsoap trv  service method-encoding:	SetReceiverMode literal
//gsoap trv  service method-input-action:	SetReceiverMode http://www.onvif.org/ver10/receiver/wsdl/SetReceiverMode
//gsoap trv  service method-output-action:	SetReceiverMode http://www.onvif.org/ver10/receiver/wsdl/SetReceiverModeResponse
int __trv__SetReceiverMode(
    struct _trv__SetReceiverMode*       trv__SetReceiverMode,	///< Input parameter
    struct _trv__SetReceiverModeResponse*trv__SetReceiverModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetReceiverState                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__GetReceiverState" of service binding "ReceiverBinding".

				Determines whether the receiver is currently disconnected,
connected or
				attempting to connect.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverState"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverState"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__GetReceiverState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__GetReceiverState*      trv__GetReceiverState,
    // output parameters:
    struct _trv__GetReceiverStateResponse*trv__GetReceiverStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__GetReceiverState(
    struct soap *soap,
    // input parameters:
    struct _trv__GetReceiverState*      trv__GetReceiverState,
    // output parameters:
    struct _trv__GetReceiverStateResponse*trv__GetReceiverStateResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	GetReceiverState SOAP
//gsoap trv  service method-style:	GetReceiverState document
//gsoap trv  service method-encoding:	GetReceiverState literal
//gsoap trv  service method-input-action:	GetReceiverState http://www.onvif.org/ver10/receiver/wsdl/GetReceiverState
//gsoap trv  service method-output-action:	GetReceiverState http://www.onvif.org/ver10/receiver/wsdl/GetReceiverStateResponse
int __trv__GetReceiverState(
    struct _trv__GetReceiverState*      trv__GetReceiverState,	///< Input parameter
    struct _trv__GetReceiverStateResponse*trv__GetReceiverStateResponse	///< Output parameter
);

/**

@page ReceiverBinding Binding "ReceiverBinding"

@section ReceiverBinding_policy_enablers Policy Enablers of Binding "ReceiverBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   SearchBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetServiceCapabilities" of service binding "SearchBinding".
Returns the capabilities of the search service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tse__GetServiceCapabilities* tse__GetServiceCapabilities,
    // output parameters:
    struct _tse__GetServiceCapabilitiesResponse*tse__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tse__GetServiceCapabilities* tse__GetServiceCapabilities,
    // output parameters:
    struct _tse__GetServiceCapabilitiesResponse*tse__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tse  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tse  service method-style:	GetServiceCapabilities document
//gsoap tse  service method-encoding:	GetServiceCapabilities literal
//gsoap tse  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilities
//gsoap tse  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilitiesResponse
int __tse__GetServiceCapabilities(
    struct _tse__GetServiceCapabilities* tse__GetServiceCapabilities,	///< Input parameter
    struct _tse__GetServiceCapabilitiesResponse*tse__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetRecordingSummary                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetRecordingSummary" of service binding "SearchBinding".
GetRecordingSummary is used to get a summary description of all recorded data. This
				operation is mandatory to support for a device implementing
the recording search service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSummary"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSummary"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSummaryResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetRecordingSummary(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tse__GetRecordingSummary*   tse__GetRecordingSummary,
    // output parameters:
    struct _tse__GetRecordingSummaryResponse*tse__GetRecordingSummaryResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetRecordingSummary(
    struct soap *soap,
    // input parameters:
    struct _tse__GetRecordingSummary*   tse__GetRecordingSummary,
    // output parameters:
    struct _tse__GetRecordingSummaryResponse*tse__GetRecordingSummaryResponse
  );
@endcode

*/

//gsoap tse  service method-protocol:	GetRecordingSummary SOAP
//gsoap tse  service method-style:	GetRecordingSummary document
//gsoap tse  service method-encoding:	GetRecordingSummary literal
//gsoap tse  service method-input-action:	GetRecordingSummary http://www.onvif.org/ver10/search/wsdl/GetRecordingSummary
//gsoap tse  service method-output-action:	GetRecordingSummary http://www.onvif.org/ver10/search/wsdl/GetRecordingSummaryResponse
int __tse__GetRecordingSummary(
    struct _tse__GetRecordingSummary*   tse__GetRecordingSummary,	///< Input parameter
    struct _tse__GetRecordingSummaryResponse*tse__GetRecordingSummaryResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetRecordingInformation                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetRecordingInformation" of service binding "SearchBinding".
Returns information about a single Recording specified by a RecordingToken. This
operation
				is mandatory to support for a device implementing
the recording search service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingInformation"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingInformation"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetRecordingInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tse__GetRecordingInformation* tse__GetRecordingInformation,
    // output parameters:
    struct _tse__GetRecordingInformationResponse*tse__GetRecordingInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetRecordingInformation(
    struct soap *soap,
    // input parameters:
    struct _tse__GetRecordingInformation* tse__GetRecordingInformation,
    // output parameters:
    struct _tse__GetRecordingInformationResponse*tse__GetRecordingInformationResponse
  );
@endcode

*/

//gsoap tse  service method-protocol:	GetRecordingInformation SOAP
//gsoap tse  service method-style:	GetRecordingInformation document
//gsoap tse  service method-encoding:	GetRecordingInformation literal
//gsoap tse  service method-input-action:	GetRecordingInformation http://www.onvif.org/ver10/search/wsdl/GetRecordingInformation
//gsoap tse  service method-output-action:	GetRecordingInformation http://www.onvif.org/ver10/search/wsdl/GetRecordingInformationResponse
int __tse__GetRecordingInformation(
    struct _tse__GetRecordingInformation* tse__GetRecordingInformation,	///< Input parameter
    struct _tse__GetRecordingInformationResponse*tse__GetRecordingInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetMediaAttributes                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetMediaAttributes" of service binding "SearchBinding".
Returns a set of media attributes for all tracks of the specified recordings at
a specified point
				in time. Clients using this operation shall be able
to use it as a non blocking operation. A
				device shall set the starttime and endtime of the
MediaAttributes structure to equal values if
				calculating this range would causes this operation
to block. See MediaAttributes structure for
				more information. This operation is mandatory to
support for a device implementing the
				recording search service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetMediaAttributes"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetMediaAttributes"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetMediaAttributesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetMediaAttributes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tse__GetMediaAttributes*    tse__GetMediaAttributes,
    // output parameters:
    struct _tse__GetMediaAttributesResponse*tse__GetMediaAttributesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetMediaAttributes(
    struct soap *soap,
    // input parameters:
    struct _tse__GetMediaAttributes*    tse__GetMediaAttributes,
    // output parameters:
    struct _tse__GetMediaAttributesResponse*tse__GetMediaAttributesResponse
  );
@endcode

*/

//gsoap tse  service method-protocol:	GetMediaAttributes SOAP
//gsoap tse  service method-style:	GetMediaAttributes document
//gsoap tse  service method-encoding:	GetMediaAttributes literal
//gsoap tse  service method-input-action:	GetMediaAttributes http://www.onvif.org/ver10/search/wsdl/GetMediaAttributes
//gsoap tse  service method-output-action:	GetMediaAttributes http://www.onvif.org/ver10/search/wsdl/GetMediaAttributesResponse
int __tse__GetMediaAttributes(
    struct _tse__GetMediaAttributes*    tse__GetMediaAttributes,	///< Input parameter
    struct _tse__GetMediaAttributesResponse*tse__GetMediaAttributesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__FindRecordings                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__FindRecordings" of service binding "SearchBinding".
FindRecordings starts a search session, looking for recordings that matches the
scope (See
				20.2.4) defined in the request. Results from the
search are acquired using the
				GetRecordingSearchResults request, specifying the
search token returned from this request.
				The device shall continue searching until one of
the following occurs:<ul>
					<li>The entire time range from StartPoint
to EndPoint has been searched through.</li>
					<li>The total number of matches has been
found, defined by the MaxMatches parameter.</li>
					<li>The session has been ended by a client
EndSession request.</li>
					<li>The session has been ended because KeepAliveTime
since the last request related to
				this session has expired.</li>
				</ul>
				The order of the results is undefined, to allow
the device to return results in any order they
				are found. This operation is mandatory to support
for a device implementing the recording
				search service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/FindRecordings"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/FindRecordings"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/FindRecordingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__FindRecordings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tse__FindRecordings*        tse__FindRecordings,
    // output parameters:
    struct _tse__FindRecordingsResponse*tse__FindRecordingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__FindRecordings(
    struct soap *soap,
    // input parameters:
    struct _tse__FindRecordings*        tse__FindRecordings,
    // output parameters:
    struct _tse__FindRecordingsResponse*tse__FindRecordingsResponse
  );
@endcode

*/

//gsoap tse  service method-protocol:	FindRecordings SOAP
//gsoap tse  service method-style:	FindRecordings document
//gsoap tse  service method-encoding:	FindRecordings literal
//gsoap tse  service method-input-action:	FindRecordings http://www.onvif.org/ver10/search/wsdl/FindRecordings
//gsoap tse  service method-output-action:	FindRecordings http://www.onvif.org/ver10/search/wsdl/FindRecordingsResponse
int __tse__FindRecordings(
    struct _tse__FindRecordings*        tse__FindRecordings,	///< Input parameter
    struct _tse__FindRecordingsResponse*tse__FindRecordingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetRecordingSearchResults                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetRecordingSearchResults" of service binding "SearchBinding".
GetRecordingSearchResults acquires the results from a recording search session previously
				initiated by a FindRecordings operation. The response
shall not include results already
				returned in previous requests for the same session.
If MaxResults is specified, the response
				shall not contain more than MaxResults results.
The number of results relates to the number of recordings. 
				For viewing individual recorded data for a signal
track use the FindEvents method.<br/>
				GetRecordingSearchResults shall block until:<ul>
					<li>
				MaxResults results are available for the response
if MaxResults is specified.</li>
					<li>MinResults results are available for
the response if MinResults is specified.</li>
					<li>WaitTime has expired.</li>
					<li>Search is completed or stopped.</li>
				</ul>
				This operation is mandatory to support for a device
implementing the recording search service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResults"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResults"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResultsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetRecordingSearchResults(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tse__GetRecordingSearchResults* tse__GetRecordingSearchResults,
    // output parameters:
    struct _tse__GetRecordingSearchResultsResponse*tse__GetRecordingSearchResultsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetRecordingSearchResults(
    struct soap *soap,
    // input parameters:
    struct _tse__GetRecordingSearchResults* tse__GetRecordingSearchResults,
    // output parameters:
    struct _tse__GetRecordingSearchResultsResponse*tse__GetRecordingSearchResultsResponse
  );
@endcode

*/

//gsoap tse  service method-protocol:	GetRecordingSearchResults SOAP
//gsoap tse  service method-style:	GetRecordingSearchResults document
//gsoap tse  service method-encoding:	GetRecordingSearchResults literal
//gsoap tse  service method-input-action:	GetRecordingSearchResults http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResults
//gsoap tse  service method-output-action:	GetRecordingSearchResults http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResultsResponse
int __tse__GetRecordingSearchResults(
    struct _tse__GetRecordingSearchResults* tse__GetRecordingSearchResults,	///< Input parameter
    struct _tse__GetRecordingSearchResultsResponse*tse__GetRecordingSearchResultsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__FindEvents                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__FindEvents" of service binding "SearchBinding".
FindEvents starts a search session, looking for recording events (in the scope that

				matches the search filter defined in the request.
Results from the search are
				acquired using the GetEventSearchResults request,
specifying the search token returned from
				this request.<br/>
				The device shall continue searching until one of
the following occurs:<ul>
					<li>
				The entire time range from StartPoint to EndPoint
has been searched through.</li>
					<li>The total number of matches has been
found, defined by the MaxMatches parameter.</li>
					<li>The session has been ended by a client
EndSession request.</li>
					<li>The session has been ended because KeepAliveTime
since the last request related to
				this session has expired.</li>
				</ul>
				Results shall be ordered by time, ascending in case
of forward search, or descending in case
				of backward search. This operation is mandatory
to support for a device implementing the
				recording search service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/FindEvents"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/FindEvents"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/FindEventsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__FindEvents(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tse__FindEvents*            tse__FindEvents,
    // output parameters:
    struct _tse__FindEventsResponse    *tse__FindEventsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__FindEvents(
    struct soap *soap,
    // input parameters:
    struct _tse__FindEvents*            tse__FindEvents,
    // output parameters:
    struct _tse__FindEventsResponse    *tse__FindEventsResponse
  );
@endcode

*/

//gsoap tse  service method-protocol:	FindEvents SOAP
//gsoap tse  service method-style:	FindEvents document
//gsoap tse  service method-encoding:	FindEvents literal
//gsoap tse  service method-input-action:	FindEvents http://www.onvif.org/ver10/search/wsdl/FindEvents
//gsoap tse  service method-output-action:	FindEvents http://www.onvif.org/ver10/search/wsdl/FindEventsResponse
int __tse__FindEvents(
    struct _tse__FindEvents*            tse__FindEvents,	///< Input parameter
    struct _tse__FindEventsResponse    *tse__FindEventsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetEventSearchResults                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetEventSearchResults" of service binding "SearchBinding".
GetEventSearchResults acquires the results from a recording event search session
previously
				initiated by a FindEvents operation. The response
shall not include results already returned in
				previous requests for the same session. If MaxResults
is specified, the response shall not
				contain more than MaxResults results.<br/>
				GetEventSearchResults shall block until:<ul>
					<li>
				MaxResults results are available for the response
if MaxResults is specified.</li>
					<li>MinResults results are available for
the response if MinResults is specified.</li>
					<li>WaitTime has expired.</li>
					<li>Search is completed or stopped.</li>
				</ul>
				This operation is mandatory to support for a device
implementing the recording search service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetEventSearchResults"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetEventSearchResults"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetEventSearchResultsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetEventSearchResults(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tse__GetEventSearchResults* tse__GetEventSearchResults,
    // output parameters:
    struct _tse__GetEventSearchResultsResponse*tse__GetEventSearchResultsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetEventSearchResults(
    struct soap *soap,
    // input parameters:
    struct _tse__GetEventSearchResults* tse__GetEventSearchResults,
    // output parameters:
    struct _tse__GetEventSearchResultsResponse*tse__GetEventSearchResultsResponse
  );
@endcode

*/

//gsoap tse  service method-protocol:	GetEventSearchResults SOAP
//gsoap tse  service method-style:	GetEventSearchResults document
//gsoap tse  service method-encoding:	GetEventSearchResults literal
//gsoap tse  service method-input-action:	GetEventSearchResults http://www.onvif.org/ver10/search/wsdl/GetEventSearchResults
//gsoap tse  service method-output-action:	GetEventSearchResults http://www.onvif.org/ver10/search/wsdl/GetEventSearchResultsResponse
int __tse__GetEventSearchResults(
    struct _tse__GetEventSearchResults* tse__GetEventSearchResults,	///< Input parameter
    struct _tse__GetEventSearchResultsResponse*tse__GetEventSearchResultsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__FindPTZPosition                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__FindPTZPosition" of service binding "SearchBinding".
FindPTZPosition starts a search session, looking for ptz positions in the scope
(See 20.2.4)
				that matches the search filter defined in the request.
Results from the search are acquired
				using the GetPTZPositionSearchResults request, specifying
the search token returned from
				this request.<br/>
				The device shall continue searching until one of
the following occurs:<ul>
					<li>
				The entire time range from StartPoint to EndPoint
has been searched through.</li>
					<li>The total number of matches has been
found, defined by the MaxMatches parameter.</li>
					<li>The session has been ended by a client
EndSession request.</li>
					<li>The session has been ended because KeepAliveTime
since the last request related to
				this session has expired.</li>
				</ul>
				This operation is mandatory to support whenever
CanContainPTZ is true for any metadata
				track in any recording on the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/FindPTZPosition"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/FindPTZPosition"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/FindPTZPositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__FindPTZPosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tse__FindPTZPosition*       tse__FindPTZPosition,
    // output parameters:
    struct _tse__FindPTZPositionResponse*tse__FindPTZPositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__FindPTZPosition(
    struct soap *soap,
    // input parameters:
    struct _tse__FindPTZPosition*       tse__FindPTZPosition,
    // output parameters:
    struct _tse__FindPTZPositionResponse*tse__FindPTZPositionResponse
  );
@endcode

*/

//gsoap tse  service method-protocol:	FindPTZPosition SOAP
//gsoap tse  service method-style:	FindPTZPosition document
//gsoap tse  service method-encoding:	FindPTZPosition literal
//gsoap tse  service method-input-action:	FindPTZPosition http://www.onvif.org/ver10/search/wsdl/FindPTZPosition
//gsoap tse  service method-output-action:	FindPTZPosition http://www.onvif.org/ver10/search/wsdl/FindPTZPositionResponse
int __tse__FindPTZPosition(
    struct _tse__FindPTZPosition*       tse__FindPTZPosition,	///< Input parameter
    struct _tse__FindPTZPositionResponse*tse__FindPTZPositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetPTZPositionSearchResults                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetPTZPositionSearchResults" of service binding "SearchBinding".
GetPTZPositionSearchResults acquires the results from a ptz position search session
				previously initiated by a FindPTZPosition operation.
The response shall not include results
				already returned in previous requests for the same
session. If MaxResults is specified, the
				response shall not contain more than MaxResults
results.<br/>
				GetPTZPositionSearchResults shall block until:<ul>
					<li>
				MaxResults results are available for the response
if MaxResults is specified.</li>
					<li>MinResults results are available for
the response if MinResults is specified.</li>
					<li>WaitTime has expired.</li>
					<li>Search is completed or stopped.</li>
				</ul>
				This operation is mandatory to support whenever
CanContainPTZ is true for any metadata
				track in any recording on the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResults"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResults"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResultsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetPTZPositionSearchResults(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tse__GetPTZPositionSearchResults* tse__GetPTZPositionSearchResults,
    // output parameters:
    struct _tse__GetPTZPositionSearchResultsResponse*tse__GetPTZPositionSearchResultsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetPTZPositionSearchResults(
    struct soap *soap,
    // input parameters:
    struct _tse__GetPTZPositionSearchResults* tse__GetPTZPositionSearchResults,
    // output parameters:
    struct _tse__GetPTZPositionSearchResultsResponse*tse__GetPTZPositionSearchResultsResponse
  );
@endcode

*/

//gsoap tse  service method-protocol:	GetPTZPositionSearchResults SOAP
//gsoap tse  service method-style:	GetPTZPositionSearchResults document
//gsoap tse  service method-encoding:	GetPTZPositionSearchResults literal
//gsoap tse  service method-input-action:	GetPTZPositionSearchResults http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResults
//gsoap tse  service method-output-action:	GetPTZPositionSearchResults http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResultsResponse
int __tse__GetPTZPositionSearchResults(
    struct _tse__GetPTZPositionSearchResults* tse__GetPTZPositionSearchResults,	///< Input parameter
    struct _tse__GetPTZPositionSearchResultsResponse*tse__GetPTZPositionSearchResultsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetSearchState                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetSearchState" of service binding "SearchBinding".
GetSearchState returns the current state of the specified search session. This command
is deprecated .

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetSearchState"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetSearchState"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetSearchStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetSearchState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tse__GetSearchState*        tse__GetSearchState,
    // output parameters:
    struct _tse__GetSearchStateResponse*tse__GetSearchStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetSearchState(
    struct soap *soap,
    // input parameters:
    struct _tse__GetSearchState*        tse__GetSearchState,
    // output parameters:
    struct _tse__GetSearchStateResponse*tse__GetSearchStateResponse
  );
@endcode

*/

//gsoap tse  service method-protocol:	GetSearchState SOAP
//gsoap tse  service method-style:	GetSearchState document
//gsoap tse  service method-encoding:	GetSearchState literal
//gsoap tse  service method-input-action:	GetSearchState http://www.onvif.org/ver10/search/wsdl/GetSearchState
//gsoap tse  service method-output-action:	GetSearchState http://www.onvif.org/ver10/search/wsdl/GetSearchStateResponse
int __tse__GetSearchState(
    struct _tse__GetSearchState*        tse__GetSearchState,	///< Input parameter
    struct _tse__GetSearchStateResponse*tse__GetSearchStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__EndSearch                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__EndSearch" of service binding "SearchBinding".
EndSearch stops and ongoing search session, causing any blocking result request
to return
				and the SearchToken to become invalid. If the search
was interrupted before completion, the
				point in time that the search had reached shall
be returned. If the search had not yet begun,
				the StartPoint shall be returned. If the search
was completed the original EndPoint supplied
				by the Find operation shall be returned. When issuing
EndSearch on a FindRecordings request the 
				EndPoint is undefined and shall not be used since
the FindRecordings request doesn't have 
				StartPoint/EndPoint. This operation is mandatory
to support for a device implementing the 
				recording search service. 
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/EndSearch"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/EndSearch"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/EndSearchResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__EndSearch(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tse__EndSearch*             tse__EndSearch,
    // output parameters:
    struct _tse__EndSearchResponse     *tse__EndSearchResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__EndSearch(
    struct soap *soap,
    // input parameters:
    struct _tse__EndSearch*             tse__EndSearch,
    // output parameters:
    struct _tse__EndSearchResponse     *tse__EndSearchResponse
  );
@endcode

*/

//gsoap tse  service method-protocol:	EndSearch SOAP
//gsoap tse  service method-style:	EndSearch document
//gsoap tse  service method-encoding:	EndSearch literal
//gsoap tse  service method-input-action:	EndSearch http://www.onvif.org/ver10/search/wsdl/EndSearch
//gsoap tse  service method-output-action:	EndSearch http://www.onvif.org/ver10/search/wsdl/EndSearchResponse
int __tse__EndSearch(
    struct _tse__EndSearch*             tse__EndSearch,	///< Input parameter
    struct _tse__EndSearchResponse     *tse__EndSearchResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__FindMetadata                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__FindMetadata" of service binding "SearchBinding".
FindMetadata starts a search session, looking for metadata in the scope (See 20.2.4)
that
				matches the search filter defined in the request.
Results from the search are acquired using
				the GetMetadataSearchResults request, specifying
the search token returned from this
				request.<br/>
				The device shall continue searching until one of
the following occurs:<ul>
					<li>
				The entire time range from StartPoint to EndPoint
has been searched through.</li>
					<li>The total number of matches has been
found, defined by the MaxMatches parameter.</li>
					<li>The session has been ended by a client
EndSession request.</li>
					<li>The session has been ended because KeepAliveTime
since the last request related to
				this session has expired.</li>
				</ul>
				This operation is mandatory to support if the MetaDataSearch
capability is set to true in the
				SearchCapabilities structure return by the GetCapabilities
command in the Device service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/FindMetadata"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/FindMetadata"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/FindMetadataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__FindMetadata(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tse__FindMetadata*          tse__FindMetadata,
    // output parameters:
    struct _tse__FindMetadataResponse  *tse__FindMetadataResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__FindMetadata(
    struct soap *soap,
    // input parameters:
    struct _tse__FindMetadata*          tse__FindMetadata,
    // output parameters:
    struct _tse__FindMetadataResponse  *tse__FindMetadataResponse
  );
@endcode

*/

//gsoap tse  service method-protocol:	FindMetadata SOAP
//gsoap tse  service method-style:	FindMetadata document
//gsoap tse  service method-encoding:	FindMetadata literal
//gsoap tse  service method-input-action:	FindMetadata http://www.onvif.org/ver10/search/wsdl/FindMetadata
//gsoap tse  service method-output-action:	FindMetadata http://www.onvif.org/ver10/search/wsdl/FindMetadataResponse
int __tse__FindMetadata(
    struct _tse__FindMetadata*          tse__FindMetadata,	///< Input parameter
    struct _tse__FindMetadataResponse  *tse__FindMetadataResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetMetadataSearchResults                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetMetadataSearchResults" of service binding "SearchBinding".
GetMetadataSearchResults acquires the results from a recording search session previously
				initiated by a FindMetadata operation. The response
shall not include results already returned
				in previous requests for the same session. If MaxResults
is specified, the response shall not
				contain more than MaxResults results.<br/>
				GetMetadataSearchResults shall block until:<ul>
					<li>
				MaxResults results are available for the response
if MaxResults is specified.</li>
					<li>MinResults results are available for
the response if MinResults is specified.</li>
					<li>WaitTime has expired.</li>
					<li>Search is completed or stopped.</li>
				</ul>
				This operation is mandatory to support if the MetaDataSearch
capability is set to true in the
				SearchCapabilities structure return by the GetCapabilities
command in the Device service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResults"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResults"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResultsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetMetadataSearchResults(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tse__GetMetadataSearchResults* tse__GetMetadataSearchResults,
    // output parameters:
    struct _tse__GetMetadataSearchResultsResponse*tse__GetMetadataSearchResultsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetMetadataSearchResults(
    struct soap *soap,
    // input parameters:
    struct _tse__GetMetadataSearchResults* tse__GetMetadataSearchResults,
    // output parameters:
    struct _tse__GetMetadataSearchResultsResponse*tse__GetMetadataSearchResultsResponse
  );
@endcode

*/

//gsoap tse  service method-protocol:	GetMetadataSearchResults SOAP
//gsoap tse  service method-style:	GetMetadataSearchResults document
//gsoap tse  service method-encoding:	GetMetadataSearchResults literal
//gsoap tse  service method-input-action:	GetMetadataSearchResults http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResults
//gsoap tse  service method-output-action:	GetMetadataSearchResults http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResultsResponse
int __tse__GetMetadataSearchResults(
    struct _tse__GetMetadataSearchResults* tse__GetMetadataSearchResults,	///< Input parameter
    struct _tse__GetMetadataSearchResultsResponse*tse__GetMetadataSearchResultsResponse	///< Output parameter
);

/**

@page SearchBinding Binding "SearchBinding"

@section SearchBinding_policy_enablers Policy Enablers of Binding "SearchBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section tev Top-level root elements of schema "http://www.onvif.org/ver10/events/wsdl"

  - <GetServiceCapabilities> @ref _tev__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetServiceCapabilities(struct soap*, struct _tev__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetServiceCapabilities(struct soap*, struct _tev__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _tev__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetServiceCapabilitiesResponse(struct soap*, struct _tev__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetServiceCapabilitiesResponse(struct soap*, struct _tev__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <CreatePullPointSubscription> @ref _tev__CreatePullPointSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__CreatePullPointSubscription(struct soap*, struct _tev__CreatePullPointSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__CreatePullPointSubscription(struct soap*, struct _tev__CreatePullPointSubscription*);
    @endcode

  - <CreatePullPointSubscriptionResponse> @ref _tev__CreatePullPointSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__CreatePullPointSubscriptionResponse(struct soap*, struct _tev__CreatePullPointSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__CreatePullPointSubscriptionResponse(struct soap*, struct _tev__CreatePullPointSubscriptionResponse*);
    @endcode

  - <PullMessages> @ref _tev__PullMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessages(struct soap*, struct _tev__PullMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessages(struct soap*, struct _tev__PullMessages*);
    @endcode

  - <PullMessagesResponse> @ref _tev__PullMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessagesResponse(struct soap*, struct _tev__PullMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessagesResponse(struct soap*, struct _tev__PullMessagesResponse*);
    @endcode

  - <PullMessagesFaultResponse> @ref _tev__PullMessagesFaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessagesFaultResponse(struct soap*, struct _tev__PullMessagesFaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessagesFaultResponse(struct soap*, struct _tev__PullMessagesFaultResponse*);
    @endcode

  - <Seek> @ref _tev__Seek
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__Seek(struct soap*, struct _tev__Seek*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__Seek(struct soap*, struct _tev__Seek*);
    @endcode

  - <SeekResponse> @ref _tev__SeekResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SeekResponse(struct soap*, struct _tev__SeekResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SeekResponse(struct soap*, struct _tev__SeekResponse*);
    @endcode

  - <SetSynchronizationPoint> @ref _tev__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SetSynchronizationPoint(struct soap*, struct _tev__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SetSynchronizationPoint(struct soap*, struct _tev__SetSynchronizationPoint*);
    @endcode

  - <SetSynchronizationPointResponse> @ref _tev__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SetSynchronizationPointResponse(struct soap*, struct _tev__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SetSynchronizationPointResponse(struct soap*, struct _tev__SetSynchronizationPointResponse*);
    @endcode

  - <GetEventProperties> @ref _tev__GetEventProperties
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventProperties(struct soap*, struct _tev__GetEventProperties*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventProperties(struct soap*, struct _tev__GetEventProperties*);
    @endcode

  - <GetEventPropertiesResponse> @ref _tev__GetEventPropertiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventPropertiesResponse(struct soap*, struct _tev__GetEventPropertiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventPropertiesResponse(struct soap*, struct _tev__GetEventPropertiesResponse*);
    @endcode

@section default Top-level root elements of schema ""

@section wsrfrw Top-level root elements of schema "http://docs.oasis-open.org/wsrf/rw-2"

@section wsrfr Top-level root elements of schema "http://docs.oasis-open.org/wsrf/r-2"

  - <ResourceUnknownFault> (use wsdl2h option -g to auto-generate)

  - <ResourceUnavailableFault> (use wsdl2h option -g to auto-generate)

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <BaseFault> (use wsdl2h option -g to auto-generate)

@section wsnt Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <TopicExpression> (use wsdl2h option -g to auto-generate)

  - <FixedTopicSet> (use wsdl2h option -g to auto-generate)

  - <TopicExpressionDialect> (use wsdl2h option -g to auto-generate)

  - <NotificationProducerRP> @ref _wsnt__NotificationProducerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP*);
    @endcode

  - <ConsumerReference> (use wsdl2h option -g to auto-generate)

  - <Filter> (use wsdl2h option -g to auto-generate)

  - <SubscriptionPolicy> (use wsdl2h option -g to auto-generate)

  - <CreationTime> (use wsdl2h option -g to auto-generate)

  - <SubscriptionManagerRP> @ref _wsnt__SubscriptionManagerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP*);
    @endcode

  - <SubscriptionReference> (use wsdl2h option -g to auto-generate)

  - <Topic> (use wsdl2h option -g to auto-generate)

  - <ProducerReference> (use wsdl2h option -g to auto-generate)

  - <NotificationMessage> (use wsdl2h option -g to auto-generate)

  - <Notify> @ref _wsnt__Notify
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Notify(struct soap*, struct _wsnt__Notify*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Notify(struct soap*, struct _wsnt__Notify*);
    @endcode

  - <CurrentTime> (use wsdl2h option -g to auto-generate)

  - <TerminationTime> (use wsdl2h option -g to auto-generate)

  - <ProducerProperties> (use wsdl2h option -g to auto-generate)

  - <MessageContent> (use wsdl2h option -g to auto-generate)

  - <UseRaw> @ref _wsnt__UseRaw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw*);
    @endcode

  - <Subscribe> @ref _wsnt__Subscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe*);
    @endcode

  - <SubscribeResponse> @ref _wsnt__SubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse*);
    @endcode

  - <GetCurrentMessage> @ref _wsnt__GetCurrentMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage*);
    @endcode

  - <GetCurrentMessageResponse> @ref _wsnt__GetCurrentMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse*);
    @endcode

  - <SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate)

  - <InvalidFilterFault> (use wsdl2h option -g to auto-generate)

  - <TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate)

  - <InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate)

  - <TopicNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate)

  - <InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate)

  - <InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate)

  - <UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate)

  - <GetMessages> @ref _wsnt__GetMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages*);
    @endcode

  - <GetMessagesResponse> @ref _wsnt__GetMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse*);
    @endcode

  - <DestroyPullPoint> @ref _wsnt__DestroyPullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint*);
    @endcode

  - <DestroyPullPointResponse> @ref _wsnt__DestroyPullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse*);
    @endcode

  - <UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate)

  - <UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate)

  - <CreatePullPoint> @ref _wsnt__CreatePullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint*);
    @endcode

  - <CreatePullPointResponse> @ref _wsnt__CreatePullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse*);
    @endcode

  - <UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate)

  - <Renew> @ref _wsnt__Renew
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Renew(struct soap*, struct _wsnt__Renew*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Renew(struct soap*, struct _wsnt__Renew*);
    @endcode

  - <RenewResponse> @ref _wsnt__RenewResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse*);
    @endcode

  - <UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <Unsubscribe> @ref _wsnt__Unsubscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe*);
    @endcode

  - <UnsubscribeResponse> @ref _wsnt__UnsubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse*);
    @endcode

  - <UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate)

  - <PauseSubscription> @ref _wsnt__PauseSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription*);
    @endcode

  - <PauseSubscriptionResponse> @ref _wsnt__PauseSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse*);
    @endcode

  - <ResumeSubscription> @ref _wsnt__ResumeSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription*);
    @endcode

  - <ResumeSubscriptionResponse> @ref _wsnt__ResumeSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse*);
    @endcode

  - <PauseFailedFault> (use wsdl2h option -g to auto-generate)

  - <ResumeFailedFault> (use wsdl2h option -g to auto-generate)

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <TopicNamespace> (use wsdl2h option -g to auto-generate)

  - <TopicSet> (use wsdl2h option -g to auto-generate)

@section tls Top-level root elements of schema "http://www.onvif.org/ver10/display/wsdl"

  - <GetServiceCapabilities> @ref _tls__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__GetServiceCapabilities(struct soap*, struct _tls__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__GetServiceCapabilities(struct soap*, struct _tls__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _tls__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__GetServiceCapabilitiesResponse(struct soap*, struct _tls__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__GetServiceCapabilitiesResponse(struct soap*, struct _tls__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <GetLayout> @ref _tls__GetLayout
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__GetLayout(struct soap*, struct _tls__GetLayout*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__GetLayout(struct soap*, struct _tls__GetLayout*);
    @endcode

  - <GetLayoutResponse> @ref _tls__GetLayoutResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__GetLayoutResponse(struct soap*, struct _tls__GetLayoutResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__GetLayoutResponse(struct soap*, struct _tls__GetLayoutResponse*);
    @endcode

  - <SetLayout> @ref _tls__SetLayout
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__SetLayout(struct soap*, struct _tls__SetLayout*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__SetLayout(struct soap*, struct _tls__SetLayout*);
    @endcode

  - <SetLayoutResponse> @ref _tls__SetLayoutResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__SetLayoutResponse(struct soap*, struct _tls__SetLayoutResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__SetLayoutResponse(struct soap*, struct _tls__SetLayoutResponse*);
    @endcode

  - <GetDisplayOptions> @ref _tls__GetDisplayOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__GetDisplayOptions(struct soap*, struct _tls__GetDisplayOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__GetDisplayOptions(struct soap*, struct _tls__GetDisplayOptions*);
    @endcode

  - <GetDisplayOptionsResponse> @ref _tls__GetDisplayOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__GetDisplayOptionsResponse(struct soap*, struct _tls__GetDisplayOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__GetDisplayOptionsResponse(struct soap*, struct _tls__GetDisplayOptionsResponse*);
    @endcode

  - <GetPaneConfigurations> @ref _tls__GetPaneConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__GetPaneConfigurations(struct soap*, struct _tls__GetPaneConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__GetPaneConfigurations(struct soap*, struct _tls__GetPaneConfigurations*);
    @endcode

  - <GetPaneConfigurationsResponse> @ref _tls__GetPaneConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__GetPaneConfigurationsResponse(struct soap*, struct _tls__GetPaneConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__GetPaneConfigurationsResponse(struct soap*, struct _tls__GetPaneConfigurationsResponse*);
    @endcode

  - <GetPaneConfiguration> @ref _tls__GetPaneConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__GetPaneConfiguration(struct soap*, struct _tls__GetPaneConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__GetPaneConfiguration(struct soap*, struct _tls__GetPaneConfiguration*);
    @endcode

  - <GetPaneConfigurationResponse> @ref _tls__GetPaneConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__GetPaneConfigurationResponse(struct soap*, struct _tls__GetPaneConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__GetPaneConfigurationResponse(struct soap*, struct _tls__GetPaneConfigurationResponse*);
    @endcode

  - <SetPaneConfigurations> @ref _tls__SetPaneConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__SetPaneConfigurations(struct soap*, struct _tls__SetPaneConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__SetPaneConfigurations(struct soap*, struct _tls__SetPaneConfigurations*);
    @endcode

  - <SetPaneConfigurationsResponse> @ref _tls__SetPaneConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__SetPaneConfigurationsResponse(struct soap*, struct _tls__SetPaneConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__SetPaneConfigurationsResponse(struct soap*, struct _tls__SetPaneConfigurationsResponse*);
    @endcode

  - <SetPaneConfiguration> @ref _tls__SetPaneConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__SetPaneConfiguration(struct soap*, struct _tls__SetPaneConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__SetPaneConfiguration(struct soap*, struct _tls__SetPaneConfiguration*);
    @endcode

  - <SetPaneConfigurationResponse> @ref _tls__SetPaneConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__SetPaneConfigurationResponse(struct soap*, struct _tls__SetPaneConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__SetPaneConfigurationResponse(struct soap*, struct _tls__SetPaneConfigurationResponse*);
    @endcode

  - <CreatePaneConfiguration> @ref _tls__CreatePaneConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__CreatePaneConfiguration(struct soap*, struct _tls__CreatePaneConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__CreatePaneConfiguration(struct soap*, struct _tls__CreatePaneConfiguration*);
    @endcode

  - <CreatePaneConfigurationResponse> @ref _tls__CreatePaneConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__CreatePaneConfigurationResponse(struct soap*, struct _tls__CreatePaneConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__CreatePaneConfigurationResponse(struct soap*, struct _tls__CreatePaneConfigurationResponse*);
    @endcode

  - <DeletePaneConfiguration> @ref _tls__DeletePaneConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__DeletePaneConfiguration(struct soap*, struct _tls__DeletePaneConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__DeletePaneConfiguration(struct soap*, struct _tls__DeletePaneConfiguration*);
    @endcode

  - <DeletePaneConfigurationResponse> @ref _tls__DeletePaneConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tls__DeletePaneConfigurationResponse(struct soap*, struct _tls__DeletePaneConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tls__DeletePaneConfigurationResponse(struct soap*, struct _tls__DeletePaneConfigurationResponse*);
    @endcode

@section tt Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <VideoSourceConfiguration> (use wsdl2h option -g to auto-generate)

  - <AudioSourceConfiguration> (use wsdl2h option -g to auto-generate)

  - <VideoEncoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <AudioEncoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <VideoAnalyticsConfiguration> (use wsdl2h option -g to auto-generate)

  - <PTZConfiguration> (use wsdl2h option -g to auto-generate)

  - <MetadataConfiguration> (use wsdl2h option -g to auto-generate)

  - <AudioOutputConfiguration> (use wsdl2h option -g to auto-generate)

  - <AudioDecoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <Message> @ref _tt__Message
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__Message(struct soap*, struct _tt__Message*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__Message(struct soap*, struct _tt__Message*);
    @endcode

  - <Polygon> (use wsdl2h option -g to auto-generate)

  - <Polyline> (use wsdl2h option -g to auto-generate)

  - <MetadataStream> (use wsdl2h option -g to auto-generate)

@section tmd Top-level root elements of schema "http://www.onvif.org/ver10/deviceIO/wsdl"

  - <GetServiceCapabilities> @ref _tmd__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetServiceCapabilities(struct soap*, struct _tmd__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetServiceCapabilities(struct soap*, struct _tmd__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _tmd__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetServiceCapabilitiesResponse(struct soap*, struct _tmd__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetServiceCapabilitiesResponse(struct soap*, struct _tmd__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <GetRelayOutputOptions> @ref _tmd__GetRelayOutputOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetRelayOutputOptions(struct soap*, struct _tmd__GetRelayOutputOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetRelayOutputOptions(struct soap*, struct _tmd__GetRelayOutputOptions*);
    @endcode

  - <GetRelayOutputOptionsResponse> @ref _tmd__GetRelayOutputOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetRelayOutputOptionsResponse(struct soap*, struct _tmd__GetRelayOutputOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetRelayOutputOptionsResponse(struct soap*, struct _tmd__GetRelayOutputOptionsResponse*);
    @endcode

  - <GetVideoOutputs> @ref _tmd__GetVideoOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputs(struct soap*, struct _tmd__GetVideoOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputs(struct soap*, struct _tmd__GetVideoOutputs*);
    @endcode

  - <GetVideoOutputsResponse> @ref _tmd__GetVideoOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputsResponse(struct soap*, struct _tmd__GetVideoOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputsResponse(struct soap*, struct _tmd__GetVideoOutputsResponse*);
    @endcode

  - <GetAudioSourceConfiguration> @ref _tmd__GetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioSourceConfiguration(struct soap*, struct _tmd__GetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioSourceConfiguration(struct soap*, struct _tmd__GetAudioSourceConfiguration*);
    @endcode

  - <GetAudioSourceConfigurationResponse> @ref _tmd__GetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioSourceConfigurationResponse(struct soap*, struct _tmd__GetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioSourceConfigurationResponse(struct soap*, struct _tmd__GetAudioSourceConfigurationResponse*);
    @endcode

  - <GetAudioOutputConfiguration> @ref _tmd__GetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioOutputConfiguration(struct soap*, struct _tmd__GetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioOutputConfiguration(struct soap*, struct _tmd__GetAudioOutputConfiguration*);
    @endcode

  - <GetAudioOutputConfigurationResponse> @ref _tmd__GetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioOutputConfigurationResponse(struct soap*, struct _tmd__GetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioOutputConfigurationResponse(struct soap*, struct _tmd__GetAudioOutputConfigurationResponse*);
    @endcode

  - <GetVideoSourceConfiguration> @ref _tmd__GetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoSourceConfiguration(struct soap*, struct _tmd__GetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoSourceConfiguration(struct soap*, struct _tmd__GetVideoSourceConfiguration*);
    @endcode

  - <GetVideoSourceConfigurationResponse> @ref _tmd__GetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoSourceConfigurationResponse(struct soap*, struct _tmd__GetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoSourceConfigurationResponse(struct soap*, struct _tmd__GetVideoSourceConfigurationResponse*);
    @endcode

  - <GetVideoOutputConfiguration> @ref _tmd__GetVideoOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputConfiguration(struct soap*, struct _tmd__GetVideoOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputConfiguration(struct soap*, struct _tmd__GetVideoOutputConfiguration*);
    @endcode

  - <GetVideoOutputConfigurationResponse> @ref _tmd__GetVideoOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputConfigurationResponse(struct soap*, struct _tmd__GetVideoOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputConfigurationResponse(struct soap*, struct _tmd__GetVideoOutputConfigurationResponse*);
    @endcode

  - <SetAudioSourceConfiguration> @ref _tmd__SetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetAudioSourceConfiguration(struct soap*, struct _tmd__SetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetAudioSourceConfiguration(struct soap*, struct _tmd__SetAudioSourceConfiguration*);
    @endcode

  - <SetAudioSourceConfigurationResponse> @ref _tmd__SetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetAudioSourceConfigurationResponse(struct soap*, struct _tmd__SetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetAudioSourceConfigurationResponse(struct soap*, struct _tmd__SetAudioSourceConfigurationResponse*);
    @endcode

  - <SetAudioOutputConfiguration> @ref _tmd__SetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetAudioOutputConfiguration(struct soap*, struct _tmd__SetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetAudioOutputConfiguration(struct soap*, struct _tmd__SetAudioOutputConfiguration*);
    @endcode

  - <SetAudioOutputConfigurationResponse> @ref _tmd__SetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetAudioOutputConfigurationResponse(struct soap*, struct _tmd__SetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetAudioOutputConfigurationResponse(struct soap*, struct _tmd__SetAudioOutputConfigurationResponse*);
    @endcode

  - <SetVideoSourceConfiguration> @ref _tmd__SetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetVideoSourceConfiguration(struct soap*, struct _tmd__SetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetVideoSourceConfiguration(struct soap*, struct _tmd__SetVideoSourceConfiguration*);
    @endcode

  - <SetVideoSourceConfigurationResponse> @ref _tmd__SetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetVideoSourceConfigurationResponse(struct soap*, struct _tmd__SetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetVideoSourceConfigurationResponse(struct soap*, struct _tmd__SetVideoSourceConfigurationResponse*);
    @endcode

  - <SetVideoOutputConfiguration> @ref _tmd__SetVideoOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetVideoOutputConfiguration(struct soap*, struct _tmd__SetVideoOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetVideoOutputConfiguration(struct soap*, struct _tmd__SetVideoOutputConfiguration*);
    @endcode

  - <SetVideoOutputConfigurationResponse> @ref _tmd__SetVideoOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetVideoOutputConfigurationResponse(struct soap*, struct _tmd__SetVideoOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetVideoOutputConfigurationResponse(struct soap*, struct _tmd__SetVideoOutputConfigurationResponse*);
    @endcode

  - <GetVideoSourceConfigurationOptions> @ref _tmd__GetVideoSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoSourceConfigurationOptions(struct soap*, struct _tmd__GetVideoSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoSourceConfigurationOptions(struct soap*, struct _tmd__GetVideoSourceConfigurationOptions*);
    @endcode

  - <GetVideoSourceConfigurationOptionsResponse> @ref _tmd__GetVideoSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _tmd__GetVideoSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _tmd__GetVideoSourceConfigurationOptionsResponse*);
    @endcode

  - <GetVideoOutputConfigurationOptions> @ref _tmd__GetVideoOutputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputConfigurationOptions(struct soap*, struct _tmd__GetVideoOutputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputConfigurationOptions(struct soap*, struct _tmd__GetVideoOutputConfigurationOptions*);
    @endcode

  - <GetVideoOutputConfigurationOptionsResponse> @ref _tmd__GetVideoOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, struct _tmd__GetVideoOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, struct _tmd__GetVideoOutputConfigurationOptionsResponse*);
    @endcode

  - <GetAudioSourceConfigurationOptions> @ref _tmd__GetAudioSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioSourceConfigurationOptions(struct soap*, struct _tmd__GetAudioSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioSourceConfigurationOptions(struct soap*, struct _tmd__GetAudioSourceConfigurationOptions*);
    @endcode

  - <GetAudioSourceConfigurationOptionsResponse> @ref _tmd__GetAudioSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _tmd__GetAudioSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _tmd__GetAudioSourceConfigurationOptionsResponse*);
    @endcode

  - <GetAudioOutputConfigurationOptions> @ref _tmd__GetAudioOutputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioOutputConfigurationOptions(struct soap*, struct _tmd__GetAudioOutputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioOutputConfigurationOptions(struct soap*, struct _tmd__GetAudioOutputConfigurationOptions*);
    @endcode

  - <GetAudioOutputConfigurationOptionsResponse> @ref _tmd__GetAudioOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _tmd__GetAudioOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _tmd__GetAudioOutputConfigurationOptionsResponse*);
    @endcode

  - <SetRelayOutputSettings> @ref _tmd__SetRelayOutputSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetRelayOutputSettings(struct soap*, struct _tmd__SetRelayOutputSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetRelayOutputSettings(struct soap*, struct _tmd__SetRelayOutputSettings*);
    @endcode

  - <SetRelayOutputSettingsResponse> @ref _tmd__SetRelayOutputSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetRelayOutputSettingsResponse(struct soap*, struct _tmd__SetRelayOutputSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetRelayOutputSettingsResponse(struct soap*, struct _tmd__SetRelayOutputSettingsResponse*);
    @endcode

  - <GetDigitalInputs> @ref _tmd__GetDigitalInputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetDigitalInputs(struct soap*, struct _tmd__GetDigitalInputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetDigitalInputs(struct soap*, struct _tmd__GetDigitalInputs*);
    @endcode

  - <GetDigitalInputsResponse> @ref _tmd__GetDigitalInputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetDigitalInputsResponse(struct soap*, struct _tmd__GetDigitalInputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetDigitalInputsResponse(struct soap*, struct _tmd__GetDigitalInputsResponse*);
    @endcode

  - <GetSerialPorts> @ref _tmd__GetSerialPorts
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPorts(struct soap*, struct _tmd__GetSerialPorts*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPorts(struct soap*, struct _tmd__GetSerialPorts*);
    @endcode

  - <GetSerialPortsResponse> @ref _tmd__GetSerialPortsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPortsResponse(struct soap*, struct _tmd__GetSerialPortsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPortsResponse(struct soap*, struct _tmd__GetSerialPortsResponse*);
    @endcode

  - <GetSerialPortConfiguration> @ref _tmd__GetSerialPortConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPortConfiguration(struct soap*, struct _tmd__GetSerialPortConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPortConfiguration(struct soap*, struct _tmd__GetSerialPortConfiguration*);
    @endcode

  - <GetSerialPortConfigurationResponse> @ref _tmd__GetSerialPortConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPortConfigurationResponse(struct soap*, struct _tmd__GetSerialPortConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPortConfigurationResponse(struct soap*, struct _tmd__GetSerialPortConfigurationResponse*);
    @endcode

  - <SetSerialPortConfiguration> @ref _tmd__SetSerialPortConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetSerialPortConfiguration(struct soap*, struct _tmd__SetSerialPortConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetSerialPortConfiguration(struct soap*, struct _tmd__SetSerialPortConfiguration*);
    @endcode

  - <SetSerialPortConfigurationResponse> @ref _tmd__SetSerialPortConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetSerialPortConfigurationResponse(struct soap*, struct _tmd__SetSerialPortConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetSerialPortConfigurationResponse(struct soap*, struct _tmd__SetSerialPortConfigurationResponse*);
    @endcode

  - <GetSerialPortConfigurationOptions> @ref _tmd__GetSerialPortConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPortConfigurationOptions(struct soap*, struct _tmd__GetSerialPortConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPortConfigurationOptions(struct soap*, struct _tmd__GetSerialPortConfigurationOptions*);
    @endcode

  - <GetSerialPortConfigurationOptionsResponse> @ref _tmd__GetSerialPortConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, struct _tmd__GetSerialPortConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, struct _tmd__GetSerialPortConfigurationOptionsResponse*);
    @endcode

  - <SendReceiveSerialCommand> @ref _tmd__SendReceiveSerialCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SendReceiveSerialCommand(struct soap*, struct _tmd__SendReceiveSerialCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SendReceiveSerialCommand(struct soap*, struct _tmd__SendReceiveSerialCommand*);
    @endcode

  - <SendReceiveSerialCommandResponse> @ref _tmd__SendReceiveSerialCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SendReceiveSerialCommandResponse(struct soap*, struct _tmd__SendReceiveSerialCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SendReceiveSerialCommandResponse(struct soap*, struct _tmd__SendReceiveSerialCommandResponse*);
    @endcode

@section trt Top-level root elements of schema "http://www.onvif.org/ver10/media/wsdl"

  - <GetServiceCapabilities> @ref _trt__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetServiceCapabilities(struct soap*, struct _trt__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetServiceCapabilities(struct soap*, struct _trt__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _trt__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetServiceCapabilitiesResponse(struct soap*, struct _trt__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetServiceCapabilitiesResponse(struct soap*, struct _trt__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <GetVideoSources> @ref _trt__GetVideoSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSources(struct soap*, struct _trt__GetVideoSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSources(struct soap*, struct _trt__GetVideoSources*);
    @endcode

  - <GetVideoSourcesResponse> @ref _trt__GetVideoSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourcesResponse(struct soap*, struct _trt__GetVideoSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourcesResponse(struct soap*, struct _trt__GetVideoSourcesResponse*);
    @endcode

  - <GetAudioSources> @ref _trt__GetAudioSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSources(struct soap*, struct _trt__GetAudioSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSources(struct soap*, struct _trt__GetAudioSources*);
    @endcode

  - <GetAudioSourcesResponse> @ref _trt__GetAudioSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourcesResponse(struct soap*, struct _trt__GetAudioSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourcesResponse(struct soap*, struct _trt__GetAudioSourcesResponse*);
    @endcode

  - <GetAudioOutputs> @ref _trt__GetAudioOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputs(struct soap*, struct _trt__GetAudioOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputs(struct soap*, struct _trt__GetAudioOutputs*);
    @endcode

  - <GetAudioOutputsResponse> @ref _trt__GetAudioOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputsResponse(struct soap*, struct _trt__GetAudioOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputsResponse(struct soap*, struct _trt__GetAudioOutputsResponse*);
    @endcode

  - <CreateProfile> @ref _trt__CreateProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfile(struct soap*, struct _trt__CreateProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfile(struct soap*, struct _trt__CreateProfile*);
    @endcode

  - <CreateProfileResponse> @ref _trt__CreateProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfileResponse(struct soap*, struct _trt__CreateProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfileResponse(struct soap*, struct _trt__CreateProfileResponse*);
    @endcode

  - <GetProfile> @ref _trt__GetProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfile(struct soap*, struct _trt__GetProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfile(struct soap*, struct _trt__GetProfile*);
    @endcode

  - <GetProfileResponse> @ref _trt__GetProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfileResponse(struct soap*, struct _trt__GetProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfileResponse(struct soap*, struct _trt__GetProfileResponse*);
    @endcode

  - <GetProfiles> @ref _trt__GetProfiles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfiles(struct soap*, struct _trt__GetProfiles*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfiles(struct soap*, struct _trt__GetProfiles*);
    @endcode

  - <GetProfilesResponse> @ref _trt__GetProfilesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfilesResponse(struct soap*, struct _trt__GetProfilesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfilesResponse(struct soap*, struct _trt__GetProfilesResponse*);
    @endcode

  - <AddVideoEncoderConfiguration> @ref _trt__AddVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoEncoderConfiguration(struct soap*, struct _trt__AddVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoEncoderConfiguration(struct soap*, struct _trt__AddVideoEncoderConfiguration*);
    @endcode

  - <AddVideoEncoderConfigurationResponse> @ref _trt__AddVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoEncoderConfigurationResponse(struct soap*, struct _trt__AddVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoEncoderConfigurationResponse(struct soap*, struct _trt__AddVideoEncoderConfigurationResponse*);
    @endcode

  - <RemoveVideoEncoderConfiguration> @ref _trt__RemoveVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoEncoderConfiguration(struct soap*, struct _trt__RemoveVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoEncoderConfiguration(struct soap*, struct _trt__RemoveVideoEncoderConfiguration*);
    @endcode

  - <RemoveVideoEncoderConfigurationResponse> @ref _trt__RemoveVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, struct _trt__RemoveVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, struct _trt__RemoveVideoEncoderConfigurationResponse*);
    @endcode

  - <AddVideoSourceConfiguration> @ref _trt__AddVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoSourceConfiguration(struct soap*, struct _trt__AddVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoSourceConfiguration(struct soap*, struct _trt__AddVideoSourceConfiguration*);
    @endcode

  - <AddVideoSourceConfigurationResponse> @ref _trt__AddVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoSourceConfigurationResponse(struct soap*, struct _trt__AddVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoSourceConfigurationResponse(struct soap*, struct _trt__AddVideoSourceConfigurationResponse*);
    @endcode

  - <RemoveVideoSourceConfiguration> @ref _trt__RemoveVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoSourceConfiguration(struct soap*, struct _trt__RemoveVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoSourceConfiguration(struct soap*, struct _trt__RemoveVideoSourceConfiguration*);
    @endcode

  - <RemoveVideoSourceConfigurationResponse> @ref _trt__RemoveVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoSourceConfigurationResponse(struct soap*, struct _trt__RemoveVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoSourceConfigurationResponse(struct soap*, struct _trt__RemoveVideoSourceConfigurationResponse*);
    @endcode

  - <AddAudioEncoderConfiguration> @ref _trt__AddAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioEncoderConfiguration(struct soap*, struct _trt__AddAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioEncoderConfiguration(struct soap*, struct _trt__AddAudioEncoderConfiguration*);
    @endcode

  - <AddAudioEncoderConfigurationResponse> @ref _trt__AddAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioEncoderConfigurationResponse(struct soap*, struct _trt__AddAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioEncoderConfigurationResponse(struct soap*, struct _trt__AddAudioEncoderConfigurationResponse*);
    @endcode

  - <RemoveAudioEncoderConfiguration> @ref _trt__RemoveAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioEncoderConfiguration(struct soap*, struct _trt__RemoveAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioEncoderConfiguration(struct soap*, struct _trt__RemoveAudioEncoderConfiguration*);
    @endcode

  - <RemoveAudioEncoderConfigurationResponse> @ref _trt__RemoveAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, struct _trt__RemoveAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, struct _trt__RemoveAudioEncoderConfigurationResponse*);
    @endcode

  - <AddAudioSourceConfiguration> @ref _trt__AddAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioSourceConfiguration(struct soap*, struct _trt__AddAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioSourceConfiguration(struct soap*, struct _trt__AddAudioSourceConfiguration*);
    @endcode

  - <AddAudioSourceConfigurationResponse> @ref _trt__AddAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioSourceConfigurationResponse(struct soap*, struct _trt__AddAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioSourceConfigurationResponse(struct soap*, struct _trt__AddAudioSourceConfigurationResponse*);
    @endcode

  - <RemoveAudioSourceConfiguration> @ref _trt__RemoveAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioSourceConfiguration(struct soap*, struct _trt__RemoveAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioSourceConfiguration(struct soap*, struct _trt__RemoveAudioSourceConfiguration*);
    @endcode

  - <RemoveAudioSourceConfigurationResponse> @ref _trt__RemoveAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioSourceConfigurationResponse(struct soap*, struct _trt__RemoveAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioSourceConfigurationResponse(struct soap*, struct _trt__RemoveAudioSourceConfigurationResponse*);
    @endcode

  - <AddPTZConfiguration> @ref _trt__AddPTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddPTZConfiguration(struct soap*, struct _trt__AddPTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddPTZConfiguration(struct soap*, struct _trt__AddPTZConfiguration*);
    @endcode

  - <AddPTZConfigurationResponse> @ref _trt__AddPTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddPTZConfigurationResponse(struct soap*, struct _trt__AddPTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddPTZConfigurationResponse(struct soap*, struct _trt__AddPTZConfigurationResponse*);
    @endcode

  - <RemovePTZConfiguration> @ref _trt__RemovePTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemovePTZConfiguration(struct soap*, struct _trt__RemovePTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemovePTZConfiguration(struct soap*, struct _trt__RemovePTZConfiguration*);
    @endcode

  - <RemovePTZConfigurationResponse> @ref _trt__RemovePTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemovePTZConfigurationResponse(struct soap*, struct _trt__RemovePTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemovePTZConfigurationResponse(struct soap*, struct _trt__RemovePTZConfigurationResponse*);
    @endcode

  - <AddVideoAnalyticsConfiguration> @ref _trt__AddVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoAnalyticsConfiguration(struct soap*, struct _trt__AddVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoAnalyticsConfiguration(struct soap*, struct _trt__AddVideoAnalyticsConfiguration*);
    @endcode

  - <AddVideoAnalyticsConfigurationResponse> @ref _trt__AddVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__AddVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__AddVideoAnalyticsConfigurationResponse*);
    @endcode

  - <RemoveVideoAnalyticsConfiguration> @ref _trt__RemoveVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoAnalyticsConfiguration(struct soap*, struct _trt__RemoveVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoAnalyticsConfiguration(struct soap*, struct _trt__RemoveVideoAnalyticsConfiguration*);
    @endcode

  - <RemoveVideoAnalyticsConfigurationResponse> @ref _trt__RemoveVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__RemoveVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__RemoveVideoAnalyticsConfigurationResponse*);
    @endcode

  - <AddMetadataConfiguration> @ref _trt__AddMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddMetadataConfiguration(struct soap*, struct _trt__AddMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddMetadataConfiguration(struct soap*, struct _trt__AddMetadataConfiguration*);
    @endcode

  - <AddMetadataConfigurationResponse> @ref _trt__AddMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddMetadataConfigurationResponse(struct soap*, struct _trt__AddMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddMetadataConfigurationResponse(struct soap*, struct _trt__AddMetadataConfigurationResponse*);
    @endcode

  - <RemoveMetadataConfiguration> @ref _trt__RemoveMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveMetadataConfiguration(struct soap*, struct _trt__RemoveMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveMetadataConfiguration(struct soap*, struct _trt__RemoveMetadataConfiguration*);
    @endcode

  - <RemoveMetadataConfigurationResponse> @ref _trt__RemoveMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveMetadataConfigurationResponse(struct soap*, struct _trt__RemoveMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveMetadataConfigurationResponse(struct soap*, struct _trt__RemoveMetadataConfigurationResponse*);
    @endcode

  - <AddAudioOutputConfiguration> @ref _trt__AddAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioOutputConfiguration(struct soap*, struct _trt__AddAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioOutputConfiguration(struct soap*, struct _trt__AddAudioOutputConfiguration*);
    @endcode

  - <AddAudioOutputConfigurationResponse> @ref _trt__AddAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioOutputConfigurationResponse(struct soap*, struct _trt__AddAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioOutputConfigurationResponse(struct soap*, struct _trt__AddAudioOutputConfigurationResponse*);
    @endcode

  - <RemoveAudioOutputConfiguration> @ref _trt__RemoveAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioOutputConfiguration(struct soap*, struct _trt__RemoveAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioOutputConfiguration(struct soap*, struct _trt__RemoveAudioOutputConfiguration*);
    @endcode

  - <RemoveAudioOutputConfigurationResponse> @ref _trt__RemoveAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioOutputConfigurationResponse(struct soap*, struct _trt__RemoveAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioOutputConfigurationResponse(struct soap*, struct _trt__RemoveAudioOutputConfigurationResponse*);
    @endcode

  - <AddAudioDecoderConfiguration> @ref _trt__AddAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioDecoderConfiguration(struct soap*, struct _trt__AddAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioDecoderConfiguration(struct soap*, struct _trt__AddAudioDecoderConfiguration*);
    @endcode

  - <AddAudioDecoderConfigurationResponse> @ref _trt__AddAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioDecoderConfigurationResponse(struct soap*, struct _trt__AddAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioDecoderConfigurationResponse(struct soap*, struct _trt__AddAudioDecoderConfigurationResponse*);
    @endcode

  - <RemoveAudioDecoderConfiguration> @ref _trt__RemoveAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioDecoderConfiguration(struct soap*, struct _trt__RemoveAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioDecoderConfiguration(struct soap*, struct _trt__RemoveAudioDecoderConfiguration*);
    @endcode

  - <RemoveAudioDecoderConfigurationResponse> @ref _trt__RemoveAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, struct _trt__RemoveAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, struct _trt__RemoveAudioDecoderConfigurationResponse*);
    @endcode

  - <DeleteProfile> @ref _trt__DeleteProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfile(struct soap*, struct _trt__DeleteProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfile(struct soap*, struct _trt__DeleteProfile*);
    @endcode

  - <DeleteProfileResponse> @ref _trt__DeleteProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfileResponse(struct soap*, struct _trt__DeleteProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfileResponse(struct soap*, struct _trt__DeleteProfileResponse*);
    @endcode

  - <GetVideoEncoderConfigurations> @ref _trt__GetVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurations(struct soap*, struct _trt__GetVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurations(struct soap*, struct _trt__GetVideoEncoderConfigurations*);
    @endcode

  - <GetVideoEncoderConfigurationsResponse> @ref _trt__GetVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationsResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationsResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationsResponse*);
    @endcode

  - <GetVideoSourceConfigurations> @ref _trt__GetVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurations(struct soap*, struct _trt__GetVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurations(struct soap*, struct _trt__GetVideoSourceConfigurations*);
    @endcode

  - <GetVideoSourceConfigurationsResponse> @ref _trt__GetVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationsResponse(struct soap*, struct _trt__GetVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationsResponse(struct soap*, struct _trt__GetVideoSourceConfigurationsResponse*);
    @endcode

  - <GetAudioEncoderConfigurations> @ref _trt__GetAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurations(struct soap*, struct _trt__GetAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurations(struct soap*, struct _trt__GetAudioEncoderConfigurations*);
    @endcode

  - <GetAudioEncoderConfigurationsResponse> @ref _trt__GetAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationsResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationsResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationsResponse*);
    @endcode

  - <GetAudioSourceConfigurations> @ref _trt__GetAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurations(struct soap*, struct _trt__GetAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurations(struct soap*, struct _trt__GetAudioSourceConfigurations*);
    @endcode

  - <GetAudioSourceConfigurationsResponse> @ref _trt__GetAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationsResponse(struct soap*, struct _trt__GetAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationsResponse(struct soap*, struct _trt__GetAudioSourceConfigurationsResponse*);
    @endcode

  - <GetVideoAnalyticsConfigurations> @ref _trt__GetVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurations(struct soap*, struct _trt__GetVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurations(struct soap*, struct _trt__GetVideoAnalyticsConfigurations*);
    @endcode

  - <GetVideoAnalyticsConfigurationsResponse> @ref _trt__GetVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, struct _trt__GetVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, struct _trt__GetVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <GetMetadataConfigurations> @ref _trt__GetMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurations(struct soap*, struct _trt__GetMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurations(struct soap*, struct _trt__GetMetadataConfigurations*);
    @endcode

  - <GetMetadataConfigurationsResponse> @ref _trt__GetMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationsResponse(struct soap*, struct _trt__GetMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationsResponse(struct soap*, struct _trt__GetMetadataConfigurationsResponse*);
    @endcode

  - <GetAudioOutputConfigurations> @ref _trt__GetAudioOutputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurations(struct soap*, struct _trt__GetAudioOutputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurations(struct soap*, struct _trt__GetAudioOutputConfigurations*);
    @endcode

  - <GetAudioOutputConfigurationsResponse> @ref _trt__GetAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationsResponse(struct soap*, struct _trt__GetAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationsResponse(struct soap*, struct _trt__GetAudioOutputConfigurationsResponse*);
    @endcode

  - <GetAudioDecoderConfigurations> @ref _trt__GetAudioDecoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurations(struct soap*, struct _trt__GetAudioDecoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurations(struct soap*, struct _trt__GetAudioDecoderConfigurations*);
    @endcode

  - <GetAudioDecoderConfigurationsResponse> @ref _trt__GetAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationsResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationsResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationsResponse*);
    @endcode

  - <GetVideoSourceConfiguration> @ref _trt__GetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfiguration(struct soap*, struct _trt__GetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfiguration(struct soap*, struct _trt__GetVideoSourceConfiguration*);
    @endcode

  - <GetVideoSourceConfigurationResponse> @ref _trt__GetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationResponse(struct soap*, struct _trt__GetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationResponse(struct soap*, struct _trt__GetVideoSourceConfigurationResponse*);
    @endcode

  - <GetVideoEncoderConfiguration> @ref _trt__GetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfiguration(struct soap*, struct _trt__GetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfiguration(struct soap*, struct _trt__GetVideoEncoderConfiguration*);
    @endcode

  - <GetVideoEncoderConfigurationResponse> @ref _trt__GetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationResponse*);
    @endcode

  - <GetAudioSourceConfiguration> @ref _trt__GetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfiguration(struct soap*, struct _trt__GetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfiguration(struct soap*, struct _trt__GetAudioSourceConfiguration*);
    @endcode

  - <GetAudioSourceConfigurationResponse> @ref _trt__GetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationResponse(struct soap*, struct _trt__GetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationResponse(struct soap*, struct _trt__GetAudioSourceConfigurationResponse*);
    @endcode

  - <GetAudioEncoderConfiguration> @ref _trt__GetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfiguration(struct soap*, struct _trt__GetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfiguration(struct soap*, struct _trt__GetAudioEncoderConfiguration*);
    @endcode

  - <GetAudioEncoderConfigurationResponse> @ref _trt__GetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationResponse*);
    @endcode

  - <GetVideoAnalyticsConfiguration> @ref _trt__GetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfiguration(struct soap*, struct _trt__GetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfiguration(struct soap*, struct _trt__GetVideoAnalyticsConfiguration*);
    @endcode

  - <GetVideoAnalyticsConfigurationResponse> @ref _trt__GetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__GetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__GetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <GetMetadataConfiguration> @ref _trt__GetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfiguration(struct soap*, struct _trt__GetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfiguration(struct soap*, struct _trt__GetMetadataConfiguration*);
    @endcode

  - <GetMetadataConfigurationResponse> @ref _trt__GetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationResponse(struct soap*, struct _trt__GetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationResponse(struct soap*, struct _trt__GetMetadataConfigurationResponse*);
    @endcode

  - <GetAudioOutputConfiguration> @ref _trt__GetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfiguration(struct soap*, struct _trt__GetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfiguration(struct soap*, struct _trt__GetAudioOutputConfiguration*);
    @endcode

  - <GetAudioOutputConfigurationResponse> @ref _trt__GetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationResponse(struct soap*, struct _trt__GetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationResponse(struct soap*, struct _trt__GetAudioOutputConfigurationResponse*);
    @endcode

  - <GetAudioDecoderConfiguration> @ref _trt__GetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfiguration(struct soap*, struct _trt__GetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfiguration(struct soap*, struct _trt__GetAudioDecoderConfiguration*);
    @endcode

  - <GetAudioDecoderConfigurationResponse> @ref _trt__GetAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationResponse*);
    @endcode

  - <GetCompatibleVideoEncoderConfigurations> @ref _trt__GetCompatibleVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, struct _trt__GetCompatibleVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, struct _trt__GetCompatibleVideoEncoderConfigurations*);
    @endcode

  - <GetCompatibleVideoEncoderConfigurationsResponse> @ref _trt__GetCompatibleVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    @endcode

  - <GetCompatibleVideoSourceConfigurations> @ref _trt__GetCompatibleVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoSourceConfigurations(struct soap*, struct _trt__GetCompatibleVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoSourceConfigurations(struct soap*, struct _trt__GetCompatibleVideoSourceConfigurations*);
    @endcode

  - <GetCompatibleVideoSourceConfigurationsResponse> @ref _trt__GetCompatibleVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    @endcode

  - <GetCompatibleAudioEncoderConfigurations> @ref _trt__GetCompatibleAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, struct _trt__GetCompatibleAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, struct _trt__GetCompatibleAudioEncoderConfigurations*);
    @endcode

  - <GetCompatibleAudioEncoderConfigurationsResponse> @ref _trt__GetCompatibleAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    @endcode

  - <GetCompatibleAudioSourceConfigurations> @ref _trt__GetCompatibleAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioSourceConfigurations(struct soap*, struct _trt__GetCompatibleAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioSourceConfigurations(struct soap*, struct _trt__GetCompatibleAudioSourceConfigurations*);
    @endcode

  - <GetCompatibleAudioSourceConfigurationsResponse> @ref _trt__GetCompatibleAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    @endcode

  - <GetCompatibleVideoAnalyticsConfigurations> @ref _trt__GetCompatibleVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, struct _trt__GetCompatibleVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, struct _trt__GetCompatibleVideoAnalyticsConfigurations*);
    @endcode

  - <GetCompatibleVideoAnalyticsConfigurationsResponse> @ref _trt__GetCompatibleVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <GetCompatibleMetadataConfigurations> @ref _trt__GetCompatibleMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleMetadataConfigurations(struct soap*, struct _trt__GetCompatibleMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleMetadataConfigurations(struct soap*, struct _trt__GetCompatibleMetadataConfigurations*);
    @endcode

  - <GetCompatibleMetadataConfigurationsResponse> @ref _trt__GetCompatibleMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, struct _trt__GetCompatibleMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, struct _trt__GetCompatibleMetadataConfigurationsResponse*);
    @endcode

  - <GetCompatibleAudioOutputConfigurations> @ref _trt__GetCompatibleAudioOutputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioOutputConfigurations(struct soap*, struct _trt__GetCompatibleAudioOutputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioOutputConfigurations(struct soap*, struct _trt__GetCompatibleAudioOutputConfigurations*);
    @endcode

  - <GetCompatibleAudioOutputConfigurationsResponse> @ref _trt__GetCompatibleAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    @endcode

  - <GetCompatibleAudioDecoderConfigurations> @ref _trt__GetCompatibleAudioDecoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, struct _trt__GetCompatibleAudioDecoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, struct _trt__GetCompatibleAudioDecoderConfigurations*);
    @endcode

  - <GetCompatibleAudioDecoderConfigurationsResponse> @ref _trt__GetCompatibleAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    @endcode

  - <SetVideoEncoderConfiguration> @ref _trt__SetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoEncoderConfiguration(struct soap*, struct _trt__SetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoEncoderConfiguration(struct soap*, struct _trt__SetVideoEncoderConfiguration*);
    @endcode

  - <SetVideoEncoderConfigurationResponse> @ref _trt__SetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoEncoderConfigurationResponse(struct soap*, struct _trt__SetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoEncoderConfigurationResponse(struct soap*, struct _trt__SetVideoEncoderConfigurationResponse*);
    @endcode

  - <SetVideoSourceConfiguration> @ref _trt__SetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceConfiguration(struct soap*, struct _trt__SetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceConfiguration(struct soap*, struct _trt__SetVideoSourceConfiguration*);
    @endcode

  - <SetVideoSourceConfigurationResponse> @ref _trt__SetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceConfigurationResponse(struct soap*, struct _trt__SetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceConfigurationResponse(struct soap*, struct _trt__SetVideoSourceConfigurationResponse*);
    @endcode

  - <SetAudioEncoderConfiguration> @ref _trt__SetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioEncoderConfiguration(struct soap*, struct _trt__SetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioEncoderConfiguration(struct soap*, struct _trt__SetAudioEncoderConfiguration*);
    @endcode

  - <SetAudioEncoderConfigurationResponse> @ref _trt__SetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioEncoderConfigurationResponse(struct soap*, struct _trt__SetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioEncoderConfigurationResponse(struct soap*, struct _trt__SetAudioEncoderConfigurationResponse*);
    @endcode

  - <SetAudioSourceConfiguration> @ref _trt__SetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioSourceConfiguration(struct soap*, struct _trt__SetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioSourceConfiguration(struct soap*, struct _trt__SetAudioSourceConfiguration*);
    @endcode

  - <SetAudioSourceConfigurationResponse> @ref _trt__SetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioSourceConfigurationResponse(struct soap*, struct _trt__SetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioSourceConfigurationResponse(struct soap*, struct _trt__SetAudioSourceConfigurationResponse*);
    @endcode

  - <SetVideoAnalyticsConfiguration> @ref _trt__SetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoAnalyticsConfiguration(struct soap*, struct _trt__SetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoAnalyticsConfiguration(struct soap*, struct _trt__SetVideoAnalyticsConfiguration*);
    @endcode

  - <SetVideoAnalyticsConfigurationResponse> @ref _trt__SetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__SetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__SetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <SetMetadataConfiguration> @ref _trt__SetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetMetadataConfiguration(struct soap*, struct _trt__SetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetMetadataConfiguration(struct soap*, struct _trt__SetMetadataConfiguration*);
    @endcode

  - <SetMetadataConfigurationResponse> @ref _trt__SetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetMetadataConfigurationResponse(struct soap*, struct _trt__SetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetMetadataConfigurationResponse(struct soap*, struct _trt__SetMetadataConfigurationResponse*);
    @endcode

  - <SetAudioOutputConfiguration> @ref _trt__SetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioOutputConfiguration(struct soap*, struct _trt__SetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioOutputConfiguration(struct soap*, struct _trt__SetAudioOutputConfiguration*);
    @endcode

  - <SetAudioOutputConfigurationResponse> @ref _trt__SetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioOutputConfigurationResponse(struct soap*, struct _trt__SetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioOutputConfigurationResponse(struct soap*, struct _trt__SetAudioOutputConfigurationResponse*);
    @endcode

  - <SetAudioDecoderConfiguration> @ref _trt__SetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioDecoderConfiguration(struct soap*, struct _trt__SetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioDecoderConfiguration(struct soap*, struct _trt__SetAudioDecoderConfiguration*);
    @endcode

  - <SetAudioDecoderConfigurationResponse> @ref _trt__SetAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioDecoderConfigurationResponse(struct soap*, struct _trt__SetAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioDecoderConfigurationResponse(struct soap*, struct _trt__SetAudioDecoderConfigurationResponse*);
    @endcode

  - <GetVideoSourceConfigurationOptions> @ref _trt__GetVideoSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationOptions(struct soap*, struct _trt__GetVideoSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationOptions(struct soap*, struct _trt__GetVideoSourceConfigurationOptions*);
    @endcode

  - <GetVideoSourceConfigurationOptionsResponse> @ref _trt__GetVideoSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _trt__GetVideoSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _trt__GetVideoSourceConfigurationOptionsResponse*);
    @endcode

  - <GetVideoEncoderConfigurationOptions> @ref _trt__GetVideoEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationOptions(struct soap*, struct _trt__GetVideoEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationOptions(struct soap*, struct _trt__GetVideoEncoderConfigurationOptions*);
    @endcode

  - <GetVideoEncoderConfigurationOptionsResponse> @ref _trt__GetVideoEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationOptionsResponse*);
    @endcode

  - <GetAudioSourceConfigurationOptions> @ref _trt__GetAudioSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationOptions(struct soap*, struct _trt__GetAudioSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationOptions(struct soap*, struct _trt__GetAudioSourceConfigurationOptions*);
    @endcode

  - <GetAudioSourceConfigurationOptionsResponse> @ref _trt__GetAudioSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioSourceConfigurationOptionsResponse*);
    @endcode

  - <GetAudioEncoderConfigurationOptions> @ref _trt__GetAudioEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationOptions(struct soap*, struct _trt__GetAudioEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationOptions(struct soap*, struct _trt__GetAudioEncoderConfigurationOptions*);
    @endcode

  - <GetAudioEncoderConfigurationOptionsResponse> @ref _trt__GetAudioEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationOptionsResponse*);
    @endcode

  - <GetMetadataConfigurationOptions> @ref _trt__GetMetadataConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationOptions(struct soap*, struct _trt__GetMetadataConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationOptions(struct soap*, struct _trt__GetMetadataConfigurationOptions*);
    @endcode

  - <GetMetadataConfigurationOptionsResponse> @ref _trt__GetMetadataConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationOptionsResponse(struct soap*, struct _trt__GetMetadataConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationOptionsResponse(struct soap*, struct _trt__GetMetadataConfigurationOptionsResponse*);
    @endcode

  - <GetAudioOutputConfigurationOptions> @ref _trt__GetAudioOutputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationOptions(struct soap*, struct _trt__GetAudioOutputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationOptions(struct soap*, struct _trt__GetAudioOutputConfigurationOptions*);
    @endcode

  - <GetAudioOutputConfigurationOptionsResponse> @ref _trt__GetAudioOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioOutputConfigurationOptionsResponse*);
    @endcode

  - <GetAudioDecoderConfigurationOptions> @ref _trt__GetAudioDecoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationOptions(struct soap*, struct _trt__GetAudioDecoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationOptions(struct soap*, struct _trt__GetAudioDecoderConfigurationOptions*);
    @endcode

  - <GetAudioDecoderConfigurationOptionsResponse> @ref _trt__GetAudioDecoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationOptionsResponse*);
    @endcode

  - <GetGuaranteedNumberOfVideoEncoderInstances> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstances
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, struct _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, struct _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    @endcode

  - <GetGuaranteedNumberOfVideoEncoderInstancesResponse> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    @endcode

  - <GetStreamUri> @ref _trt__GetStreamUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetStreamUri(struct soap*, struct _trt__GetStreamUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetStreamUri(struct soap*, struct _trt__GetStreamUri*);
    @endcode

  - <GetStreamUriResponse> @ref _trt__GetStreamUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetStreamUriResponse(struct soap*, struct _trt__GetStreamUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetStreamUriResponse(struct soap*, struct _trt__GetStreamUriResponse*);
    @endcode

  - <StartMulticastStreaming> @ref _trt__StartMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StartMulticastStreaming(struct soap*, struct _trt__StartMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StartMulticastStreaming(struct soap*, struct _trt__StartMulticastStreaming*);
    @endcode

  - <StartMulticastStreamingResponse> @ref _trt__StartMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StartMulticastStreamingResponse(struct soap*, struct _trt__StartMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StartMulticastStreamingResponse(struct soap*, struct _trt__StartMulticastStreamingResponse*);
    @endcode

  - <StopMulticastStreaming> @ref _trt__StopMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StopMulticastStreaming(struct soap*, struct _trt__StopMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StopMulticastStreaming(struct soap*, struct _trt__StopMulticastStreaming*);
    @endcode

  - <StopMulticastStreamingResponse> @ref _trt__StopMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StopMulticastStreamingResponse(struct soap*, struct _trt__StopMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StopMulticastStreamingResponse(struct soap*, struct _trt__StopMulticastStreamingResponse*);
    @endcode

  - <SetSynchronizationPoint> @ref _trt__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetSynchronizationPoint(struct soap*, struct _trt__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetSynchronizationPoint(struct soap*, struct _trt__SetSynchronizationPoint*);
    @endcode

  - <SetSynchronizationPointResponse> @ref _trt__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetSynchronizationPointResponse(struct soap*, struct _trt__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetSynchronizationPointResponse(struct soap*, struct _trt__SetSynchronizationPointResponse*);
    @endcode

  - <GetSnapshotUri> @ref _trt__GetSnapshotUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUri(struct soap*, struct _trt__GetSnapshotUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUri(struct soap*, struct _trt__GetSnapshotUri*);
    @endcode

  - <GetSnapshotUriResponse> @ref _trt__GetSnapshotUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUriResponse(struct soap*, struct _trt__GetSnapshotUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUriResponse(struct soap*, struct _trt__GetSnapshotUriResponse*);
    @endcode

  - <GetVideoSourceModes> @ref _trt__GetVideoSourceModes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceModes(struct soap*, struct _trt__GetVideoSourceModes*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceModes(struct soap*, struct _trt__GetVideoSourceModes*);
    @endcode

  - <GetVideoSourceModesResponse> @ref _trt__GetVideoSourceModesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceModesResponse(struct soap*, struct _trt__GetVideoSourceModesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceModesResponse(struct soap*, struct _trt__GetVideoSourceModesResponse*);
    @endcode

  - <SetVideoSourceMode> @ref _trt__SetVideoSourceMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceMode(struct soap*, struct _trt__SetVideoSourceMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceMode(struct soap*, struct _trt__SetVideoSourceMode*);
    @endcode

  - <SetVideoSourceModeResponse> @ref _trt__SetVideoSourceModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceModeResponse(struct soap*, struct _trt__SetVideoSourceModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceModeResponse(struct soap*, struct _trt__SetVideoSourceModeResponse*);
    @endcode

  - <GetOSDs> @ref _trt__GetOSDs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDs(struct soap*, struct _trt__GetOSDs*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDs(struct soap*, struct _trt__GetOSDs*);
    @endcode

  - <GetOSDsResponse> @ref _trt__GetOSDsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDsResponse(struct soap*, struct _trt__GetOSDsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDsResponse(struct soap*, struct _trt__GetOSDsResponse*);
    @endcode

  - <GetOSD> @ref _trt__GetOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSD(struct soap*, struct _trt__GetOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSD(struct soap*, struct _trt__GetOSD*);
    @endcode

  - <GetOSDResponse> @ref _trt__GetOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDResponse(struct soap*, struct _trt__GetOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDResponse(struct soap*, struct _trt__GetOSDResponse*);
    @endcode

  - <SetOSD> @ref _trt__SetOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetOSD(struct soap*, struct _trt__SetOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetOSD(struct soap*, struct _trt__SetOSD*);
    @endcode

  - <SetOSDResponse> @ref _trt__SetOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetOSDResponse(struct soap*, struct _trt__SetOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetOSDResponse(struct soap*, struct _trt__SetOSDResponse*);
    @endcode

  - <GetOSDOptions> @ref _trt__GetOSDOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDOptions(struct soap*, struct _trt__GetOSDOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDOptions(struct soap*, struct _trt__GetOSDOptions*);
    @endcode

  - <GetOSDOptionsResponse> @ref _trt__GetOSDOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDOptionsResponse(struct soap*, struct _trt__GetOSDOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDOptionsResponse(struct soap*, struct _trt__GetOSDOptionsResponse*);
    @endcode

  - <CreateOSD> @ref _trt__CreateOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateOSD(struct soap*, struct _trt__CreateOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateOSD(struct soap*, struct _trt__CreateOSD*);
    @endcode

  - <CreateOSDResponse> @ref _trt__CreateOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateOSDResponse(struct soap*, struct _trt__CreateOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateOSDResponse(struct soap*, struct _trt__CreateOSDResponse*);
    @endcode

  - <DeleteOSD> @ref _trt__DeleteOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteOSD(struct soap*, struct _trt__DeleteOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteOSD(struct soap*, struct _trt__DeleteOSD*);
    @endcode

  - <DeleteOSDResponse> @ref _trt__DeleteOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteOSDResponse(struct soap*, struct _trt__DeleteOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteOSDResponse(struct soap*, struct _trt__DeleteOSDResponse*);
    @endcode

@section tds Top-level root elements of schema "http://www.onvif.org/ver10/device/wsdl"

  - <GetServices> @ref _tds__GetServices
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServices(struct soap*, struct _tds__GetServices*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServices(struct soap*, struct _tds__GetServices*);
    @endcode

  - <GetServicesResponse> @ref _tds__GetServicesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse*);
    @endcode

  - <GetServiceCapabilities> @ref _tds__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _tds__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <GetDeviceInformation> @ref _tds__GetDeviceInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation*);
    @endcode

  - <GetDeviceInformationResponse> @ref _tds__GetDeviceInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse*);
    @endcode

  - <SetSystemDateAndTime> @ref _tds__SetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTime(struct soap*, struct _tds__SetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTime(struct soap*, struct _tds__SetSystemDateAndTime*);
    @endcode

  - <SetSystemDateAndTimeResponse> @ref _tds__SetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTimeResponse(struct soap*, struct _tds__SetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTimeResponse(struct soap*, struct _tds__SetSystemDateAndTimeResponse*);
    @endcode

  - <GetSystemDateAndTime> @ref _tds__GetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTime(struct soap*, struct _tds__GetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTime(struct soap*, struct _tds__GetSystemDateAndTime*);
    @endcode

  - <GetSystemDateAndTimeResponse> @ref _tds__GetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTimeResponse(struct soap*, struct _tds__GetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTimeResponse(struct soap*, struct _tds__GetSystemDateAndTimeResponse*);
    @endcode

  - <SetSystemFactoryDefault> @ref _tds__SetSystemFactoryDefault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefault(struct soap*, struct _tds__SetSystemFactoryDefault*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefault(struct soap*, struct _tds__SetSystemFactoryDefault*);
    @endcode

  - <SetSystemFactoryDefaultResponse> @ref _tds__SetSystemFactoryDefaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefaultResponse(struct soap*, struct _tds__SetSystemFactoryDefaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefaultResponse(struct soap*, struct _tds__SetSystemFactoryDefaultResponse*);
    @endcode

  - <UpgradeSystemFirmware> @ref _tds__UpgradeSystemFirmware
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmware(struct soap*, struct _tds__UpgradeSystemFirmware*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmware(struct soap*, struct _tds__UpgradeSystemFirmware*);
    @endcode

  - <UpgradeSystemFirmwareResponse> @ref _tds__UpgradeSystemFirmwareResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmwareResponse(struct soap*, struct _tds__UpgradeSystemFirmwareResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmwareResponse(struct soap*, struct _tds__UpgradeSystemFirmwareResponse*);
    @endcode

  - <SystemReboot> @ref _tds__SystemReboot
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemReboot(struct soap*, struct _tds__SystemReboot*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemReboot(struct soap*, struct _tds__SystemReboot*);
    @endcode

  - <SystemRebootResponse> @ref _tds__SystemRebootResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse*);
    @endcode

  - <RestoreSystem> @ref _tds__RestoreSystem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystem(struct soap*, struct _tds__RestoreSystem*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystem(struct soap*, struct _tds__RestoreSystem*);
    @endcode

  - <RestoreSystemResponse> @ref _tds__RestoreSystemResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystemResponse(struct soap*, struct _tds__RestoreSystemResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystemResponse(struct soap*, struct _tds__RestoreSystemResponse*);
    @endcode

  - <GetSystemBackup> @ref _tds__GetSystemBackup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackup(struct soap*, struct _tds__GetSystemBackup*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackup(struct soap*, struct _tds__GetSystemBackup*);
    @endcode

  - <GetSystemBackupResponse> @ref _tds__GetSystemBackupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackupResponse(struct soap*, struct _tds__GetSystemBackupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackupResponse(struct soap*, struct _tds__GetSystemBackupResponse*);
    @endcode

  - <GetSystemSupportInformation> @ref _tds__GetSystemSupportInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformation(struct soap*, struct _tds__GetSystemSupportInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformation(struct soap*, struct _tds__GetSystemSupportInformation*);
    @endcode

  - <GetSystemSupportInformationResponse> @ref _tds__GetSystemSupportInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformationResponse(struct soap*, struct _tds__GetSystemSupportInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformationResponse(struct soap*, struct _tds__GetSystemSupportInformationResponse*);
    @endcode

  - <GetSystemLog> @ref _tds__GetSystemLog
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLog(struct soap*, struct _tds__GetSystemLog*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLog(struct soap*, struct _tds__GetSystemLog*);
    @endcode

  - <GetSystemLogResponse> @ref _tds__GetSystemLogResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLogResponse(struct soap*, struct _tds__GetSystemLogResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLogResponse(struct soap*, struct _tds__GetSystemLogResponse*);
    @endcode

  - <GetScopes> @ref _tds__GetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopes(struct soap*, struct _tds__GetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopes(struct soap*, struct _tds__GetScopes*);
    @endcode

  - <GetScopesResponse> @ref _tds__GetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopesResponse(struct soap*, struct _tds__GetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopesResponse(struct soap*, struct _tds__GetScopesResponse*);
    @endcode

  - <SetScopes> @ref _tds__SetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopes(struct soap*, struct _tds__SetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopes(struct soap*, struct _tds__SetScopes*);
    @endcode

  - <SetScopesResponse> @ref _tds__SetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopesResponse(struct soap*, struct _tds__SetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopesResponse(struct soap*, struct _tds__SetScopesResponse*);
    @endcode

  - <AddScopes> @ref _tds__AddScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopes(struct soap*, struct _tds__AddScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopes(struct soap*, struct _tds__AddScopes*);
    @endcode

  - <AddScopesResponse> @ref _tds__AddScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopesResponse(struct soap*, struct _tds__AddScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopesResponse(struct soap*, struct _tds__AddScopesResponse*);
    @endcode

  - <RemoveScopes> @ref _tds__RemoveScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopes(struct soap*, struct _tds__RemoveScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopes(struct soap*, struct _tds__RemoveScopes*);
    @endcode

  - <RemoveScopesResponse> @ref _tds__RemoveScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopesResponse(struct soap*, struct _tds__RemoveScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopesResponse(struct soap*, struct _tds__RemoveScopesResponse*);
    @endcode

  - <GetDiscoveryMode> @ref _tds__GetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryMode(struct soap*, struct _tds__GetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryMode(struct soap*, struct _tds__GetDiscoveryMode*);
    @endcode

  - <GetDiscoveryModeResponse> @ref _tds__GetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryModeResponse(struct soap*, struct _tds__GetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryModeResponse(struct soap*, struct _tds__GetDiscoveryModeResponse*);
    @endcode

  - <SetDiscoveryMode> @ref _tds__SetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryMode(struct soap*, struct _tds__SetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryMode(struct soap*, struct _tds__SetDiscoveryMode*);
    @endcode

  - <SetDiscoveryModeResponse> @ref _tds__SetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryModeResponse(struct soap*, struct _tds__SetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryModeResponse(struct soap*, struct _tds__SetDiscoveryModeResponse*);
    @endcode

  - <GetRemoteDiscoveryMode> @ref _tds__GetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryMode(struct soap*, struct _tds__GetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryMode(struct soap*, struct _tds__GetRemoteDiscoveryMode*);
    @endcode

  - <GetRemoteDiscoveryModeResponse> @ref _tds__GetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryModeResponse(struct soap*, struct _tds__GetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryModeResponse(struct soap*, struct _tds__GetRemoteDiscoveryModeResponse*);
    @endcode

  - <SetRemoteDiscoveryMode> @ref _tds__SetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryMode(struct soap*, struct _tds__SetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryMode(struct soap*, struct _tds__SetRemoteDiscoveryMode*);
    @endcode

  - <SetRemoteDiscoveryModeResponse> @ref _tds__SetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryModeResponse(struct soap*, struct _tds__SetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryModeResponse(struct soap*, struct _tds__SetRemoteDiscoveryModeResponse*);
    @endcode

  - <GetDPAddresses> @ref _tds__GetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddresses(struct soap*, struct _tds__GetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddresses(struct soap*, struct _tds__GetDPAddresses*);
    @endcode

  - <GetDPAddressesResponse> @ref _tds__GetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddressesResponse(struct soap*, struct _tds__GetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddressesResponse(struct soap*, struct _tds__GetDPAddressesResponse*);
    @endcode

  - <SetDPAddresses> @ref _tds__SetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddresses(struct soap*, struct _tds__SetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddresses(struct soap*, struct _tds__SetDPAddresses*);
    @endcode

  - <SetDPAddressesResponse> @ref _tds__SetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddressesResponse(struct soap*, struct _tds__SetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddressesResponse(struct soap*, struct _tds__SetDPAddressesResponse*);
    @endcode

  - <GetEndpointReference> @ref _tds__GetEndpointReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReference(struct soap*, struct _tds__GetEndpointReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReference(struct soap*, struct _tds__GetEndpointReference*);
    @endcode

  - <GetEndpointReferenceResponse> @ref _tds__GetEndpointReferenceResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReferenceResponse(struct soap*, struct _tds__GetEndpointReferenceResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReferenceResponse(struct soap*, struct _tds__GetEndpointReferenceResponse*);
    @endcode

  - <GetRemoteUser> @ref _tds__GetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUser(struct soap*, struct _tds__GetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUser(struct soap*, struct _tds__GetRemoteUser*);
    @endcode

  - <GetRemoteUserResponse> @ref _tds__GetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUserResponse(struct soap*, struct _tds__GetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUserResponse(struct soap*, struct _tds__GetRemoteUserResponse*);
    @endcode

  - <SetRemoteUser> @ref _tds__SetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUser(struct soap*, struct _tds__SetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUser(struct soap*, struct _tds__SetRemoteUser*);
    @endcode

  - <SetRemoteUserResponse> @ref _tds__SetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUserResponse(struct soap*, struct _tds__SetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUserResponse(struct soap*, struct _tds__SetRemoteUserResponse*);
    @endcode

  - <GetUsers> @ref _tds__GetUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsers(struct soap*, struct _tds__GetUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsers(struct soap*, struct _tds__GetUsers*);
    @endcode

  - <GetUsersResponse> @ref _tds__GetUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsersResponse(struct soap*, struct _tds__GetUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsersResponse(struct soap*, struct _tds__GetUsersResponse*);
    @endcode

  - <CreateUsers> @ref _tds__CreateUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsers(struct soap*, struct _tds__CreateUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsers(struct soap*, struct _tds__CreateUsers*);
    @endcode

  - <CreateUsersResponse> @ref _tds__CreateUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsersResponse(struct soap*, struct _tds__CreateUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsersResponse(struct soap*, struct _tds__CreateUsersResponse*);
    @endcode

  - <DeleteUsers> @ref _tds__DeleteUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsers(struct soap*, struct _tds__DeleteUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsers(struct soap*, struct _tds__DeleteUsers*);
    @endcode

  - <DeleteUsersResponse> @ref _tds__DeleteUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsersResponse(struct soap*, struct _tds__DeleteUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsersResponse(struct soap*, struct _tds__DeleteUsersResponse*);
    @endcode

  - <SetUser> @ref _tds__SetUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUser(struct soap*, struct _tds__SetUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUser(struct soap*, struct _tds__SetUser*);
    @endcode

  - <SetUserResponse> @ref _tds__SetUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUserResponse(struct soap*, struct _tds__SetUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUserResponse(struct soap*, struct _tds__SetUserResponse*);
    @endcode

  - <GetWsdlUrl> @ref _tds__GetWsdlUrl
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrl(struct soap*, struct _tds__GetWsdlUrl*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrl(struct soap*, struct _tds__GetWsdlUrl*);
    @endcode

  - <GetWsdlUrlResponse> @ref _tds__GetWsdlUrlResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrlResponse(struct soap*, struct _tds__GetWsdlUrlResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrlResponse(struct soap*, struct _tds__GetWsdlUrlResponse*);
    @endcode

  - <GetCapabilities> @ref _tds__GetCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities*);
    @endcode

  - <GetCapabilitiesResponse> @ref _tds__GetCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse*);
    @endcode

  - <GetHostname> @ref _tds__GetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostname(struct soap*, struct _tds__GetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostname(struct soap*, struct _tds__GetHostname*);
    @endcode

  - <GetHostnameResponse> @ref _tds__GetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostnameResponse(struct soap*, struct _tds__GetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostnameResponse(struct soap*, struct _tds__GetHostnameResponse*);
    @endcode

  - <SetHostname> @ref _tds__SetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostname(struct soap*, struct _tds__SetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostname(struct soap*, struct _tds__SetHostname*);
    @endcode

  - <SetHostnameResponse> @ref _tds__SetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameResponse(struct soap*, struct _tds__SetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameResponse(struct soap*, struct _tds__SetHostnameResponse*);
    @endcode

  - <SetHostnameFromDHCP> @ref _tds__SetHostnameFromDHCP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCP(struct soap*, struct _tds__SetHostnameFromDHCP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCP(struct soap*, struct _tds__SetHostnameFromDHCP*);
    @endcode

  - <SetHostnameFromDHCPResponse> @ref _tds__SetHostnameFromDHCPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCPResponse(struct soap*, struct _tds__SetHostnameFromDHCPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCPResponse(struct soap*, struct _tds__SetHostnameFromDHCPResponse*);
    @endcode

  - <GetDNS> @ref _tds__GetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNS(struct soap*, struct _tds__GetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNS(struct soap*, struct _tds__GetDNS*);
    @endcode

  - <GetDNSResponse> @ref _tds__GetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNSResponse(struct soap*, struct _tds__GetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNSResponse(struct soap*, struct _tds__GetDNSResponse*);
    @endcode

  - <SetDNS> @ref _tds__SetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNS(struct soap*, struct _tds__SetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNS(struct soap*, struct _tds__SetDNS*);
    @endcode

  - <SetDNSResponse> @ref _tds__SetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNSResponse(struct soap*, struct _tds__SetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNSResponse(struct soap*, struct _tds__SetDNSResponse*);
    @endcode

  - <GetNTP> @ref _tds__GetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTP(struct soap*, struct _tds__GetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTP(struct soap*, struct _tds__GetNTP*);
    @endcode

  - <GetNTPResponse> @ref _tds__GetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTPResponse(struct soap*, struct _tds__GetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTPResponse(struct soap*, struct _tds__GetNTPResponse*);
    @endcode

  - <SetNTP> @ref _tds__SetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTP(struct soap*, struct _tds__SetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTP(struct soap*, struct _tds__SetNTP*);
    @endcode

  - <SetNTPResponse> @ref _tds__SetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTPResponse(struct soap*, struct _tds__SetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTPResponse(struct soap*, struct _tds__SetNTPResponse*);
    @endcode

  - <GetDynamicDNS> @ref _tds__GetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNS(struct soap*, struct _tds__GetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNS(struct soap*, struct _tds__GetDynamicDNS*);
    @endcode

  - <GetDynamicDNSResponse> @ref _tds__GetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNSResponse(struct soap*, struct _tds__GetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNSResponse(struct soap*, struct _tds__GetDynamicDNSResponse*);
    @endcode

  - <SetDynamicDNS> @ref _tds__SetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNS(struct soap*, struct _tds__SetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNS(struct soap*, struct _tds__SetDynamicDNS*);
    @endcode

  - <SetDynamicDNSResponse> @ref _tds__SetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNSResponse(struct soap*, struct _tds__SetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNSResponse(struct soap*, struct _tds__SetDynamicDNSResponse*);
    @endcode

  - <GetNetworkInterfaces> @ref _tds__GetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfaces(struct soap*, struct _tds__GetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfaces(struct soap*, struct _tds__GetNetworkInterfaces*);
    @endcode

  - <GetNetworkInterfacesResponse> @ref _tds__GetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfacesResponse(struct soap*, struct _tds__GetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfacesResponse(struct soap*, struct _tds__GetNetworkInterfacesResponse*);
    @endcode

  - <SetNetworkInterfaces> @ref _tds__SetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfaces(struct soap*, struct _tds__SetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfaces(struct soap*, struct _tds__SetNetworkInterfaces*);
    @endcode

  - <SetNetworkInterfacesResponse> @ref _tds__SetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfacesResponse(struct soap*, struct _tds__SetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfacesResponse(struct soap*, struct _tds__SetNetworkInterfacesResponse*);
    @endcode

  - <GetNetworkProtocols> @ref _tds__GetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocols(struct soap*, struct _tds__GetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocols(struct soap*, struct _tds__GetNetworkProtocols*);
    @endcode

  - <GetNetworkProtocolsResponse> @ref _tds__GetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocolsResponse(struct soap*, struct _tds__GetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocolsResponse(struct soap*, struct _tds__GetNetworkProtocolsResponse*);
    @endcode

  - <SetNetworkProtocols> @ref _tds__SetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocols(struct soap*, struct _tds__SetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocols(struct soap*, struct _tds__SetNetworkProtocols*);
    @endcode

  - <SetNetworkProtocolsResponse> @ref _tds__SetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocolsResponse(struct soap*, struct _tds__SetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocolsResponse(struct soap*, struct _tds__SetNetworkProtocolsResponse*);
    @endcode

  - <GetNetworkDefaultGateway> @ref _tds__GetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGateway(struct soap*, struct _tds__GetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGateway(struct soap*, struct _tds__GetNetworkDefaultGateway*);
    @endcode

  - <GetNetworkDefaultGatewayResponse> @ref _tds__GetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGatewayResponse(struct soap*, struct _tds__GetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGatewayResponse(struct soap*, struct _tds__GetNetworkDefaultGatewayResponse*);
    @endcode

  - <SetNetworkDefaultGateway> @ref _tds__SetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGateway(struct soap*, struct _tds__SetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGateway(struct soap*, struct _tds__SetNetworkDefaultGateway*);
    @endcode

  - <SetNetworkDefaultGatewayResponse> @ref _tds__SetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGatewayResponse(struct soap*, struct _tds__SetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGatewayResponse(struct soap*, struct _tds__SetNetworkDefaultGatewayResponse*);
    @endcode

  - <GetZeroConfiguration> @ref _tds__GetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfiguration(struct soap*, struct _tds__GetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfiguration(struct soap*, struct _tds__GetZeroConfiguration*);
    @endcode

  - <GetZeroConfigurationResponse> @ref _tds__GetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfigurationResponse(struct soap*, struct _tds__GetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfigurationResponse(struct soap*, struct _tds__GetZeroConfigurationResponse*);
    @endcode

  - <SetZeroConfiguration> @ref _tds__SetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfiguration(struct soap*, struct _tds__SetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfiguration(struct soap*, struct _tds__SetZeroConfiguration*);
    @endcode

  - <SetZeroConfigurationResponse> @ref _tds__SetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfigurationResponse(struct soap*, struct _tds__SetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfigurationResponse(struct soap*, struct _tds__SetZeroConfigurationResponse*);
    @endcode

  - <GetIPAddressFilter> @ref _tds__GetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilter(struct soap*, struct _tds__GetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilter(struct soap*, struct _tds__GetIPAddressFilter*);
    @endcode

  - <GetIPAddressFilterResponse> @ref _tds__GetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilterResponse(struct soap*, struct _tds__GetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilterResponse(struct soap*, struct _tds__GetIPAddressFilterResponse*);
    @endcode

  - <SetIPAddressFilter> @ref _tds__SetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilter(struct soap*, struct _tds__SetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilter(struct soap*, struct _tds__SetIPAddressFilter*);
    @endcode

  - <SetIPAddressFilterResponse> @ref _tds__SetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilterResponse(struct soap*, struct _tds__SetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilterResponse(struct soap*, struct _tds__SetIPAddressFilterResponse*);
    @endcode

  - <AddIPAddressFilter> @ref _tds__AddIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilter(struct soap*, struct _tds__AddIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilter(struct soap*, struct _tds__AddIPAddressFilter*);
    @endcode

  - <AddIPAddressFilterResponse> @ref _tds__AddIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilterResponse(struct soap*, struct _tds__AddIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilterResponse(struct soap*, struct _tds__AddIPAddressFilterResponse*);
    @endcode

  - <RemoveIPAddressFilter> @ref _tds__RemoveIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilter(struct soap*, struct _tds__RemoveIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilter(struct soap*, struct _tds__RemoveIPAddressFilter*);
    @endcode

  - <RemoveIPAddressFilterResponse> @ref _tds__RemoveIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilterResponse(struct soap*, struct _tds__RemoveIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilterResponse(struct soap*, struct _tds__RemoveIPAddressFilterResponse*);
    @endcode

  - <GetAccessPolicy> @ref _tds__GetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicy(struct soap*, struct _tds__GetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicy(struct soap*, struct _tds__GetAccessPolicy*);
    @endcode

  - <GetAccessPolicyResponse> @ref _tds__GetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicyResponse(struct soap*, struct _tds__GetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicyResponse(struct soap*, struct _tds__GetAccessPolicyResponse*);
    @endcode

  - <SetAccessPolicy> @ref _tds__SetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicy(struct soap*, struct _tds__SetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicy(struct soap*, struct _tds__SetAccessPolicy*);
    @endcode

  - <SetAccessPolicyResponse> @ref _tds__SetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicyResponse(struct soap*, struct _tds__SetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicyResponse(struct soap*, struct _tds__SetAccessPolicyResponse*);
    @endcode

  - <CreateCertificate> @ref _tds__CreateCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificate(struct soap*, struct _tds__CreateCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificate(struct soap*, struct _tds__CreateCertificate*);
    @endcode

  - <CreateCertificateResponse> @ref _tds__CreateCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificateResponse(struct soap*, struct _tds__CreateCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificateResponse(struct soap*, struct _tds__CreateCertificateResponse*);
    @endcode

  - <GetCertificates> @ref _tds__GetCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificates(struct soap*, struct _tds__GetCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificates(struct soap*, struct _tds__GetCertificates*);
    @endcode

  - <GetCertificatesResponse> @ref _tds__GetCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesResponse(struct soap*, struct _tds__GetCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesResponse(struct soap*, struct _tds__GetCertificatesResponse*);
    @endcode

  - <GetCertificatesStatus> @ref _tds__GetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatus(struct soap*, struct _tds__GetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatus(struct soap*, struct _tds__GetCertificatesStatus*);
    @endcode

  - <GetCertificatesStatusResponse> @ref _tds__GetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatusResponse(struct soap*, struct _tds__GetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatusResponse(struct soap*, struct _tds__GetCertificatesStatusResponse*);
    @endcode

  - <SetCertificatesStatus> @ref _tds__SetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatus(struct soap*, struct _tds__SetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatus(struct soap*, struct _tds__SetCertificatesStatus*);
    @endcode

  - <SetCertificatesStatusResponse> @ref _tds__SetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatusResponse(struct soap*, struct _tds__SetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatusResponse(struct soap*, struct _tds__SetCertificatesStatusResponse*);
    @endcode

  - <DeleteCertificates> @ref _tds__DeleteCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificates(struct soap*, struct _tds__DeleteCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificates(struct soap*, struct _tds__DeleteCertificates*);
    @endcode

  - <DeleteCertificatesResponse> @ref _tds__DeleteCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificatesResponse(struct soap*, struct _tds__DeleteCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificatesResponse(struct soap*, struct _tds__DeleteCertificatesResponse*);
    @endcode

  - <GetPkcs10Request> @ref _tds__GetPkcs10Request
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10Request(struct soap*, struct _tds__GetPkcs10Request*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10Request(struct soap*, struct _tds__GetPkcs10Request*);
    @endcode

  - <GetPkcs10RequestResponse> @ref _tds__GetPkcs10RequestResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10RequestResponse(struct soap*, struct _tds__GetPkcs10RequestResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10RequestResponse(struct soap*, struct _tds__GetPkcs10RequestResponse*);
    @endcode

  - <LoadCertificates> @ref _tds__LoadCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificates(struct soap*, struct _tds__LoadCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificates(struct soap*, struct _tds__LoadCertificates*);
    @endcode

  - <LoadCertificatesResponse> @ref _tds__LoadCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificatesResponse(struct soap*, struct _tds__LoadCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificatesResponse(struct soap*, struct _tds__LoadCertificatesResponse*);
    @endcode

  - <GetClientCertificateMode> @ref _tds__GetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateMode(struct soap*, struct _tds__GetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateMode(struct soap*, struct _tds__GetClientCertificateMode*);
    @endcode

  - <GetClientCertificateModeResponse> @ref _tds__GetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateModeResponse(struct soap*, struct _tds__GetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateModeResponse(struct soap*, struct _tds__GetClientCertificateModeResponse*);
    @endcode

  - <SetClientCertificateMode> @ref _tds__SetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateMode(struct soap*, struct _tds__SetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateMode(struct soap*, struct _tds__SetClientCertificateMode*);
    @endcode

  - <SetClientCertificateModeResponse> @ref _tds__SetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateModeResponse(struct soap*, struct _tds__SetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateModeResponse(struct soap*, struct _tds__SetClientCertificateModeResponse*);
    @endcode

  - <GetCACertificates> @ref _tds__GetCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificates(struct soap*, struct _tds__GetCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificates(struct soap*, struct _tds__GetCACertificates*);
    @endcode

  - <GetCACertificatesResponse> @ref _tds__GetCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificatesResponse(struct soap*, struct _tds__GetCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificatesResponse(struct soap*, struct _tds__GetCACertificatesResponse*);
    @endcode

  - <LoadCertificateWithPrivateKey> @ref _tds__LoadCertificateWithPrivateKey
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKey(struct soap*, struct _tds__LoadCertificateWithPrivateKey*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKey(struct soap*, struct _tds__LoadCertificateWithPrivateKey*);
    @endcode

  - <LoadCertificateWithPrivateKeyResponse> @ref _tds__LoadCertificateWithPrivateKeyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    @endcode

  - <GetCertificateInformation> @ref _tds__GetCertificateInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformation(struct soap*, struct _tds__GetCertificateInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformation(struct soap*, struct _tds__GetCertificateInformation*);
    @endcode

  - <GetCertificateInformationResponse> @ref _tds__GetCertificateInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformationResponse(struct soap*, struct _tds__GetCertificateInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformationResponse(struct soap*, struct _tds__GetCertificateInformationResponse*);
    @endcode

  - <LoadCACertificates> @ref _tds__LoadCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificates(struct soap*, struct _tds__LoadCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificates(struct soap*, struct _tds__LoadCACertificates*);
    @endcode

  - <LoadCACertificatesResponse> @ref _tds__LoadCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificatesResponse(struct soap*, struct _tds__LoadCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificatesResponse(struct soap*, struct _tds__LoadCACertificatesResponse*);
    @endcode

  - <CreateDot1XConfiguration> @ref _tds__CreateDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfiguration(struct soap*, struct _tds__CreateDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfiguration(struct soap*, struct _tds__CreateDot1XConfiguration*);
    @endcode

  - <CreateDot1XConfigurationResponse> @ref _tds__CreateDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfigurationResponse(struct soap*, struct _tds__CreateDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfigurationResponse(struct soap*, struct _tds__CreateDot1XConfigurationResponse*);
    @endcode

  - <SetDot1XConfiguration> @ref _tds__SetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfiguration(struct soap*, struct _tds__SetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfiguration(struct soap*, struct _tds__SetDot1XConfiguration*);
    @endcode

  - <SetDot1XConfigurationResponse> @ref _tds__SetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfigurationResponse(struct soap*, struct _tds__SetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfigurationResponse(struct soap*, struct _tds__SetDot1XConfigurationResponse*);
    @endcode

  - <GetDot1XConfiguration> @ref _tds__GetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfiguration(struct soap*, struct _tds__GetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfiguration(struct soap*, struct _tds__GetDot1XConfiguration*);
    @endcode

  - <GetDot1XConfigurationResponse> @ref _tds__GetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationResponse(struct soap*, struct _tds__GetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationResponse(struct soap*, struct _tds__GetDot1XConfigurationResponse*);
    @endcode

  - <GetDot1XConfigurations> @ref _tds__GetDot1XConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurations(struct soap*, struct _tds__GetDot1XConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurations(struct soap*, struct _tds__GetDot1XConfigurations*);
    @endcode

  - <GetDot1XConfigurationsResponse> @ref _tds__GetDot1XConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationsResponse(struct soap*, struct _tds__GetDot1XConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationsResponse(struct soap*, struct _tds__GetDot1XConfigurationsResponse*);
    @endcode

  - <DeleteDot1XConfiguration> @ref _tds__DeleteDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfiguration(struct soap*, struct _tds__DeleteDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfiguration(struct soap*, struct _tds__DeleteDot1XConfiguration*);
    @endcode

  - <DeleteDot1XConfigurationResponse> @ref _tds__DeleteDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfigurationResponse(struct soap*, struct _tds__DeleteDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfigurationResponse(struct soap*, struct _tds__DeleteDot1XConfigurationResponse*);
    @endcode

  - <GetRelayOutputs> @ref _tds__GetRelayOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputs(struct soap*, struct _tds__GetRelayOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputs(struct soap*, struct _tds__GetRelayOutputs*);
    @endcode

  - <GetRelayOutputsResponse> @ref _tds__GetRelayOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputsResponse(struct soap*, struct _tds__GetRelayOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputsResponse(struct soap*, struct _tds__GetRelayOutputsResponse*);
    @endcode

  - <SetRelayOutputSettings> @ref _tds__SetRelayOutputSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettings(struct soap*, struct _tds__SetRelayOutputSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettings(struct soap*, struct _tds__SetRelayOutputSettings*);
    @endcode

  - <SetRelayOutputSettingsResponse> @ref _tds__SetRelayOutputSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettingsResponse(struct soap*, struct _tds__SetRelayOutputSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettingsResponse(struct soap*, struct _tds__SetRelayOutputSettingsResponse*);
    @endcode

  - <SetRelayOutputState> @ref _tds__SetRelayOutputState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputState(struct soap*, struct _tds__SetRelayOutputState*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputState(struct soap*, struct _tds__SetRelayOutputState*);
    @endcode

  - <SetRelayOutputStateResponse> @ref _tds__SetRelayOutputStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputStateResponse(struct soap*, struct _tds__SetRelayOutputStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputStateResponse(struct soap*, struct _tds__SetRelayOutputStateResponse*);
    @endcode

  - <SendAuxiliaryCommand> @ref _tds__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommand(struct soap*, struct _tds__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommand(struct soap*, struct _tds__SendAuxiliaryCommand*);
    @endcode

  - <SendAuxiliaryCommandResponse> @ref _tds__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommandResponse(struct soap*, struct _tds__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommandResponse(struct soap*, struct _tds__SendAuxiliaryCommandResponse*);
    @endcode

  - <GetDot11Capabilities> @ref _tds__GetDot11Capabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Capabilities(struct soap*, struct _tds__GetDot11Capabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Capabilities(struct soap*, struct _tds__GetDot11Capabilities*);
    @endcode

  - <GetDot11CapabilitiesResponse> @ref _tds__GetDot11CapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11CapabilitiesResponse(struct soap*, struct _tds__GetDot11CapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11CapabilitiesResponse(struct soap*, struct _tds__GetDot11CapabilitiesResponse*);
    @endcode

  - <GetDot11Status> @ref _tds__GetDot11Status
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Status(struct soap*, struct _tds__GetDot11Status*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Status(struct soap*, struct _tds__GetDot11Status*);
    @endcode

  - <GetDot11StatusResponse> @ref _tds__GetDot11StatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11StatusResponse(struct soap*, struct _tds__GetDot11StatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11StatusResponse(struct soap*, struct _tds__GetDot11StatusResponse*);
    @endcode

  - <ScanAvailableDot11Networks> @ref _tds__ScanAvailableDot11Networks
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11Networks(struct soap*, struct _tds__ScanAvailableDot11Networks*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11Networks(struct soap*, struct _tds__ScanAvailableDot11Networks*);
    @endcode

  - <ScanAvailableDot11NetworksResponse> @ref _tds__ScanAvailableDot11NetworksResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11NetworksResponse(struct soap*, struct _tds__ScanAvailableDot11NetworksResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11NetworksResponse(struct soap*, struct _tds__ScanAvailableDot11NetworksResponse*);
    @endcode

  - <GetSystemUris> @ref _tds__GetSystemUris
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUris(struct soap*, struct _tds__GetSystemUris*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUris(struct soap*, struct _tds__GetSystemUris*);
    @endcode

  - <GetSystemUrisResponse> @ref _tds__GetSystemUrisResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUrisResponse(struct soap*, struct _tds__GetSystemUrisResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUrisResponse(struct soap*, struct _tds__GetSystemUrisResponse*);
    @endcode

  - <StartFirmwareUpgrade> @ref _tds__StartFirmwareUpgrade
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgrade(struct soap*, struct _tds__StartFirmwareUpgrade*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgrade(struct soap*, struct _tds__StartFirmwareUpgrade*);
    @endcode

  - <StartFirmwareUpgradeResponse> @ref _tds__StartFirmwareUpgradeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgradeResponse(struct soap*, struct _tds__StartFirmwareUpgradeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgradeResponse(struct soap*, struct _tds__StartFirmwareUpgradeResponse*);
    @endcode

  - <StartSystemRestore> @ref _tds__StartSystemRestore
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestore(struct soap*, struct _tds__StartSystemRestore*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestore(struct soap*, struct _tds__StartSystemRestore*);
    @endcode

  - <StartSystemRestoreResponse> @ref _tds__StartSystemRestoreResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestoreResponse(struct soap*, struct _tds__StartSystemRestoreResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestoreResponse(struct soap*, struct _tds__StartSystemRestoreResponse*);
    @endcode

  - <GetStorageConfigurations> @ref _tds__GetStorageConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurations(struct soap*, struct _tds__GetStorageConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurations(struct soap*, struct _tds__GetStorageConfigurations*);
    @endcode

  - <GetStorageConfigurationsResponse> @ref _tds__GetStorageConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurationsResponse(struct soap*, struct _tds__GetStorageConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurationsResponse(struct soap*, struct _tds__GetStorageConfigurationsResponse*);
    @endcode

  - <CreateStorageConfiguration> @ref _tds__CreateStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateStorageConfiguration(struct soap*, struct _tds__CreateStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateStorageConfiguration(struct soap*, struct _tds__CreateStorageConfiguration*);
    @endcode

  - <CreateStorageConfigurationResponse> @ref _tds__CreateStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateStorageConfigurationResponse(struct soap*, struct _tds__CreateStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateStorageConfigurationResponse(struct soap*, struct _tds__CreateStorageConfigurationResponse*);
    @endcode

  - <GetStorageConfiguration> @ref _tds__GetStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfiguration(struct soap*, struct _tds__GetStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfiguration(struct soap*, struct _tds__GetStorageConfiguration*);
    @endcode

  - <GetStorageConfigurationResponse> @ref _tds__GetStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurationResponse(struct soap*, struct _tds__GetStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurationResponse(struct soap*, struct _tds__GetStorageConfigurationResponse*);
    @endcode

  - <SetStorageConfiguration> @ref _tds__SetStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetStorageConfiguration(struct soap*, struct _tds__SetStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetStorageConfiguration(struct soap*, struct _tds__SetStorageConfiguration*);
    @endcode

  - <SetStorageConfigurationResponse> @ref _tds__SetStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetStorageConfigurationResponse(struct soap*, struct _tds__SetStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetStorageConfigurationResponse(struct soap*, struct _tds__SetStorageConfigurationResponse*);
    @endcode

  - <DeleteStorageConfiguration> @ref _tds__DeleteStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteStorageConfiguration(struct soap*, struct _tds__DeleteStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteStorageConfiguration(struct soap*, struct _tds__DeleteStorageConfiguration*);
    @endcode

  - <DeleteStorageConfigurationResponse> @ref _tds__DeleteStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteStorageConfigurationResponse(struct soap*, struct _tds__DeleteStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteStorageConfigurationResponse(struct soap*, struct _tds__DeleteStorageConfigurationResponse*);
    @endcode

@section timg Top-level root elements of schema "http://www.onvif.org/ver20/imaging/wsdl"

  - <GetServiceCapabilities> @ref _timg__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetServiceCapabilities(struct soap*, struct _timg__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetServiceCapabilities(struct soap*, struct _timg__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _timg__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetServiceCapabilitiesResponse(struct soap*, struct _timg__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetServiceCapabilitiesResponse(struct soap*, struct _timg__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <GetImagingSettings> @ref _timg__GetImagingSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetImagingSettings(struct soap*, struct _timg__GetImagingSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetImagingSettings(struct soap*, struct _timg__GetImagingSettings*);
    @endcode

  - <GetImagingSettingsResponse> @ref _timg__GetImagingSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetImagingSettingsResponse(struct soap*, struct _timg__GetImagingSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetImagingSettingsResponse(struct soap*, struct _timg__GetImagingSettingsResponse*);
    @endcode

  - <SetImagingSettings> @ref _timg__SetImagingSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__SetImagingSettings(struct soap*, struct _timg__SetImagingSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__SetImagingSettings(struct soap*, struct _timg__SetImagingSettings*);
    @endcode

  - <SetImagingSettingsResponse> @ref _timg__SetImagingSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__SetImagingSettingsResponse(struct soap*, struct _timg__SetImagingSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__SetImagingSettingsResponse(struct soap*, struct _timg__SetImagingSettingsResponse*);
    @endcode

  - <GetOptions> @ref _timg__GetOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetOptions(struct soap*, struct _timg__GetOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetOptions(struct soap*, struct _timg__GetOptions*);
    @endcode

  - <GetOptionsResponse> @ref _timg__GetOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetOptionsResponse(struct soap*, struct _timg__GetOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetOptionsResponse(struct soap*, struct _timg__GetOptionsResponse*);
    @endcode

  - <Move> @ref _timg__Move
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__Move(struct soap*, struct _timg__Move*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__Move(struct soap*, struct _timg__Move*);
    @endcode

  - <MoveResponse> @ref _timg__MoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__MoveResponse(struct soap*, struct _timg__MoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__MoveResponse(struct soap*, struct _timg__MoveResponse*);
    @endcode

  - <GetMoveOptions> @ref _timg__GetMoveOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetMoveOptions(struct soap*, struct _timg__GetMoveOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetMoveOptions(struct soap*, struct _timg__GetMoveOptions*);
    @endcode

  - <GetMoveOptionsResponse> @ref _timg__GetMoveOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetMoveOptionsResponse(struct soap*, struct _timg__GetMoveOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetMoveOptionsResponse(struct soap*, struct _timg__GetMoveOptionsResponse*);
    @endcode

  - <Stop> @ref _timg__Stop
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__Stop(struct soap*, struct _timg__Stop*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__Stop(struct soap*, struct _timg__Stop*);
    @endcode

  - <StopResponse> @ref _timg__StopResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__StopResponse(struct soap*, struct _timg__StopResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__StopResponse(struct soap*, struct _timg__StopResponse*);
    @endcode

  - <GetStatus> @ref _timg__GetStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetStatus(struct soap*, struct _timg__GetStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetStatus(struct soap*, struct _timg__GetStatus*);
    @endcode

  - <GetStatusResponse> @ref _timg__GetStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetStatusResponse(struct soap*, struct _timg__GetStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetStatusResponse(struct soap*, struct _timg__GetStatusResponse*);
    @endcode

@section tptz Top-level root elements of schema "http://www.onvif.org/ver20/ptz/wsdl"

  - <GetServiceCapabilities> @ref _tptz__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetServiceCapabilities(struct soap*, struct _tptz__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetServiceCapabilities(struct soap*, struct _tptz__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _tptz__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetServiceCapabilitiesResponse(struct soap*, struct _tptz__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetServiceCapabilitiesResponse(struct soap*, struct _tptz__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <GetNodes> @ref _tptz__GetNodes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodes(struct soap*, struct _tptz__GetNodes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodes(struct soap*, struct _tptz__GetNodes*);
    @endcode

  - <GetNodesResponse> @ref _tptz__GetNodesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodesResponse(struct soap*, struct _tptz__GetNodesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodesResponse(struct soap*, struct _tptz__GetNodesResponse*);
    @endcode

  - <GetNode> @ref _tptz__GetNode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNode(struct soap*, struct _tptz__GetNode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNode(struct soap*, struct _tptz__GetNode*);
    @endcode

  - <GetNodeResponse> @ref _tptz__GetNodeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodeResponse(struct soap*, struct _tptz__GetNodeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodeResponse(struct soap*, struct _tptz__GetNodeResponse*);
    @endcode

  - <GetConfigurations> @ref _tptz__GetConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurations(struct soap*, struct _tptz__GetConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurations(struct soap*, struct _tptz__GetConfigurations*);
    @endcode

  - <GetConfigurationsResponse> @ref _tptz__GetConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationsResponse(struct soap*, struct _tptz__GetConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationsResponse(struct soap*, struct _tptz__GetConfigurationsResponse*);
    @endcode

  - <GetConfiguration> @ref _tptz__GetConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfiguration(struct soap*, struct _tptz__GetConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfiguration(struct soap*, struct _tptz__GetConfiguration*);
    @endcode

  - <GetConfigurationResponse> @ref _tptz__GetConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationResponse(struct soap*, struct _tptz__GetConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationResponse(struct soap*, struct _tptz__GetConfigurationResponse*);
    @endcode

  - <SetConfiguration> @ref _tptz__SetConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetConfiguration(struct soap*, struct _tptz__SetConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetConfiguration(struct soap*, struct _tptz__SetConfiguration*);
    @endcode

  - <SetConfigurationResponse> @ref _tptz__SetConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetConfigurationResponse(struct soap*, struct _tptz__SetConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetConfigurationResponse(struct soap*, struct _tptz__SetConfigurationResponse*);
    @endcode

  - <GetConfigurationOptions> @ref _tptz__GetConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationOptions(struct soap*, struct _tptz__GetConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationOptions(struct soap*, struct _tptz__GetConfigurationOptions*);
    @endcode

  - <GetConfigurationOptionsResponse> @ref _tptz__GetConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationOptionsResponse(struct soap*, struct _tptz__GetConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationOptionsResponse(struct soap*, struct _tptz__GetConfigurationOptionsResponse*);
    @endcode

  - <SendAuxiliaryCommand> @ref _tptz__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SendAuxiliaryCommand(struct soap*, struct _tptz__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SendAuxiliaryCommand(struct soap*, struct _tptz__SendAuxiliaryCommand*);
    @endcode

  - <SendAuxiliaryCommandResponse> @ref _tptz__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SendAuxiliaryCommandResponse(struct soap*, struct _tptz__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SendAuxiliaryCommandResponse(struct soap*, struct _tptz__SendAuxiliaryCommandResponse*);
    @endcode

  - <GetPresets> @ref _tptz__GetPresets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresets(struct soap*, struct _tptz__GetPresets*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresets(struct soap*, struct _tptz__GetPresets*);
    @endcode

  - <GetPresetsResponse> @ref _tptz__GetPresetsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetsResponse(struct soap*, struct _tptz__GetPresetsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetsResponse(struct soap*, struct _tptz__GetPresetsResponse*);
    @endcode

  - <SetPreset> @ref _tptz__SetPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetPreset(struct soap*, struct _tptz__SetPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetPreset(struct soap*, struct _tptz__SetPreset*);
    @endcode

  - <SetPresetResponse> @ref _tptz__SetPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetPresetResponse(struct soap*, struct _tptz__SetPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetPresetResponse(struct soap*, struct _tptz__SetPresetResponse*);
    @endcode

  - <RemovePreset> @ref _tptz__RemovePreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePreset(struct soap*, struct _tptz__RemovePreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePreset(struct soap*, struct _tptz__RemovePreset*);
    @endcode

  - <RemovePresetResponse> @ref _tptz__RemovePresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetResponse(struct soap*, struct _tptz__RemovePresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetResponse(struct soap*, struct _tptz__RemovePresetResponse*);
    @endcode

  - <GotoPreset> @ref _tptz__GotoPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoPreset(struct soap*, struct _tptz__GotoPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoPreset(struct soap*, struct _tptz__GotoPreset*);
    @endcode

  - <GotoPresetResponse> @ref _tptz__GotoPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoPresetResponse(struct soap*, struct _tptz__GotoPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoPresetResponse(struct soap*, struct _tptz__GotoPresetResponse*);
    @endcode

  - <GetStatus> @ref _tptz__GetStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetStatus(struct soap*, struct _tptz__GetStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetStatus(struct soap*, struct _tptz__GetStatus*);
    @endcode

  - <GetStatusResponse> @ref _tptz__GetStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetStatusResponse(struct soap*, struct _tptz__GetStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetStatusResponse(struct soap*, struct _tptz__GetStatusResponse*);
    @endcode

  - <GotoHomePosition> @ref _tptz__GotoHomePosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoHomePosition(struct soap*, struct _tptz__GotoHomePosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoHomePosition(struct soap*, struct _tptz__GotoHomePosition*);
    @endcode

  - <GotoHomePositionResponse> @ref _tptz__GotoHomePositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoHomePositionResponse(struct soap*, struct _tptz__GotoHomePositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoHomePositionResponse(struct soap*, struct _tptz__GotoHomePositionResponse*);
    @endcode

  - <SetHomePosition> @ref _tptz__SetHomePosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetHomePosition(struct soap*, struct _tptz__SetHomePosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetHomePosition(struct soap*, struct _tptz__SetHomePosition*);
    @endcode

  - <SetHomePositionResponse> @ref _tptz__SetHomePositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetHomePositionResponse(struct soap*, struct _tptz__SetHomePositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetHomePositionResponse(struct soap*, struct _tptz__SetHomePositionResponse*);
    @endcode

  - <ContinuousMove> @ref _tptz__ContinuousMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ContinuousMove(struct soap*, struct _tptz__ContinuousMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ContinuousMove(struct soap*, struct _tptz__ContinuousMove*);
    @endcode

  - <ContinuousMoveResponse> @ref _tptz__ContinuousMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ContinuousMoveResponse(struct soap*, struct _tptz__ContinuousMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ContinuousMoveResponse(struct soap*, struct _tptz__ContinuousMoveResponse*);
    @endcode

  - <RelativeMove> @ref _tptz__RelativeMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RelativeMove(struct soap*, struct _tptz__RelativeMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RelativeMove(struct soap*, struct _tptz__RelativeMove*);
    @endcode

  - <RelativeMoveResponse> @ref _tptz__RelativeMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RelativeMoveResponse(struct soap*, struct _tptz__RelativeMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RelativeMoveResponse(struct soap*, struct _tptz__RelativeMoveResponse*);
    @endcode

  - <AbsoluteMove> @ref _tptz__AbsoluteMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__AbsoluteMove(struct soap*, struct _tptz__AbsoluteMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__AbsoluteMove(struct soap*, struct _tptz__AbsoluteMove*);
    @endcode

  - <AbsoluteMoveResponse> @ref _tptz__AbsoluteMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__AbsoluteMoveResponse(struct soap*, struct _tptz__AbsoluteMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__AbsoluteMoveResponse(struct soap*, struct _tptz__AbsoluteMoveResponse*);
    @endcode

  - <Stop> @ref _tptz__Stop
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__Stop(struct soap*, struct _tptz__Stop*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__Stop(struct soap*, struct _tptz__Stop*);
    @endcode

  - <StopResponse> @ref _tptz__StopResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__StopResponse(struct soap*, struct _tptz__StopResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__StopResponse(struct soap*, struct _tptz__StopResponse*);
    @endcode

  - <GetPresetTours> @ref _tptz__GetPresetTours
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTours(struct soap*, struct _tptz__GetPresetTours*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTours(struct soap*, struct _tptz__GetPresetTours*);
    @endcode

  - <GetPresetToursResponse> @ref _tptz__GetPresetToursResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetToursResponse(struct soap*, struct _tptz__GetPresetToursResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetToursResponse(struct soap*, struct _tptz__GetPresetToursResponse*);
    @endcode

  - <GetPresetTour> @ref _tptz__GetPresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTour(struct soap*, struct _tptz__GetPresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTour(struct soap*, struct _tptz__GetPresetTour*);
    @endcode

  - <GetPresetTourResponse> @ref _tptz__GetPresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourResponse(struct soap*, struct _tptz__GetPresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourResponse(struct soap*, struct _tptz__GetPresetTourResponse*);
    @endcode

  - <GetPresetTourOptions> @ref _tptz__GetPresetTourOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourOptions(struct soap*, struct _tptz__GetPresetTourOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourOptions(struct soap*, struct _tptz__GetPresetTourOptions*);
    @endcode

  - <GetPresetTourOptionsResponse> @ref _tptz__GetPresetTourOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourOptionsResponse(struct soap*, struct _tptz__GetPresetTourOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourOptionsResponse(struct soap*, struct _tptz__GetPresetTourOptionsResponse*);
    @endcode

  - <CreatePresetTour> @ref _tptz__CreatePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__CreatePresetTour(struct soap*, struct _tptz__CreatePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__CreatePresetTour(struct soap*, struct _tptz__CreatePresetTour*);
    @endcode

  - <CreatePresetTourResponse> @ref _tptz__CreatePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__CreatePresetTourResponse(struct soap*, struct _tptz__CreatePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__CreatePresetTourResponse(struct soap*, struct _tptz__CreatePresetTourResponse*);
    @endcode

  - <ModifyPresetTour> @ref _tptz__ModifyPresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ModifyPresetTour(struct soap*, struct _tptz__ModifyPresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ModifyPresetTour(struct soap*, struct _tptz__ModifyPresetTour*);
    @endcode

  - <ModifyPresetTourResponse> @ref _tptz__ModifyPresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ModifyPresetTourResponse(struct soap*, struct _tptz__ModifyPresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ModifyPresetTourResponse(struct soap*, struct _tptz__ModifyPresetTourResponse*);
    @endcode

  - <OperatePresetTour> @ref _tptz__OperatePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__OperatePresetTour(struct soap*, struct _tptz__OperatePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__OperatePresetTour(struct soap*, struct _tptz__OperatePresetTour*);
    @endcode

  - <OperatePresetTourResponse> @ref _tptz__OperatePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__OperatePresetTourResponse(struct soap*, struct _tptz__OperatePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__OperatePresetTourResponse(struct soap*, struct _tptz__OperatePresetTourResponse*);
    @endcode

  - <RemovePresetTour> @ref _tptz__RemovePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetTour(struct soap*, struct _tptz__RemovePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetTour(struct soap*, struct _tptz__RemovePresetTour*);
    @endcode

  - <RemovePresetTourResponse> @ref _tptz__RemovePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetTourResponse(struct soap*, struct _tptz__RemovePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetTourResponse(struct soap*, struct _tptz__RemovePresetTourResponse*);
    @endcode

  - <GetCompatibleConfigurations> @ref _tptz__GetCompatibleConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetCompatibleConfigurations(struct soap*, struct _tptz__GetCompatibleConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetCompatibleConfigurations(struct soap*, struct _tptz__GetCompatibleConfigurations*);
    @endcode

  - <GetCompatibleConfigurationsResponse> @ref _tptz__GetCompatibleConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetCompatibleConfigurationsResponse(struct soap*, struct _tptz__GetCompatibleConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetCompatibleConfigurationsResponse(struct soap*, struct _tptz__GetCompatibleConfigurationsResponse*);
    @endcode

@section trv Top-level root elements of schema "http://www.onvif.org/ver10/receiver/wsdl"

  - <GetServiceCapabilities> @ref _trv__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetServiceCapabilities(struct soap*, struct _trv__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetServiceCapabilities(struct soap*, struct _trv__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _trv__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetServiceCapabilitiesResponse(struct soap*, struct _trv__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetServiceCapabilitiesResponse(struct soap*, struct _trv__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <GetReceivers> @ref _trv__GetReceivers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceivers(struct soap*, struct _trv__GetReceivers*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceivers(struct soap*, struct _trv__GetReceivers*);
    @endcode

  - <GetReceiversResponse> @ref _trv__GetReceiversResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceiversResponse(struct soap*, struct _trv__GetReceiversResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceiversResponse(struct soap*, struct _trv__GetReceiversResponse*);
    @endcode

  - <GetReceiver> @ref _trv__GetReceiver
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceiver(struct soap*, struct _trv__GetReceiver*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceiver(struct soap*, struct _trv__GetReceiver*);
    @endcode

  - <GetReceiverResponse> @ref _trv__GetReceiverResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceiverResponse(struct soap*, struct _trv__GetReceiverResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceiverResponse(struct soap*, struct _trv__GetReceiverResponse*);
    @endcode

  - <CreateReceiver> @ref _trv__CreateReceiver
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__CreateReceiver(struct soap*, struct _trv__CreateReceiver*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__CreateReceiver(struct soap*, struct _trv__CreateReceiver*);
    @endcode

  - <CreateReceiverResponse> @ref _trv__CreateReceiverResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__CreateReceiverResponse(struct soap*, struct _trv__CreateReceiverResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__CreateReceiverResponse(struct soap*, struct _trv__CreateReceiverResponse*);
    @endcode

  - <DeleteReceiver> @ref _trv__DeleteReceiver
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__DeleteReceiver(struct soap*, struct _trv__DeleteReceiver*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__DeleteReceiver(struct soap*, struct _trv__DeleteReceiver*);
    @endcode

  - <DeleteReceiverResponse> @ref _trv__DeleteReceiverResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__DeleteReceiverResponse(struct soap*, struct _trv__DeleteReceiverResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__DeleteReceiverResponse(struct soap*, struct _trv__DeleteReceiverResponse*);
    @endcode

  - <ConfigureReceiver> @ref _trv__ConfigureReceiver
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__ConfigureReceiver(struct soap*, struct _trv__ConfigureReceiver*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__ConfigureReceiver(struct soap*, struct _trv__ConfigureReceiver*);
    @endcode

  - <ConfigureReceiverResponse> @ref _trv__ConfigureReceiverResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__ConfigureReceiverResponse(struct soap*, struct _trv__ConfigureReceiverResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__ConfigureReceiverResponse(struct soap*, struct _trv__ConfigureReceiverResponse*);
    @endcode

  - <SetReceiverMode> @ref _trv__SetReceiverMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__SetReceiverMode(struct soap*, struct _trv__SetReceiverMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__SetReceiverMode(struct soap*, struct _trv__SetReceiverMode*);
    @endcode

  - <SetReceiverModeResponse> @ref _trv__SetReceiverModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__SetReceiverModeResponse(struct soap*, struct _trv__SetReceiverModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__SetReceiverModeResponse(struct soap*, struct _trv__SetReceiverModeResponse*);
    @endcode

  - <GetReceiverState> @ref _trv__GetReceiverState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceiverState(struct soap*, struct _trv__GetReceiverState*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceiverState(struct soap*, struct _trv__GetReceiverState*);
    @endcode

  - <GetReceiverStateResponse> @ref _trv__GetReceiverStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceiverStateResponse(struct soap*, struct _trv__GetReceiverStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceiverStateResponse(struct soap*, struct _trv__GetReceiverStateResponse*);
    @endcode

@section trc Top-level root elements of schema "http://www.onvif.org/ver10/recording/wsdl"

  - <GetServiceCapabilities> @ref _trc__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetServiceCapabilities(struct soap*, struct _trc__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetServiceCapabilities(struct soap*, struct _trc__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _trc__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetServiceCapabilitiesResponse(struct soap*, struct _trc__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetServiceCapabilitiesResponse(struct soap*, struct _trc__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <CreateRecording> @ref _trc__CreateRecording
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__CreateRecording(struct soap*, struct _trc__CreateRecording*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__CreateRecording(struct soap*, struct _trc__CreateRecording*);
    @endcode

  - <CreateRecordingResponse> @ref _trc__CreateRecordingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__CreateRecordingResponse(struct soap*, struct _trc__CreateRecordingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__CreateRecordingResponse(struct soap*, struct _trc__CreateRecordingResponse*);
    @endcode

  - <DeleteRecording> @ref _trc__DeleteRecording
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__DeleteRecording(struct soap*, struct _trc__DeleteRecording*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__DeleteRecording(struct soap*, struct _trc__DeleteRecording*);
    @endcode

  - <DeleteRecordingResponse> @ref _trc__DeleteRecordingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__DeleteRecordingResponse(struct soap*, struct _trc__DeleteRecordingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__DeleteRecordingResponse(struct soap*, struct _trc__DeleteRecordingResponse*);
    @endcode

  - <GetRecordings> @ref _trc__GetRecordings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetRecordings(struct soap*, struct _trc__GetRecordings*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetRecordings(struct soap*, struct _trc__GetRecordings*);
    @endcode

  - <GetRecordingsResponse> @ref _trc__GetRecordingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetRecordingsResponse(struct soap*, struct _trc__GetRecordingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetRecordingsResponse(struct soap*, struct _trc__GetRecordingsResponse*);
    @endcode

  - <SetRecordingConfiguration> @ref _trc__SetRecordingConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__SetRecordingConfiguration(struct soap*, struct _trc__SetRecordingConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__SetRecordingConfiguration(struct soap*, struct _trc__SetRecordingConfiguration*);
    @endcode

  - <SetRecordingConfigurationResponse> @ref _trc__SetRecordingConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__SetRecordingConfigurationResponse(struct soap*, struct _trc__SetRecordingConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__SetRecordingConfigurationResponse(struct soap*, struct _trc__SetRecordingConfigurationResponse*);
    @endcode

  - <GetRecordingConfiguration> @ref _trc__GetRecordingConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetRecordingConfiguration(struct soap*, struct _trc__GetRecordingConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetRecordingConfiguration(struct soap*, struct _trc__GetRecordingConfiguration*);
    @endcode

  - <GetRecordingConfigurationResponse> @ref _trc__GetRecordingConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetRecordingConfigurationResponse(struct soap*, struct _trc__GetRecordingConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetRecordingConfigurationResponse(struct soap*, struct _trc__GetRecordingConfigurationResponse*);
    @endcode

  - <CreateTrack> @ref _trc__CreateTrack
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__CreateTrack(struct soap*, struct _trc__CreateTrack*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__CreateTrack(struct soap*, struct _trc__CreateTrack*);
    @endcode

  - <CreateTrackResponse> @ref _trc__CreateTrackResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__CreateTrackResponse(struct soap*, struct _trc__CreateTrackResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__CreateTrackResponse(struct soap*, struct _trc__CreateTrackResponse*);
    @endcode

  - <DeleteTrack> @ref _trc__DeleteTrack
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__DeleteTrack(struct soap*, struct _trc__DeleteTrack*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__DeleteTrack(struct soap*, struct _trc__DeleteTrack*);
    @endcode

  - <DeleteTrackResponse> @ref _trc__DeleteTrackResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__DeleteTrackResponse(struct soap*, struct _trc__DeleteTrackResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__DeleteTrackResponse(struct soap*, struct _trc__DeleteTrackResponse*);
    @endcode

  - <GetTrackConfiguration> @ref _trc__GetTrackConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetTrackConfiguration(struct soap*, struct _trc__GetTrackConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetTrackConfiguration(struct soap*, struct _trc__GetTrackConfiguration*);
    @endcode

  - <GetTrackConfigurationResponse> @ref _trc__GetTrackConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetTrackConfigurationResponse(struct soap*, struct _trc__GetTrackConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetTrackConfigurationResponse(struct soap*, struct _trc__GetTrackConfigurationResponse*);
    @endcode

  - <SetTrackConfiguration> @ref _trc__SetTrackConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__SetTrackConfiguration(struct soap*, struct _trc__SetTrackConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__SetTrackConfiguration(struct soap*, struct _trc__SetTrackConfiguration*);
    @endcode

  - <SetTrackConfigurationResponse> @ref _trc__SetTrackConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__SetTrackConfigurationResponse(struct soap*, struct _trc__SetTrackConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__SetTrackConfigurationResponse(struct soap*, struct _trc__SetTrackConfigurationResponse*);
    @endcode

  - <CreateRecordingJob> @ref _trc__CreateRecordingJob
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__CreateRecordingJob(struct soap*, struct _trc__CreateRecordingJob*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__CreateRecordingJob(struct soap*, struct _trc__CreateRecordingJob*);
    @endcode

  - <CreateRecordingJobResponse> @ref _trc__CreateRecordingJobResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__CreateRecordingJobResponse(struct soap*, struct _trc__CreateRecordingJobResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__CreateRecordingJobResponse(struct soap*, struct _trc__CreateRecordingJobResponse*);
    @endcode

  - <DeleteRecordingJob> @ref _trc__DeleteRecordingJob
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__DeleteRecordingJob(struct soap*, struct _trc__DeleteRecordingJob*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__DeleteRecordingJob(struct soap*, struct _trc__DeleteRecordingJob*);
    @endcode

  - <DeleteRecordingJobResponse> @ref _trc__DeleteRecordingJobResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__DeleteRecordingJobResponse(struct soap*, struct _trc__DeleteRecordingJobResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__DeleteRecordingJobResponse(struct soap*, struct _trc__DeleteRecordingJobResponse*);
    @endcode

  - <GetRecordingJobs> @ref _trc__GetRecordingJobs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetRecordingJobs(struct soap*, struct _trc__GetRecordingJobs*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetRecordingJobs(struct soap*, struct _trc__GetRecordingJobs*);
    @endcode

  - <GetRecordingJobsResponse> @ref _trc__GetRecordingJobsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetRecordingJobsResponse(struct soap*, struct _trc__GetRecordingJobsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetRecordingJobsResponse(struct soap*, struct _trc__GetRecordingJobsResponse*);
    @endcode

  - <SetRecordingJobConfiguration> @ref _trc__SetRecordingJobConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__SetRecordingJobConfiguration(struct soap*, struct _trc__SetRecordingJobConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__SetRecordingJobConfiguration(struct soap*, struct _trc__SetRecordingJobConfiguration*);
    @endcode

  - <SetRecordingJobConfigurationResponse> @ref _trc__SetRecordingJobConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__SetRecordingJobConfigurationResponse(struct soap*, struct _trc__SetRecordingJobConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__SetRecordingJobConfigurationResponse(struct soap*, struct _trc__SetRecordingJobConfigurationResponse*);
    @endcode

  - <GetRecordingJobConfiguration> @ref _trc__GetRecordingJobConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetRecordingJobConfiguration(struct soap*, struct _trc__GetRecordingJobConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetRecordingJobConfiguration(struct soap*, struct _trc__GetRecordingJobConfiguration*);
    @endcode

  - <GetRecordingJobConfigurationResponse> @ref _trc__GetRecordingJobConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetRecordingJobConfigurationResponse(struct soap*, struct _trc__GetRecordingJobConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetRecordingJobConfigurationResponse(struct soap*, struct _trc__GetRecordingJobConfigurationResponse*);
    @endcode

  - <SetRecordingJobMode> @ref _trc__SetRecordingJobMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__SetRecordingJobMode(struct soap*, struct _trc__SetRecordingJobMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__SetRecordingJobMode(struct soap*, struct _trc__SetRecordingJobMode*);
    @endcode

  - <SetRecordingJobModeResponse> @ref _trc__SetRecordingJobModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__SetRecordingJobModeResponse(struct soap*, struct _trc__SetRecordingJobModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__SetRecordingJobModeResponse(struct soap*, struct _trc__SetRecordingJobModeResponse*);
    @endcode

  - <GetRecordingJobState> @ref _trc__GetRecordingJobState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetRecordingJobState(struct soap*, struct _trc__GetRecordingJobState*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetRecordingJobState(struct soap*, struct _trc__GetRecordingJobState*);
    @endcode

  - <GetRecordingJobStateResponse> @ref _trc__GetRecordingJobStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetRecordingJobStateResponse(struct soap*, struct _trc__GetRecordingJobStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetRecordingJobStateResponse(struct soap*, struct _trc__GetRecordingJobStateResponse*);
    @endcode

  - <GetRecordingOptions> @ref _trc__GetRecordingOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetRecordingOptions(struct soap*, struct _trc__GetRecordingOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetRecordingOptions(struct soap*, struct _trc__GetRecordingOptions*);
    @endcode

  - <GetRecordingOptionsResponse> @ref _trc__GetRecordingOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetRecordingOptionsResponse(struct soap*, struct _trc__GetRecordingOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetRecordingOptionsResponse(struct soap*, struct _trc__GetRecordingOptionsResponse*);
    @endcode

  - <ExportRecordedData> @ref _trc__ExportRecordedData
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__ExportRecordedData(struct soap*, struct _trc__ExportRecordedData*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__ExportRecordedData(struct soap*, struct _trc__ExportRecordedData*);
    @endcode

  - <ExportRecordedDataResponse> @ref _trc__ExportRecordedDataResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__ExportRecordedDataResponse(struct soap*, struct _trc__ExportRecordedDataResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__ExportRecordedDataResponse(struct soap*, struct _trc__ExportRecordedDataResponse*);
    @endcode

  - <StopExportRecordedData> @ref _trc__StopExportRecordedData
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__StopExportRecordedData(struct soap*, struct _trc__StopExportRecordedData*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__StopExportRecordedData(struct soap*, struct _trc__StopExportRecordedData*);
    @endcode

  - <StopExportRecordedDataResponse> @ref _trc__StopExportRecordedDataResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__StopExportRecordedDataResponse(struct soap*, struct _trc__StopExportRecordedDataResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__StopExportRecordedDataResponse(struct soap*, struct _trc__StopExportRecordedDataResponse*);
    @endcode

  - <GetExportRecordedDataState> @ref _trc__GetExportRecordedDataState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetExportRecordedDataState(struct soap*, struct _trc__GetExportRecordedDataState*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetExportRecordedDataState(struct soap*, struct _trc__GetExportRecordedDataState*);
    @endcode

  - <GetExportRecordedDataStateResponse> @ref _trc__GetExportRecordedDataStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trc__GetExportRecordedDataStateResponse(struct soap*, struct _trc__GetExportRecordedDataStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trc__GetExportRecordedDataStateResponse(struct soap*, struct _trc__GetExportRecordedDataStateResponse*);
    @endcode

@section tse Top-level root elements of schema "http://www.onvif.org/ver10/search/wsdl"

  - <GetServiceCapabilities> @ref _tse__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetServiceCapabilities(struct soap*, struct _tse__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetServiceCapabilities(struct soap*, struct _tse__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _tse__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetServiceCapabilitiesResponse(struct soap*, struct _tse__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetServiceCapabilitiesResponse(struct soap*, struct _tse__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <GetRecordingSummary> @ref _tse__GetRecordingSummary
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetRecordingSummary(struct soap*, struct _tse__GetRecordingSummary*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetRecordingSummary(struct soap*, struct _tse__GetRecordingSummary*);
    @endcode

  - <GetRecordingSummaryResponse> @ref _tse__GetRecordingSummaryResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetRecordingSummaryResponse(struct soap*, struct _tse__GetRecordingSummaryResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetRecordingSummaryResponse(struct soap*, struct _tse__GetRecordingSummaryResponse*);
    @endcode

  - <GetRecordingInformation> @ref _tse__GetRecordingInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetRecordingInformation(struct soap*, struct _tse__GetRecordingInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetRecordingInformation(struct soap*, struct _tse__GetRecordingInformation*);
    @endcode

  - <GetRecordingInformationResponse> @ref _tse__GetRecordingInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetRecordingInformationResponse(struct soap*, struct _tse__GetRecordingInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetRecordingInformationResponse(struct soap*, struct _tse__GetRecordingInformationResponse*);
    @endcode

  - <GetMediaAttributes> @ref _tse__GetMediaAttributes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetMediaAttributes(struct soap*, struct _tse__GetMediaAttributes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetMediaAttributes(struct soap*, struct _tse__GetMediaAttributes*);
    @endcode

  - <GetMediaAttributesResponse> @ref _tse__GetMediaAttributesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetMediaAttributesResponse(struct soap*, struct _tse__GetMediaAttributesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetMediaAttributesResponse(struct soap*, struct _tse__GetMediaAttributesResponse*);
    @endcode

  - <FindRecordings> @ref _tse__FindRecordings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindRecordings(struct soap*, struct _tse__FindRecordings*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindRecordings(struct soap*, struct _tse__FindRecordings*);
    @endcode

  - <FindRecordingsResponse> @ref _tse__FindRecordingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindRecordingsResponse(struct soap*, struct _tse__FindRecordingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindRecordingsResponse(struct soap*, struct _tse__FindRecordingsResponse*);
    @endcode

  - <GetRecordingSearchResults> @ref _tse__GetRecordingSearchResults
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetRecordingSearchResults(struct soap*, struct _tse__GetRecordingSearchResults*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetRecordingSearchResults(struct soap*, struct _tse__GetRecordingSearchResults*);
    @endcode

  - <GetRecordingSearchResultsResponse> @ref _tse__GetRecordingSearchResultsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetRecordingSearchResultsResponse(struct soap*, struct _tse__GetRecordingSearchResultsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetRecordingSearchResultsResponse(struct soap*, struct _tse__GetRecordingSearchResultsResponse*);
    @endcode

  - <FindEvents> @ref _tse__FindEvents
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindEvents(struct soap*, struct _tse__FindEvents*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindEvents(struct soap*, struct _tse__FindEvents*);
    @endcode

  - <FindEventsResponse> @ref _tse__FindEventsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindEventsResponse(struct soap*, struct _tse__FindEventsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindEventsResponse(struct soap*, struct _tse__FindEventsResponse*);
    @endcode

  - <GetEventSearchResults> @ref _tse__GetEventSearchResults
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetEventSearchResults(struct soap*, struct _tse__GetEventSearchResults*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetEventSearchResults(struct soap*, struct _tse__GetEventSearchResults*);
    @endcode

  - <GetEventSearchResultsResponse> @ref _tse__GetEventSearchResultsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetEventSearchResultsResponse(struct soap*, struct _tse__GetEventSearchResultsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetEventSearchResultsResponse(struct soap*, struct _tse__GetEventSearchResultsResponse*);
    @endcode

  - <FindPTZPosition> @ref _tse__FindPTZPosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindPTZPosition(struct soap*, struct _tse__FindPTZPosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindPTZPosition(struct soap*, struct _tse__FindPTZPosition*);
    @endcode

  - <FindPTZPositionResponse> @ref _tse__FindPTZPositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindPTZPositionResponse(struct soap*, struct _tse__FindPTZPositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindPTZPositionResponse(struct soap*, struct _tse__FindPTZPositionResponse*);
    @endcode

  - <GetPTZPositionSearchResults> @ref _tse__GetPTZPositionSearchResults
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetPTZPositionSearchResults(struct soap*, struct _tse__GetPTZPositionSearchResults*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetPTZPositionSearchResults(struct soap*, struct _tse__GetPTZPositionSearchResults*);
    @endcode

  - <GetPTZPositionSearchResultsResponse> @ref _tse__GetPTZPositionSearchResultsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetPTZPositionSearchResultsResponse(struct soap*, struct _tse__GetPTZPositionSearchResultsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetPTZPositionSearchResultsResponse(struct soap*, struct _tse__GetPTZPositionSearchResultsResponse*);
    @endcode

  - <FindMetadata> @ref _tse__FindMetadata
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindMetadata(struct soap*, struct _tse__FindMetadata*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindMetadata(struct soap*, struct _tse__FindMetadata*);
    @endcode

  - <FindMetadataResponse> @ref _tse__FindMetadataResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindMetadataResponse(struct soap*, struct _tse__FindMetadataResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindMetadataResponse(struct soap*, struct _tse__FindMetadataResponse*);
    @endcode

  - <GetMetadataSearchResults> @ref _tse__GetMetadataSearchResults
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetMetadataSearchResults(struct soap*, struct _tse__GetMetadataSearchResults*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetMetadataSearchResults(struct soap*, struct _tse__GetMetadataSearchResults*);
    @endcode

  - <GetMetadataSearchResultsResponse> @ref _tse__GetMetadataSearchResultsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetMetadataSearchResultsResponse(struct soap*, struct _tse__GetMetadataSearchResultsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetMetadataSearchResultsResponse(struct soap*, struct _tse__GetMetadataSearchResultsResponse*);
    @endcode

  - <GetSearchState> @ref _tse__GetSearchState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetSearchState(struct soap*, struct _tse__GetSearchState*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetSearchState(struct soap*, struct _tse__GetSearchState*);
    @endcode

  - <GetSearchStateResponse> @ref _tse__GetSearchStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetSearchStateResponse(struct soap*, struct _tse__GetSearchStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetSearchStateResponse(struct soap*, struct _tse__GetSearchStateResponse*);
    @endcode

  - <EndSearch> @ref _tse__EndSearch
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__EndSearch(struct soap*, struct _tse__EndSearch*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__EndSearch(struct soap*, struct _tse__EndSearch*);
    @endcode

  - <EndSearchResponse> @ref _tse__EndSearchResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__EndSearchResponse(struct soap*, struct _tse__EndSearchResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__EndSearchResponse(struct soap*, struct _tse__EndSearchResponse*);
    @endcode

@section tdn Top-level root elements of schema "http://www.onvif.org/ver10/network/wsdl"

  - <Hello> (use wsdl2h option -g to auto-generate)

  - <HelloResponse> (use wsdl2h option -g to auto-generate)

  - <Probe> (use wsdl2h option -g to auto-generate)

  - <ProbeResponse> (use wsdl2h option -g to auto-generate)

  - <Bye> (use wsdl2h option -g to auto-generate)

  - <ByeResponse> (use wsdl2h option -g to auto-generate)

@section trp Top-level root elements of schema "http://www.onvif.org/ver10/replay/wsdl"

  - <GetServiceCapabilities> @ref _trp__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trp__GetServiceCapabilities(struct soap*, struct _trp__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__trp__GetServiceCapabilities(struct soap*, struct _trp__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _trp__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trp__GetServiceCapabilitiesResponse(struct soap*, struct _trp__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trp__GetServiceCapabilitiesResponse(struct soap*, struct _trp__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <GetReplayUri> @ref _trp__GetReplayUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trp__GetReplayUri(struct soap*, struct _trp__GetReplayUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trp__GetReplayUri(struct soap*, struct _trp__GetReplayUri*);
    @endcode

  - <GetReplayUriResponse> @ref _trp__GetReplayUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trp__GetReplayUriResponse(struct soap*, struct _trp__GetReplayUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trp__GetReplayUriResponse(struct soap*, struct _trp__GetReplayUriResponse*);
    @endcode

  - <SetReplayConfiguration> @ref _trp__SetReplayConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trp__SetReplayConfiguration(struct soap*, struct _trp__SetReplayConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trp__SetReplayConfiguration(struct soap*, struct _trp__SetReplayConfiguration*);
    @endcode

  - <SetReplayConfigurationResponse> @ref _trp__SetReplayConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trp__SetReplayConfigurationResponse(struct soap*, struct _trp__SetReplayConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trp__SetReplayConfigurationResponse(struct soap*, struct _trp__SetReplayConfigurationResponse*);
    @endcode

  - <GetReplayConfiguration> @ref _trp__GetReplayConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trp__GetReplayConfiguration(struct soap*, struct _trp__GetReplayConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trp__GetReplayConfiguration(struct soap*, struct _trp__GetReplayConfiguration*);
    @endcode

  - <GetReplayConfigurationResponse> @ref _trp__GetReplayConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trp__GetReplayConfigurationResponse(struct soap*, struct _trp__GetReplayConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trp__GetReplayConfigurationResponse(struct soap*, struct _trp__GetReplayConfigurationResponse*);
    @endcode

@section tan Top-level root elements of schema "http://www.onvif.org/ver20/analytics/wsdl"

  - <GetServiceCapabilities> @ref _tan__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetServiceCapabilities(struct soap*, struct _tan__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetServiceCapabilities(struct soap*, struct _tan__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _tan__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetServiceCapabilitiesResponse(struct soap*, struct _tan__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetServiceCapabilitiesResponse(struct soap*, struct _tan__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <GetSupportedRules> @ref _tan__GetSupportedRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedRules(struct soap*, struct _tan__GetSupportedRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedRules(struct soap*, struct _tan__GetSupportedRules*);
    @endcode

  - <GetSupportedRulesResponse> @ref _tan__GetSupportedRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedRulesResponse(struct soap*, struct _tan__GetSupportedRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedRulesResponse(struct soap*, struct _tan__GetSupportedRulesResponse*);
    @endcode

  - <CreateRules> @ref _tan__CreateRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateRules(struct soap*, struct _tan__CreateRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateRules(struct soap*, struct _tan__CreateRules*);
    @endcode

  - <CreateRulesResponse> @ref _tan__CreateRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateRulesResponse(struct soap*, struct _tan__CreateRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateRulesResponse(struct soap*, struct _tan__CreateRulesResponse*);
    @endcode

  - <DeleteRules> @ref _tan__DeleteRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteRules(struct soap*, struct _tan__DeleteRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteRules(struct soap*, struct _tan__DeleteRules*);
    @endcode

  - <DeleteRulesResponse> @ref _tan__DeleteRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteRulesResponse(struct soap*, struct _tan__DeleteRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteRulesResponse(struct soap*, struct _tan__DeleteRulesResponse*);
    @endcode

  - <ModifyRules> @ref _tan__ModifyRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyRules(struct soap*, struct _tan__ModifyRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyRules(struct soap*, struct _tan__ModifyRules*);
    @endcode

  - <ModifyRulesResponse> @ref _tan__ModifyRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyRulesResponse(struct soap*, struct _tan__ModifyRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyRulesResponse(struct soap*, struct _tan__ModifyRulesResponse*);
    @endcode

  - <GetRules> @ref _tan__GetRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetRules(struct soap*, struct _tan__GetRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetRules(struct soap*, struct _tan__GetRules*);
    @endcode

  - <GetRulesResponse> @ref _tan__GetRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetRulesResponse(struct soap*, struct _tan__GetRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetRulesResponse(struct soap*, struct _tan__GetRulesResponse*);
    @endcode

  - <GetSupportedAnalyticsModules> @ref _tan__GetSupportedAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedAnalyticsModules(struct soap*, struct _tan__GetSupportedAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedAnalyticsModules(struct soap*, struct _tan__GetSupportedAnalyticsModules*);
    @endcode

  - <GetSupportedAnalyticsModulesResponse> @ref _tan__GetSupportedAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedAnalyticsModulesResponse(struct soap*, struct _tan__GetSupportedAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedAnalyticsModulesResponse(struct soap*, struct _tan__GetSupportedAnalyticsModulesResponse*);
    @endcode

  - <CreateAnalyticsModules> @ref _tan__CreateAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateAnalyticsModules(struct soap*, struct _tan__CreateAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateAnalyticsModules(struct soap*, struct _tan__CreateAnalyticsModules*);
    @endcode

  - <CreateAnalyticsModulesResponse> @ref _tan__CreateAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateAnalyticsModulesResponse(struct soap*, struct _tan__CreateAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateAnalyticsModulesResponse(struct soap*, struct _tan__CreateAnalyticsModulesResponse*);
    @endcode

  - <DeleteAnalyticsModules> @ref _tan__DeleteAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteAnalyticsModules(struct soap*, struct _tan__DeleteAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteAnalyticsModules(struct soap*, struct _tan__DeleteAnalyticsModules*);
    @endcode

  - <DeleteAnalyticsModulesResponse> @ref _tan__DeleteAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteAnalyticsModulesResponse(struct soap*, struct _tan__DeleteAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteAnalyticsModulesResponse(struct soap*, struct _tan__DeleteAnalyticsModulesResponse*);
    @endcode

  - <ModifyAnalyticsModules> @ref _tan__ModifyAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyAnalyticsModules(struct soap*, struct _tan__ModifyAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyAnalyticsModules(struct soap*, struct _tan__ModifyAnalyticsModules*);
    @endcode

  - <ModifyAnalyticsModulesResponse> @ref _tan__ModifyAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyAnalyticsModulesResponse(struct soap*, struct _tan__ModifyAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyAnalyticsModulesResponse(struct soap*, struct _tan__ModifyAnalyticsModulesResponse*);
    @endcode

  - <GetAnalyticsModules> @ref _tan__GetAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetAnalyticsModules(struct soap*, struct _tan__GetAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetAnalyticsModules(struct soap*, struct _tan__GetAnalyticsModules*);
    @endcode

  - <GetAnalyticsModulesResponse> @ref _tan__GetAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetAnalyticsModulesResponse(struct soap*, struct _tan__GetAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetAnalyticsModulesResponse(struct soap*, struct _tan__GetAnalyticsModulesResponse*);
    @endcode

@section tad Top-level root elements of schema "http://www.onvif.org/ver10/analyticsdevice/wsdl"

  - <GetServiceCapabilities> @ref _tad__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetServiceCapabilities(struct soap*, struct _tad__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetServiceCapabilities(struct soap*, struct _tad__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _tad__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetServiceCapabilitiesResponse(struct soap*, struct _tad__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetServiceCapabilitiesResponse(struct soap*, struct _tad__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <DeleteAnalyticsEngineControl> @ref _tad__DeleteAnalyticsEngineControl
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__DeleteAnalyticsEngineControl(struct soap*, struct _tad__DeleteAnalyticsEngineControl*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__DeleteAnalyticsEngineControl(struct soap*, struct _tad__DeleteAnalyticsEngineControl*);
    @endcode

  - <DeleteAnalyticsEngineControlResponse> @ref _tad__DeleteAnalyticsEngineControlResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__DeleteAnalyticsEngineControlResponse(struct soap*, struct _tad__DeleteAnalyticsEngineControlResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__DeleteAnalyticsEngineControlResponse(struct soap*, struct _tad__DeleteAnalyticsEngineControlResponse*);
    @endcode

  - <CreateAnalyticsEngineInputs> @ref _tad__CreateAnalyticsEngineInputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__CreateAnalyticsEngineInputs(struct soap*, struct _tad__CreateAnalyticsEngineInputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__CreateAnalyticsEngineInputs(struct soap*, struct _tad__CreateAnalyticsEngineInputs*);
    @endcode

  - <CreateAnalyticsEngineInputsResponse> @ref _tad__CreateAnalyticsEngineInputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__CreateAnalyticsEngineInputsResponse(struct soap*, struct _tad__CreateAnalyticsEngineInputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__CreateAnalyticsEngineInputsResponse(struct soap*, struct _tad__CreateAnalyticsEngineInputsResponse*);
    @endcode

  - <CreateAnalyticsEngineControl> @ref _tad__CreateAnalyticsEngineControl
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__CreateAnalyticsEngineControl(struct soap*, struct _tad__CreateAnalyticsEngineControl*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__CreateAnalyticsEngineControl(struct soap*, struct _tad__CreateAnalyticsEngineControl*);
    @endcode

  - <CreateAnalyticsEngineControlResponse> @ref _tad__CreateAnalyticsEngineControlResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__CreateAnalyticsEngineControlResponse(struct soap*, struct _tad__CreateAnalyticsEngineControlResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__CreateAnalyticsEngineControlResponse(struct soap*, struct _tad__CreateAnalyticsEngineControlResponse*);
    @endcode

  - <SetAnalyticsEngineControl> @ref _tad__SetAnalyticsEngineControl
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__SetAnalyticsEngineControl(struct soap*, struct _tad__SetAnalyticsEngineControl*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__SetAnalyticsEngineControl(struct soap*, struct _tad__SetAnalyticsEngineControl*);
    @endcode

  - <SetAnalyticsEngineControlResponse> @ref _tad__SetAnalyticsEngineControlResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__SetAnalyticsEngineControlResponse(struct soap*, struct _tad__SetAnalyticsEngineControlResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__SetAnalyticsEngineControlResponse(struct soap*, struct _tad__SetAnalyticsEngineControlResponse*);
    @endcode

  - <GetAnalyticsEngineControl> @ref _tad__GetAnalyticsEngineControl
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsEngineControl(struct soap*, struct _tad__GetAnalyticsEngineControl*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsEngineControl(struct soap*, struct _tad__GetAnalyticsEngineControl*);
    @endcode

  - <GetAnalyticsEngineControlResponse> @ref _tad__GetAnalyticsEngineControlResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsEngineControlResponse(struct soap*, struct _tad__GetAnalyticsEngineControlResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsEngineControlResponse(struct soap*, struct _tad__GetAnalyticsEngineControlResponse*);
    @endcode

  - <GetAnalyticsEngineControls> @ref _tad__GetAnalyticsEngineControls
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsEngineControls(struct soap*, struct _tad__GetAnalyticsEngineControls*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsEngineControls(struct soap*, struct _tad__GetAnalyticsEngineControls*);
    @endcode

  - <GetAnalyticsEngineControlsResponse> @ref _tad__GetAnalyticsEngineControlsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsEngineControlsResponse(struct soap*, struct _tad__GetAnalyticsEngineControlsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsEngineControlsResponse(struct soap*, struct _tad__GetAnalyticsEngineControlsResponse*);
    @endcode

  - <GetAnalyticsEngine> @ref _tad__GetAnalyticsEngine
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsEngine(struct soap*, struct _tad__GetAnalyticsEngine*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsEngine(struct soap*, struct _tad__GetAnalyticsEngine*);
    @endcode

  - <GetAnalyticsEngineResponse> @ref _tad__GetAnalyticsEngineResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsEngineResponse(struct soap*, struct _tad__GetAnalyticsEngineResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsEngineResponse(struct soap*, struct _tad__GetAnalyticsEngineResponse*);
    @endcode

  - <GetAnalyticsEngines> @ref _tad__GetAnalyticsEngines
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsEngines(struct soap*, struct _tad__GetAnalyticsEngines*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsEngines(struct soap*, struct _tad__GetAnalyticsEngines*);
    @endcode

  - <GetAnalyticsEnginesResponse> @ref _tad__GetAnalyticsEnginesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsEnginesResponse(struct soap*, struct _tad__GetAnalyticsEnginesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsEnginesResponse(struct soap*, struct _tad__GetAnalyticsEnginesResponse*);
    @endcode

  - <SetVideoAnalyticsConfiguration> @ref _tad__SetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__SetVideoAnalyticsConfiguration(struct soap*, struct _tad__SetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__SetVideoAnalyticsConfiguration(struct soap*, struct _tad__SetVideoAnalyticsConfiguration*);
    @endcode

  - <SetVideoAnalyticsConfigurationResponse> @ref _tad__SetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__SetVideoAnalyticsConfigurationResponse(struct soap*, struct _tad__SetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__SetVideoAnalyticsConfigurationResponse(struct soap*, struct _tad__SetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <SetAnalyticsEngineInput> @ref _tad__SetAnalyticsEngineInput
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__SetAnalyticsEngineInput(struct soap*, struct _tad__SetAnalyticsEngineInput*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__SetAnalyticsEngineInput(struct soap*, struct _tad__SetAnalyticsEngineInput*);
    @endcode

  - <SetAnalyticsEngineInputResponse> @ref _tad__SetAnalyticsEngineInputResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__SetAnalyticsEngineInputResponse(struct soap*, struct _tad__SetAnalyticsEngineInputResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__SetAnalyticsEngineInputResponse(struct soap*, struct _tad__SetAnalyticsEngineInputResponse*);
    @endcode

  - <GetAnalyticsEngineInput> @ref _tad__GetAnalyticsEngineInput
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsEngineInput(struct soap*, struct _tad__GetAnalyticsEngineInput*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsEngineInput(struct soap*, struct _tad__GetAnalyticsEngineInput*);
    @endcode

  - <GetAnalyticsEngineInputResponse> @ref _tad__GetAnalyticsEngineInputResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsEngineInputResponse(struct soap*, struct _tad__GetAnalyticsEngineInputResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsEngineInputResponse(struct soap*, struct _tad__GetAnalyticsEngineInputResponse*);
    @endcode

  - <GetAnalyticsEngineInputs> @ref _tad__GetAnalyticsEngineInputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsEngineInputs(struct soap*, struct _tad__GetAnalyticsEngineInputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsEngineInputs(struct soap*, struct _tad__GetAnalyticsEngineInputs*);
    @endcode

  - <GetAnalyticsEngineInputsResponse> @ref _tad__GetAnalyticsEngineInputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsEngineInputsResponse(struct soap*, struct _tad__GetAnalyticsEngineInputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsEngineInputsResponse(struct soap*, struct _tad__GetAnalyticsEngineInputsResponse*);
    @endcode

  - <GetAnalyticsDeviceStreamUri> @ref _tad__GetAnalyticsDeviceStreamUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsDeviceStreamUri(struct soap*, struct _tad__GetAnalyticsDeviceStreamUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsDeviceStreamUri(struct soap*, struct _tad__GetAnalyticsDeviceStreamUri*);
    @endcode

  - <GetAnalyticsDeviceStreamUriResponse> @ref _tad__GetAnalyticsDeviceStreamUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsDeviceStreamUriResponse(struct soap*, struct _tad__GetAnalyticsDeviceStreamUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsDeviceStreamUriResponse(struct soap*, struct _tad__GetAnalyticsDeviceStreamUriResponse*);
    @endcode

  - <GetVideoAnalyticsConfiguration> @ref _tad__GetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetVideoAnalyticsConfiguration(struct soap*, struct _tad__GetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetVideoAnalyticsConfiguration(struct soap*, struct _tad__GetVideoAnalyticsConfiguration*);
    @endcode

  - <GetVideoAnalyticsConfigurationResponse> @ref _tad__GetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetVideoAnalyticsConfigurationResponse(struct soap*, struct _tad__GetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetVideoAnalyticsConfigurationResponse(struct soap*, struct _tad__GetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <DeleteAnalyticsEngineInputs> @ref _tad__DeleteAnalyticsEngineInputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__DeleteAnalyticsEngineInputs(struct soap*, struct _tad__DeleteAnalyticsEngineInputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__DeleteAnalyticsEngineInputs(struct soap*, struct _tad__DeleteAnalyticsEngineInputs*);
    @endcode

  - <DeleteAnalyticsEngineInputsResponse> @ref _tad__DeleteAnalyticsEngineInputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__DeleteAnalyticsEngineInputsResponse(struct soap*, struct _tad__DeleteAnalyticsEngineInputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__DeleteAnalyticsEngineInputsResponse(struct soap*, struct _tad__DeleteAnalyticsEngineInputsResponse*);
    @endcode

  - <GetAnalyticsState> @ref _tad__GetAnalyticsState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsState(struct soap*, struct _tad__GetAnalyticsState*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsState(struct soap*, struct _tad__GetAnalyticsState*);
    @endcode

  - <GetAnalyticsStateResponse> @ref _tad__GetAnalyticsStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tad__GetAnalyticsStateResponse(struct soap*, struct _tad__GetAnalyticsStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tad__GetAnalyticsStateResponse(struct soap*, struct _tad__GetAnalyticsStateResponse*);
    @endcode

@section ns1 Top-level root elements of schema "http://www.onvif.org/ver10/actionengine/wsdl"

  - <GetSupportedActions> @ref _ns1__GetSupportedActions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetSupportedActions(struct soap*, struct _ns1__GetSupportedActions*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetSupportedActions(struct soap*, struct _ns1__GetSupportedActions*);
    @endcode

  - <GetSupportedActionsResponse> @ref _ns1__GetSupportedActionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetSupportedActionsResponse(struct soap*, struct _ns1__GetSupportedActionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetSupportedActionsResponse(struct soap*, struct _ns1__GetSupportedActionsResponse*);
    @endcode

  - <GetActions> @ref _ns1__GetActions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetActions(struct soap*, struct _ns1__GetActions*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetActions(struct soap*, struct _ns1__GetActions*);
    @endcode

  - <GetActionsResponse> @ref _ns1__GetActionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetActionsResponse(struct soap*, struct _ns1__GetActionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetActionsResponse(struct soap*, struct _ns1__GetActionsResponse*);
    @endcode

  - <CreateActions> @ref _ns1__CreateActions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CreateActions(struct soap*, struct _ns1__CreateActions*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CreateActions(struct soap*, struct _ns1__CreateActions*);
    @endcode

  - <CreateActionsResponse> @ref _ns1__CreateActionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CreateActionsResponse(struct soap*, struct _ns1__CreateActionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CreateActionsResponse(struct soap*, struct _ns1__CreateActionsResponse*);
    @endcode

  - <DeleteActions> @ref _ns1__DeleteActions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteActions(struct soap*, struct _ns1__DeleteActions*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteActions(struct soap*, struct _ns1__DeleteActions*);
    @endcode

  - <DeleteActionsResponse> @ref _ns1__DeleteActionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteActionsResponse(struct soap*, struct _ns1__DeleteActionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteActionsResponse(struct soap*, struct _ns1__DeleteActionsResponse*);
    @endcode

  - <ModifyActions> @ref _ns1__ModifyActions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ModifyActions(struct soap*, struct _ns1__ModifyActions*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ModifyActions(struct soap*, struct _ns1__ModifyActions*);
    @endcode

  - <ModifyActionsResponse> @ref _ns1__ModifyActionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ModifyActionsResponse(struct soap*, struct _ns1__ModifyActionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ModifyActionsResponse(struct soap*, struct _ns1__ModifyActionsResponse*);
    @endcode

  - <GetServiceCapabilities> @ref _ns1__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetServiceCapabilities(struct soap*, struct _ns1__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetServiceCapabilities(struct soap*, struct _ns1__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _ns1__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetServiceCapabilitiesResponse(struct soap*, struct _ns1__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetServiceCapabilitiesResponse(struct soap*, struct _ns1__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <GetActionTriggers> @ref _ns1__GetActionTriggers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetActionTriggers(struct soap*, struct _ns1__GetActionTriggers*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetActionTriggers(struct soap*, struct _ns1__GetActionTriggers*);
    @endcode

  - <GetActionTriggersResponse> @ref _ns1__GetActionTriggersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetActionTriggersResponse(struct soap*, struct _ns1__GetActionTriggersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetActionTriggersResponse(struct soap*, struct _ns1__GetActionTriggersResponse*);
    @endcode

  - <CreateActionTriggers> @ref _ns1__CreateActionTriggers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CreateActionTriggers(struct soap*, struct _ns1__CreateActionTriggers*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CreateActionTriggers(struct soap*, struct _ns1__CreateActionTriggers*);
    @endcode

  - <CreateActionTriggersResponse> @ref _ns1__CreateActionTriggersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CreateActionTriggersResponse(struct soap*, struct _ns1__CreateActionTriggersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CreateActionTriggersResponse(struct soap*, struct _ns1__CreateActionTriggersResponse*);
    @endcode

  - <ModifyActionTriggers> @ref _ns1__ModifyActionTriggers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ModifyActionTriggers(struct soap*, struct _ns1__ModifyActionTriggers*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ModifyActionTriggers(struct soap*, struct _ns1__ModifyActionTriggers*);
    @endcode

  - <ModifyActionTriggersResponse> @ref _ns1__ModifyActionTriggersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ModifyActionTriggersResponse(struct soap*, struct _ns1__ModifyActionTriggersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ModifyActionTriggersResponse(struct soap*, struct _ns1__ModifyActionTriggersResponse*);
    @endcode

  - <DeleteActionTriggers> @ref _ns1__DeleteActionTriggers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteActionTriggers(struct soap*, struct _ns1__DeleteActionTriggers*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteActionTriggers(struct soap*, struct _ns1__DeleteActionTriggers*);
    @endcode

  - <DeleteActionTriggersResponse> @ref _ns1__DeleteActionTriggersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteActionTriggersResponse(struct soap*, struct _ns1__DeleteActionTriggersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteActionTriggersResponse(struct soap*, struct _ns1__DeleteActionTriggersResponse*);
    @endcode

@section ns2 Top-level root elements of schema "http://www.onvif.org/ver10/accesscontrol/wsdl"

  - <GetServiceCapabilities> @ref _ns2__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__GetServiceCapabilities(struct soap*, struct _ns2__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__GetServiceCapabilities(struct soap*, struct _ns2__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _ns2__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__GetServiceCapabilitiesResponse(struct soap*, struct _ns2__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__GetServiceCapabilitiesResponse(struct soap*, struct _ns2__GetServiceCapabilitiesResponse*);
    @endcode

  - <GetAccessPointInfoList> @ref _ns2__GetAccessPointInfoList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__GetAccessPointInfoList(struct soap*, struct _ns2__GetAccessPointInfoList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__GetAccessPointInfoList(struct soap*, struct _ns2__GetAccessPointInfoList*);
    @endcode

  - <GetAccessPointInfoListResponse> @ref _ns2__GetAccessPointInfoListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__GetAccessPointInfoListResponse(struct soap*, struct _ns2__GetAccessPointInfoListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__GetAccessPointInfoListResponse(struct soap*, struct _ns2__GetAccessPointInfoListResponse*);
    @endcode

  - <GetAccessPointInfo> @ref _ns2__GetAccessPointInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__GetAccessPointInfo(struct soap*, struct _ns2__GetAccessPointInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__GetAccessPointInfo(struct soap*, struct _ns2__GetAccessPointInfo*);
    @endcode

  - <GetAccessPointInfoResponse> @ref _ns2__GetAccessPointInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__GetAccessPointInfoResponse(struct soap*, struct _ns2__GetAccessPointInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__GetAccessPointInfoResponse(struct soap*, struct _ns2__GetAccessPointInfoResponse*);
    @endcode

  - <GetAreaInfoList> @ref _ns2__GetAreaInfoList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__GetAreaInfoList(struct soap*, struct _ns2__GetAreaInfoList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__GetAreaInfoList(struct soap*, struct _ns2__GetAreaInfoList*);
    @endcode

  - <GetAreaInfoListResponse> @ref _ns2__GetAreaInfoListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__GetAreaInfoListResponse(struct soap*, struct _ns2__GetAreaInfoListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__GetAreaInfoListResponse(struct soap*, struct _ns2__GetAreaInfoListResponse*);
    @endcode

  - <GetAreaInfo> @ref _ns2__GetAreaInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__GetAreaInfo(struct soap*, struct _ns2__GetAreaInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__GetAreaInfo(struct soap*, struct _ns2__GetAreaInfo*);
    @endcode

  - <GetAreaInfoResponse> @ref _ns2__GetAreaInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__GetAreaInfoResponse(struct soap*, struct _ns2__GetAreaInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__GetAreaInfoResponse(struct soap*, struct _ns2__GetAreaInfoResponse*);
    @endcode

  - <GetAccessPointState> @ref _ns2__GetAccessPointState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__GetAccessPointState(struct soap*, struct _ns2__GetAccessPointState*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__GetAccessPointState(struct soap*, struct _ns2__GetAccessPointState*);
    @endcode

  - <GetAccessPointStateResponse> @ref _ns2__GetAccessPointStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__GetAccessPointStateResponse(struct soap*, struct _ns2__GetAccessPointStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__GetAccessPointStateResponse(struct soap*, struct _ns2__GetAccessPointStateResponse*);
    @endcode

  - <EnableAccessPoint> @ref _ns2__EnableAccessPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__EnableAccessPoint(struct soap*, struct _ns2__EnableAccessPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__EnableAccessPoint(struct soap*, struct _ns2__EnableAccessPoint*);
    @endcode

  - <EnableAccessPointResponse> @ref _ns2__EnableAccessPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__EnableAccessPointResponse(struct soap*, struct _ns2__EnableAccessPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__EnableAccessPointResponse(struct soap*, struct _ns2__EnableAccessPointResponse*);
    @endcode

  - <DisableAccessPoint> @ref _ns2__DisableAccessPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__DisableAccessPoint(struct soap*, struct _ns2__DisableAccessPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__DisableAccessPoint(struct soap*, struct _ns2__DisableAccessPoint*);
    @endcode

  - <DisableAccessPointResponse> @ref _ns2__DisableAccessPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__DisableAccessPointResponse(struct soap*, struct _ns2__DisableAccessPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__DisableAccessPointResponse(struct soap*, struct _ns2__DisableAccessPointResponse*);
    @endcode

  - <ExternalAuthorization> @ref _ns2__ExternalAuthorization
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__ExternalAuthorization(struct soap*, struct _ns2__ExternalAuthorization*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__ExternalAuthorization(struct soap*, struct _ns2__ExternalAuthorization*);
    @endcode

  - <ExternalAuthorizationResponse> @ref _ns2__ExternalAuthorizationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__ExternalAuthorizationResponse(struct soap*, struct _ns2__ExternalAuthorizationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__ExternalAuthorizationResponse(struct soap*, struct _ns2__ExternalAuthorizationResponse*);
    @endcode

@section ns3 Top-level root elements of schema "http://www.onvif.org/ver10/pacs"

@section ns4 Top-level root elements of schema "http://www.onvif.org/ver10/doorcontrol/wsdl"

  - <GetServiceCapabilities> @ref _ns4__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__GetServiceCapabilities(struct soap*, struct _ns4__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__GetServiceCapabilities(struct soap*, struct _ns4__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _ns4__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__GetServiceCapabilitiesResponse(struct soap*, struct _ns4__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__GetServiceCapabilitiesResponse(struct soap*, struct _ns4__GetServiceCapabilitiesResponse*);
    @endcode

  - <GetDoorInfoList> @ref _ns4__GetDoorInfoList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__GetDoorInfoList(struct soap*, struct _ns4__GetDoorInfoList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__GetDoorInfoList(struct soap*, struct _ns4__GetDoorInfoList*);
    @endcode

  - <GetDoorInfoListResponse> @ref _ns4__GetDoorInfoListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__GetDoorInfoListResponse(struct soap*, struct _ns4__GetDoorInfoListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__GetDoorInfoListResponse(struct soap*, struct _ns4__GetDoorInfoListResponse*);
    @endcode

  - <GetDoorInfo> @ref _ns4__GetDoorInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__GetDoorInfo(struct soap*, struct _ns4__GetDoorInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__GetDoorInfo(struct soap*, struct _ns4__GetDoorInfo*);
    @endcode

  - <GetDoorInfoResponse> @ref _ns4__GetDoorInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__GetDoorInfoResponse(struct soap*, struct _ns4__GetDoorInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__GetDoorInfoResponse(struct soap*, struct _ns4__GetDoorInfoResponse*);
    @endcode

  - <GetDoorState> @ref _ns4__GetDoorState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__GetDoorState(struct soap*, struct _ns4__GetDoorState*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__GetDoorState(struct soap*, struct _ns4__GetDoorState*);
    @endcode

  - <GetDoorStateResponse> @ref _ns4__GetDoorStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__GetDoorStateResponse(struct soap*, struct _ns4__GetDoorStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__GetDoorStateResponse(struct soap*, struct _ns4__GetDoorStateResponse*);
    @endcode

  - <AccessDoor> @ref _ns4__AccessDoor
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__AccessDoor(struct soap*, struct _ns4__AccessDoor*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__AccessDoor(struct soap*, struct _ns4__AccessDoor*);
    @endcode

  - <AccessDoorResponse> @ref _ns4__AccessDoorResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__AccessDoorResponse(struct soap*, struct _ns4__AccessDoorResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__AccessDoorResponse(struct soap*, struct _ns4__AccessDoorResponse*);
    @endcode

  - <LockDoor> @ref _ns4__LockDoor
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__LockDoor(struct soap*, struct _ns4__LockDoor*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__LockDoor(struct soap*, struct _ns4__LockDoor*);
    @endcode

  - <LockDoorResponse> @ref _ns4__LockDoorResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__LockDoorResponse(struct soap*, struct _ns4__LockDoorResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__LockDoorResponse(struct soap*, struct _ns4__LockDoorResponse*);
    @endcode

  - <UnlockDoor> @ref _ns4__UnlockDoor
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__UnlockDoor(struct soap*, struct _ns4__UnlockDoor*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__UnlockDoor(struct soap*, struct _ns4__UnlockDoor*);
    @endcode

  - <UnlockDoorResponse> @ref _ns4__UnlockDoorResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__UnlockDoorResponse(struct soap*, struct _ns4__UnlockDoorResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__UnlockDoorResponse(struct soap*, struct _ns4__UnlockDoorResponse*);
    @endcode

  - <BlockDoor> @ref _ns4__BlockDoor
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__BlockDoor(struct soap*, struct _ns4__BlockDoor*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__BlockDoor(struct soap*, struct _ns4__BlockDoor*);
    @endcode

  - <BlockDoorResponse> @ref _ns4__BlockDoorResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__BlockDoorResponse(struct soap*, struct _ns4__BlockDoorResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__BlockDoorResponse(struct soap*, struct _ns4__BlockDoorResponse*);
    @endcode

  - <LockDownDoor> @ref _ns4__LockDownDoor
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__LockDownDoor(struct soap*, struct _ns4__LockDownDoor*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__LockDownDoor(struct soap*, struct _ns4__LockDownDoor*);
    @endcode

  - <LockDownDoorResponse> @ref _ns4__LockDownDoorResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__LockDownDoorResponse(struct soap*, struct _ns4__LockDownDoorResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__LockDownDoorResponse(struct soap*, struct _ns4__LockDownDoorResponse*);
    @endcode

  - <LockDownReleaseDoor> @ref _ns4__LockDownReleaseDoor
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__LockDownReleaseDoor(struct soap*, struct _ns4__LockDownReleaseDoor*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__LockDownReleaseDoor(struct soap*, struct _ns4__LockDownReleaseDoor*);
    @endcode

  - <LockDownReleaseDoorResponse> @ref _ns4__LockDownReleaseDoorResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__LockDownReleaseDoorResponse(struct soap*, struct _ns4__LockDownReleaseDoorResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__LockDownReleaseDoorResponse(struct soap*, struct _ns4__LockDownReleaseDoorResponse*);
    @endcode

  - <LockOpenDoor> @ref _ns4__LockOpenDoor
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__LockOpenDoor(struct soap*, struct _ns4__LockOpenDoor*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__LockOpenDoor(struct soap*, struct _ns4__LockOpenDoor*);
    @endcode

  - <LockOpenDoorResponse> @ref _ns4__LockOpenDoorResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__LockOpenDoorResponse(struct soap*, struct _ns4__LockOpenDoorResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__LockOpenDoorResponse(struct soap*, struct _ns4__LockOpenDoorResponse*);
    @endcode

  - <LockOpenReleaseDoor> @ref _ns4__LockOpenReleaseDoor
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__LockOpenReleaseDoor(struct soap*, struct _ns4__LockOpenReleaseDoor*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__LockOpenReleaseDoor(struct soap*, struct _ns4__LockOpenReleaseDoor*);
    @endcode

  - <LockOpenReleaseDoorResponse> @ref _ns4__LockOpenReleaseDoorResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__LockOpenReleaseDoorResponse(struct soap*, struct _ns4__LockOpenReleaseDoorResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__LockOpenReleaseDoorResponse(struct soap*, struct _ns4__LockOpenReleaseDoorResponse*);
    @endcode

  - <DoubleLockDoor> @ref _ns4__DoubleLockDoor
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__DoubleLockDoor(struct soap*, struct _ns4__DoubleLockDoor*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__DoubleLockDoor(struct soap*, struct _ns4__DoubleLockDoor*);
    @endcode

  - <DoubleLockDoorResponse> @ref _ns4__DoubleLockDoorResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__DoubleLockDoorResponse(struct soap*, struct _ns4__DoubleLockDoorResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__DoubleLockDoorResponse(struct soap*, struct _ns4__DoubleLockDoorResponse*);
    @endcode

@section ns5 Top-level root elements of schema "http://www.onvif.org/ver10/advancedsecurity/wsdl"

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <GetServiceCapabilities> @ref _ns5__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetServiceCapabilities(struct soap*, struct _ns5__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetServiceCapabilities(struct soap*, struct _ns5__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _ns5__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetServiceCapabilitiesResponse(struct soap*, struct _ns5__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetServiceCapabilitiesResponse(struct soap*, struct _ns5__GetServiceCapabilitiesResponse*);
    @endcode

  - <CreateRSAKeyPair> @ref _ns5__CreateRSAKeyPair
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__CreateRSAKeyPair(struct soap*, struct _ns5__CreateRSAKeyPair*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__CreateRSAKeyPair(struct soap*, struct _ns5__CreateRSAKeyPair*);
    @endcode

  - <CreateRSAKeyPairResponse> @ref _ns5__CreateRSAKeyPairResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__CreateRSAKeyPairResponse(struct soap*, struct _ns5__CreateRSAKeyPairResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__CreateRSAKeyPairResponse(struct soap*, struct _ns5__CreateRSAKeyPairResponse*);
    @endcode

  - <UploadKeyPairInPKCS8> @ref _ns5__UploadKeyPairInPKCS8
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__UploadKeyPairInPKCS8(struct soap*, struct _ns5__UploadKeyPairInPKCS8*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__UploadKeyPairInPKCS8(struct soap*, struct _ns5__UploadKeyPairInPKCS8*);
    @endcode

  - <UploadKeyPairInPKCS8Response> @ref _ns5__UploadKeyPairInPKCS8Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__UploadKeyPairInPKCS8Response(struct soap*, struct _ns5__UploadKeyPairInPKCS8Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__UploadKeyPairInPKCS8Response(struct soap*, struct _ns5__UploadKeyPairInPKCS8Response*);
    @endcode

  - <UploadCertificateWithPrivateKeyInPKCS12> @ref _ns5__UploadCertificateWithPrivateKeyInPKCS12
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__UploadCertificateWithPrivateKeyInPKCS12(struct soap*, struct _ns5__UploadCertificateWithPrivateKeyInPKCS12*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__UploadCertificateWithPrivateKeyInPKCS12(struct soap*, struct _ns5__UploadCertificateWithPrivateKeyInPKCS12*);
    @endcode

  - <UploadCertificateWithPrivateKeyInPKCS12Response> @ref _ns5__UploadCertificateWithPrivateKeyInPKCS12Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__UploadCertificateWithPrivateKeyInPKCS12Response(struct soap*, struct _ns5__UploadCertificateWithPrivateKeyInPKCS12Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__UploadCertificateWithPrivateKeyInPKCS12Response(struct soap*, struct _ns5__UploadCertificateWithPrivateKeyInPKCS12Response*);
    @endcode

  - <GetKeyStatus> @ref _ns5__GetKeyStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetKeyStatus(struct soap*, struct _ns5__GetKeyStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetKeyStatus(struct soap*, struct _ns5__GetKeyStatus*);
    @endcode

  - <GetKeyStatusResponse> @ref _ns5__GetKeyStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetKeyStatusResponse(struct soap*, struct _ns5__GetKeyStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetKeyStatusResponse(struct soap*, struct _ns5__GetKeyStatusResponse*);
    @endcode

  - <GetPrivateKeyStatus> @ref _ns5__GetPrivateKeyStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetPrivateKeyStatus(struct soap*, struct _ns5__GetPrivateKeyStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetPrivateKeyStatus(struct soap*, struct _ns5__GetPrivateKeyStatus*);
    @endcode

  - <GetPrivateKeyStatusResponse> @ref _ns5__GetPrivateKeyStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetPrivateKeyStatusResponse(struct soap*, struct _ns5__GetPrivateKeyStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetPrivateKeyStatusResponse(struct soap*, struct _ns5__GetPrivateKeyStatusResponse*);
    @endcode

  - <GetAllKeys> @ref _ns5__GetAllKeys
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAllKeys(struct soap*, struct _ns5__GetAllKeys*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAllKeys(struct soap*, struct _ns5__GetAllKeys*);
    @endcode

  - <GetAllKeysResponse> @ref _ns5__GetAllKeysResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAllKeysResponse(struct soap*, struct _ns5__GetAllKeysResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAllKeysResponse(struct soap*, struct _ns5__GetAllKeysResponse*);
    @endcode

  - <DeleteKey> @ref _ns5__DeleteKey
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__DeleteKey(struct soap*, struct _ns5__DeleteKey*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__DeleteKey(struct soap*, struct _ns5__DeleteKey*);
    @endcode

  - <DeleteKeyResponse> @ref _ns5__DeleteKeyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__DeleteKeyResponse(struct soap*, struct _ns5__DeleteKeyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__DeleteKeyResponse(struct soap*, struct _ns5__DeleteKeyResponse*);
    @endcode

  - <CreatePKCS10CSR> @ref _ns5__CreatePKCS10CSR
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__CreatePKCS10CSR(struct soap*, struct _ns5__CreatePKCS10CSR*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__CreatePKCS10CSR(struct soap*, struct _ns5__CreatePKCS10CSR*);
    @endcode

  - <CreatePKCS10CSRResponse> @ref _ns5__CreatePKCS10CSRResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__CreatePKCS10CSRResponse(struct soap*, struct _ns5__CreatePKCS10CSRResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__CreatePKCS10CSRResponse(struct soap*, struct _ns5__CreatePKCS10CSRResponse*);
    @endcode

  - <CreateSelfSignedCertificate> @ref _ns5__CreateSelfSignedCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__CreateSelfSignedCertificate(struct soap*, struct _ns5__CreateSelfSignedCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__CreateSelfSignedCertificate(struct soap*, struct _ns5__CreateSelfSignedCertificate*);
    @endcode

  - <CreateSelfSignedCertificateResponse> @ref _ns5__CreateSelfSignedCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__CreateSelfSignedCertificateResponse(struct soap*, struct _ns5__CreateSelfSignedCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__CreateSelfSignedCertificateResponse(struct soap*, struct _ns5__CreateSelfSignedCertificateResponse*);
    @endcode

  - <UploadCertificate> @ref _ns5__UploadCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__UploadCertificate(struct soap*, struct _ns5__UploadCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__UploadCertificate(struct soap*, struct _ns5__UploadCertificate*);
    @endcode

  - <UploadCertificateResponse> @ref _ns5__UploadCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__UploadCertificateResponse(struct soap*, struct _ns5__UploadCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__UploadCertificateResponse(struct soap*, struct _ns5__UploadCertificateResponse*);
    @endcode

  - <GetCertificate> @ref _ns5__GetCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetCertificate(struct soap*, struct _ns5__GetCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetCertificate(struct soap*, struct _ns5__GetCertificate*);
    @endcode

  - <GetCertificateResponse> @ref _ns5__GetCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetCertificateResponse(struct soap*, struct _ns5__GetCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetCertificateResponse(struct soap*, struct _ns5__GetCertificateResponse*);
    @endcode

  - <GetAllCertificates> @ref _ns5__GetAllCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAllCertificates(struct soap*, struct _ns5__GetAllCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAllCertificates(struct soap*, struct _ns5__GetAllCertificates*);
    @endcode

  - <GetAllCertificatesResponse> @ref _ns5__GetAllCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAllCertificatesResponse(struct soap*, struct _ns5__GetAllCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAllCertificatesResponse(struct soap*, struct _ns5__GetAllCertificatesResponse*);
    @endcode

  - <DeleteCertificate> @ref _ns5__DeleteCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__DeleteCertificate(struct soap*, struct _ns5__DeleteCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__DeleteCertificate(struct soap*, struct _ns5__DeleteCertificate*);
    @endcode

  - <DeleteCertificateResponse> @ref _ns5__DeleteCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__DeleteCertificateResponse(struct soap*, struct _ns5__DeleteCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__DeleteCertificateResponse(struct soap*, struct _ns5__DeleteCertificateResponse*);
    @endcode

  - <CreateCertificationPath> @ref _ns5__CreateCertificationPath
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__CreateCertificationPath(struct soap*, struct _ns5__CreateCertificationPath*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__CreateCertificationPath(struct soap*, struct _ns5__CreateCertificationPath*);
    @endcode

  - <CreateCertificationPathResponse> @ref _ns5__CreateCertificationPathResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__CreateCertificationPathResponse(struct soap*, struct _ns5__CreateCertificationPathResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__CreateCertificationPathResponse(struct soap*, struct _ns5__CreateCertificationPathResponse*);
    @endcode

  - <GetCertificationPath> @ref _ns5__GetCertificationPath
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetCertificationPath(struct soap*, struct _ns5__GetCertificationPath*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetCertificationPath(struct soap*, struct _ns5__GetCertificationPath*);
    @endcode

  - <GetCertificationPathResponse> @ref _ns5__GetCertificationPathResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetCertificationPathResponse(struct soap*, struct _ns5__GetCertificationPathResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetCertificationPathResponse(struct soap*, struct _ns5__GetCertificationPathResponse*);
    @endcode

  - <GetAllCertificationPaths> @ref _ns5__GetAllCertificationPaths
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAllCertificationPaths(struct soap*, struct _ns5__GetAllCertificationPaths*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAllCertificationPaths(struct soap*, struct _ns5__GetAllCertificationPaths*);
    @endcode

  - <GetAllCertificationPathsResponse> @ref _ns5__GetAllCertificationPathsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAllCertificationPathsResponse(struct soap*, struct _ns5__GetAllCertificationPathsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAllCertificationPathsResponse(struct soap*, struct _ns5__GetAllCertificationPathsResponse*);
    @endcode

  - <DeleteCertificationPath> @ref _ns5__DeleteCertificationPath
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__DeleteCertificationPath(struct soap*, struct _ns5__DeleteCertificationPath*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__DeleteCertificationPath(struct soap*, struct _ns5__DeleteCertificationPath*);
    @endcode

  - <DeleteCertificationPathResponse> @ref _ns5__DeleteCertificationPathResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__DeleteCertificationPathResponse(struct soap*, struct _ns5__DeleteCertificationPathResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__DeleteCertificationPathResponse(struct soap*, struct _ns5__DeleteCertificationPathResponse*);
    @endcode

  - <UploadPassphrase> @ref _ns5__UploadPassphrase
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__UploadPassphrase(struct soap*, struct _ns5__UploadPassphrase*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__UploadPassphrase(struct soap*, struct _ns5__UploadPassphrase*);
    @endcode

  - <UploadPassphraseResponse> @ref _ns5__UploadPassphraseResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__UploadPassphraseResponse(struct soap*, struct _ns5__UploadPassphraseResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__UploadPassphraseResponse(struct soap*, struct _ns5__UploadPassphraseResponse*);
    @endcode

  - <GetAllPassphrases> @ref _ns5__GetAllPassphrases
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAllPassphrases(struct soap*, struct _ns5__GetAllPassphrases*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAllPassphrases(struct soap*, struct _ns5__GetAllPassphrases*);
    @endcode

  - <GetAllPassphrasesResponse> @ref _ns5__GetAllPassphrasesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAllPassphrasesResponse(struct soap*, struct _ns5__GetAllPassphrasesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAllPassphrasesResponse(struct soap*, struct _ns5__GetAllPassphrasesResponse*);
    @endcode

  - <DeletePassphrase> @ref _ns5__DeletePassphrase
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__DeletePassphrase(struct soap*, struct _ns5__DeletePassphrase*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__DeletePassphrase(struct soap*, struct _ns5__DeletePassphrase*);
    @endcode

  - <DeletePassphraseResponse> @ref _ns5__DeletePassphraseResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__DeletePassphraseResponse(struct soap*, struct _ns5__DeletePassphraseResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__DeletePassphraseResponse(struct soap*, struct _ns5__DeletePassphraseResponse*);
    @endcode

  - <AddServerCertificateAssignment> @ref _ns5__AddServerCertificateAssignment
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__AddServerCertificateAssignment(struct soap*, struct _ns5__AddServerCertificateAssignment*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__AddServerCertificateAssignment(struct soap*, struct _ns5__AddServerCertificateAssignment*);
    @endcode

  - <AddServerCertificateAssignmentResponse> @ref _ns5__AddServerCertificateAssignmentResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__AddServerCertificateAssignmentResponse(struct soap*, struct _ns5__AddServerCertificateAssignmentResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__AddServerCertificateAssignmentResponse(struct soap*, struct _ns5__AddServerCertificateAssignmentResponse*);
    @endcode

  - <RemoveServerCertificateAssignment> @ref _ns5__RemoveServerCertificateAssignment
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__RemoveServerCertificateAssignment(struct soap*, struct _ns5__RemoveServerCertificateAssignment*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__RemoveServerCertificateAssignment(struct soap*, struct _ns5__RemoveServerCertificateAssignment*);
    @endcode

  - <RemoveServerCertificateAssignmentResponse> @ref _ns5__RemoveServerCertificateAssignmentResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__RemoveServerCertificateAssignmentResponse(struct soap*, struct _ns5__RemoveServerCertificateAssignmentResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__RemoveServerCertificateAssignmentResponse(struct soap*, struct _ns5__RemoveServerCertificateAssignmentResponse*);
    @endcode

  - <ReplaceServerCertificateAssignment> @ref _ns5__ReplaceServerCertificateAssignment
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__ReplaceServerCertificateAssignment(struct soap*, struct _ns5__ReplaceServerCertificateAssignment*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__ReplaceServerCertificateAssignment(struct soap*, struct _ns5__ReplaceServerCertificateAssignment*);
    @endcode

  - <ReplaceServerCertificateAssignmentResponse> @ref _ns5__ReplaceServerCertificateAssignmentResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__ReplaceServerCertificateAssignmentResponse(struct soap*, struct _ns5__ReplaceServerCertificateAssignmentResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__ReplaceServerCertificateAssignmentResponse(struct soap*, struct _ns5__ReplaceServerCertificateAssignmentResponse*);
    @endcode

  - <GetAssignedServerCertificates> @ref _ns5__GetAssignedServerCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAssignedServerCertificates(struct soap*, struct _ns5__GetAssignedServerCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAssignedServerCertificates(struct soap*, struct _ns5__GetAssignedServerCertificates*);
    @endcode

  - <GetAssignedServerCertificatesResponse> @ref _ns5__GetAssignedServerCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAssignedServerCertificatesResponse(struct soap*, struct _ns5__GetAssignedServerCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAssignedServerCertificatesResponse(struct soap*, struct _ns5__GetAssignedServerCertificatesResponse*);
    @endcode

  - <UploadCRL> @ref _ns5__UploadCRL
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__UploadCRL(struct soap*, struct _ns5__UploadCRL*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__UploadCRL(struct soap*, struct _ns5__UploadCRL*);
    @endcode

  - <UploadCRLResponse> @ref _ns5__UploadCRLResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__UploadCRLResponse(struct soap*, struct _ns5__UploadCRLResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__UploadCRLResponse(struct soap*, struct _ns5__UploadCRLResponse*);
    @endcode

  - <GetCRL> @ref _ns5__GetCRL
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetCRL(struct soap*, struct _ns5__GetCRL*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetCRL(struct soap*, struct _ns5__GetCRL*);
    @endcode

  - <GetCRLResponse> @ref _ns5__GetCRLResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetCRLResponse(struct soap*, struct _ns5__GetCRLResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetCRLResponse(struct soap*, struct _ns5__GetCRLResponse*);
    @endcode

  - <GetAllCRLs> @ref _ns5__GetAllCRLs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAllCRLs(struct soap*, struct _ns5__GetAllCRLs*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAllCRLs(struct soap*, struct _ns5__GetAllCRLs*);
    @endcode

  - <GetAllCRLsResponse> @ref _ns5__GetAllCRLsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAllCRLsResponse(struct soap*, struct _ns5__GetAllCRLsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAllCRLsResponse(struct soap*, struct _ns5__GetAllCRLsResponse*);
    @endcode

  - <DeleteCRL> @ref _ns5__DeleteCRL
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__DeleteCRL(struct soap*, struct _ns5__DeleteCRL*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__DeleteCRL(struct soap*, struct _ns5__DeleteCRL*);
    @endcode

  - <DeleteCRLResponse> @ref _ns5__DeleteCRLResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__DeleteCRLResponse(struct soap*, struct _ns5__DeleteCRLResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__DeleteCRLResponse(struct soap*, struct _ns5__DeleteCRLResponse*);
    @endcode

  - <CreateCertPathValidationPolicy> @ref _ns5__CreateCertPathValidationPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__CreateCertPathValidationPolicy(struct soap*, struct _ns5__CreateCertPathValidationPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__CreateCertPathValidationPolicy(struct soap*, struct _ns5__CreateCertPathValidationPolicy*);
    @endcode

  - <CreateCertPathValidationPolicyResponse> @ref _ns5__CreateCertPathValidationPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__CreateCertPathValidationPolicyResponse(struct soap*, struct _ns5__CreateCertPathValidationPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__CreateCertPathValidationPolicyResponse(struct soap*, struct _ns5__CreateCertPathValidationPolicyResponse*);
    @endcode

  - <GetCertPathValidationPolicy> @ref _ns5__GetCertPathValidationPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetCertPathValidationPolicy(struct soap*, struct _ns5__GetCertPathValidationPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetCertPathValidationPolicy(struct soap*, struct _ns5__GetCertPathValidationPolicy*);
    @endcode

  - <GetCertPathValidationPolicyResponse> @ref _ns5__GetCertPathValidationPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetCertPathValidationPolicyResponse(struct soap*, struct _ns5__GetCertPathValidationPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetCertPathValidationPolicyResponse(struct soap*, struct _ns5__GetCertPathValidationPolicyResponse*);
    @endcode

  - <GetAllCertPathValidationPolicies> @ref _ns5__GetAllCertPathValidationPolicies
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAllCertPathValidationPolicies(struct soap*, struct _ns5__GetAllCertPathValidationPolicies*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAllCertPathValidationPolicies(struct soap*, struct _ns5__GetAllCertPathValidationPolicies*);
    @endcode

  - <GetAllCertPathValidationPoliciesResponse> @ref _ns5__GetAllCertPathValidationPoliciesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAllCertPathValidationPoliciesResponse(struct soap*, struct _ns5__GetAllCertPathValidationPoliciesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAllCertPathValidationPoliciesResponse(struct soap*, struct _ns5__GetAllCertPathValidationPoliciesResponse*);
    @endcode

  - <DeleteCertPathValidationPolicy> @ref _ns5__DeleteCertPathValidationPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__DeleteCertPathValidationPolicy(struct soap*, struct _ns5__DeleteCertPathValidationPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__DeleteCertPathValidationPolicy(struct soap*, struct _ns5__DeleteCertPathValidationPolicy*);
    @endcode

  - <DeleteCertPathValidationPolicyResponse> @ref _ns5__DeleteCertPathValidationPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__DeleteCertPathValidationPolicyResponse(struct soap*, struct _ns5__DeleteCertPathValidationPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__DeleteCertPathValidationPolicyResponse(struct soap*, struct _ns5__DeleteCertPathValidationPolicyResponse*);
    @endcode

  - <SetClientAuthenticationRequired> @ref _ns5__SetClientAuthenticationRequired
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__SetClientAuthenticationRequired(struct soap*, struct _ns5__SetClientAuthenticationRequired*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__SetClientAuthenticationRequired(struct soap*, struct _ns5__SetClientAuthenticationRequired*);
    @endcode

  - <SetClientAuthenticationRequiredResponse> @ref _ns5__SetClientAuthenticationRequiredResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__SetClientAuthenticationRequiredResponse(struct soap*, struct _ns5__SetClientAuthenticationRequiredResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__SetClientAuthenticationRequiredResponse(struct soap*, struct _ns5__SetClientAuthenticationRequiredResponse*);
    @endcode

  - <GetClientAuthenticationRequired> @ref _ns5__GetClientAuthenticationRequired
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetClientAuthenticationRequired(struct soap*, struct _ns5__GetClientAuthenticationRequired*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetClientAuthenticationRequired(struct soap*, struct _ns5__GetClientAuthenticationRequired*);
    @endcode

  - <GetClientAuthenticationRequiredResponse> @ref _ns5__GetClientAuthenticationRequiredResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetClientAuthenticationRequiredResponse(struct soap*, struct _ns5__GetClientAuthenticationRequiredResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetClientAuthenticationRequiredResponse(struct soap*, struct _ns5__GetClientAuthenticationRequiredResponse*);
    @endcode

  - <AddCertPathValidationPolicyAssignment> @ref _ns5__AddCertPathValidationPolicyAssignment
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__AddCertPathValidationPolicyAssignment(struct soap*, struct _ns5__AddCertPathValidationPolicyAssignment*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__AddCertPathValidationPolicyAssignment(struct soap*, struct _ns5__AddCertPathValidationPolicyAssignment*);
    @endcode

  - <AddCertPathValidationPolicyAssignmentResponse> @ref _ns5__AddCertPathValidationPolicyAssignmentResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__AddCertPathValidationPolicyAssignmentResponse(struct soap*, struct _ns5__AddCertPathValidationPolicyAssignmentResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__AddCertPathValidationPolicyAssignmentResponse(struct soap*, struct _ns5__AddCertPathValidationPolicyAssignmentResponse*);
    @endcode

  - <RemoveCertPathValidationPolicyAssignment> @ref _ns5__RemoveCertPathValidationPolicyAssignment
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__RemoveCertPathValidationPolicyAssignment(struct soap*, struct _ns5__RemoveCertPathValidationPolicyAssignment*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__RemoveCertPathValidationPolicyAssignment(struct soap*, struct _ns5__RemoveCertPathValidationPolicyAssignment*);
    @endcode

  - <RemoveCertPathValidationPolicyAssignmentResponse> @ref _ns5__RemoveCertPathValidationPolicyAssignmentResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__RemoveCertPathValidationPolicyAssignmentResponse(struct soap*, struct _ns5__RemoveCertPathValidationPolicyAssignmentResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__RemoveCertPathValidationPolicyAssignmentResponse(struct soap*, struct _ns5__RemoveCertPathValidationPolicyAssignmentResponse*);
    @endcode

  - <ReplaceCertPathValidationPolicyAssignment> @ref _ns5__ReplaceCertPathValidationPolicyAssignment
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__ReplaceCertPathValidationPolicyAssignment(struct soap*, struct _ns5__ReplaceCertPathValidationPolicyAssignment*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__ReplaceCertPathValidationPolicyAssignment(struct soap*, struct _ns5__ReplaceCertPathValidationPolicyAssignment*);
    @endcode

  - <ReplaceCertPathValidationPolicyAssignmentResponse> @ref _ns5__ReplaceCertPathValidationPolicyAssignmentResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__ReplaceCertPathValidationPolicyAssignmentResponse(struct soap*, struct _ns5__ReplaceCertPathValidationPolicyAssignmentResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__ReplaceCertPathValidationPolicyAssignmentResponse(struct soap*, struct _ns5__ReplaceCertPathValidationPolicyAssignmentResponse*);
    @endcode

  - <GetAssignedCertPathValidationPolicies> @ref _ns5__GetAssignedCertPathValidationPolicies
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAssignedCertPathValidationPolicies(struct soap*, struct _ns5__GetAssignedCertPathValidationPolicies*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAssignedCertPathValidationPolicies(struct soap*, struct _ns5__GetAssignedCertPathValidationPolicies*);
    @endcode

  - <GetAssignedCertPathValidationPoliciesResponse> @ref _ns5__GetAssignedCertPathValidationPoliciesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns5__GetAssignedCertPathValidationPoliciesResponse(struct soap*, struct _ns5__GetAssignedCertPathValidationPoliciesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns5__GetAssignedCertPathValidationPoliciesResponse(struct soap*, struct _ns5__GetAssignedCertPathValidationPoliciesResponse*);
    @endcode

@section ns6 Top-level root elements of schema "http://www.onvif.org/ver10/accessrules/wsdl"

  - <GetServiceCapabilities> @ref _ns6__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__GetServiceCapabilities(struct soap*, struct _ns6__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__GetServiceCapabilities(struct soap*, struct _ns6__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _ns6__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__GetServiceCapabilitiesResponse(struct soap*, struct _ns6__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__GetServiceCapabilitiesResponse(struct soap*, struct _ns6__GetServiceCapabilitiesResponse*);
    @endcode

  - <GetAccessProfileInfo> @ref _ns6__GetAccessProfileInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__GetAccessProfileInfo(struct soap*, struct _ns6__GetAccessProfileInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__GetAccessProfileInfo(struct soap*, struct _ns6__GetAccessProfileInfo*);
    @endcode

  - <GetAccessProfileInfoResponse> @ref _ns6__GetAccessProfileInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__GetAccessProfileInfoResponse(struct soap*, struct _ns6__GetAccessProfileInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__GetAccessProfileInfoResponse(struct soap*, struct _ns6__GetAccessProfileInfoResponse*);
    @endcode

  - <GetAccessProfileInfoList> @ref _ns6__GetAccessProfileInfoList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__GetAccessProfileInfoList(struct soap*, struct _ns6__GetAccessProfileInfoList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__GetAccessProfileInfoList(struct soap*, struct _ns6__GetAccessProfileInfoList*);
    @endcode

  - <GetAccessProfileInfoListResponse> @ref _ns6__GetAccessProfileInfoListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__GetAccessProfileInfoListResponse(struct soap*, struct _ns6__GetAccessProfileInfoListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__GetAccessProfileInfoListResponse(struct soap*, struct _ns6__GetAccessProfileInfoListResponse*);
    @endcode

  - <GetAccessProfiles> @ref _ns6__GetAccessProfiles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__GetAccessProfiles(struct soap*, struct _ns6__GetAccessProfiles*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__GetAccessProfiles(struct soap*, struct _ns6__GetAccessProfiles*);
    @endcode

  - <GetAccessProfilesResponse> @ref _ns6__GetAccessProfilesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__GetAccessProfilesResponse(struct soap*, struct _ns6__GetAccessProfilesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__GetAccessProfilesResponse(struct soap*, struct _ns6__GetAccessProfilesResponse*);
    @endcode

  - <GetAccessProfileList> @ref _ns6__GetAccessProfileList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__GetAccessProfileList(struct soap*, struct _ns6__GetAccessProfileList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__GetAccessProfileList(struct soap*, struct _ns6__GetAccessProfileList*);
    @endcode

  - <GetAccessProfileListResponse> @ref _ns6__GetAccessProfileListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__GetAccessProfileListResponse(struct soap*, struct _ns6__GetAccessProfileListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__GetAccessProfileListResponse(struct soap*, struct _ns6__GetAccessProfileListResponse*);
    @endcode

  - <CreateAccessProfile> @ref _ns6__CreateAccessProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__CreateAccessProfile(struct soap*, struct _ns6__CreateAccessProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__CreateAccessProfile(struct soap*, struct _ns6__CreateAccessProfile*);
    @endcode

  - <CreateAccessProfileResponse> @ref _ns6__CreateAccessProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__CreateAccessProfileResponse(struct soap*, struct _ns6__CreateAccessProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__CreateAccessProfileResponse(struct soap*, struct _ns6__CreateAccessProfileResponse*);
    @endcode

  - <ModifyAccessProfile> @ref _ns6__ModifyAccessProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__ModifyAccessProfile(struct soap*, struct _ns6__ModifyAccessProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__ModifyAccessProfile(struct soap*, struct _ns6__ModifyAccessProfile*);
    @endcode

  - <ModifyAccessProfileResponse> @ref _ns6__ModifyAccessProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__ModifyAccessProfileResponse(struct soap*, struct _ns6__ModifyAccessProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__ModifyAccessProfileResponse(struct soap*, struct _ns6__ModifyAccessProfileResponse*);
    @endcode

  - <DeleteAccessProfile> @ref _ns6__DeleteAccessProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__DeleteAccessProfile(struct soap*, struct _ns6__DeleteAccessProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__DeleteAccessProfile(struct soap*, struct _ns6__DeleteAccessProfile*);
    @endcode

  - <DeleteAccessProfileResponse> @ref _ns6__DeleteAccessProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns6__DeleteAccessProfileResponse(struct soap*, struct _ns6__DeleteAccessProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns6__DeleteAccessProfileResponse(struct soap*, struct _ns6__DeleteAccessProfileResponse*);
    @endcode

@section ns7 Top-level root elements of schema "http://www.onvif.org/ver10/credential/wsdl"

  - <GetServiceCapabilities> @ref _ns7__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetServiceCapabilities(struct soap*, struct _ns7__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetServiceCapabilities(struct soap*, struct _ns7__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _ns7__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetServiceCapabilitiesResponse(struct soap*, struct _ns7__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetServiceCapabilitiesResponse(struct soap*, struct _ns7__GetServiceCapabilitiesResponse*);
    @endcode

  - <GetSupportedFormatTypes> @ref _ns7__GetSupportedFormatTypes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetSupportedFormatTypes(struct soap*, struct _ns7__GetSupportedFormatTypes*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetSupportedFormatTypes(struct soap*, struct _ns7__GetSupportedFormatTypes*);
    @endcode

  - <GetSupportedFormatTypesResponse> @ref _ns7__GetSupportedFormatTypesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetSupportedFormatTypesResponse(struct soap*, struct _ns7__GetSupportedFormatTypesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetSupportedFormatTypesResponse(struct soap*, struct _ns7__GetSupportedFormatTypesResponse*);
    @endcode

  - <GetCredentialInfo> @ref _ns7__GetCredentialInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetCredentialInfo(struct soap*, struct _ns7__GetCredentialInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetCredentialInfo(struct soap*, struct _ns7__GetCredentialInfo*);
    @endcode

  - <GetCredentialInfoResponse> @ref _ns7__GetCredentialInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetCredentialInfoResponse(struct soap*, struct _ns7__GetCredentialInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetCredentialInfoResponse(struct soap*, struct _ns7__GetCredentialInfoResponse*);
    @endcode

  - <GetCredentialInfoList> @ref _ns7__GetCredentialInfoList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetCredentialInfoList(struct soap*, struct _ns7__GetCredentialInfoList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetCredentialInfoList(struct soap*, struct _ns7__GetCredentialInfoList*);
    @endcode

  - <GetCredentialInfoListResponse> @ref _ns7__GetCredentialInfoListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetCredentialInfoListResponse(struct soap*, struct _ns7__GetCredentialInfoListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetCredentialInfoListResponse(struct soap*, struct _ns7__GetCredentialInfoListResponse*);
    @endcode

  - <GetCredentials> @ref _ns7__GetCredentials
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetCredentials(struct soap*, struct _ns7__GetCredentials*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetCredentials(struct soap*, struct _ns7__GetCredentials*);
    @endcode

  - <GetCredentialsResponse> @ref _ns7__GetCredentialsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetCredentialsResponse(struct soap*, struct _ns7__GetCredentialsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetCredentialsResponse(struct soap*, struct _ns7__GetCredentialsResponse*);
    @endcode

  - <GetCredentialList> @ref _ns7__GetCredentialList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetCredentialList(struct soap*, struct _ns7__GetCredentialList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetCredentialList(struct soap*, struct _ns7__GetCredentialList*);
    @endcode

  - <GetCredentialListResponse> @ref _ns7__GetCredentialListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetCredentialListResponse(struct soap*, struct _ns7__GetCredentialListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetCredentialListResponse(struct soap*, struct _ns7__GetCredentialListResponse*);
    @endcode

  - <CreateCredential> @ref _ns7__CreateCredential
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__CreateCredential(struct soap*, struct _ns7__CreateCredential*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__CreateCredential(struct soap*, struct _ns7__CreateCredential*);
    @endcode

  - <CreateCredentialResponse> @ref _ns7__CreateCredentialResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__CreateCredentialResponse(struct soap*, struct _ns7__CreateCredentialResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__CreateCredentialResponse(struct soap*, struct _ns7__CreateCredentialResponse*);
    @endcode

  - <ModifyCredential> @ref _ns7__ModifyCredential
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__ModifyCredential(struct soap*, struct _ns7__ModifyCredential*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__ModifyCredential(struct soap*, struct _ns7__ModifyCredential*);
    @endcode

  - <ModifyCredentialResponse> @ref _ns7__ModifyCredentialResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__ModifyCredentialResponse(struct soap*, struct _ns7__ModifyCredentialResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__ModifyCredentialResponse(struct soap*, struct _ns7__ModifyCredentialResponse*);
    @endcode

  - <DeleteCredential> @ref _ns7__DeleteCredential
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__DeleteCredential(struct soap*, struct _ns7__DeleteCredential*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__DeleteCredential(struct soap*, struct _ns7__DeleteCredential*);
    @endcode

  - <DeleteCredentialResponse> @ref _ns7__DeleteCredentialResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__DeleteCredentialResponse(struct soap*, struct _ns7__DeleteCredentialResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__DeleteCredentialResponse(struct soap*, struct _ns7__DeleteCredentialResponse*);
    @endcode

  - <GetCredentialState> @ref _ns7__GetCredentialState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetCredentialState(struct soap*, struct _ns7__GetCredentialState*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetCredentialState(struct soap*, struct _ns7__GetCredentialState*);
    @endcode

  - <GetCredentialStateResponse> @ref _ns7__GetCredentialStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetCredentialStateResponse(struct soap*, struct _ns7__GetCredentialStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetCredentialStateResponse(struct soap*, struct _ns7__GetCredentialStateResponse*);
    @endcode

  - <EnableCredential> @ref _ns7__EnableCredential
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__EnableCredential(struct soap*, struct _ns7__EnableCredential*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__EnableCredential(struct soap*, struct _ns7__EnableCredential*);
    @endcode

  - <EnableCredentialResponse> @ref _ns7__EnableCredentialResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__EnableCredentialResponse(struct soap*, struct _ns7__EnableCredentialResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__EnableCredentialResponse(struct soap*, struct _ns7__EnableCredentialResponse*);
    @endcode

  - <DisableCredential> @ref _ns7__DisableCredential
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__DisableCredential(struct soap*, struct _ns7__DisableCredential*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__DisableCredential(struct soap*, struct _ns7__DisableCredential*);
    @endcode

  - <DisableCredentialResponse> @ref _ns7__DisableCredentialResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__DisableCredentialResponse(struct soap*, struct _ns7__DisableCredentialResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__DisableCredentialResponse(struct soap*, struct _ns7__DisableCredentialResponse*);
    @endcode

  - <ResetAntipassbackViolation> @ref _ns7__ResetAntipassbackViolation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__ResetAntipassbackViolation(struct soap*, struct _ns7__ResetAntipassbackViolation*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__ResetAntipassbackViolation(struct soap*, struct _ns7__ResetAntipassbackViolation*);
    @endcode

  - <ResetAntipassbackViolationResponse> @ref _ns7__ResetAntipassbackViolationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__ResetAntipassbackViolationResponse(struct soap*, struct _ns7__ResetAntipassbackViolationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__ResetAntipassbackViolationResponse(struct soap*, struct _ns7__ResetAntipassbackViolationResponse*);
    @endcode

  - <GetCredentialIdentifiers> @ref _ns7__GetCredentialIdentifiers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetCredentialIdentifiers(struct soap*, struct _ns7__GetCredentialIdentifiers*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetCredentialIdentifiers(struct soap*, struct _ns7__GetCredentialIdentifiers*);
    @endcode

  - <GetCredentialIdentifiersResponse> @ref _ns7__GetCredentialIdentifiersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetCredentialIdentifiersResponse(struct soap*, struct _ns7__GetCredentialIdentifiersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetCredentialIdentifiersResponse(struct soap*, struct _ns7__GetCredentialIdentifiersResponse*);
    @endcode

  - <SetCredentialIdentifier> @ref _ns7__SetCredentialIdentifier
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__SetCredentialIdentifier(struct soap*, struct _ns7__SetCredentialIdentifier*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__SetCredentialIdentifier(struct soap*, struct _ns7__SetCredentialIdentifier*);
    @endcode

  - <SetCredentialIdentifierResponse> @ref _ns7__SetCredentialIdentifierResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__SetCredentialIdentifierResponse(struct soap*, struct _ns7__SetCredentialIdentifierResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__SetCredentialIdentifierResponse(struct soap*, struct _ns7__SetCredentialIdentifierResponse*);
    @endcode

  - <DeleteCredentialIdentifier> @ref _ns7__DeleteCredentialIdentifier
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__DeleteCredentialIdentifier(struct soap*, struct _ns7__DeleteCredentialIdentifier*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__DeleteCredentialIdentifier(struct soap*, struct _ns7__DeleteCredentialIdentifier*);
    @endcode

  - <DeleteCredentialIdentifierResponse> @ref _ns7__DeleteCredentialIdentifierResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__DeleteCredentialIdentifierResponse(struct soap*, struct _ns7__DeleteCredentialIdentifierResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__DeleteCredentialIdentifierResponse(struct soap*, struct _ns7__DeleteCredentialIdentifierResponse*);
    @endcode

  - <GetCredentialAccessProfiles> @ref _ns7__GetCredentialAccessProfiles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetCredentialAccessProfiles(struct soap*, struct _ns7__GetCredentialAccessProfiles*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetCredentialAccessProfiles(struct soap*, struct _ns7__GetCredentialAccessProfiles*);
    @endcode

  - <GetCredentialAccessProfilesResponse> @ref _ns7__GetCredentialAccessProfilesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__GetCredentialAccessProfilesResponse(struct soap*, struct _ns7__GetCredentialAccessProfilesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__GetCredentialAccessProfilesResponse(struct soap*, struct _ns7__GetCredentialAccessProfilesResponse*);
    @endcode

  - <SetCredentialAccessProfiles> @ref _ns7__SetCredentialAccessProfiles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__SetCredentialAccessProfiles(struct soap*, struct _ns7__SetCredentialAccessProfiles*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__SetCredentialAccessProfiles(struct soap*, struct _ns7__SetCredentialAccessProfiles*);
    @endcode

  - <SetCredentialAccessProfilesResponse> @ref _ns7__SetCredentialAccessProfilesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__SetCredentialAccessProfilesResponse(struct soap*, struct _ns7__SetCredentialAccessProfilesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__SetCredentialAccessProfilesResponse(struct soap*, struct _ns7__SetCredentialAccessProfilesResponse*);
    @endcode

  - <DeleteCredentialAccessProfiles> @ref _ns7__DeleteCredentialAccessProfiles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__DeleteCredentialAccessProfiles(struct soap*, struct _ns7__DeleteCredentialAccessProfiles*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__DeleteCredentialAccessProfiles(struct soap*, struct _ns7__DeleteCredentialAccessProfiles*);
    @endcode

  - <DeleteCredentialAccessProfilesResponse> @ref _ns7__DeleteCredentialAccessProfilesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns7__DeleteCredentialAccessProfilesResponse(struct soap*, struct _ns7__DeleteCredentialAccessProfilesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns7__DeleteCredentialAccessProfilesResponse(struct soap*, struct _ns7__DeleteCredentialAccessProfilesResponse*);
    @endcode

@section ns8 Top-level root elements of schema "http://www.onvif.org/ver10/schedule/wsdl"

  - <GetServiceCapabilities> @ref _ns8__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetServiceCapabilities(struct soap*, struct _ns8__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetServiceCapabilities(struct soap*, struct _ns8__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _ns8__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetServiceCapabilitiesResponse(struct soap*, struct _ns8__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetServiceCapabilitiesResponse(struct soap*, struct _ns8__GetServiceCapabilitiesResponse*);
    @endcode

  - <GetScheduleState> @ref _ns8__GetScheduleState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetScheduleState(struct soap*, struct _ns8__GetScheduleState*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetScheduleState(struct soap*, struct _ns8__GetScheduleState*);
    @endcode

  - <GetScheduleStateResponse> @ref _ns8__GetScheduleStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetScheduleStateResponse(struct soap*, struct _ns8__GetScheduleStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetScheduleStateResponse(struct soap*, struct _ns8__GetScheduleStateResponse*);
    @endcode

  - <GetScheduleInfo> @ref _ns8__GetScheduleInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetScheduleInfo(struct soap*, struct _ns8__GetScheduleInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetScheduleInfo(struct soap*, struct _ns8__GetScheduleInfo*);
    @endcode

  - <GetScheduleInfoResponse> @ref _ns8__GetScheduleInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetScheduleInfoResponse(struct soap*, struct _ns8__GetScheduleInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetScheduleInfoResponse(struct soap*, struct _ns8__GetScheduleInfoResponse*);
    @endcode

  - <GetScheduleInfoList> @ref _ns8__GetScheduleInfoList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetScheduleInfoList(struct soap*, struct _ns8__GetScheduleInfoList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetScheduleInfoList(struct soap*, struct _ns8__GetScheduleInfoList*);
    @endcode

  - <GetScheduleInfoListResponse> @ref _ns8__GetScheduleInfoListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetScheduleInfoListResponse(struct soap*, struct _ns8__GetScheduleInfoListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetScheduleInfoListResponse(struct soap*, struct _ns8__GetScheduleInfoListResponse*);
    @endcode

  - <GetSchedules> @ref _ns8__GetSchedules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetSchedules(struct soap*, struct _ns8__GetSchedules*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetSchedules(struct soap*, struct _ns8__GetSchedules*);
    @endcode

  - <GetSchedulesResponse> @ref _ns8__GetSchedulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetSchedulesResponse(struct soap*, struct _ns8__GetSchedulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetSchedulesResponse(struct soap*, struct _ns8__GetSchedulesResponse*);
    @endcode

  - <GetScheduleList> @ref _ns8__GetScheduleList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetScheduleList(struct soap*, struct _ns8__GetScheduleList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetScheduleList(struct soap*, struct _ns8__GetScheduleList*);
    @endcode

  - <GetScheduleListResponse> @ref _ns8__GetScheduleListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetScheduleListResponse(struct soap*, struct _ns8__GetScheduleListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetScheduleListResponse(struct soap*, struct _ns8__GetScheduleListResponse*);
    @endcode

  - <CreateSchedule> @ref _ns8__CreateSchedule
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__CreateSchedule(struct soap*, struct _ns8__CreateSchedule*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__CreateSchedule(struct soap*, struct _ns8__CreateSchedule*);
    @endcode

  - <CreateScheduleResponse> @ref _ns8__CreateScheduleResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__CreateScheduleResponse(struct soap*, struct _ns8__CreateScheduleResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__CreateScheduleResponse(struct soap*, struct _ns8__CreateScheduleResponse*);
    @endcode

  - <ModifySchedule> @ref _ns8__ModifySchedule
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__ModifySchedule(struct soap*, struct _ns8__ModifySchedule*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__ModifySchedule(struct soap*, struct _ns8__ModifySchedule*);
    @endcode

  - <ModifyScheduleResponse> @ref _ns8__ModifyScheduleResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__ModifyScheduleResponse(struct soap*, struct _ns8__ModifyScheduleResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__ModifyScheduleResponse(struct soap*, struct _ns8__ModifyScheduleResponse*);
    @endcode

  - <DeleteSchedule> @ref _ns8__DeleteSchedule
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__DeleteSchedule(struct soap*, struct _ns8__DeleteSchedule*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__DeleteSchedule(struct soap*, struct _ns8__DeleteSchedule*);
    @endcode

  - <DeleteScheduleResponse> @ref _ns8__DeleteScheduleResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__DeleteScheduleResponse(struct soap*, struct _ns8__DeleteScheduleResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__DeleteScheduleResponse(struct soap*, struct _ns8__DeleteScheduleResponse*);
    @endcode

  - <GetSpecialDayGroupInfo> @ref _ns8__GetSpecialDayGroupInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetSpecialDayGroupInfo(struct soap*, struct _ns8__GetSpecialDayGroupInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetSpecialDayGroupInfo(struct soap*, struct _ns8__GetSpecialDayGroupInfo*);
    @endcode

  - <GetSpecialDayGroupInfoResponse> @ref _ns8__GetSpecialDayGroupInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetSpecialDayGroupInfoResponse(struct soap*, struct _ns8__GetSpecialDayGroupInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetSpecialDayGroupInfoResponse(struct soap*, struct _ns8__GetSpecialDayGroupInfoResponse*);
    @endcode

  - <GetSpecialDayGroupInfoList> @ref _ns8__GetSpecialDayGroupInfoList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetSpecialDayGroupInfoList(struct soap*, struct _ns8__GetSpecialDayGroupInfoList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetSpecialDayGroupInfoList(struct soap*, struct _ns8__GetSpecialDayGroupInfoList*);
    @endcode

  - <GetSpecialDayGroupInfoListResponse> @ref _ns8__GetSpecialDayGroupInfoListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetSpecialDayGroupInfoListResponse(struct soap*, struct _ns8__GetSpecialDayGroupInfoListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetSpecialDayGroupInfoListResponse(struct soap*, struct _ns8__GetSpecialDayGroupInfoListResponse*);
    @endcode

  - <GetSpecialDayGroups> @ref _ns8__GetSpecialDayGroups
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetSpecialDayGroups(struct soap*, struct _ns8__GetSpecialDayGroups*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetSpecialDayGroups(struct soap*, struct _ns8__GetSpecialDayGroups*);
    @endcode

  - <GetSpecialDayGroupsResponse> @ref _ns8__GetSpecialDayGroupsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetSpecialDayGroupsResponse(struct soap*, struct _ns8__GetSpecialDayGroupsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetSpecialDayGroupsResponse(struct soap*, struct _ns8__GetSpecialDayGroupsResponse*);
    @endcode

  - <GetSpecialDayGroupList> @ref _ns8__GetSpecialDayGroupList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetSpecialDayGroupList(struct soap*, struct _ns8__GetSpecialDayGroupList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetSpecialDayGroupList(struct soap*, struct _ns8__GetSpecialDayGroupList*);
    @endcode

  - <GetSpecialDayGroupListResponse> @ref _ns8__GetSpecialDayGroupListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__GetSpecialDayGroupListResponse(struct soap*, struct _ns8__GetSpecialDayGroupListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__GetSpecialDayGroupListResponse(struct soap*, struct _ns8__GetSpecialDayGroupListResponse*);
    @endcode

  - <CreateSpecialDayGroup> @ref _ns8__CreateSpecialDayGroup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__CreateSpecialDayGroup(struct soap*, struct _ns8__CreateSpecialDayGroup*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__CreateSpecialDayGroup(struct soap*, struct _ns8__CreateSpecialDayGroup*);
    @endcode

  - <CreateSpecialDayGroupResponse> @ref _ns8__CreateSpecialDayGroupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__CreateSpecialDayGroupResponse(struct soap*, struct _ns8__CreateSpecialDayGroupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__CreateSpecialDayGroupResponse(struct soap*, struct _ns8__CreateSpecialDayGroupResponse*);
    @endcode

  - <ModifySpecialDayGroup> @ref _ns8__ModifySpecialDayGroup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__ModifySpecialDayGroup(struct soap*, struct _ns8__ModifySpecialDayGroup*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__ModifySpecialDayGroup(struct soap*, struct _ns8__ModifySpecialDayGroup*);
    @endcode

  - <ModifySpecialDayGroupResponse> @ref _ns8__ModifySpecialDayGroupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__ModifySpecialDayGroupResponse(struct soap*, struct _ns8__ModifySpecialDayGroupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__ModifySpecialDayGroupResponse(struct soap*, struct _ns8__ModifySpecialDayGroupResponse*);
    @endcode

  - <DeleteSpecialDayGroup> @ref _ns8__DeleteSpecialDayGroup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__DeleteSpecialDayGroup(struct soap*, struct _ns8__DeleteSpecialDayGroup*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__DeleteSpecialDayGroup(struct soap*, struct _ns8__DeleteSpecialDayGroup*);
    @endcode

  - <DeleteSpecialDayGroupResponse> @ref _ns8__DeleteSpecialDayGroupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns8__DeleteSpecialDayGroupResponse(struct soap*, struct _ns8__DeleteSpecialDayGroupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns8__DeleteSpecialDayGroupResponse(struct soap*, struct _ns8__DeleteSpecialDayGroupResponse*);
    @endcode

*/

/* End of onvif.h */
